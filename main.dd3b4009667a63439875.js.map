{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./src/utils/ColorParser.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/util/string-util.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/data/Spawnables.js","webpack://knossonia/./src/data/Spawner.js","webpack://knossonia/./src/data/spawnables/SpawnableVialHoney.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/data/spawnables/SpawnableVialBlood.js","webpack://knossonia/./src/data/spawnables/SpawnableVialWater.js","webpack://knossonia/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/data/spawnables/SpawnablePineTree.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://knossonia/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/FactionMember.js","webpack://knossonia/./src/enums/Factions.js","webpack://knossonia/./src/data/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/ecs/components/LootDropper.js","webpack://knossonia/./src/data/tables/LootSpawn.js","webpack://knossonia/./src/utils/WeightedTable.js","webpack://knossonia/./src/data/tables/loot/LootTableGoblin.js","webpack://knossonia/./src/data/tables/loot/LootTableForest.js","webpack://knossonia/./src/ecs/components/IsEquipped.js","webpack://knossonia/./src/ecs/components/Equipment.js","webpack://knossonia/./src/data/EquipmentSlotType.js","webpack://knossonia/./src/ecs/components/EquipmentSlot.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/utils/AStar.js","webpack://knossonia/./src/utils/diagonalDistance.js","webpack://knossonia/./src/utils/ManhattanDistance.js","webpack://knossonia/./src/utils/PriorityQueue.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/screens/screens/EquipmentScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/generators/generators.js","webpack://knossonia/./src/level/generators/ForestCabinsGenerator.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/themes/TileTheme.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/level/themes/TileThemePopulator.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/themes/CabinTheme.js","webpack://knossonia/./src/level/schemes/UniformScheme.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/level/RoomData.js","webpack://knossonia/./node_modules/nanoid/index.prod.js","webpack://knossonia/./node_modules/nanoid/url-alphabet/index.js","webpack://knossonia/./src/level/TileScheme.js","webpack://knossonia/./src/level/generators/SectorGenerator.js","webpack://knossonia/./src/level/generators/ForestGenerator.js","webpack://knossonia/./src/level/generators/ForestStrongholdGenerator.js","webpack://knossonia/./src/level/schemes/DenseCastleScheme.js","webpack://knossonia/./src/level/generators/ForestTownGenerator.js","webpack://knossonia/./src/level/schemes/ScatteredScheme.js","webpack://knossonia/./src/level/generators/GeneratorUtils.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","mouse","MouseManager","clock","ClockManager","renderer","Renderer","camera","CameraManager","state","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","console","ConsoleManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","Date","now","boundLoop","loop","bind","requestAnimationFrame","dt","update","render","t","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","zoom","setSize","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","Math","ceil","clear","clearArea","xPx","yPx","trunc","Manager","cells","Grid","suppressOOBWarn","createElement","ctx","getContext","alpha","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","j","cellX","cellY","undefined","data","filter","c","cell","pixelX","pixelY","drawImage","defaultValueGenerator","_width","_height","idx","size","coord","value","isOutOfBounds","warn","get","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","key","_cache","hasOwnProperty","pixels","getImageData","cvs","putImageData","cache","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","slice","test","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","baseHues","push","match","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","camelCache","camelString","camelcaseSlow","pascalCache","constructor","component","enumerable","v","id","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","_definitions","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","_ecs","components","PrefabComponent","PrefabRegistry","_prefabs","nameOrClassOrPrefab","urlAlphabet","getAccessor","hasType","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","_entities","Entity","refs","_refs","Set","json","entities","list","entityData","createOrGetById","pascalString","d","any","none","hasAny","_filter","some","hasAll","every","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","IsDestroying","pass","LiquidContainer","destroyOnEmpty","isEmpty","add","quantity","isPourable","volume","spawn","SPWN_POOL_LIQUID","content","_checkDestroyOnEmpty","pos","interactor","position","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_GOBLIN_GRUNT","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","GoblinGrunt","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","colorDesc","onDrink","log","fireEvent","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","GoalType","goal","detectHostiles","handled","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","Dead","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","pickRandom","arr","floor","random","randomInt","min","max","wanderer","Door","isOpen","ch","blocker","shadowcaster","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","result","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","indexOf","splice","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","bresenhamLineExclusive","pop","corpse","corpseSpawnable","moniker","range","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","damage","shouldAppear","getMessage","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","Position","getPosition","setPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","nonHostile","factionMember","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","Wandering","Directions","Explorable","Explored","Health","Eyes","flat","neighbor","Particle","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","table","WeightedTable","pick","spawnable","rows","weight","sum","currentW","maxWeight","sort","reduce","cur","goblins","forest","IsEquipped","slot","unequip","equipmentSlot","slotKey","Equipment","slotTypes","includes","slotType","equip","isEquipped","isOwnedBy","EQ_SLOT_BODY","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EquipmentSlot","equipment","not","sorted","incrementTick","isPlayer","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","padEnd","str","hp","health","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","getEntitiesAt","hostileEntities","areEntitiesHostile","melee","doorEntity","move","lootable","item","pushScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","items","pointerUp","pointerDown","selectItem","ypos","textLen","resetInteractions","interaction","isBack","left","top","xpos","isSelected","NOOP","enable","disable","cursorColor","types","segment","color","getEntities","faction","relation","getEntityRelation","getDisplay","drawCursor","getNeighbors","defaultSettings","cost","allowDiagonals","computeAStar","settings","heuristic","diagonalDistance","manhattanDistance","open","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","success","path","costs","Infinity","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","createItem","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","slots","selectedSlot","selectSlot","createPrefab","entityId","serialized","isTurn","meleeCommand","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","keys","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","tick","isEnabled","FastMap","onEntityAdded","onEntityRemoved","remove","getRandomEmptyPosition","saveSectorPositionData","sector","loadSectorPositionData","x2","y2","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","_data","_idHash","entries","fov","FOV","isSquareVisible","isVisible","compute","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","emitter","particleEmitter","isExpired","targetCount","setRelation","factionA","factionB","idA","idB","_relationKey","relations","entityA","entityB","memberA","memberB","getRelation","onWindowResize","innerWidth","renderedTileWidth","innerHeight","renderedTileHeight","resizeDisplay","topLeftWorldX","topLeftWorldY","worldX","worldY","sectorTxt","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","exits","connectionsNorth","connectionsWest","getExits","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","SectorGenerator","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","populateTile","trySpawn","TileThemePopulator","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileContainer","MapGenerator","digPercentage","getRooms","createRoom","getDoors","TileScheme","defaultType","getTile","RoomData","addRoom","cloneTo","setTileTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","c1","c2","c3","c4","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","populateRoom","setTheme","exitOffset","padding","castle","DenseCastleScheme","combineOther","curId","createNodeId","splitNodeVertical","node","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","intersects","msgs","isDestroying","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.dd3b4009667a63439875.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.camera = new CameraManager(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        this.clock.update(dt);\n        this.actionSystem.update(dt);\n        this.hungerSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.meleeSystem.update(dt);\n        this.deathSystem.update(dt);\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.destroySystem.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    tileWidth = 16;\n    tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: 20,\n            height: 20,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height, zoom) {\n        this.display.setSize(width, height, zoom);\n    }\n\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(0, 0, this.tileWidth * this.width, this.tileHeight * this.height);\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + (i * 2);\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = new Map();\n\nexport const camelString = (value) => {\n    if (!camelCache.has(value)) {\n        camelCache.set(value, camelcaseSlow(value));\n    }\n\n    return camelCache.get(value);\n};\n\nconst pascalCache = new Map();\n\nexport const pascalString = (value) => {\n    if (!pascalCache.has(value)) {\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\n    }\n\n    return pascalCache.get(value);\n};\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\n                entity\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import { camelString } from './util/string-util';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    entity = null;\n    ecs = null;\n    _props = {};\n    _isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this._props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this._props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.entity;\n\n            this.entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this._isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this._props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelString(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this._props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport { camelString } from '../util/string-util';\n\nexport default class ComponentRegistry {\n    _definitions = new Map();\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    register(component) {\n        this._definitions.set(component.name, component);\n        camelString(component.name); // prime camelcase cache\n    }\n\n    getAccessor(type) {\n        return camelString(type);\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this._definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this._ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    _prefabs = {};\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this._ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this._ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this._ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this._prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this._ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    _prevented = false;\n    _handled = false;\n\n    get prevented() {\n        return this._prevented;\n    }\n\n    get handled() {\n        return this._handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this._handled = true;\n        this._prevented = true;\n    }\n\n    prevent() {\n        this._prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    id = null;\n    components = {};\n    ecs = null;\n    _isDestroyed = false;\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.ecs = ecs;\n        this.id = id || ecs.generateId();\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this._isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { pascalString } from '../util/string-util';\nimport Entity from '../Entity';\n\nexport default class EntityRegistry {\n    _entities = new Map();\n    _ecs = null;\n    _refs = new Map();\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    get all() {\n        return this._entities.values();\n    }\n\n    register(entity) {\n        this._entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this._entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this._ecs, id);\n\n        this.register(entity);\n\n        this._ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this._entities.delete(entity.id);\n        this._ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this._refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this._refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this._refs.has(entityId)) {\n            this._refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this._refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this._refs.has(entityId)) {\n            this._refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities ? entities : this._entities;\n\n        list.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = pascalString(key);\n            const definition = this._ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    _ecs;\n    _filter;\n    _onEntityAddedCallbacks = [];\n    _onEntityRemovedCallbacks = [];\n    _cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this._ecs = ecs;\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this._filter.any.length\n            ? this._filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this._filter.all.every((c) => entity.has(c));\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this._onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this._cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this._cache.add(entity);\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this._cache.clear();\n\n        for (const entity of this._ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this._cache;\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    _ecs;\n    _queries = [];\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this._ecs, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this._queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this._queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity(id) {\n        return this.entities.create(id);\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize(entities) {\n        return {\n            entities: this.entities.serialize(entities),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        this.closeDoor();\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        this.openDoor();\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.pushScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        const entity = this.entity;\n\n        this.owner.inventory.dropLoot(this.entity);\n\n        entity.fireEvent('dropped', {\n            interactor: evt.data.interactor,\n        });\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    if (lineValid && body) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < 0 && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )} and dies`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['*'],\n        });\n\n        evt.data.target.fireEvent('damage', {\n            source: this.entity,\n            damage,\n        });\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { Blocker } from './Blocker';\nimport { FactionMember } from './FactionMember';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        this.entity.fireEvent('energy-consumed', 750);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n} from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.damage.value;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: this.entity,\n                source: evt.data.source,\n                damage: evt.data.damage,\n            });\n\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: this.entity,\n            source: evt.data.source,\n            damage: evt.data.damage,\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { FactionMember } from './FactionMember';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(FactionMember))\n            .find((neighbor) => {\n                return game.factions.areEntitiesHostile(this.entity, neighbor);\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_AMULET, SPWN_CLOTH_ARMOR, SPWN_STONE, SPWN_VIAL_BLOOD } from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(15, SPWN_CLOTH_ARMOR);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY]\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter((slot) => {\n            return this.slotTypes.includes(slot.slotType) && slot.isEmpty;\n        });\n\n        // TODO: choose slot\n        const slot = slots[0];\n\n        if (slot) {\n            slot.equip(this.entity);\n        }\n\n        evt.handle();\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        console.log(`unequip ${this.entity.moniker.display} from ${slotKey}`, slot);\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.isInventoried) {\n            if (!this.entity.isInventoried.isOwnedBy(evt.data.interactor)) {\n                return;\n            }\n        }\n\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { Actor, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import {\n    IsInventoried,\n    Explored,\n    Glyph,\n    Position,\n    IsVisible,\n    IsDestroying,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, IsVisible],\n            none: [IsInventoried, IsDestroying],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [IsInventoried, IsVisible, IsDestroying],\n        });\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        const explored = Array.from(this.#explored.get());\n\n        for (let i = 0; i < explored.length; i++) {\n            const renderable = explored[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                '#2c3538',\n                '#2c3538'\n            );\n        }\n\n        const renderables = Array.from(this.#query.get());\n\n        for (let i = 0; i < renderables.length; i++) {\n            const renderable = renderables[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_EQUIPMENT,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const item = entities.find((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n            return evt.data.interactions.length > 0;\n        });\n\n        if (item) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: item,\n            });\n        }\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(\n            1,\n            4,\n            `move       [q, w, e, a, d, z, x, c]`\n        );\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class InventoryScreen extends Screen {\n    #selectedIdx = 0;\n    #accessible;\n    #accessor;\n\n    get items() {\n        return this.#accessible.inventory.content;\n    }\n\n    get selectedItem() {\n        return this.items[this.#selectedIdx];\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        this.#selectedIdx--;\n\n        if (this.#selectedIdx < 0) {\n            this.#selectedIdx = this.items.length - 1;\n        }\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n\n        if (this.#selectedIdx >= this.items.length) {\n            this.#selectedIdx = 0;\n        }\n    }\n\n    selectItem() {\n        const interactable = this.items[this.#selectedIdx];\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        if (this.items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.items.forEach((item, i) => {\n            const isSelected = i === this.#selectedIdx;\n            const ypos = i + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            const textLen = this.game.renderer.computeTextWidth(item.moniker.display);\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n\n            if (item.isEquipped) {\n                const slot = item.isEquipped.slot.name;\n\n                this.game.renderer.drawText(4 + textLen + 0.5, ypos, `[${slot}]`, '#2c3538');\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 16;\n    #selectedIdx = 0;\n    #interactions = [];\n    #interactable;\n    #interactor;\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.#width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.#height) / 2);\n    }\n\n    get interactions() {\n        return [...this.#interactions, {\n            name: 'Back',\n            isBack: true,\n        }];\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.resetInteractions();\n    }\n\n    resetInteractions() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.#interactions = evt.data.interactions;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        this.#selectedIdx--;\n\n        if (this.#selectedIdx < 0) {\n            this.#selectedIdx = this.interactions.length - 1;\n        }\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n\n        if (this.#selectedIdx >= this.interactions.length) {\n            this.#selectedIdx = 0;\n        }\n    }\n\n    selectItem() {\n        const idx = this.#selectedIdx % this.interactions.length;\n        const interaction = this.interactions[idx];\n\n        if (interaction.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.#interactable.fireEvent(interaction.evt, {\n            interactor: this.#interactor,\n        });\n\n        if (this.#interactable.isDestroyed) {\n            this.game.screens.popScreen();\n\n            return;\n        }\n\n        this.resetInteractions();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width,\n            this.#height\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const idx = this.#selectedIdx % this.interactions.length;\n\n        if (this.interactions.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        const xpos = this.left + 2;\n\n        this.interactions.forEach((interaction, i) => {\n            const isSelected = i === idx;\n            const ypos = i + this.top + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, `→ ${interaction.name}`, 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, `- ${interaction.name}`);\n            }\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { game } from '../../Game';\nimport { computeAStar } from '../../../utils/AStar';\nimport { Blocker, FactionMember } from '../../../ecs/components';\nimport { diagonalDistance } from '../../../utils/diagonalDistance';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        const target = this.game.cursor\n            .getEntities()\n            .filter((e) => e.has(FactionMember))\n            .pop();\n\n        const player = this.game.player.entity;\n\n        if (target) {\n            const faction = target.factionMember.faction;\n            const relation = this.game.factions.getEntityRelation(\n                player,\n                target\n            );\n\n            let disp = this.game.factions.getDisplay(relation);\n\n            this.game.renderer.drawTextCenter(\n                1,\n                `${faction.display} Faction [${disp}]`\n            );\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class EquipmentScreen extends Screen {\n    #selectedIdx = 0;\n    #accessor;\n\n    get slots() {\n        return Object.values(this.#accessor.equipmentSlot);\n    }\n\n    get selectedSlot() {\n        return this.slots[this.#selectedIdx];\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        this.#selectedIdx--;\n\n        if (this.#selectedIdx < 0) {\n            this.#selectedIdx = this.slots.length - 1;\n        }\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n\n        if (this.#selectedIdx >= this.slots.length) {\n            this.#selectedIdx = 0;\n        }\n    }\n\n    selectSlot() {\n        console.log('select slot', this.selectedSlot);\n\n        const interactable = this.selectedSlot.content;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectSlot();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\n            'purple'\n        );\n\n        if (this.slots.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.slots.forEach((slot, i) => {\n            const isSelected = i === this.#selectedIdx;\n            const ypos = i + 5;\n            const selectedColor = 'yellow';\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, `→ ${slot.name}`, selectedColor);\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\n            }\n\n            if (slot.isEmpty) {\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\n            } else {\n                const content = slot.content;\n                this.game.renderer.draw(15, ypos,\n                    content.glyph.char,\n                    content.glyph.primary,\n                    content.glyph.secondary,\n                    content.glyph.background\n                );\n                this.game.renderer.drawText(16, ypos, ` ${content.moniker.display}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.moveCommand.destroy();\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.meleeCommand.destroy();\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    IsDestroying,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n            not: [IsDestroying],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 5, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 120);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    get topLeftWorldX() {\n        return Math.floor(Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.game.map.width - this.width\n            )\n        ));\n    }\n\n    get topLeftWorldY() {\n        return Math.floor(Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.game.map.height - this.height\n            )\n        ));\n    }\n\n    computeSize() {\n        this.width = Math.floor(window.innerWidth / this.renderedTileWidth) - 2;\n        this.height = Math.floor(window.innerHeight / this.renderedTileHeight) - 2;\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const sector = this.game.world.sector;\n        let sectorTxt = '';\n\n        if (sector) {\n            sectorTxt = `(${sector.x}, ${sector.y})`;\n        }\n\n        const fps = Math.trunc(1000 / dt);\n        const display = `${sectorTxt} ${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.camera.width - textWidth;\n\n        this.game.renderer.drawText(\n            x,\n            this.game.camera.height - 1,\n            display,\n            '#172e2e'\n        );\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(4);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR)) {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n        });\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 2;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - 1 - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}