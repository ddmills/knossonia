{"version":3,"sources":["webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ai/GoalTypes/index.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/MapLayer.js","webpack://knossonia/./src/ecs/components/Map.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/index.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/enums/keycodes.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./src/core/rendering/Renderer.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/index.js"],"names":["preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","camelCase","Array","options","pascalCase","postProcess","x","input","hasUpperCase","p1","m","module","constructor","enumerable","get","set","v","value","entity","console","Reflect","isNaN","old","deleteProperty","values","len","Math","ref","Boolean","ob","Object","properties","prop","destroy","handlerName","camelcase","evt","initialValue","initialProperties","property","PropertyFactory","Component","component","type","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","isSpecial","stringValue","isReactElement","canUseSymbol","Symbol","REACT_ELEMENT_TYPE","deepmerge","emptyTarget","cloneUnlessOtherwiseSpecified","customMerge","target","getEnumerableOwnPropertySymbols","destination","getKeys","propertyIsUnsafe","propertyIsOnObject","source","getMergeFunction","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","mergeObject","deepmerge_1","overwrite","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","key","registered","data","prefab","inherit","name","comps","componentData","def","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","nanoid","size","id","ecs","writable","hasType","components","nestedComponent","allowMultiple","configurable","isComponent","all","index","instance","v2","refs","json","entityData","d","filter","any","none","hasAny","c","hasAll","hasNone","query","entities","Actor","reduceEnergy","addEnergy","energy","SUCCESS","FAILURE","INVALID","Brain","peekGoal","isFinished","popGoal","currentGoal","result","takeAction","removeGoal","fireEvent","handle","goal","goals","g","isSelf","isSiblingGoal","originalIntent","push","pop","length","GoalType","create","BoredGoalType","brain","pushGoal","EatFoodGoalType","complete","food","handled","SatisfyHungerGoalType","eater","isHungry","MoveGoalType","y","goalTypeMap","GoalTypes","forEach","goalType","getGoalType","warn","Goal","GoalEvaluator","Eater","random","hunger","Moniker","Logger","log","moniker","has","Position","MapLayer","idx","content","mapEntity","map","Map","width","height","Glyph","fg","bg","Legs","actor","hasEnergy","position","directions","shortName","fullName","delta","NW","N","NE","W","Z","E","SW","S","SE","direction","MoveCommand","IsPlayer","Wandering","floor","Directions","Engine","window","registerComponent","prefabs","registerPrefab","FRAC","RNG","_seed","_s0","_s1","_s2","_c","seed","t","lowerBound","upperBound","max","min","getUniform","mean","stddev","u","r","gauss","sqrt","array","clone","slice","indexOf","getItem","splice","total","part","state","setState","getState","setSeed","Date","now","Backend","_options","Canvas","_ctx","document","createElement","getContext","cb","requestAnimationFrame","canvas","opts","style","fontStyle","font","fontSize","fontFamily","_updateSize","textAlign","textBaseline","fillStyle","fillRect","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","mod","n","clamp","val","capitalize","charAt","toUpperCase","substring","format","template","args","replacer","match","group1","group2","obj","group","parts","split","shift","method","toLowerCase","replaced","apply","first","replace","Hex","_spacingX","_spacingY","_hexSize","clearBefore","ch","px","transpose","reverse","_fill","chars","concat","fillText","ceil","availWidth","availHeight","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","spacing","nodeSize","cx","cy","a","b","border","ctx","beginPath","moveTo","lineTo","fill","charWidth","xprop","yprop","Rect","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","drawImage","boxWidth","boxHeight","widthFraction","forceSquareRatio","Tile","_colorCanvas","tileWidth","tileHeight","tileColorize","clearRect","fgs","bgs","tile","tileMap","Error","context","globalCompositeOperation","tileSet","fromString","str","cached","CACHE","matched","parseInt","add","color1","colors","j","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","color","diff","getNormal","h","s","l","hue2rgb","p","q","toRGB","clamped","join","toHex","toString","padStart","TileGL","_uniforms","_gl","_initWebGL","e","alert","message","addEventListener","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","clear","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","preserveDrawingBuffer","program","createProgram","VS","FS","useProgram","createQuad","UNIFORMS","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","trim","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","pos","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","parsed","Number","Color","$","clearToAnsi","termcolor","colorToAnsi","positionToAnsi","SRC_COLORS","DST_COLORS","COLOR_RATIO","rgb","Term","_offset","_cursor","_lastColor","setTimeout","avail","computeSize","process","stdout","write","dx","dy","newColor","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","maxWidth","tokens","tokenize","lineWidth","token","offset","breakLines","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","arr","nextIndex","breakIndex","lastIndexOf","lastTextToken","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DEFAULT_WIDTH","DEFAULT_HEIGHT","DIRS","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","BACKENDS","DEFAULT_OPTIONS","layout","Display","_data","_dirty","assign","setOptions","DEBUG","bind","_tick","_backend","schedule","what","draw","ctor","getContainer","computeFontSize","touches","clientX","clientY","eventToPosition","text","lines","Text","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","isCJK","_draw","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","keys","dataCount","eventCount","_backoff","available","getWeightedValue","MinHeap","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","EventQueue","_time","_events","time","find","undefined","remove","Scheduler","_queue","_repeat","_current","getTime","item","repeat","getEventTime","Simple","Speed","getSpeed","Action","_defaultDuration","_duration","FOV","lightPassesCallback","_lightPasses","topology","dirs","countFactor","startOffset","DiscreteShadowcasting","R","callback","DATA","A","B","blocks","neighbors","_getCircle","angle","_visibleCoords","v1","count","PreciseShadowcasting","SHADOWS","A1","A2","visibility","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visible","visibleLength","P","P1","P2","arcLength","OCTANTS","RecursiveShadowcasting","_renderOctant","dir","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","startX","startY","row","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","_width","_height","Arena","w","empty","Dungeon","_rooms","_corridors","Feature","Room","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","addDoor","isWallCallback","right","bottom","canBeDugCallback","digCallback","roomWidth","roomHeight","Corridor","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","sx","sy","abs","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","Uniform","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","t2","_fillMap","_generateRooms","_generateCorridors","room","_generateRoom","isValid","cnt","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","center1","center2","diffX","diffY","start","end","dirIndex1","dirIndex2","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","dirIndex","lastBadIndex","isWall","points","corridor","Cellular","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","from","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","call","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","Digger","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","prio","sort","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","L","removeFromList","EllerMaze","rand","DividedMaze","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","IceyMaze","regularity","_regularity","done","_randomize","_isFree","Rogue","connectedCells","cellWidth","cellHeight","hasOwnProperty","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","cgx","cgy","ncgx","ncgy","found","otherRoom","dirToCheck","cw","validRoom","dirIdx","newI","newJ","cwp","chp","roomw","roomh","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","door","startPosition","endPosition","xOffset","yOffset","xpos","ypos","tempDist","xDir","yDir","move","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Noise","F2","G2","Simplex","gradients","_gradients","permutations","_perms","_indexes","xin","yin","perms","indexes","n0","n1","n2","gi","X0","Y0","x0","y0","i1","j1","t0","grad","Path","toX","toY","passableCallback","_toX","_toY","_passableCallback","Dijkstra","_computed","_todo","_add","fromX","fromY","_compute","prev","neighbor","AStar","_done","_fromX","_fromY","_distance","f","itemF","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_lights","_reflectivityCache","_fovCache","reset","fov","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","vis","key2","compute","Util","util","Renderer","RotDisplay","attach","body","appendChild","char","drawText","InputKeyboardEvent","isShift","isAlt","isCtrl","isMeta","InputMouseEvent","button","tileX","tileY","InputController","renderer","onKeydown","container","getDOMContainer","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","keyCode","shiftKey","altKey","ctrlKey","metaKey","offsetX","offsetY","System","game","dt","HungerSystem","actionSystem","tickDelta","ActionSystem","sorted","isPlayer","turn","RenderSystem","renderable","glyph","MovementSystem","moveCommand","UISystem","subTurn","padEnd","Game","inputController","hungerSystem","movementSystem","renderSystem","loop","update","jim","bob","keycodes"],"mappings":"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","file":"main.bc0bdff36f97579f0d9c.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tif(mode & 2 && typeof value == 'object' && value) {\n\t\tfor(const key in value) def[key] = () => value[key];\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(\r\n            this.type,\r\n            this.serialize()\r\n        );\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][key]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][\r\n                            arrComps[accessor]\r\n                        ]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][\r\n                                arrComps[accessor]\r\n                            ];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport { SUCCESS, INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result == FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result == INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                g.destroy();\n\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    pushGoal(goal) {\n        goal.goal.parent = this.entity;\n        return this.goals.push(goal);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import ecs from '../../ecs';\nimport { FAILURE } from '../GoalActionResult';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        });\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('boredom');\n\n        if (evt.data.goal) {\n            entity.brain.pushGoal(evt.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        entity.fireEvent('consume-energy', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","export { BoredGoalType } from './BoredGoalType';\nexport { EatFoodGoalType } from './EatFoodGoalType';\nexport { SatisfyHungerGoalType } from './SatisfyHungerGoalType';\nexport { MoveGoalType } from './MoveGoalType';\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker) ? this.entity.moniker.name : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    static properties = {\n        x: 0,\n        y: 0,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class MapLayer extends Component {\n    static properties = {\n        mapEntity: '<Entity>',\n        name: '',\n        content: '<EntityArray>',\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    getByIndex(idx) {\n        return content[idx];\n    }\n\n    get(x, y) {}\n}\n","import { Component } from 'geotic';\nimport { MapLayer } from './MapLayer';\n\nexport class Map extends Component {\n    static properties = {\n        name: '',\n        width: 32,\n        height: 32,\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return idx % this.width, idx / this.width;\n    }\n\n    getLayer(name) {\n        return this.entity.get(MapLayer, name);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg: '#fff',\n        bg: '',\n        char: '',\n    };\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        if (!this.entity.has(Position)) {\n            return;\n        }\n\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            return;\n        }\n\n        this.entity.position.x += evt.data.x;\n        this.entity.position.y += evt.data.y;\n        this.entity.fireEvent('energy-consumed', 750);\n\n        evt.handle();\n    }\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const NW = 0;\nexport const N = 1;\nexport const NE = 2;\nexport const W = 3;\nexport const Z = 4;\nexport const E = 5;\nexport const SW = 6;\nexport const S = 7;\nexport const SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: Z,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() < 0.75) {\n            const direction = Math.floor(Math.random() * 9);\n            const delta = Directions.delta(direction);\n\n            evt.data.goal = MoveGoalType.create({\n                data: delta,\n            });\n            evt.handle();\n        }\n    }\n}\n","export { Actor } from './Actor';\nexport { Brain } from './Brain';\nexport { Goal } from './Goal';\nexport { Eater } from './Eater';\nexport { Moniker } from './Moniker';\nexport { Logger } from './Logger';\nexport { Position } from './Position';\nexport { Map } from './Map';\nexport { MapLayer } from './MapLayer';\nexport { Glyph } from './Glyph';\nexport { Legs } from './Legs';\nexport { MoveCommand } from './MoveCommand';\nexport { IsPlayer } from './IsPlayer';\nexport { Wandering } from './Wandering';\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\n\nconst ecs = new Engine();\n\nwindow.ecs = ecs;\n\nObject.values(components).forEach((component) => {\n    ecs.registerComponent(component);\n});\n\nObject.values(prefabs).forEach((prefab) => {\n    ecs.registerPrefab(prefab);\n});\n\nexport default ecs;\n","export default [\n    '', // [0]\n    '', // [1]\n    '', // [2]\n    'cancel', // [3]\n    '', // [4]\n    '', // [5]\n    'help', // [6]\n    '', // [7]\n    'back_space', // [8]\n    'tab', // [9]\n    '', // [10]\n    '', // [11]\n    'clear', // [12]\n    'enter', // [13]\n    'enter_special', // [14]\n    '', // [15]\n    'shift', // [16]\n    'control', // [17]\n    'alt', // [18]\n    'pause', // [19]\n    'caps_lock', // [20]\n    'kana', // [21]\n    'eisu', // [22]\n    'junja', // [23]\n    'final', // [24]\n    'hanja', // [25]\n    '', // [26]\n    'escape', // [27]\n    'convert', // [28]\n    'nonconvert', // [29]\n    'accept', // [30]\n    'modechange', // [31]\n    'space', // [32]\n    'page_up', // [33]\n    'page_down', // [34]\n    'end', // [35]\n    'home', // [36]\n    'left', // [37]\n    'up', // [38]\n    'right', // [39]\n    'down', // [40]\n    'select', // [41]\n    'print', // [42]\n    'execute', // [43]\n    'printscreen', // [44]\n    'insert', // [45]\n    'delete', // [46]\n    '', // [47]\n    '0', // [48]\n    '1', // [49]\n    '2', // [50]\n    '3', // [51]\n    '4', // [52]\n    '5', // [53]\n    '6', // [54]\n    '7', // [55]\n    '8', // [56]\n    '9', // [57]\n    'colon', // [58]\n    'semicolon', // [59]\n    'less_than', // [60]\n    'equals', // [61]\n    'greater_than', // [62]\n    'question_mark', // [63]\n    'at', // [64]\n    'a', // [65]\n    'b', // [66]\n    'c', // [67]\n    'd', // [68]\n    'e', // [69]\n    'f', // [70]\n    'g', // [71]\n    'h', // [72]\n    'i', // [73]\n    'j', // [74]\n    'k', // [75]\n    'l', // [76]\n    'm', // [77]\n    'n', // [78]\n    'o', // [79]\n    'p', // [80]\n    'q', // [81]\n    'r', // [82]\n    's', // [83]\n    't', // [84]\n    'u', // [85]\n    'v', // [86]\n    'w', // [87]\n    'x', // [88]\n    'y', // [89]\n    'z', // [90]\n    'os_key', // [91] windows key (windows) or command key (mac)\n    '', // [92]\n    'context_menu', // [93]\n    '', // [94]\n    'sleep', // [95]\n    'numpad0', // [96]\n    'numpad1', // [97]\n    'numpad2', // [98]\n    'numpad3', // [99]\n    'numpad4', // [100]\n    'numpad5', // [101]\n    'numpad6', // [102]\n    'numpad7', // [103]\n    'numpad8', // [104]\n    'numpad9', // [105]\n    'multiply', // [106]\n    'add', // [107]\n    'separator', // [108]\n    'subtract', // [109]\n    'decimal', // [110]\n    'divide', // [111]\n    'f1', // [112]\n    'f2', // [113]\n    'f3', // [114]\n    'f4', // [115]\n    'f5', // [116]\n    'f6', // [117]\n    'f7', // [118]\n    'f8', // [119]\n    'f9', // [120]\n    'f10', // [121]\n    'f11', // [122]\n    'f12', // [123]\n    'f13', // [124]\n    'f14', // [125]\n    'f15', // [126]\n    'f16', // [127]\n    'f17', // [128]\n    'f18', // [129]\n    'f19', // [130]\n    'f20', // [131]\n    'f21', // [132]\n    'f22', // [133]\n    'f23', // [134]\n    'f24', // [135]\n    '', // [136]\n    '', // [137]\n    '', // [138]\n    '', // [139]\n    '', // [140]\n    '', // [141]\n    '', // [142]\n    '', // [143]\n    'num_lock', // [144]\n    'scroll_lock', // [145]\n    'win_oem_fj_jisho', // [146]\n    'win_oem_fj_masshou', // [147]\n    'win_oem_fj_touroku', // [148]\n    'win_oem_fj_loya', // [149]\n    'win_oem_fj_roya', // [150]\n    '', // [151]\n    '', // [152]\n    '', // [153]\n    '', // [154]\n    '', // [155]\n    '', // [156]\n    '', // [157]\n    '', // [158]\n    '', // [159]\n    'circumflex', // [160]\n    'exclamation', // [161]\n    'double_quote', // [162]\n    'hash', // [163]\n    'dollar', // [164]\n    'percent', // [165]\n    'ampersand', // [166]\n    'underscore', // [167]\n    'open_paren', // [168]\n    'close_paren', // [169]\n    'asterisk', // [170]\n    'plus', // [171]\n    'pipe', // [172]\n    'hyphen_minus', // [173]\n    'open_curly_bracket', // [174]\n    'close_curly_bracket', // [175]\n    'tilde', // [176]\n    '', // [177]\n    '', // [178]\n    '', // [179]\n    '', // [180]\n    'volume_mute', // [181]\n    'volume_down', // [182]\n    'volume_up', // [183]\n    '', // [184]\n    '', // [185]\n    'semicolon', // [186]\n    'equals', // [187]\n    'comma', // [188]\n    'minus', // [189]\n    'period', // [190]\n    'slash', // [191]\n    'back_quote', // [192]\n    '', // [193]\n    '', // [194]\n    '', // [195]\n    '', // [196]\n    '', // [197]\n    '', // [198]\n    '', // [199]\n    '', // [200]\n    '', // [201]\n    '', // [202]\n    '', // [203]\n    '', // [204]\n    '', // [205]\n    '', // [206]\n    '', // [207]\n    '', // [208]\n    '', // [209]\n    '', // [210]\n    '', // [211]\n    '', // [212]\n    '', // [213]\n    '', // [214]\n    '', // [215]\n    '', // [216]\n    '', // [217]\n    '', // [218]\n    'open_bracket', // [219]\n    'back_slash', // [220]\n    'close_bracket', // [221]\n    'quote', // [222]\n    '', // [223]\n    'meta', // [224]\n    'altgr', // [225]\n    '', // [226]\n    'win_ico_help', // [227]\n    'win_ico_00', // [228]\n    '', // [229]\n    'win_ico_clear', // [230]\n    '', // [231]\n    '', // [232]\n    'win_oem_reset', // [233]\n    'win_oem_jump', // [234]\n    'win_oem_pa1', // [235]\n    'win_oem_pa2', // [236]\n    'win_oem_pa3', // [237]\n    'win_oem_wsctrl', // [238]\n    'win_oem_cusel', // [239]\n    'win_oem_attn', // [240]\n    'win_oem_finish', // [241]\n    'win_oem_copy', // [242]\n    'win_oem_auto', // [243]\n    'win_oem_enlw', // [244]\n    'win_oem_backtab', // [245]\n    'attn', // [246]\n    'crsel', // [247]\n    'exsel', // [248]\n    'ereof', // [249]\n    'play', // [250]\n    'zoom', // [251]\n    '', // [252]\n    'pa1', // [253]\n    'win_oem_clear', // [254]\n    '', // [255]\n];\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","import { Display as RotDisplay } from 'rot-js';\n\nexport default class Renderer {\n    #rot = null;\n    #container = null;\n\n    width = 64;\n    height = 32;\n\n    constructor() {\n        RotDisplay.Rect.cache = true;\n        this.#rot = new RotDisplay({\n            width: this.width,\n            height: this.height,\n            fontSize: 18,\n            forceSquareRatio: false,\n            bg: '#1c171f',\n        });\n        this.attach();\n    }\n\n    attach() {\n        this.#container = document.body.appendChild(this.#rot.getContainer());\n    }\n\n    draw(x, y, char, fg, bg) {\n        this.#rot.draw(x, y, char, fg, bg);\n    }\n\n    drawText(x, y, string) {\n        this.#rot.drawText(x, y, string);\n    }\n\n    clear() {\n        this.#rot.clear();\n    }\n\n    getDOMContainer() {\n        return this.#container;\n    }\n\n    eventToPosition(e) {\n        return this.#rot.eventToPosition(e);\n    }\n}\n","export default class InputKeyboardEvent {\n    key = false;\n    isShift = false;\n    isAlt = false;\n    isCtrl = false;\n    isMeta = false;\n\n    constructor(data) {\n        (this.key = data.key), (this.isShift = data.isShift);\n        this.isAlt = data.isAlt;\n        this.isCtrl = data.isCtrl;\n        this.isMeta = data.isMeta;\n    }\n}\n","export default class InputMouseEvent {\n    button = false;\n    x = false;\n    y = false;\n    isShift = false;\n    isAlt = false;\n    isCtrl = false;\n    isMeta = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        this.button = data.button;\n        this.x = data.x;\n        this.y = data.y;\n        this.isShift = data.isShift;\n        this.isAlt = data.isAlt;\n        this.isCtrl = data.isCtrl;\n        this.isMeta = data.isMeta;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\n\nexport default class InputController {\n    #renderer = null;\n\n    constructor(renderer) {\n        this.#renderer = renderer;\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.#renderer.getDOMContainer();\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            isShift: e.shiftKey,\n            isAlt: e.altKey,\n            isCtrl: e.ctrlKey,\n            isMeta: e.metaKey,\n        });\n\n        console.log('onKeydown', evt);\n    }\n\n    onMouseClick(e) {\n        const [tileX, tileY] = this.#renderer.eventToPosition(e);\n\n        const evt = new InputMouseEvent({\n            button: e.button,\n            x: e.offsetX,\n            y: e.offsetY,\n            isShift: e.shiftKey,\n            isAlt: e.altKey,\n            isCtrl: e.ctrlKey,\n            isMeta: e.metaKey,\n            tileX,\n            tileY,\n        });\n\n        console.log('onMouseClick', e, evt);\n    }\n\n    onMouseMove(e) {\n        console.log('onMouseMove');\n    }\n\n    onMouseEnter(e) {\n        console.log('onMouseEnter');\n    }\n\n    onMouseLeave(e) {\n        console.log('onMouseLeave');\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import ecs from '../ecs';\nimport { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import ecs from '../ecs';\nimport { Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #tick = 0;\n    #tickDelta = 0;\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = ecs.createQuery({\n            all: [Actor],\n        });\n    }\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        const entity = sorted[0];\n        this.#tickDelta = 0;\n\n        if (!entity.actor.hasEnergy) {\n            this.#tickDelta = entity.actor.energy * -1;\n            this.#tick -= entity.actor.energy;\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.#tickDelta);\n            });\n        }\n\n        if (entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n        }\n    }\n}\n","import ecs from '../ecs';\nimport { Glyph, Position } from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Glyph, Position],\n        });\n    }\n\n    update(dt) {\n        this.game.renderer.clear();\n\n        this.#query.get().forEach((renderable) => {\n            this.game.renderer.draw(\n                renderable.position.x,\n                renderable.position.y,\n                renderable.glyph.char,\n                renderable.glyph.fg,\n                renderable.glyph.bg\n            );\n        });\n    }\n}\n","import ecs from '../ecs';\nimport { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [MoveCommand, Position],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('TryMove', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import ecs from '../ecs';\nimport { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.actionSystem.turn;\n        const subTurn = `${this.game.actionSystem.subTurn}`.padEnd(3, '0');\n\n        this.game.renderer.drawText(1, 1, `%c{cyan}Knossonia`);\n\n        const entities = Array.from(this.#query.get());\n\n        entities.forEach((entity, i) => {\n            this.game.renderer.drawText(\n                1,\n                this.game.renderer.height - (2 + i),\n                `energy (${entity.moniker.name}) %c{yellow}${entity.actor.energy}`\n            );\n        });\n\n        this.game.renderer.drawText(\n            this.game.renderer.width - 6 - `${turn}`.length,\n            1,\n            `%c{cyan}${turn}%c{white}.%c{yellow}${subTurn}`\n        );\n    }\n}\n","import Renderer from './rendering/Renderer';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\n\nexport default class Game {\n    constructor() {\n        this.renderer = new Renderer();\n        this.inputController = new InputController(this.renderer);\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n    }\n\n    start() {\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    loop(t) {\n        const dt = 0;\n\n        this.hungerSystem.update(dt);\n        this.actionSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.UISystem.update(dt);\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n}\n","import ecs from './ecs';\nimport keycodes from './enums/keycodes';\nimport { BoredGoalType } from './ai/GoalTypes';\nimport { N, W, Z, E, S, NW, SW, SE, NE } from './enums/Directions';\nimport { MoveCommand } from './ecs/components';\nimport Game from './core/Game';\n\nconst g = new Game();\n\nconst jim = ecs.createPrefab('Player', {\n    moniker: {\n        name: 'Jim',\n    },\n    position: {\n        x: 4,\n        y: 10,\n    },\n});\n\nconst bob = ecs.createPrefab('HumanWanderer', {\n    position: {\n        x: 23,\n        y: 20,\n    },\n});\n\nbob.brain.pushGoal(BoredGoalType.create());\n\nconst move = (entity, direction) => {\n    if (entity.has(MoveCommand)) {\n        entity.remove(MoveCommand);\n    }\n\n    entity.add(MoveCommand, {\n        direction,\n    });\n};\n\ndocument.addEventListener('keydown', (e) => {\n    if (keycodes[e.keyCode] === 'space') {\n        jim.fireEvent('energy-consumed', 1000);\n    }\n    if (keycodes[e.keyCode] === 'q') {\n        move(jim, NW);\n    }\n    if (keycodes[e.keyCode] === 'w') {\n        move(jim, N);\n    }\n    if (keycodes[e.keyCode] === 'e') {\n        move(jim, NE);\n    }\n    if (keycodes[e.keyCode] === 'a') {\n        move(jim, W);\n    }\n    if (keycodes[e.keyCode] === 's') {\n        move(jim, Z);\n    }\n    if (keycodes[e.keyCode] === 'd') {\n        move(jim, E);\n    }\n    if (keycodes[e.keyCode] === 'z') {\n        move(jim, SW);\n    }\n    if (keycodes[e.keyCode] === 'x') {\n        move(jim, S);\n    }\n    if (keycodes[e.keyCode] === 'c') {\n        move(jim, SE);\n    }\n});\n\ng.start();\n"],"sourceRoot":""}