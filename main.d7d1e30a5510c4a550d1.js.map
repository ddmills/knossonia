{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./src/utils/ColorParser.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/util/string-util.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/utils/AStar.js","webpack://knossonia/./src/utils/diagonalDistance.js","webpack://knossonia/./src/utils/ManhattanDistance.js","webpack://knossonia/./src/utils/PriorityQueue.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/generators/generators.js","webpack://knossonia/./src/level/generators/ForestCabinsGenerator.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/themes/TileTheme.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/level/themes/TileThemePopulator.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/themes/CabinTheme.js","webpack://knossonia/./src/level/schemes/UniformScheme.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/level/RoomData.js","webpack://knossonia/./node_modules/nanoid/index.prod.js","webpack://knossonia/./node_modules/nanoid/url-alphabet/index.js","webpack://knossonia/./src/level/TileScheme.js","webpack://knossonia/./src/level/generators/SectorGenerator.js","webpack://knossonia/./src/level/generators/ForestGenerator.js","webpack://knossonia/./src/level/generators/ForestStrongholdGenerator.js","webpack://knossonia/./src/level/schemes/DenseCastleScheme.js","webpack://knossonia/./src/level/generators/ForestTownGenerator.js","webpack://knossonia/./src/level/schemes/ScatteredScheme.js","webpack://knossonia/./src/level/generators/GeneratorUtils.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","mouse","MouseManager","clock","ClockManager","camera","CameraManager","renderer","Renderer","state","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","console","ConsoleManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","Date","now","boundLoop","loop","bind","requestAnimationFrame","dt","update","render","t","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","setSize","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","Math","ceil","clear","clearArea","xPx","yPx","trunc","Manager","cells","Grid","createElement","ctx","getContext","alpha","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","j","clearTile","data","filter","c","cell","pixelX","pixelY","drawImage","defaultValueGenerator","idx","size","coord","value","isOutOfBounds","warn","get","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","key","_cache","hasOwnProperty","pixels","getImageData","cvs","putImageData","cache","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","slice","test","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","camelCache","camelString","camelcaseSlow","pascalCache","constructor","component","enumerable","v","id","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","_definitions","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","_ecs","components","PrefabComponent","PrefabRegistry","_prefabs","nameOrClassOrPrefab","urlAlphabet","getAccessor","hasType","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","_entities","Entity","refs","_refs","Set","json","entities","list","entityData","createOrGetById","pascalString","d","any","none","hasAny","_filter","some","hasAll","every","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","IsDestroying","pass","LiquidContainer","destroyOnEmpty","isEmpty","add","quantity","isPourable","volume","createPrefab","liquidContainer","contents","position","setPos","_checkDestroyOnEmpty","pos","interactor","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","LIQUID_WATER","LIQUID_HONEY","colorDesc","onDrink","log","fireEvent","direction","glyphs","fg1s","speed","lifetime","Door","isOpen","ch","remove","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","content","result","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","indexOf","splice","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","blocker","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","bresenhamLineExclusive","pop","corpse","moniker","range","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","damage","shouldAppear","getMessage","Dead","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","FAILURE","removeGoal","INVALID","goal","goalsToDestroy","isSelf","isSiblingGoal","originalIntent","SUCCESS","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","BoredGoalType","GoalType","detectHostiles","handled","killGoal","KillSomethingGoalType","brain","pushGoal","boredomGoal","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","random","disp","door","Logger","Position","getPosition","setPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","getEntitiesAt","nonHostile","Faction","areEntitiesHostile","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","Wandering","floor","Directions","Explorable","Explored","Health","max","Eyes","getNeighborEntities","flat","neighbor","Particle","arr","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","not","sorted","sort","incrementTick","isPlayer","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","padEnd","str","hp","health","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","hostileEntities","melee","doorEntity","move","lootable","item","pushScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","items","pointerUp","pointerDown","selectItem","ypos","resetInteractions","interaction","left","top","xpos","isSelected","NOOP","enable","disable","cursorColor","types","segment","color","drawCursor","getNeighbors","defaultSettings","cost","allowDiagonals","computeAStar","settings","heuristic","diagonalDistance","manhattanDistance","open","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","success","path","costs","Infinity","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","min","createItem","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","entityId","serialized","isTurn","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","keys","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","tick","isEnabled","getEntities","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","sector","loadSectorPositionData","x2","y2","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","_width","_height","_data","_idHash","entries","fov","FOV","isSquareVisible","compute","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","meleeCommand","emitter","particleEmitter","isExpired","targetCount","factionA","factionB","entityA","entityB","isHostile","onWindowResize","innerWidth","innerHeight","resizeDisplay","topLeftWorldX","topLeftWorldY","worldX","worldY","sectorTxt","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","exits","connectionsNorth","connectionsWest","getExits","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","pickRandom","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","SectorGenerator","randomInt","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","populateTile","TileThemePopulator","tileArr","attempts","getRandomEmptyTile","interiorTiles","trySpawn","goblin","vial","chest","stone","wanderer","TileContainer","MapGenerator","digPercentage","getRooms","createRoom","getDoors","TileScheme","defaultType","getTile","RoomData","addRoom","cloneTo","setTileTheme","includes","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","c1","c2","c3","c4","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","populateRoom","setTheme","exitOffset","padding","castle","DenseCastleScheme","combineOther","curId","createNodeId","splitNodeVertical","node","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","intersects","msgs","isDestroying","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,I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","file":"main.d7d1e30a5510c4a550d1.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\r\nimport InputController from './input/InputController';\r\nimport HungerSystem from '../systems/HungerSystem';\r\nimport ActionSystem from '../systems/ActionSystem';\r\nimport RenderSystem from '../systems/RenderSystem';\r\nimport MovementSystem from '../systems/MovementSystem';\r\nimport UISystem from '../systems/UISystem';\r\nimport MouseManager from './input/MouseManager';\r\nimport CommandManager from './input/CommandManager';\r\nimport ScreenManager from './screens/ScreenManager';\r\nimport PlayerManager from './PlayerManager';\r\nimport ECS from '../ecs';\r\nimport GameStateManager from './GameStateManager';\r\nimport ClockManager from './ClockManager';\r\nimport CursorSystem from '../systems/CursorSystem';\r\nimport MapManager from './MapManager';\r\nimport FOVSystem from '../systems/FOVSystem';\r\nimport MeleeSystem from '../systems/MeleeSystem';\r\nimport DeathSystem from '../systems/DeathSystem';\r\nimport ParticleSystem from '../systems/ParticleSystem';\r\nimport FactionManager from './FactionManager';\r\nimport CameraManager from './CameraManager';\r\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\r\nimport { WorldManager } from './WorldManager';\r\nimport ConsoleManager from './ConsoleManager';\r\nimport DestroySystem from '../systems/DestroySystem';\r\n\r\nexport default class Game {\r\n    #lastUpdate;\r\n\r\n    get ecs() {\r\n        return this.engine.engine;\r\n    }\r\n\r\n    constructor() {\r\n        this.engine = new ECS(this);\r\n        this.mouse = new MouseManager(this);\r\n        this.clock = new ClockManager(this);\r\n        this.camera = new CameraManager(this);\r\n        this.renderer = new Renderer(this);\r\n        this.state = new GameStateManager(this);\r\n        this.world = new WorldManager(this);\r\n        this.map = new MapManager(this);\r\n        this.factions = new FactionManager(this);\r\n        this.player = new PlayerManager(this);\r\n        this.commands = new CommandManager(this);\r\n        this.screens = new ScreenManager(this);\r\n        this.input = new InputController(this);\r\n        this.console = new ConsoleManager(this);\r\n\r\n        this.hungerSystem = new HungerSystem(this);\r\n        this.actionSystem = new ActionSystem(this);\r\n        this.movementSystem = new MovementSystem(this);\r\n        this.meleeSystem = new MeleeSystem(this);\r\n        this.deathSystem = new DeathSystem(this);\r\n        this.FOVSystem = new FOVSystem(this);\r\n        this.renderSystem = new RenderSystem(this);\r\n        this.UISystem = new UISystem(this);\r\n        this.cursor = new CursorSystem(this);\r\n        this.particles = new ParticleSystem(this);\r\n        this.fps = new FPSMonitoringSystem(this);\r\n        this.destroySystem = new DestroySystem(this);\r\n    }\r\n\r\n    start() {\r\n        this.#lastUpdate = Date.now();\r\n        this.boundLoop = this.loop.bind(this);\r\n        requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    updateAdventureSystems(dt) {\r\n        this.clock.update(dt);\r\n        this.actionSystem.update(dt);\r\n        this.hungerSystem.update(dt);\r\n        this.movementSystem.update(dt);\r\n        this.meleeSystem.update(dt);\r\n        this.deathSystem.update(dt);\r\n        this.FOVSystem.update(dt);\r\n        this.renderSystem.update(dt);\r\n        this.particles.update(dt);\r\n        this.UISystem.update(dt);\r\n        this.map.update(dt);\r\n        this.destroySystem.update(dt);\r\n        this.console.render(dt);\r\n    }\r\n\r\n    loop(t) {\r\n        const now = Date.now();\r\n        const dt = now - this.#lastUpdate;\r\n\r\n        this.screens.update(dt);\r\n        this.fps.update(dt);\r\n        this.renderer.render();\r\n\r\n        this.#lastUpdate = now;\r\n\r\n        requestAnimationFrame(this.boundLoop);\r\n    }\r\n}\r\n\r\nexport const game = new Game();\r\n","import Manager from '../Manager';\r\nimport Display from './Display';\r\nimport spritesheets from './spritesheets';\r\n\r\nexport default class Renderer extends Manager {\r\n    #tileWidth = 16;\r\n    #tileHeight = 16;\r\n    #spritesheets = {};\r\n    #display = null;\r\n\r\n    get tileWidth() {\r\n        return this.#tileWidth;\r\n    }\r\n\r\n    get tileHeight() {\r\n        return this.#tileHeight;\r\n    }\r\n\r\n    get display() {\r\n        return this.#display;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.display.canvas;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        spritesheets().forEach((spritesheet) => {\r\n            this.#spritesheets[spritesheet.name] = spritesheet;\r\n        });\r\n\r\n        this.#display = new Display({\r\n            width: this.game.camera.width,\r\n            height: this.game.camera.height,\r\n            tileWidth: this.tileWidth,\r\n            tileHeight: this.tileHeight,\r\n        });\r\n\r\n        document.body.appendChild(this.display.canvas);\r\n    }\r\n\r\n    resizeDisplay(width, height) {\r\n        this.display.setSize(width, height);\r\n    }\r\n\r\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        const sprite = this.#spritesheets.tiles.getSprite(char);\r\n\r\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\r\n    }\r\n\r\n    computeTextWidth(text) {\r\n        return text.length * 0.5;\r\n    }\r\n\r\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\r\n\r\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\r\n        }\r\n    }\r\n\r\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        const len = this.computeTextWidth(text);\r\n\r\n        this.drawText(\r\n            Math.ceil((this.game.camera.width - len) / 2),\r\n            y,\r\n            text,\r\n            fg1,\r\n            fg2,\r\n            bg\r\n        );\r\n    }\r\n\r\n    clear() {\r\n        this.display.clear();\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        this.display.clearArea(x, y, width, height);\r\n    }\r\n\r\n    pxToTile(xPx, yPx) {\r\n        const x = Math.trunc(xPx / this.tileWidth);\r\n        const y = Math.trunc(yPx / this.tileHeight);\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    render() {\r\n        this.display.render();\r\n    }\r\n}\r\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\r\n\r\nexport default class Display {\r\n    ctx;\r\n    canvas;\r\n    width;\r\n    height;\r\n    tileWidth;\r\n    tileHeight;\r\n    cells;\r\n    clearColor = '#141a23';\r\n\r\n    constructor({ width, height, tileWidth, tileHeight }) {\r\n        this.tileWidth = tileWidth;\r\n        this.tileHeight = tileHeight;\r\n\r\n        this.cells = new Grid(width * 2, height, () => null);\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\r\n\r\n        this.ctx.font = `${this.tileHeight}px monospace`;\r\n        this.ctx.textBaseline = 'top';\r\n\r\n        this.setSize(width, height);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const widthPx = this.tileWidth * this.width;\r\n        const heightPx = this.tileHeight * this.height;\r\n\r\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\r\n        this.canvas.width = widthPx;\r\n        this.canvas.height = heightPx;\r\n\r\n        this.cells.clearAndResize(width * 2, height);\r\n    }\r\n\r\n    draw(x, y, sprite, fg1, fg2, bg) {\r\n        this.cells.set(x * 2, y, {\r\n            img: sprite.colorize(fg1, fg2),\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            bg,\r\n            x,\r\n            y,\r\n        });\r\n    }\r\n\r\n    clear() {\r\n        this.ctx.fillStyle = this.clearColor;\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.cells.clear();\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        for (let i = 0; i < width; i++) {\r\n            for (let j = 0; j < height; j++) {\r\n                this.clearTile(x + i, y + j);\r\n            }\r\n        }\r\n    }\r\n\r\n    clearTile(x, y) {\r\n        this.cells.set(x * 2, y, null);\r\n    }\r\n\r\n    render() {\r\n        this.cells.data.filter((c) => c).forEach((cell) => {\r\n            const pixelX = cell.x * this.tileWidth;\r\n            const pixelY = cell.y * this.tileHeight;\r\n\r\n            if (cell.bg) {\r\n                this.ctx.fillStyle = cell.bg;\r\n                this.ctx.fillRect(pixelX, pixelY, sprite.width, sprite.height);\r\n            }\r\n\r\n            this.ctx.drawImage(cell.img, pixelX, pixelY);\r\n        });\r\n    }\r\n}\r\n","export default class Grid {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    get data() {\n        return this.#data;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this.#width = width;\n        this.#height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.#data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.#data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.#data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this.#width = width;\n        this.#height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [\n            parsed[0],\n            parsed[1],\n            parsed[2],\n            parsed.alpha,\n        ];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\r\n\r\nexport class Actor extends Component {\r\n    static properties = {\r\n        energy: 0,\r\n    };\r\n\r\n    get hasEnergy() {\r\n        return this.energy >= 0;\r\n    }\r\n\r\n    onEnergyConsumed(evt) {\r\n        this.reduceEnergy(evt.data);\r\n    }\r\n\r\n    onTick(evt) {\r\n        this.addEnergy(1);\r\n    }\r\n\r\n    addEnergy(value) {\r\n        this.energy += value;\r\n\r\n        if (this.energy >= 0) {\r\n            this.energy = 0;\r\n        }\r\n    }\r\n\r\n    reduceEnergy(value) {\r\n        this.addEnergy(value * -1);\r\n    }\r\n}\r\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = new Map();\n\nexport const camelString = (value) => {\n    if (!camelCache.has(value)) {\n        camelCache.set(value, camelcaseSlow(value));\n    }\n\n    return camelCache.get(value);\n};\n\nconst pascalCache = new Map();\n\nexport const pascalString = (value) => {\n    if (!pascalCache.has(value)) {\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\n    }\n\n    return pascalCache.get(value);\n};\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\n                entity\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import { camelString } from './util/string-util';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    entity = null;\n    ecs = null;\n    _props = {};\n    _isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this._props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this._props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.entity;\n\n            this.entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this._isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this._props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelString(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this._props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport { camelString } from '../util/string-util';\n\nexport default class ComponentRegistry {\n    _definitions = new Map();\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    register(component) {\n        this._definitions.set(component.name, component);\n        camelString(component.name); // prime camelcase cache\n    }\n\n    getAccessor(type) {\n        return camelString(type);\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this._definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this._ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    _prefabs = {};\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this._ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this._ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this._ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this._prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this._ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    _prevented = false;\n    _handled = false;\n\n    get prevented() {\n        return this._prevented;\n    }\n\n    get handled() {\n        return this._handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this._handled = true;\n        this._prevented = true;\n    }\n\n    prevent() {\n        this._prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    id = null;\n    components = {};\n    ecs = null;\n    _isDestroyed = false;\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.ecs = ecs;\n        this.id = id || ecs.generateId();\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this._isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { pascalString } from '../util/string-util';\nimport Entity from '../Entity';\n\nexport default class EntityRegistry {\n    _entities = new Map();\n    _ecs = null;\n    _refs = new Map();\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    get all() {\n        return this._entities.values();\n    }\n\n    register(entity) {\n        this._entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this._entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this._ecs, id);\n\n        this.register(entity);\n\n        this._ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this._entities.delete(entity.id);\n        this._ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this._refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this._refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this._refs.has(entityId)) {\n            this._refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this._refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this._refs.has(entityId)) {\n            this._refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities ? entities : this._entities;\n\n        list.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = pascalString(key);\n            const definition = this._ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    _ecs;\n    _filter;\n    _onEntityAddedCallbacks = [];\n    _onEntityRemovedCallbacks = [];\n    _cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this._ecs = ecs;\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this._filter.any.length\n            ? this._filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this._filter.all.every((c) => entity.has(c));\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this._onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this._cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this._cache.add(entity);\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this._cache.clear();\n\n        for (const entity of this._ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this._cache;\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    _ecs;\n    _queries = [];\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this._ecs, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this._queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this._queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity(id) {\n        return this.entities.create(id);\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize(entities) {\n        return {\n            entities: this.entities.serialize(entities),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\r\n\r\nexport class IsDestroying extends Component {\r\n    static properties = {\r\n        pass: 0,\r\n    };\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\r\nimport { IsDestroying } from './IsDestroying';\r\n\r\nexport class LiquidContainer extends Component {\r\n    static properties = {\r\n        contents: LIQUID_BLOOD,\r\n        volume: 10,\r\n        maxVolume: 10,\r\n        overridePrimary: false,\r\n        overrideSecondary: false,\r\n        isPourable: false,\r\n        destroyOnEmpty: false,\r\n    };\r\n\r\n    get liquid() {\r\n        return !this.isEmpty && liquids[this.contents];\r\n    }\r\n\r\n    get isEmpty() {\r\n        return isNaN(this.contents) || this.volume <= 0;\r\n    }\r\n\r\n    get display() {\r\n        if (this.isEmpty) {\r\n            return `[empty] ${this.volume}/${this.maxVolume}`;\r\n        }\r\n\r\n        return `[${liquids[this.contents].name}] ${this.volume}/${\r\n            this.maxVolume\r\n        }`;\r\n    }\r\n\r\n    get primaryColorOverride() {\r\n        if (this.overridePrimary && this.liquid) {\r\n            return this.liquid.primary;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get secondaryColorOverride() {\r\n        if (this.overrideSecondary && this.liquid) {\r\n            return this.liquid.secondary;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    _checkDestroyOnEmpty() {\r\n        if (this.destroyOnEmpty && this.isEmpty) {\r\n            this.entity.add(IsDestroying);\r\n        }\r\n    }\r\n\r\n    pour(x, y, quantity) {\r\n        if (!this.isPourable) {\r\n            console.warn('The container connot be poured.');\r\n            return false;\r\n        }\r\n\r\n        if (this.volume <= 0) {\r\n            console.warn('The contianer is empty and cannot be poured.');\r\n            return false;\r\n        }\r\n\r\n        if (isNaN(quantity) || quantity >= this.volume) {\r\n            quantity = this.volume;\r\n        }\r\n\r\n        this.volume -= quantity;\r\n\r\n        const pool = this.ecs.createPrefab('Pool', {\r\n            liquidContainer: {\r\n                contents: this.contents,\r\n                volume: quantity,\r\n            },\r\n        });\r\n        pool.position.setPos(x, y);\r\n        this._checkDestroyOnEmpty();\r\n\r\n        return true;\r\n    }\r\n\r\n    onTryPour(evt) {\r\n        if (this.isEmpty) {\r\n            console.warn('The container is empty.');\r\n            return;\r\n        }\r\n\r\n        const pos = evt.data.interactor.position.getPos();\r\n\r\n        this.pour(pos.x, pos.y, evt.data.volume);\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    onTryDrink(evt) {\r\n        if (this.isEmpty) {\r\n            console.warn('The container is empty.');\r\n            return;\r\n        }\r\n\r\n        drinkLiquid(evt.data.interactor, this.contents, this.volume);\r\n        this.volume = 0;\r\n        this._checkDestroyOnEmpty();\r\n        evt.handle();\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        if (this.isEmpty) {\r\n            return;\r\n        }\r\n\r\n        evt.data.interactions.push({\r\n            name: 'Drink',\r\n            evt: 'try-drink',\r\n        });\r\n\r\n        if (this.isPourable) {\r\n            evt.data.interactions.push({\r\n                name: 'Pour',\r\n                evt: 'try-pour',\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { Component } from 'geotic';\r\nimport { Blocker } from './Blocker';\r\nimport { Shadowcaster } from './Shadowcaster';\r\n\r\nexport class Door extends Component {\r\n    static properties = {\r\n        isOpen: false,\r\n        chOpen: \"'\",\r\n        chClosed: '+',\r\n    };\r\n\r\n    get ch() {\r\n        return this.isOpen ? this.chOpen : this.chClosed;\r\n    }\r\n\r\n    get display() {\r\n        return this.isOpen ? '[open]' : '[closed]';\r\n    }\r\n\r\n    openDoor() {\r\n        if (this.isOpen) {\r\n            return;\r\n        }\r\n\r\n        this.isOpen = true;\r\n\r\n        const glyph = this.entity.glyph;\r\n\r\n        if (glyph) {\r\n            glyph.ch = this.ch;\r\n        }\r\n\r\n        this.entity.remove(Blocker);\r\n        this.entity.remove(Shadowcaster);\r\n    }\r\n\r\n    closeDoor() {\r\n        if (!this.isOpen) {\r\n            return;\r\n        }\r\n        // todo: check if entity blocking door\r\n\r\n        this.isOpen = false;\r\n\r\n        const glyph = this.entity.glyph;\r\n\r\n        if (glyph) {\r\n            glyph.ch = this.ch;\r\n        }\r\n\r\n        this.entity.add(Blocker);\r\n        this.entity.add(Shadowcaster);\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        if (this.isOpen) {\r\n            evt.data.interactions.push({\r\n                name: 'Close door',\r\n                evt: 'try-close-door',\r\n            });\r\n        } else {\r\n            evt.data.interactions.push({\r\n                name: 'Open door',\r\n                evt: 'try-open-door',\r\n            });\r\n        }\r\n    }\r\n\r\n    onTryCloseDoor(evt) {\r\n        this.closeDoor();\r\n        evt.handle();\r\n    }\r\n\r\n    onTryOpenDoor(evt) {\r\n        this.openDoor();\r\n        evt.handle();\r\n    }\r\n\r\n    onProjectileHit(evt) {\r\n        if (!this.isOpen) {\r\n            evt.data.stopProjectile = true;\r\n            evt.data.deflectProjectile = false;\r\n        }\r\n\r\n        this.openDoor();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Blocker extends Component {\r\n    onProjectileHit(evt) {\r\n        // https://github.com/ddmills/geotic/issues/22\r\n        if (!this.isAttached) {\r\n            return;\r\n        }\r\n\r\n        evt.data.stopProjectile = true;\r\n        evt.data.deflectProjectile = true;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Shadowcaster extends Component {}\r\n","import { Component } from 'geotic';\r\nimport { Inventory } from './Inventory';\r\nimport { IsInventoried } from './IsInventoried';\r\n\r\nexport class Loot extends Component {\r\n    onGetInteractions(evt) {\r\n        const interactor = evt.data.interactor;\r\n        const isInventoried = this.entity.has(IsInventoried);\r\n\r\n        if (!interactor.has(Inventory)) {\r\n            return;\r\n        }\r\n\r\n        if (isInventoried) {\r\n            if (interactor.inventory.hasLoot(this.entity)) {\r\n                evt.data.interactions.push({\r\n                    name: 'Drop',\r\n                    evt: 'try-drop',\r\n                });\r\n            } else {\r\n                evt.data.interactions.push({\r\n                    name: 'Take',\r\n                    evt: 'try-take',\r\n                });\r\n            }\r\n        } else {\r\n            evt.data.interactions.push({\r\n                name: 'Pickup',\r\n                evt: 'try-pick-up',\r\n            });\r\n        }\r\n    }\r\n\r\n    onTryPickUp(evt) {\r\n        evt.data.interactor.inventory.addLoot(this.entity);\r\n        evt.handle();\r\n    }\r\n\r\n    onTryTake(evt) {\r\n        const owner = this.entity.isInventoried.owner;\r\n\r\n        owner.inventory.removeLoot(this.entity);\r\n        evt.data.interactor.inventory.addLoot(this.entity);\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\r\nimport { IsInventoried } from './IsInventoried';\r\nimport { Stackable } from './Stackable';\r\n\r\nexport class Inventory extends Component {\r\n    static properties = {\r\n        content: '<EntityArray>',\r\n    };\r\n\r\n    onDestroyed() {\r\n        this.content.forEach((entity) => entity.destroy());\r\n    }\r\n\r\n    onQueryOwnership(evt) {\r\n        this.content.forEach((entity) => {\r\n            evt.data.result.add(entity);\r\n            entity.fireEvent('query-ownership', { result: evt.data.result });\r\n        });\r\n    }\r\n\r\n    getStackable(stackableIdentifier) {\r\n        return this.content.find((entity) => {\r\n            return (\r\n                entity.has(Stackable) &&\r\n                entity.stackable.identifier === stackableIdentifier\r\n            );\r\n        });\r\n    }\r\n\r\n    addLoot(loot) {\r\n        if (loot.has(Stackable)) {\r\n            const existing = this.getStackable(loot.stackable.identifier);\r\n\r\n            if (existing) {\r\n                existing.stackable.addOther(loot);\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        loot.add(IsInventoried, {\r\n            owner: this.entity,\r\n        });\r\n\r\n        this.content.push(loot);\r\n    }\r\n\r\n    hasLoot(loot) {\r\n        const idx = this.content.indexOf(loot);\r\n\r\n        return idx >= 0;\r\n    }\r\n\r\n    removeLoot(loot, quantity) {\r\n        const isStackable = loot.has(Stackable);\r\n\r\n        if (isStackable && !isNaN(quantity)) {\r\n            loot.stackable.split(quantity);\r\n\r\n            return this.removeLoot(loot);\r\n        }\r\n\r\n        const idx = this.content.indexOf(loot);\r\n\r\n        if (idx >= 0) {\r\n            this.content.splice(idx, 1);\r\n            loot.remove(IsInventoried);\r\n        }\r\n\r\n        return loot;\r\n    }\r\n\r\n    dropLoot(loot, quantity) {\r\n        const ob = this.removeLoot(loot, quantity);\r\n        const pos = this.entity.position.getPos();\r\n\r\n        ob.position.setPos(pos.x, pos.y);\r\n\r\n        return ob;\r\n    }\r\n\r\n    onTryOpen(evt) {\r\n        game.screens.pushScreen(SCREEN_INVENTORY, {\r\n            accessible: this.entity,\r\n            accessor: evt.data.interactor,\r\n        });\r\n        evt.handle();\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        evt.data.interactions.push({\r\n            name: 'Open',\r\n            evt: 'try-open',\r\n        });\r\n    }\r\n}\r\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\n","import { Component } from 'geotic';\r\nimport { Stackable } from './Stackable';\r\n\r\nexport class IsInventoried extends Component {\r\n    static properties = {\r\n        owner: '<Entity>',\r\n    };\r\n\r\n    onQueryOwnership(evt) {\r\n        evt.data.result.add(this.entity);\r\n    }\r\n\r\n    onTryDrop(evt) {\r\n        this.owner.inventory.dropLoot(this.entity);\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    onThrown(evt) {\r\n        const isStackable = this.entity.has(Stackable);\r\n        const quantity = isStackable ? 1 : null;\r\n\r\n        this.owner.inventory.removeLoot(this.entity, quantity);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\r\nimport { IsDestroying } from './IsDestroying';\r\nimport { IsInventoried } from './IsInventoried';\r\n\r\nexport class Stackable extends Component {\r\n    static properties = {\r\n        identifier: STACKABLE_DEFAULT,\r\n        quantity: 1,\r\n    };\r\n\r\n    get display() {\r\n        return `x ${this.quantity}`;\r\n    }\r\n\r\n    increment(amount) {\r\n        this.quantity += amount;\r\n    }\r\n\r\n    addOther(other) {\r\n        this.increment(other.stackable.quantity);\r\n        other.stackable.quantity = 0;\r\n        other.add(IsDestroying);\r\n    }\r\n\r\n    split(quantity) {\r\n        if (quantity >= this.quantity) {\r\n            quantity = this.quantity;\r\n            return this.entity;\r\n        }\r\n\r\n        const clone = game.engine.cloneEntity(this.entity);\r\n        clone.stackable.quantity -= quantity;\r\n\r\n        this.quantity = quantity;\r\n\r\n        if (clone.has(IsInventoried)) {\r\n            // make sure inventory contents are still \"correct\"\r\n            clone.isInventoried.owner.inventory.content.push(clone);\r\n        }\r\n\r\n        return clone;\r\n    }\r\n}\r\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\r\nimport {\r\n    CURSOR_SEGMENT_INVALID,\r\n    CURSOR_SEGMENT_INTEREST,\r\n    CURSOR_SEGMENT_UNKNOWN,\r\n    CURSOR_SEGMENT_NONE,\r\n} from '../../enums/CursorSegments';\r\nimport { bresenhamLine } from '../../utils/BresenhamLine';\r\nimport { Blocker } from './Blocker';\r\nimport { Body } from './Body';\r\nimport { Inventory } from './Inventory';\r\nimport { IsVisible } from './IsVisible';\r\n\r\nexport class Throwable extends Component {\r\n    onGetInteractions(evt) {\r\n        if (!evt.data.interactor.has(Inventory)) {\r\n            return;\r\n        }\r\n\r\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\r\n            return;\r\n        }\r\n\r\n        evt.data.interactions.push({\r\n            name: 'Throw',\r\n            evt: 'try-throw',\r\n        });\r\n    }\r\n\r\n    throw(trajectory, initiator) {\r\n        this.entity.fireEvent('thrown', {\r\n            initiator,\r\n            trajectory,\r\n        });\r\n\r\n        for (let i = 0; i < trajectory.length; i++) {\r\n            if (i == 0) {\r\n                continue;\r\n            }\r\n\r\n            const position = trajectory[i];\r\n            const entities = position.entities;\r\n\r\n            let stopped = false;\r\n            let deflected = false;\r\n\r\n            const hit = entities.find((entity) => {\r\n                const evt = entity.fireEvent('projectile-hit', {\r\n                    initiator,\r\n                    trajectory,\r\n                    projectile: this.entity,\r\n                });\r\n\r\n                stopped = evt.data.stopProjectile;\r\n                deflected = evt.data.deflectProjectile;\r\n\r\n                return stopped || deflected;\r\n            });\r\n\r\n            if (hit) {\r\n                if (deflected) {\r\n                    const prev = trajectory[i - 1];\r\n\r\n                    this.entity.position.setPos(prev.x, prev.y);\r\n                    this.entity.fireEvent('collide-ground', {\r\n                        initiator,\r\n                        x: prev.x,\r\n                        y: prev.y,\r\n                    });\r\n                } else {\r\n                    this.entity.position.setPos(position.x, position.y);\r\n                    this.entity.fireEvent('collide', {\r\n                        initiator,\r\n                        hit,\r\n                        x: position.x,\r\n                        y: position.y,\r\n                    });\r\n                }\r\n\r\n                break;\r\n            } else if (i === trajectory.length - 1) {\r\n                this.entity.position.setPos(position.x, position.y);\r\n                this.entity.fireEvent('collide-ground', {\r\n                    initiator,\r\n                    x: position.x,\r\n                    y: position.y,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onTryThrow(evt) {\r\n        game.screens.pushScreen(SCREEN_CURSOR, {\r\n            start: evt.data.interactor.position.getPos(),\r\n            drawLine: true,\r\n            drawTags: false,\r\n            onResult: (cursor) => {\r\n                game.screens.setScreen(SCREEN_ADVENTURE);\r\n\r\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\r\n\r\n                const line = bresenhamLine(\r\n                    cursor.start.x,\r\n                    cursor.start.y,\r\n                    cursor.position.x,\r\n                    cursor.position.y\r\n                );\r\n                const trajectory = line.map((pos) => ({\r\n                    x: pos.x,\r\n                    y: pos.y,\r\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\r\n                }));\r\n\r\n                this.throw(trajectory, evt.data.interactor);\r\n            },\r\n            onCancel: () => {\r\n                game.screens.popScreen();\r\n            },\r\n            getSegmentTypes: (line) => {\r\n                let lineValid = true;\r\n                const result = line.map(({ x, y }, idx) => {\r\n                    if (idx === 0) {\r\n                        return CURSOR_SEGMENT_NONE;\r\n                    }\r\n\r\n                    // todo: fire \"query\" event on each item in path\r\n                    const entities = game.map.getEntitiesAt(x, y);\r\n                    const blocker = entities.find(\r\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\r\n                    );\r\n                    const body = entities.find(\r\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\r\n                    );\r\n\r\n                    if (blocker) {\r\n                        lineValid = false;\r\n                    }\r\n\r\n                    if (lineValid && body) {\r\n                        lineValid = false;\r\n                        return CURSOR_SEGMENT_INTEREST;\r\n                    }\r\n\r\n                    return !lineValid\r\n                        ? CURSOR_SEGMENT_INVALID\r\n                        : CURSOR_SEGMENT_UNKNOWN;\r\n                });\r\n\r\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\r\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\r\n\r\n                if (interestIdx < 0 && blockerIdx >= 1) {\r\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\r\n                }\r\n\r\n                return result;\r\n            },\r\n        });\r\n    }\r\n}\r\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\r\n\r\nexport class Body extends Component {\r\n    onDeath(evt) {\r\n        if (!this.entity.has('Position')) {\r\n            return;\r\n        }\r\n\r\n        const corpse = this.ecs.createPrefab('Corpse');\r\n        const pos = this.entity.position.getPos();\r\n\r\n        if (this.entity.has('Moniker')) {\r\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\r\n        }\r\n\r\n        corpse.position.setPos(pos.x, pos.y);\r\n    }\r\n\r\n    onProjectileHit(evt) {\r\n        evt.data.stopProjectile = true;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class IsVisible extends Component {\r\n    static properties = {\r\n        amount: 0,\r\n        range: 0,\r\n    };\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\r\nimport { Dead } from './Dead';\r\nimport { IsDestroying } from './IsDestroying';\r\nimport { LiquidContainer } from './LiquidContainer';\r\n\r\nexport class FragileGlass extends Component {\r\n    shatter(x, y) {\r\n        const shards = this.ecs.createPrefab('GlassShard', {\r\n            stackable: {\r\n                quantity: 3,\r\n            },\r\n        });\r\n\r\n        shards.position.setPos(x, y);\r\n\r\n        if (this.entity.has(LiquidContainer)) {\r\n            if (this.entity.liquidContainer.pour(x, y)) {\r\n                game.console.event(CONSOLE_EVENT_SHATTER, {\r\n                    target: this.entity,\r\n                    liquid: this.entity.liquidContainer.contents,\r\n                });\r\n            }\r\n        } else {\r\n            game.console.event(CONSOLE_EVENT_SHATTER, {\r\n                target: this.entity,\r\n            });\r\n        }\r\n\r\n        this.entity.add(IsDestroying);\r\n    }\r\n\r\n    onCollideGround(evt) {\r\n        this.shatter(evt.data.x, evt.data.y);\r\n    }\r\n\r\n    onCollide(evt) {\r\n        this.shatter(evt.data.x, evt.data.y);\r\n    }\r\n}\r\n","import { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )} and dies`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } contents!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\r\n\r\nexport class Dead extends Component {}\r\n","import { Component } from 'geotic';\r\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\r\n\r\nexport class Brain extends Component {\r\n    static properties = {\r\n        goals: '<EntityArray>',\r\n    };\r\n\r\n    onDestroyed() {\r\n        this.goals.forEach((entity) => {\r\n            entity.destroy();\r\n        });\r\n    }\r\n\r\n    onTakeAction(evt) {\r\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\r\n            this.popGoal().entity.destroy();\r\n        }\r\n\r\n        const currentGoal = this.peekGoal();\r\n        const result = currentGoal.takeAction();\r\n\r\n        if (result === FAILURE) {\r\n            this.removeGoal(currentGoal);\r\n        } else if (result === INVALID) {\r\n            this.removeGoal(currentGoal);\r\n            this.entity.fireEvent('take-action');\r\n        }\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    removeGoal(goal) {\r\n        const goalsToDestroy = [];\r\n\r\n        this.goals = this.goals.filter((g) => {\r\n            const isSelf = Boolean(g.id === goal.entity.id);\r\n            const isSiblingGoal = Boolean(\r\n                g.goal.originalIntent &&\r\n                    g.goal.originalIntent.id === goal.originalIntent.id\r\n            );\r\n\r\n            if (isSelf || isSiblingGoal) {\r\n                goalsToDestroy.push(g.goal);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        goalsToDestroy.forEach((g) => g.entity.destroy());\r\n    }\r\n\r\n    pushGoal(goal) {\r\n        if (!(goal instanceof Component)) {\r\n            throw new Error('Pushing non-component goal!', goal);\r\n        }\r\n\r\n        goal.parent = this.entity;\r\n\r\n        return this.goals.push(goal.entity);\r\n    }\r\n\r\n    popGoal() {\r\n        return this.goals.pop().goal;\r\n    }\r\n\r\n    peekGoal() {\r\n        return this.goals[this.goals.length - 1].goal;\r\n    }\r\n}\r\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\r\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\r\n\r\nexport class Goal extends Component {\r\n    static properties = {\r\n        name: 'Bored',\r\n        originalIntent: '<Entity>',\r\n        parent: '<Entity>',\r\n        target: '<Entity>',\r\n        complete: false,\r\n        data: {},\r\n    };\r\n\r\n    isFinished() {\r\n        return GoalEvaluator.isFinished(this.parent, this);\r\n    }\r\n\r\n    takeAction() {\r\n        return GoalEvaluator.takeAction(this.parent, this);\r\n    }\r\n}\r\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\r\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\r\n\r\nexport class Eater extends Component {\r\n    static properties = {\r\n        hunger: 6000,\r\n    };\r\n\r\n    get isHungry() {\r\n        return this.hunger <= 3000;\r\n    }\r\n\r\n    onBoredom(evt) {\r\n        if (this.isHungry) {\r\n            evt.data.goal = SatisfyHungerGoalType.create();\r\n            evt.handle();\r\n        }\r\n    }\r\n\r\n    onTryEatFood(evt) {\r\n        if (Math.random() < 0.75) {\r\n            this.entity.fireEvent('log', 'eats some food');\r\n            this.hunger += evt.data.food;\r\n            this.entity.fireEvent('energy-consumed', 150);\r\n\r\n            evt.handle();\r\n        } else {\r\n            this.entity.fireEvent('log', 'fails to eat the food');\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { Door } from './Door';\r\nimport { LiquidContainer } from './LiquidContainer';\r\nimport { Stackable } from './Stackable';\r\n\r\nexport class Moniker extends Component {\r\n    static properties = {\r\n        name: 'Unknown',\r\n    };\r\n\r\n    get simpleDisplay() {\r\n        return this.name;\r\n    }\r\n\r\n    get display() {\r\n        const hasLiquid = this.entity.has(LiquidContainer);\r\n\r\n        if (hasLiquid) {\r\n            const disp = this.entity.liquidContainer.display;\r\n\r\n            return `${this.name} ${disp}`;\r\n        }\r\n\r\n        const hasStackable = this.entity.has(Stackable);\r\n\r\n        if (hasStackable) {\r\n            const disp = this.entity.stackable.display;\r\n\r\n            return `${this.name} ${disp}`;\r\n        }\r\n\r\n        const hasDoor = this.entity.has(Door);\r\n\r\n        if (hasDoor) {\r\n            const disp = this.entity.door.display;\r\n\r\n            return `${this.name} ${disp}`;\r\n        }\r\n\r\n        return this.name;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { Moniker } from './Moniker';\r\n\r\nexport class Logger extends Component {\r\n    get moniker() {\r\n        return this.entity.has(Moniker)\r\n            ? this.entity.moniker.display\r\n            : 'Unknown';\r\n    }\r\n\r\n    onLog(evt) {\r\n        console.log(`[${this.moniker}]`, evt.data);\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Position extends Component {\r\n    getPos() {\r\n        return window.game.map.getPosition(this.entity.id);\r\n    }\r\n\r\n    setPos(x, y) {\r\n        return window.game.map.setPosition(x, y, this.entity.id);\r\n    }\r\n\r\n    equals(x, y) {\r\n        const pos = this.getPos();\r\n\r\n        return pos.x === x && pos.y === y;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { LiquidContainer } from './LiquidContainer';\r\n\r\nexport class Glyph extends Component {\r\n    static properties = {\r\n        fg1: '#ddd',\r\n        fg2: '#666',\r\n        bg: null,\r\n        ch: '?',\r\n    };\r\n\r\n    get primary() {\r\n        if (this.entity.has(LiquidContainer)) {\r\n            const col = this.entity.liquidContainer.primaryColorOverride;\r\n\r\n            if (col) {\r\n                return col;\r\n            }\r\n        }\r\n\r\n        return this.fg1;\r\n    }\r\n\r\n    get secondary() {\r\n        if (this.entity.has(LiquidContainer)) {\r\n            const col = this.entity.liquidContainer.secondaryColorOverride;\r\n\r\n            if (col) {\r\n                return col;\r\n            }\r\n        }\r\n\r\n        return this.fg2;\r\n    }\r\n\r\n    get background() {\r\n        return this.bg;\r\n    }\r\n\r\n    get char() {\r\n        return this.ch;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { Actor } from './Actor';\r\n\r\nexport class Arms extends Component {\r\n    onTryMelee(evt) {\r\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\r\n            console.warn('onTryMelee - No energy??');\r\n            return;\r\n        }\r\n\r\n        const damage = {\r\n            type: 'blunt',\r\n            value: 5,\r\n        };\r\n\r\n        const map = window.game.map;\r\n\r\n        const targetPos = evt.data.target.position.getPos();\r\n        const selfPos = this.entity.position.getPos();\r\n        const isAdjacent = map.isAdjacent(\r\n            selfPos.x,\r\n            selfPos.y,\r\n            targetPos.x,\r\n            targetPos.y\r\n        );\r\n\r\n        if (!isAdjacent) {\r\n            return;\r\n        }\r\n\r\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\r\n            lifetime: 140,\r\n            fg1s: ['#8d4c4f', '#730d14'],\r\n            glyphs: ['-'],\r\n        });\r\n\r\n        evt.data.target.fireEvent('damage', {\r\n            source: this.entity,\r\n            damage,\r\n        });\r\n\r\n        this.entity.fireEvent('energy-consumed', 800);\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { Blocker } from './Blocker';\r\nimport { Faction } from './Faction';\r\n\r\nexport class Legs extends Component {\r\n    onTryMove(evt) {\r\n        const position = this.entity.position.getPos();\r\n        const targetX = position.x + evt.data.x;\r\n        const targetY = position.y + evt.data.y;\r\n\r\n        const targetTileEntities = window.game.map.getEntitiesAt(\r\n            targetX,\r\n            targetY\r\n        );\r\n\r\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\r\n            return;\r\n        }\r\n\r\n        const nonHostile = targetTileEntities.find((entity) => {\r\n            return (\r\n                entity.has(Faction) &&\r\n                !window.game.factions.areEntitiesHostile(entity, this.entity)\r\n            );\r\n        });\r\n\r\n        // swap locations\r\n        if (nonHostile) {\r\n            nonHostile.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        this.entity.fireEvent('energy-consumed', 750);\r\n        this.entity.position.setPos(targetX, targetY);\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Faction extends Component {\r\n    static properties = {\r\n        name: 'Neutral',\r\n    };\r\n}\r\n","import { Component } from 'geotic';\r\nimport { DIR_Z } from '../../enums/Directions';\r\n\r\nexport class MoveCommand extends Component {\r\n    static properties = {\r\n        direction: DIR_Z,\r\n    };\r\n}\r\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\r\nimport { DIR_Z } from '../../enums/Directions';\r\n\r\nexport class MeleeCommand extends Component {\r\n    static properties = {\r\n        target: '<Entity>',\r\n    };\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class IsPlayer extends Component {}\r\n","import { Component } from 'geotic';\r\nimport { MoveGoalType } from '../../ai/GoalTypes';\r\nimport * as Directions from '../../enums/Directions';\r\n\r\nexport class Wandering extends Component {\r\n    onBoredom(evt) {\r\n        if (Math.random() > 0.5) {\r\n            return;\r\n        }\r\n\r\n        const direction = Math.floor(Math.random() * 9);\r\n        const delta = Directions.delta(direction);\r\n\r\n        evt.data.goal = MoveGoalType.create({\r\n            data: delta,\r\n        });\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Explorable extends Component {}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Explored extends Component {}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport {\r\n    CONSOLE_EVENT_DAMAGE,\r\n    CONSOLE_EVENT_DEAD,\r\n} from '../../enums/ConsoleEvents';\r\nimport { Dead } from './Dead';\r\n\r\nexport class Health extends Component {\r\n    static properties = {\r\n        value: 10,\r\n        max: 10,\r\n    };\r\n\r\n    onDamage(evt) {\r\n        this.value -= evt.data.damage.value;\r\n\r\n        if (this.value <= 0) {\r\n            game.console.event(CONSOLE_EVENT_DEAD, {\r\n                target: this.entity,\r\n                source: evt.data.source,\r\n                damage: evt.data.damage,\r\n            });\r\n\r\n            this.value = 0;\r\n            this.entity.add(Dead);\r\n        }\r\n\r\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\r\n            target: this.entity,\r\n            source: evt.data.source,\r\n            damage: evt.data.damage,\r\n        });\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    onHeal(evt) {\r\n        this.value += evt.data.value;\r\n\r\n        if (this.value > this.max) {\r\n            this.value = this.max;\r\n        }\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { Faction } from './Faction';\r\n\r\nexport class Eyes extends Component {\r\n    onTryDetectHostiles(evt) {\r\n        const position = window.game.map.getPosition(this.entity.id);\r\n\r\n        if (!position) {\r\n            return;\r\n        }\r\n\r\n        const target = window.game.map\r\n            .getNeighborEntities(position.x, position.y)\r\n            .flat()\r\n            .filter((e) => e.has(Faction))\r\n            .find((neighbor) => {\r\n                return window.game.factions.areEntitiesHostile(\r\n                    this.entity,\r\n                    neighbor\r\n                );\r\n            });\r\n\r\n        if (target) {\r\n            evt.data.target = target;\r\n            evt.handle();\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Particle extends Component {\r\n    static properties = {\r\n        lifetime: 200,\r\n        fg1s: ['#8d4c4f', '#730d14'],\r\n        fg2s: [],\r\n        bgs: [],\r\n        glyphs: ['·'],\r\n        speed: 0.05,\r\n        age: 0,\r\n        x: 0,\r\n        y: 0,\r\n        startX: 0,\r\n        startY: 0,\r\n        direction: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    get isExpired() {\r\n        return this.age >= this.lifetime;\r\n    }\r\n\r\n    get percent() {\r\n        return this.age / this.lifetime;\r\n    }\r\n\r\n    frame(arr = []) {\r\n        const len = arr.length;\r\n        const chunks = 1 / len;\r\n\r\n        return Math.trunc(this.percent / chunks);\r\n    }\r\n\r\n    get glyph() {\r\n        const frame = this.frame(this.glyphs);\r\n\r\n        return this.glyphs[frame];\r\n    }\r\n\r\n    get fg1() {\r\n        const frame = this.frame(this.fg1s);\r\n\r\n        return this.fg1s[frame];\r\n    }\r\n\r\n    get fg2() {\r\n        const frame = this.frame(this.fg2s);\r\n\r\n        return this.fg2s[frame];\r\n    }\r\n\r\n    get bg() {\r\n        const frame = this.frame(this.bgs);\r\n\r\n        return this.bgs[frame];\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { Particle } from './Particle';\r\n\r\nexport class ParticleEmitter extends Component {\r\n    static properties = {\r\n        particleData: {},\r\n        duration: 800,\r\n        rate: 3,\r\n        age: 0,\r\n        x: 0,\r\n        y: 0,\r\n        count: 0,\r\n    };\r\n\r\n    get isExpired() {\r\n        return this.age >= this.duration;\r\n    }\r\n\r\n    get percent() {\r\n        return this.age / this.duration;\r\n    }\r\n\r\n    createParticle() {\r\n        const particle = this.ecs.createEntity();\r\n\r\n        particle.add(Particle, {\r\n            ...this.particleData,\r\n            x: this.x,\r\n            y: this.y,\r\n        });\r\n\r\n        this.count += 1;\r\n\r\n        return particle;\r\n    }\r\n\r\n    frame(arr = []) {\r\n        const len = arr.length;\r\n        const chunks = 1 / len;\r\n\r\n        return Math.trunc(this.percent / chunks);\r\n    }\r\n}\r\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { Actor, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import {\r\n    IsInventoried,\r\n    Explored,\r\n    Glyph,\r\n    Position,\r\n    IsVisible,\r\n    IsDestroying,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class RenderSystem extends System {\r\n    #query = null;\r\n    #explored = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Glyph, Position, IsVisible],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n        this.#explored = game.ecs.createQuery({\r\n            all: [Glyph, Position, Explored],\r\n            none: [IsInventoried, IsVisible, IsDestroying],\r\n        });\r\n    }\r\n\r\n    render(dt) {\r\n        this.game.renderer.clear();\r\n\r\n        const explored = Array.from(this.#explored.get());\r\n\r\n        for (let i = 0; i < explored.length; i++) {\r\n            const renderable = explored[i];\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                continue;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                '#283131',\r\n                '#283131'\r\n            );\r\n        };\r\n\r\n        const renderables = Array.from(this.#query.get());\r\n\r\n        for (let i = 0; i < renderables.length; i++) {\r\n            const renderable = renderables[i];\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                continue;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                renderable.glyph.primary,\r\n                renderable.glyph.secondary,\r\n                renderable.glyph.background\r\n            );\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.render();\r\n    }\r\n}\r\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const item = entities.find((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n            return evt.data.interactions.length > 0;\n        });\n\n        if (item) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: item,\n            });\n        }\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(1, 4, `move       [q, w, e, a, d, z, x, c]`);\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class InventoryScreen extends Screen {\n    #selectedIdx = 0;\n    #accessible;\n    #accessor;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n        const interactable = items[idx];\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n\n        if (items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        items.forEach((item, i) => {\n            const isSelected = i === idx;\n            const ypos = i + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 16;\n    #selectedIdx = 0;\n    #interactions = [];\n    #interactable;\n    #interactor;\n\n    get left() {\n        return (this.game.camera.width - this.#width) / 2;\n    }\n\n    get top() {\n        return (this.game.camera.height - this.#height) / 2;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.resetInteractions();\n    }\n\n    resetInteractions() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.#interactions = evt.data.interactions;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const idx = this.#selectedIdx % this.#interactions.length;\n        const interaction = this.#interactions[idx];\n\n        if (interaction) {\n            this.#interactable.fireEvent(interaction.evt, {\n                interactor: this.#interactor,\n            });\n\n            if (this.#interactable.isDestroyed) {\n                this.game.screens.popScreen();\n\n                return;\n            }\n\n            this.resetInteractions();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderSystem.update(dt);\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width,\n            this.#height\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const idx = this.#selectedIdx % this.#interactions.length;\n\n        if (this.#interactions.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        const xpos = this.left + 2;\n\n        this.#interactions.forEach((interaction, i) => {\n            const isSelected = i === idx;\n            const ypos = i + this.top + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, '-');\n            }\n\n            this.game.renderer.drawText(xpos + 1, ypos, interaction.name);\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport {\n    bresenhamLine\n} from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { game } from '../../Game';\nimport { computeAStar } from '../../../utils/AStar';\nimport { Blocker } from '../../../ecs/components';\nimport { diagonalDistance } from '../../../utils/diagonalDistance';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals ? diagonalDistance : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put({\n        key: startKey,\n        pos: start\n    }, 0);\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const {\n            key: currentKey,\n            pos: current\n        } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put({\n                    key: nextKey,\n                    pos: next\n                }, priority);\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n}\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy)\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.remove(MeleeCommand);\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\r\nimport {\r\n    Explorable,\r\n    Explored,\r\n    IsDestroying,\r\n    Shadowcaster,\r\n    IsVisible,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class FOVSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\r\n            this.isSquareVisible(x, y)\r\n        );\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [IsVisible],\r\n            not: [IsDestroying],\r\n        });\r\n    }\r\n\r\n    isSquareVisible(x, y) {\r\n        return !this.game.map\r\n            .getEntitiesAt(x, y)\r\n            .some((e) => e.has(Shadowcaster));\r\n    }\r\n\r\n    setVisible(x, y, amount, range) {\r\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\r\n            e.add(IsVisible, {\r\n                range,\r\n                amount,\r\n            });\r\n            if (e.has(Explorable) && !e.has(Explored)) {\r\n                e.add(Explored);\r\n            }\r\n        });\r\n    }\r\n\r\n    computeFOV() {\r\n        this.query.get().forEach((e) => e.remove(IsVisible));\r\n\r\n        const pos = this.game.player.position;\r\n\r\n        this.fov.compute(pos.x, pos.y, 5, (x, y, r, visibility) => {\r\n            this.setVisible(x, y, visibility, r);\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.game.clock.tickDelta) {\r\n            this.computeFOV();\r\n        }\r\n    }\r\n}\r\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { Faction } from '../ecs/components';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const factionA = entityA.get(Faction);\n        const factionB = entityB.get(Faction);\n\n        if (factionA && factionB) {\n            return this.isHostile(factionA.name, factionB.name);\n        }\n\n        return false;\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.computeSize();\n    }\n\n    get topLeftWorldX() {\n        return Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.game.map.width - this.width\n            )\n        );\n    }\n\n    get topLeftWorldY() {\n        return Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.game.map.height - this.height\n            )\n        );\n    }\n\n    computeSize() {\n        this.width = Math.floor(window.innerWidth / 32) - 2;\n        this.height = Math.floor(window.innerHeight / 32) - 2;\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height);\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const sector = this.game.world.sector;\n        let sectorTxt = '';\n\n        if (sector) {\n            sectorTxt = `(${sector.x}, ${sector.y})`;\n        };\n\n        const fps = Math.trunc(1000 / dt);\n        const display = `${sectorTxt} ${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.camera.width - textWidth;\n\n        this.game.renderer.drawText(\n            x,\n            this.game.camera.height - 1,\n            display,\n            '#172e2e'\n        );\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(0);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(...this.connectionsNorth.map((c) => ({\n            x: 12,\n            y: 0,\n        })));\n\n        // west\n        exits.push(...this.connectionsWest.map((c) => ({\n            x: 0,\n            y: 12,\n        })));\n\n        // east\n        exits.push(...this.eastSector.connectionsWest.map((c) => ({\n            x: game.map.width - 1,\n            y: 12,\n        })));\n\n        // south\n        exits.push(...this.southSector.connectionsNorth.map((c) => ({\n            x: 12,\n            y: game.map.height - 1,\n        })));\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => room.theme = TILE_THEME_FOREST);\n\n        const mediumRooms = tiles.rooms.filter((r) => r.width >= 3 && r.height >= 3);\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n}\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        }\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import { game } from '../../core/Game';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                const wall = game.ecs.createPrefab('Wall');\n\n                wall.position.setPos(tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            const door = game.ecs.createPrefab('Door');\n\n            if (this.getEntities(exit).length === 0) {\n                door.position.setPos(exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts=100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(`ran out of attempts (${attempts}) to place item`, tileArr);\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { LIQUID_BLOOD, LIQUID_HONEY, LIQUID_WATER } from '../../enums/LiquidTypes';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            const type = Math.random() < 0.5 ? 'PineTree' : 'SmallPineTree';\n            const tree = game.ecs.createPrefab(type);\n\n            tree.position.setPos(tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() < .1) {\n                if (tile.isType(TILE_TYPE_FLOOR)) {\n                    const stone = game.ecs.createPrefab('Stone');\n\n                    stone.position.setPos(tile.x, tile.y);\n                }\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const goblin = game.ecs.createPrefab('Goblin');\n\n                goblin.position.setPos(tile.x, tile.y);\n                goblin.brain.pushGoal(BoredGoalType.create());\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_BLOOD;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_WATER;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_HONEY;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                const wall = game.ecs.createPrefab('WoodWall');\n\n                wall.position.setPos(tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            const door = game.ecs.createPrefab('Door');\n\n            if (this.getEntities(exit).length === 0) {\n                door.position.setPos(exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = game.ecs.createPrefab('Chest');\n            const stone = game.ecs.createPrefab('Stone');\n            const vial = game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_HONEY;\n            chest.position.setPos(tile.x, tile.y);\n            chest.inventory.addLoot(vial);\n            chest.inventory.addLoot(stone);\n        });\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n                wanderer.position.setPos(tile.x, tile.y);\n                wanderer.brain.pushGoal(BoredGoalType.create());\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                (r.getRight() - r.getLeft()) + 1,\n                (r.getBottom() - r.getTop()) + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1;\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => room.theme = theme);\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid'\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls ? this.x + this.width + 1 : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls ? this.y + this.height + 1 : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (i === start || i === endWidth - 1|| j === start || j === endHeight - 1) {\n                    borders.push(this.#container.getTile(\n                        i + this.x,\n                        j + this.y\n                    ));\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(\n                    i + this.x,\n                    j + this.y\n                ));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return x <= this.right && x >= this.left && y <= this.bottom && y >= this.top;\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n};\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ]\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                { x: padding - 1, y: settings.height - padding - exitOffset - 1 }\n            ]\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 }\n            ]\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 }\n            ]\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: (settings.width - (padding * 2)) + 2,\n            height: (settings.height - (padding * 2)) + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport { getThemePopulator, TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) => t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) => t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) => t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter((t) => !(\n                isTopLeftCorner(t, room)\n                || isBottomLeftCorner(t, room)\n                || isBottomRightCorner(t, room)\n                || isTopRightCorner(t, room)\n            ));\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                const walkway = game.ecs.createPrefab('DirtPathway');\n\n                walkway.position.setPos(segment.x, segment.y);\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) => n.isType(TILE_TYPE_WALL));\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return .1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                }\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(`Failed to generate ScatteredScheme in ${maxAttempts} attempts`);\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() { return this.y - roomPadding; },\n                get bottom() { return this.y + this.height + roomPadding; },\n                get left() { return this.x - roomPadding; },\n                get right() { return this.x + this.width + roomPadding; },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(box.left, box.top, box.right, box.bottom)\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (i === 0 || i === box.width - 1 || j === 0 || j === box.height - 1) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            console.warn('COULD NOT GET MINIMUM COUNT');\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 2;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - 1 - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}