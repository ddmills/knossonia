{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/generators/mapping.js","webpack://knossonia/./src/level/generators/UniformGenerator.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/level/TileGenerator.js","webpack://knossonia/./src/level/generators/SquareGenerator.js","webpack://knossonia/./src/level/generators/DenseCastleGenerator.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","mouse","MouseManager","clock","ClockManager","camera","CameraManager","renderer","Renderer","state","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","console","ConsoleManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","Date","now","boundLoop","loop","bind","requestAnimationFrame","dt","update","render","t","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","setSize","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","clear","clearArea","xPx","yPx","Math","trunc","Manager","defaultFg","createElement","getContext","ctx","textBaseline","widthPx","heightPx","style","cssText","pixelX","pixelY","colorize","fillStyle","fillRect","clearRect","drawImage","color","tileImage","getElementById","fontImage","SpriteSheet","image","cp437","row","glyph","j","Sprite","spriteCountX","spriteCountY","isBlack","r","g","b","sheet","sourceX","sourceY","spriteWidth","spriteHeight","primaryCss","secondaryCss","primary","colorParse","values","secondary","key","alpha","pixels","getImageData","data","cvs","putImageData","cstr","m","space","parts","names","slice","test","size","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","value","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","get","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","constructor","component","enumerable","set","v","id","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","camelcase","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","hasOwnProperty","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","Entity","refs","Set","json","entities","list","entityData","createOrGetById","d","any","none","hasAny","c","hasAll","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","IsDestroying","pass","LiquidContainer","destroyOnEmpty","isEmpty","add","quantity","isPourable","volume","warn","createPrefab","liquidContainer","contents","position","setPos","_checkDestroyOnEmpty","pos","interactor","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","LIQUID_WATER","LIQUID_HONEY","colorDesc","onDrink","log","fireEvent","direction","glyphs","fg1s","speed","lifetime","Door","isOpen","ch","remove","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","content","result","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","indexOf","idx","splice","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","blocker","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","bresenhamLineExclusive","pop","corpse","moniker","range","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","damage","shouldAppear","getMessage","Dead","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","FAILURE","removeGoal","INVALID","goal","goalsToDestroy","isSelf","isSiblingGoal","originalIntent","SUCCESS","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","BoredGoalType","GoalType","detectHostiles","handled","killGoal","KillSomethingGoalType","brain","pushGoal","boredomGoal","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","random","disp","door","Logger","Position","getPosition","setPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","getEntitiesAt","some","nonHostile","Faction","areEntitiesHostile","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","Wandering","floor","Directions","Explorable","Explored","Health","max","Eyes","getNeighborEntities","flat","neighbor","Particle","arr","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","not","sorted","sort","incrementTick","isPlayer","renderable","isInView","screen","worldToScreen","background","moveCommand","turn","subTurn","padEnd","str","ceil","hp","health","sector","sectorTxt","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","hostileEntities","melee","doorEntity","move","lootable","item","pushScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","items","pointerUp","pointerDown","selectItem","ypos","resetInteractions","interaction","left","top","xpos","isSelected","NOOP","enable","disable","cursorColor","types","segment","drawCursor","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","entityId","serialized","isTurn","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","keys","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","tick","isEnabled","getEntities","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","loadSectorPositionData","isOutOfBounds","x2","y2","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","entries","coord","fov","FOV","isSquareVisible","compute","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","min","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_data","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","parsed","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","meleeCommand","emitter","particleEmitter","isExpired","targetCount","factionA","factionB","entityA","entityB","isHostile","onWindowResize","innerWidth","innerHeight","resizeDisplay","topLeftWorldX","topLeftWorldY","worldX","worldY","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","north","connectionsNorth","east","connectionsWest","west","south","connections","getConnections","generator","getGenerator","composition","theme","populate","chest","stone","vial","wanderer","goblin","ForestTheme","isType","TILE_TYPE_WALL","TILE_TYPE_FLOOR","TILE_TYPE_OUT_OF_BOUNDS","TileData","createTileData","UniformGenerator","SquareGenerator","CastleTheme","DenseCastleGenerator","settings","TileContainer","MapGenerator","digPercentage","setTileType","digConnections","TileGenerator","tileTypeMatches","isConnected","defaultType","Grid","getTile","defaultValueGenerator","curId","createNodeId","splitNodeVertical","node","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","nodes","graph","pickRandom","randomInt","sibling","doorCandidates","hasSib","msgs","isDestroying","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","current","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.93a7c62b970ec45421df.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.camera = new CameraManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        this.hungerSystem.update(dt);\n        this.actionSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.meleeSystem.update(dt);\n        this.deathSystem.update(dt);\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.destroySystem.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    #tileWidth = 16;\n    #tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: this.game.camera.width,\n            height: this.game.camera.height,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height) {\n        this.display.setSize(width, height);\n    }\n\n    draw(x, y, char, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            (this.game.camera.width - len) / 2,\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","export default class Display {\n    #ctx;\n    #canvas;\n    #width;\n    #height;\n    #tileWidth;\n    #tileHeight;\n    #defaultFg;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get canvas() {\n        return this.#canvas;\n    }\n\n    get ctx() {\n        return this.#ctx;\n    }\n\n    constructor({ width, height, tileWidth, tileHeight, defaultFg }) {\n        this.#tileWidth = tileWidth;\n        this.#tileHeight = tileHeight;\n        this.#defaultFg = defaultFg || '#fff';\n\n        this.#canvas = document.createElement('canvas');\n        this.#ctx = this.canvas.getContext('2d');\n\n        this.ctx.font = `${this.#tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height) {\n        this.#width = width;\n        this.#height = height;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        const pixelX = x * this.tileWidth;\n        const pixelY = y * this.tileHeight;\n\n        const img = sprite.colorize(fg1, fg2);\n\n        if (bg) {\n            this.ctx.fillStyle = bg;\n            this.ctx.fillRect(pixelX, pixelY, sprite.width, sprite.height);\n        } else {\n            this.ctx.clearRect(pixelX, pixelY, this.tileWidth, this.tileHeight);\n        }\n\n        this.ctx.drawImage(img, pixelX, pixelY);\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.clearRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n    }\n\n    fillTile(x, y, color) {\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n    }\n\n    clearTile(x, y) {\n        this.ctx.clearRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth,\n            this.tileHeight\n        );\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #image = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get image() {\n        return this.#image;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    get spriteWidth() {\n        return this.image.width / this.spriteCountX;\n    }\n\n    get spriteHeight() {\n        return this.image.height / this.spriteCountY;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.#image = image;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import colorParse from 'color-parse';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    #cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = colorParse(primaryCss).values;\n        const secondary = colorParse(secondaryCss).values;\n\n        const key = `${primary[0]},${primary[1]},${primary[2]},${primary.alpha}-${secondary[0]},${secondary[1]},${secondary[2]},${secondary.alpha}`;\n\n        if (key in this.#cache) {\n            const data = this.#cache[key];\n\n            return data;\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary.alpha;\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary.alpha;\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this.#cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\r\n                entity\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    #entity = null;\n    #ecs = null;\n    #props = {};\n    #isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get entity() {\n        return this.#entity;\n    }\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this.#props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.#ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this.#props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.#entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.#entity;\n\n            this.#entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this.#isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this.#props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelcase(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this.#props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    #id = null;\n    #components = {};\n    #ecs = null;\n    #isDestroyed = false;\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get components() {\n        return this.#components;\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.#ecs = ecs;\n        this.#id = id || ecs.generateId();\n        Object.defineProperty(this, 'id', {\n            value: this.#id,\n            enumerable: true,\n            writable: false,\n        });\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this.#isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import Entity from '../Entity';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class EntityRegistry {\r\n    #entities = new Map();\r\n    #ecs = null;\r\n    #refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this.#entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this.#entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this.#entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this.#ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this.#ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this.#entities.delete(entity.id);\r\n        this.#ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this.#refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this.#refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this.#refs.has(entityId)) {\r\n            this.#refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this.#refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this.#refs.has(entityId)) {\r\n            this.#refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities ? entities : this.#entities;\r\n\r\n        list.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = camelcase(key, { pascalCase: true });\r\n            const definition = this.#ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #onEntityAddedCallbacks = [];\n    #onEntityRemovedCallbacks = [];\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this.#onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this.#onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this.#cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this.#cache.add(entity);\n                this.#onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this.#cache.delete(entity);\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this.#cache.delete(entity);\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity(id) {\r\n        return this.entities.create(id);\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize(entities) {\r\n        return {\r\n            entities: this.entities.serialize(entities),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        contents: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.contents];\n    }\n\n    get isEmpty() {\n        return isNaN(this.contents) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.contents].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        const pool = this.ecs.createPrefab('Pool', {\n            liquidContainer: {\n                contents: this.contents,\n                volume: quantity,\n            },\n        });\n        pool.position.setPos(x, y);\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.contents, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.remove(Blocker);\n        this.entity.remove(Shadowcaster);\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        this.closeDoor();\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        this.openDoor();\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.remove(IsInventoried);\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.pushScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    if (lineValid && body) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < 0 && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\n\nexport class Body extends Component {\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const corpse = this.ecs.createPrefab('Corpse');\n        const pos = this.entity.position.getPos();\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n\n        corpse.position.setPos(pos.x, pos.y);\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        const shards = this.ecs.createPrefab('GlassShard', {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        shards.position.setPos(x, y);\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.contents,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )} and dies`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } contents!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {}\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['-'],\n        });\n\n        evt.data.target.fireEvent('damage', {\n            source: this.entity,\n            damage,\n        });\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { Blocker } from './Blocker';\nimport { Faction } from './Faction';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = window.game.map.getEntitiesAt(\n            targetX,\n            targetY\n        );\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.has(Faction) &&\n                !window.game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        this.entity.fireEvent('energy-consumed', 750);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Faction extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n} from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.damage.value;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: this.entity,\n                source: evt.data.source,\n                damage: evt.data.damage,\n            });\n\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: this.entity,\n            source: evt.data.source,\n            damage: evt.data.damage,\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { Faction } from './Faction';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = window.game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = window.game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(Faction))\n            .find((neighbor) => {\n                return window.game.factions.areEntitiesHostile(\n                    this.entity,\n                    neighbor\n                );\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { Actor, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import {\r\n    IsInventoried,\r\n    Explored,\r\n    Glyph,\r\n    Position,\r\n    IsVisible,\r\n    IsDestroying,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class RenderSystem extends System {\r\n    #query = null;\r\n    #explored = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Glyph, Position, IsVisible],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n        this.#explored = game.ecs.createQuery({\r\n            all: [Glyph, Position, Explored],\r\n            none: [IsInventoried, IsVisible, IsDestroying],\r\n        });\r\n    }\r\n\r\n    render(dt) {\r\n        this.game.renderer.clear();\r\n\r\n        this.#explored.get().forEach((renderable) => {\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                return;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                '#283131',\r\n                '#283131'\r\n            );\r\n        });\r\n\r\n        this.#query.get().forEach((renderable) => {\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                return;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                renderable.glyph.primary,\r\n                renderable.glyph.secondary,\r\n                renderable.glyph.background\r\n            );\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        this.render();\r\n    }\r\n}\r\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n\n        const sector = this.game.world.sector;\n        const sectorTxt = `sector ${sector.id} (${sector.x}, ${sector.y})`;\n\n        this.game.renderer.drawText(0, 0, sectorTxt, '#172e2e');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const item = entities.find((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n            return evt.data.interactions.length > 0;\n        });\n\n        if (item) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: item,\n            });\n        }\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(1, 4, `move       [w, a, d, x]`);\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class InventoryScreen extends Screen {\n    #selectedIdx = 0;\n    #accessible;\n    #accessor;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n        const interactable = items[idx];\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n\n        if (items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        items.forEach((item, i) => {\n            const isSelected = i === idx;\n            const ypos = i + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 16;\n    #selectedIdx = 0;\n    #interactions = [];\n    #interactable;\n    #interactor;\n\n    get left() {\n        return (this.game.camera.width - this.#width) / 2;\n    }\n\n    get top() {\n        return (this.game.camera.height - this.#height) / 2;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.resetInteractions();\n    }\n\n    resetInteractions() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.#interactions = evt.data.interactions;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const idx = this.#selectedIdx % this.#interactions.length;\n        const interaction = this.#interactions[idx];\n\n        if (interaction) {\n            this.#interactable.fireEvent(interaction.evt, {\n                interactor: this.#interactor,\n            });\n\n            if (this.#interactable.isDestroyed) {\n                this.game.screens.popScreen();\n\n                return;\n            }\n\n            this.resetInteractions();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderSystem.update(dt);\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width,\n            this.#height\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const idx = this.#selectedIdx % this.#interactions.length;\n\n        if (this.#interactions.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        const xpos = this.left + 2;\n\n        this.#interactions.forEach((interaction, i) => {\n            const isSelected = i === idx;\n            const ypos = i + this.top + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, '-');\n            }\n\n            this.game.renderer.drawText(xpos + 1, ypos, interaction.name);\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport {\n    bresenhamLine,\n    bresenhamLineExclusive,\n} from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { game } from '../../Game';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.remove(MeleeCommand);\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #idHash = new Map();\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    constructor(width, height) {\n        this.#width = width;\n        this.#height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this.#idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this.#data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this.#width = data.width;\n        this.#height = data.height;\n        this.#idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this.#data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this.#idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this.#idHash.set(id, { x, y });\n        this.#data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this.#data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this.#idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this.#idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this.#idHash.delete(id);\n        this.#data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    IsDestroying,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n            not: [IsDestroying],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.remove(IsVisible));\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 4, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { Faction } from '../ecs/components';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const factionA = entityA.get(Faction);\n        const factionB = entityB.get(Faction);\n\n        if (factionA && factionB) {\n            return this.isHostile(factionA.name, factionB.name);\n        }\n\n        return false;\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.computeSize();\n    }\n\n    get topLeftWorldX() {\n        return Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.game.map.width - this.width\n            )\n        );\n    }\n\n    get topLeftWorldY() {\n        return Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.game.map.height - this.height\n            )\n        );\n    }\n\n    computeSize() {\n        this.width = Math.floor(window.innerWidth / 32) - 2;\n        this.height = Math.floor(window.innerHeight / 32) - 2;\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height);\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const fps = Math.trunc(1000 / dt);\n        const display = `${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.camera.width - textWidth;\n\n        this.game.renderer.drawText(\n            x,\n            this.game.camera.height - 1,\n            display,\n            '#172e2e'\n        );\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(0);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { BoredGoalType } from '../ai/GoalTypes';\nimport { Blocker, Door } from '../ecs/components';\nimport { LIQUID_BLOOD, LIQUID_HONEY, LIQUID_WATER } from '../enums/LiquidTypes';\nimport ForestTheme from '../level/themes/ForestTheme';\nimport { getGenerator } from '../level/generators/mapping';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    composition = {};\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getConnections() {\n        return {\n            north: this.connectionsNorth,\n            east: this.eastSector.connectionsWest,\n            west: this.connectionsWest,\n            south: this.southSector.connectionsNorth,\n        };\n    }\n\n    generate(game) {\n        const connections = this.getConnections();\n\n        const generator = getGenerator(this.composition.type);\n\n        const tiles = generator.generator.generate({\n            width: game.map.width,\n            height: game.map.height,\n            connections,\n        });\n\n        generator.theme.populate(tiles);\n\n        for (let i = 0; i < 8; i++) {\n            const position = game.map.getRandomEmptyPosition();\n            const stone = game.ecs.createPrefab('Stone');\n\n            stone.position.setPos(position.x, position.y);\n        }\n\n        for (let i = 0; i < 3; i++) {\n            const position = game.map.getRandomEmptyPosition();\n            const chest = game.ecs.createPrefab('Chest');\n\n            const stone = game.ecs.createPrefab('Stone');\n            const vial = game.ecs.createPrefab('Vial');\n            vial.liquidContainer.contents = LIQUID_HONEY;\n\n            chest.position.setPos(position.x, position.y);\n            chest.inventory.addLoot(vial);\n            chest.inventory.addLoot(stone);\n        }\n\n        for (let i = 0; i < 3; i++) {\n            const position = game.map.getRandomEmptyPosition();\n            const vial = game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_BLOOD;\n            vial.position.setPos(position.x, position.y);\n        }\n\n        for (let i = 0; i < 3; i++) {\n            const position = game.map.getRandomEmptyPosition();\n            const vial = game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_WATER;\n            vial.position.setPos(position.x, position.y);\n        }\n\n        for (let i = 0; i < 3; i++) {\n            const position = game.map.getRandomEmptyPosition();\n            const vial = game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_HONEY;\n            vial.position.setPos(position.x, position.y);\n        }\n\n        for (let i = 0; i < 6; i++) {\n            const position = game.map.getRandomEmptyPosition();\n            const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n            wanderer.position.setPos(position.x, position.y);\n            wanderer.brain.pushGoal(BoredGoalType.create());\n        }\n\n        for (let i = 0; i < 5; i++) {\n            const position = game.map.getRandomEmptyPosition();\n            const goblin = game.ecs.createPrefab('Goblin');\n\n            goblin.position.setPos(position.x, position.y);\n            goblin.brain.pushGoal(BoredGoalType.create());\n        }\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.composition = data.composition;\n\n        return sector;\n    }\n}\n","import { game } from '../../core/Game';\nimport { TILE_TYPE_WALL } from '../TileData';\n\nexport default class ForestTheme {\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                const type = Math.random() < 0.5 ? 'PineTree' : 'SmallPineTree';\n                const tree = game.ecs.createPrefab(type);\n\n                tree.position.setPos(tile.x, tile.y);\n            }\n        });\n    }\n}\n","export const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    roomId = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import { UniformGenerator } from './UniformGenerator';\nimport { SquareGenerator } from './SquareGenerator';\nimport { DenseCastleGenerator } from './DenseCastleGenerator';\nimport CastleTheme from '../themes/CastleTheme';\nimport ForestTheme from '../themes/ForestTheme';\n\nconst mapping = {\n    ['FOREST']: {\n        generator: UniformGenerator,\n        theme: ForestTheme,\n    },\n    ['SQUARE']: {\n        generator: SquareGenerator,\n        theme: CastleTheme,\n    },\n    ['STRONGHOLD']: {\n        generator: DenseCastleGenerator,\n        theme: CastleTheme,\n    },\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { Map as MapGenerator } from 'rot-js';\nimport { digConnections } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport TileGenerator from '../TileGenerator';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\n\nexport class UniformGenerator extends TileGenerator {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const connections = settings.connections;\n\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        digConnections(tiles, connections);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_FLOOR } from './TileData';\n\nexport const digConnections = (tiles, connections) => {\n    const northPaths = connections.north.map((north) => {\n        // dig south from top until hit empty\n        for (let i = 0; i < tiles.height; i++) {\n            if (tiles.tileTypeMatches(12, i, TILE_TYPE_FLOOR)) {\n                return true;\n            } else {\n                tiles.setTileType(12, i, TILE_TYPE_FLOOR);\n            }\n        }\n\n        return false;\n    });\n\n    if (northPaths.some((isConnected) => isConnected === false)) {\n        console.log('CONNECTION north FAILED! regenerate');\n    }\n\n    const southPaths = connections.south.map((south) => {\n        for (let i = tiles.height - 1; i > 0; i--) {\n            if (tiles.tileTypeMatches(12, i, TILE_TYPE_FLOOR)) {\n                return true;\n            } else {\n                tiles.setTileType(12, i, TILE_TYPE_FLOOR);\n            }\n        }\n\n        return false;\n    });\n\n    if (southPaths.some((isConnected) => isConnected === false)) {\n        console.log('CONNECTION south FAILED! regenerate');\n    }\n\n    const westPaths = connections.west.map((west) => {\n        // dig east from left until hit empty\n        for (let i = 0; i < tiles.width; i++) {\n            if (tiles.tileTypeMatches(i, 12, TILE_TYPE_FLOOR)) {\n                return true;\n            } else {\n                tiles.setTileType(i, 12, TILE_TYPE_FLOOR);\n            }\n        }\n\n        return false;\n    });\n\n    if (westPaths.some((isConnected) => isConnected === false)) {\n        console.log('CONNECTION west FAILED! regenerate');\n    }\n\n    const eastPaths = connections.east.map((east) => {\n        // dig west from right until hit empty\n        for (let i = tiles.width - 1; i > 0; i--) {\n            if (tiles.tileTypeMatches(i, 12, TILE_TYPE_FLOOR)) {\n                return true;\n            } else {\n                tiles.setTileType(i, 12, TILE_TYPE_FLOOR);\n            }\n        }\n\n        return false;\n    });\n\n    if (eastPaths.some((isConnected) => isConnected === false)) {\n        console.log('CONNECTION east FAILED! regenerate');\n    }\n};\n","import Grid from '../utils/Grid';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n        });\n    }\n}\n","export default class Grid {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    get data() {\n        return this.#data;\n    }\n\n    constructor(width, height, defaultValueGenerator) {\n        this.#width = width;\n        this.#height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.#data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.#data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.defaultValueGenerator();\n        }\n\n        return this.#data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","export default class TileGenerator {\n    static generate() {}\n\n    static populate() {}\n}\n","import { digConnections } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport TileGenerator from '../TileGenerator';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\n\nexport class SquareGenerator extends TileGenerator {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const connections = settings.connections || {\n            north: [],\n            south: [],\n            east: [],\n            west: [],\n        };\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        digConnections(tiles, connections);\n\n        return tiles;\n    }\n}\n","import { digConnections } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport TileGenerator from '../TileGenerator';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { SquareGenerator } from './SquareGenerator';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleGenerator extends TileGenerator {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const connections = settings.connections;\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        digConnections(tiles, connections);\n\n        return tiles;\n    }\n}\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { game } from '../../core/Game';\nimport { TILE_TYPE_WALL } from '../TileData';\n\nexport default class CastleTheme {\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                const wall = game.ecs.createPrefab('Wall');\n\n                wall.position.setPos(tile.x, tile.y);\n            }\n        });\n    }\n}\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 2;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - 1 - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}