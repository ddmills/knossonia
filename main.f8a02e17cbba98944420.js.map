{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./src/utils/ColorParser.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/util/string-util.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/data/Spawnables.js","webpack://knossonia/./src/data/Spawner.js","webpack://knossonia/./src/data/spawnables/SpawnableVialHoney.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/data/spawnables/SpawnableVialBlood.js","webpack://knossonia/./src/data/spawnables/SpawnableVialWater.js","webpack://knossonia/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/data/spawnables/SpawnablePineTree.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://knossonia/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/FactionMember.js","webpack://knossonia/./src/enums/Factions.js","webpack://knossonia/./src/data/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/ecs/components/LootDropper.js","webpack://knossonia/./src/data/tables/LootSpawn.js","webpack://knossonia/./src/utils/WeightedTable.js","webpack://knossonia/./src/data/tables/loot/LootTableGoblin.js","webpack://knossonia/./src/data/tables/loot/LootTableForest.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/utils/AStar.js","webpack://knossonia/./src/utils/diagonalDistance.js","webpack://knossonia/./src/utils/ManhattanDistance.js","webpack://knossonia/./src/utils/PriorityQueue.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/generators/generators.js","webpack://knossonia/./src/level/generators/ForestCabinsGenerator.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/themes/TileTheme.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/level/themes/TileThemePopulator.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/themes/CabinTheme.js","webpack://knossonia/./src/level/schemes/UniformScheme.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/level/RoomData.js","webpack://knossonia/./node_modules/nanoid/index.prod.js","webpack://knossonia/./node_modules/nanoid/url-alphabet/index.js","webpack://knossonia/./src/level/TileScheme.js","webpack://knossonia/./src/level/generators/SectorGenerator.js","webpack://knossonia/./src/level/generators/ForestGenerator.js","webpack://knossonia/./src/level/generators/ForestStrongholdGenerator.js","webpack://knossonia/./src/level/schemes/DenseCastleScheme.js","webpack://knossonia/./src/level/generators/ForestTownGenerator.js","webpack://knossonia/./src/level/schemes/ScatteredScheme.js","webpack://knossonia/./src/level/generators/GeneratorUtils.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","mouse","MouseManager","clock","ClockManager","camera","CameraManager","renderer","Renderer","state","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","console","ConsoleManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","Date","now","boundLoop","loop","bind","requestAnimationFrame","dt","update","render","t","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","setSize","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","Math","ceil","clear","clearArea","xPx","yPx","trunc","Manager","cells","Grid","createElement","ctx","getContext","alpha","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","j","clearTile","data","filter","c","cell","pixelX","pixelY","drawImage","defaultValueGenerator","idx","size","coord","value","isOutOfBounds","warn","get","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","key","_cache","hasOwnProperty","pixels","getImageData","cvs","putImageData","cache","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","slice","test","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","camelCache","camelString","camelcaseSlow","pascalCache","constructor","component","enumerable","v","id","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","_definitions","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","_ecs","components","PrefabComponent","PrefabRegistry","_prefabs","nameOrClassOrPrefab","urlAlphabet","getAccessor","hasType","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","_entities","Entity","refs","_refs","Set","json","entities","list","entityData","createOrGetById","pascalString","d","any","none","hasAny","_filter","some","hasAll","every","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","IsDestroying","pass","LiquidContainer","destroyOnEmpty","isEmpty","add","quantity","isPourable","volume","spawn","SPWN_POOL_LIQUID","contents","_checkDestroyOnEmpty","pos","interactor","position","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_GOBLIN_GRUNT","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","GoblinGrunt","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","colorDesc","onDrink","log","fireEvent","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","GoalType","goal","detectHostiles","handled","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","Dead","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","pickRandom","arr","floor","random","randomInt","min","max","wanderer","Door","isOpen","ch","remove","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","content","result","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","indexOf","splice","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","blocker","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","bresenhamLineExclusive","pop","corpse","corpseSpawnable","moniker","range","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","damage","shouldAppear","getMessage","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","Position","getPosition","setPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","nonHostile","factionMember","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","Wandering","Directions","Explorable","Explored","Health","Eyes","flat","neighbor","Particle","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","table","WeightedTable","pick","spawnable","rows","weight","sum","currentW","maxWeight","reduce","cur","goblins","forest","not","sorted","sort","incrementTick","isPlayer","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","padEnd","str","hp","health","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","getEntitiesAt","hostileEntities","areEntitiesHostile","melee","doorEntity","move","lootable","item","pushScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","items","pointerUp","pointerDown","selectItem","ypos","resetInteractions","interaction","left","top","xpos","isSelected","NOOP","enable","disable","cursorColor","types","segment","color","getEntities","faction","relation","getEntityRelation","getDisplay","drawCursor","getNeighbors","defaultSettings","cost","allowDiagonals","computeAStar","settings","heuristic","diagonalDistance","manhattanDistance","open","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","success","path","costs","Infinity","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","createItem","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","createPrefab","entityId","serialized","isTurn","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","keys","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","tick","isEnabled","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","sector","loadSectorPositionData","x2","y2","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","_width","_height","_data","_idHash","entries","fov","FOV","isSquareVisible","compute","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","meleeCommand","emitter","particleEmitter","isExpired","targetCount","setRelation","factionA","factionB","idA","idB","_relationKey","relations","entityA","entityB","memberA","memberB","getRelation","onWindowResize","innerWidth","innerHeight","resizeDisplay","topLeftWorldX","topLeftWorldY","worldX","worldY","sectorTxt","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","exits","connectionsNorth","connectionsWest","getExits","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","SectorGenerator","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","populateTile","trySpawn","TileThemePopulator","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileContainer","MapGenerator","digPercentage","getRooms","createRoom","getDoors","TileScheme","defaultType","getTile","RoomData","addRoom","cloneTo","setTileTheme","includes","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","c1","c2","c3","c4","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","populateRoom","setTheme","exitOffset","padding","castle","DenseCastleScheme","combineOther","curId","createNodeId","splitNodeVertical","node","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","intersects","msgs","isDestroying","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,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","file":"main.f8a02e17cbba98944420.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.camera = new CameraManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        this.clock.update(dt);\n        this.actionSystem.update(dt);\n        this.hungerSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.meleeSystem.update(dt);\n        this.deathSystem.update(dt);\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.destroySystem.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    #tileWidth = 16;\n    #tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: this.game.camera.width,\n            height: this.game.camera.height,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height) {\n        this.display.setSize(width, height);\n    }\n\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                this.clearTile(x + i, y + j);\n            }\n        }\n    }\n\n    clearTile(x, y) {\n        this.cells.set(x * 2, y, null);\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                this.ctx.drawImage(cell.img, pixelX, pixelY);\n            });\n    }\n}\n","export default class Grid {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    get data() {\n        return this.#data;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this.#width = width;\n        this.#height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.#data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.#data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.#data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this.#width = width;\n        this.#height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = new Map();\n\nexport const camelString = (value) => {\n    if (!camelCache.has(value)) {\n        camelCache.set(value, camelcaseSlow(value));\n    }\n\n    return camelCache.get(value);\n};\n\nconst pascalCache = new Map();\n\nexport const pascalString = (value) => {\n    if (!pascalCache.has(value)) {\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\n    }\n\n    return pascalCache.get(value);\n};\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\n                entity\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import { camelString } from './util/string-util';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    entity = null;\n    ecs = null;\n    _props = {};\n    _isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this._props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this._props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.entity;\n\n            this.entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this._isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this._props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelString(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this._props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport { camelString } from '../util/string-util';\n\nexport default class ComponentRegistry {\n    _definitions = new Map();\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    register(component) {\n        this._definitions.set(component.name, component);\n        camelString(component.name); // prime camelcase cache\n    }\n\n    getAccessor(type) {\n        return camelString(type);\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this._definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this._ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    _prefabs = {};\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this._ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this._ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this._ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this._prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this._ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    _prevented = false;\n    _handled = false;\n\n    get prevented() {\n        return this._prevented;\n    }\n\n    get handled() {\n        return this._handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this._handled = true;\n        this._prevented = true;\n    }\n\n    prevent() {\n        this._prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    id = null;\n    components = {};\n    ecs = null;\n    _isDestroyed = false;\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.ecs = ecs;\n        this.id = id || ecs.generateId();\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this._isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { pascalString } from '../util/string-util';\nimport Entity from '../Entity';\n\nexport default class EntityRegistry {\n    _entities = new Map();\n    _ecs = null;\n    _refs = new Map();\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    get all() {\n        return this._entities.values();\n    }\n\n    register(entity) {\n        this._entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this._entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this._ecs, id);\n\n        this.register(entity);\n\n        this._ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this._entities.delete(entity.id);\n        this._ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this._refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this._refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this._refs.has(entityId)) {\n            this._refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this._refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this._refs.has(entityId)) {\n            this._refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities ? entities : this._entities;\n\n        list.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = pascalString(key);\n            const definition = this._ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    _ecs;\n    _filter;\n    _onEntityAddedCallbacks = [];\n    _onEntityRemovedCallbacks = [];\n    _cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this._ecs = ecs;\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this._filter.any.length\n            ? this._filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this._filter.all.every((c) => entity.has(c));\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this._onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this._cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this._cache.add(entity);\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this._cache.clear();\n\n        for (const entity of this._ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this._cache;\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    _ecs;\n    _queries = [];\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this._ecs, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this._queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this._queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity(id) {\n        return this.entities.create(id);\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize(entities) {\n        return {\n            entities: this.entities.serialize(entities),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        contents: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.contents];\n    }\n\n    get isEmpty() {\n        return isNaN(this.contents) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.contents].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            contents: this.contents,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.contents, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.contents = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.contents = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.contents = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            contents: data.contents,\n            volume: data.volume,\n        },\n    });\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.remove(Blocker);\n        this.entity.remove(Shadowcaster);\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        this.closeDoor();\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        this.openDoor();\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.remove(IsInventoried);\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.pushScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    if (lineValid && body) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < 0 && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.contents,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )} and dies`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } contents!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['-'],\n        });\n\n        evt.data.target.fireEvent('damage', {\n            source: this.entity,\n            damage,\n        });\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { Blocker } from './Blocker';\nimport { FactionMember } from './FactionMember';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        this.entity.fireEvent('energy-consumed', 750);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n} from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.damage.value;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: this.entity,\n                source: evt.data.source,\n                damage: evt.data.damage,\n            });\n\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: this.entity,\n            source: evt.data.source,\n            damage: evt.data.damage,\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { FactionMember } from './FactionMember';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(FactionMember))\n            .find((neighbor) => {\n                return game.factions.areEntitiesHostile(this.entity, neighbor);\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n\n            return;\n        }\n\n        // take maximum weight\n        const maxWeight = Math.max(existing.weight, weight);\n\n        existing.weight = maxWeight;\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_BLOOD } from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { Actor, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import {\n    IsInventoried,\n    Explored,\n    Glyph,\n    Position,\n    IsVisible,\n    IsDestroying,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, IsVisible],\n            none: [IsInventoried, IsDestroying],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [IsInventoried, IsVisible, IsDestroying],\n        });\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        const explored = Array.from(this.#explored.get());\n\n        for (let i = 0; i < explored.length; i++) {\n            const renderable = explored[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                '#2c3538',\n                '#2c3538'\n            );\n        }\n\n        const renderables = Array.from(this.#query.get());\n\n        for (let i = 0; i < renderables.length; i++) {\n            const renderable = renderables[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const item = entities.find((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n            return evt.data.interactions.length > 0;\n        });\n\n        if (item) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: item,\n            });\n        }\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(\n            1,\n            4,\n            `move       [q, w, e, a, d, z, x, c]`\n        );\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class InventoryScreen extends Screen {\n    #selectedIdx = 0;\n    #accessible;\n    #accessor;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n        const interactable = items[idx];\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n\n        if (items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        items.forEach((item, i) => {\n            const isSelected = i === idx;\n            const ypos = i + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 16;\n    #selectedIdx = 0;\n    #interactions = [];\n    #interactable;\n    #interactor;\n\n    get left() {\n        return (this.game.camera.width - this.#width) / 2;\n    }\n\n    get top() {\n        return (this.game.camera.height - this.#height) / 2;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.resetInteractions();\n    }\n\n    resetInteractions() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.#interactions = evt.data.interactions;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const idx = this.#selectedIdx % this.#interactions.length;\n        const interaction = this.#interactions[idx];\n\n        if (interaction) {\n            this.#interactable.fireEvent(interaction.evt, {\n                interactor: this.#interactor,\n            });\n\n            if (this.#interactable.isDestroyed) {\n                this.game.screens.popScreen();\n\n                return;\n            }\n\n            this.resetInteractions();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderSystem.update(dt);\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width,\n            this.#height\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const idx = this.#selectedIdx % this.#interactions.length;\n\n        if (this.#interactions.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        const xpos = this.left + 2;\n\n        this.#interactions.forEach((interaction, i) => {\n            const isSelected = i === idx;\n            const ypos = i + this.top + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, '-');\n            }\n\n            this.game.renderer.drawText(xpos + 1, ypos, interaction.name);\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { game } from '../../Game';\nimport { computeAStar } from '../../../utils/AStar';\nimport { Blocker, FactionMember } from '../../../ecs/components';\nimport { diagonalDistance } from '../../../utils/diagonalDistance';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        const target = this.game.cursor\n            .getEntities()\n            .filter((e) => e.has(FactionMember))\n            .pop();\n\n        const player = this.game.player.entity;\n\n        if (target) {\n            const faction = target.factionMember.faction;\n            const relation = this.game.factions.getEntityRelation(\n                player,\n                target\n            );\n\n            let disp = this.game.factions.getDisplay(relation);\n\n            this.game.renderer.drawTextCenter(\n                1,\n                `${faction.display} Faction [${disp}]`\n            );\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.remove(MeleeCommand);\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    IsDestroying,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n            not: [IsDestroying],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.remove(IsVisible));\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 5, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 120);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.computeSize();\n    }\n\n    get topLeftWorldX() {\n        return Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.game.map.width - this.width\n            )\n        );\n    }\n\n    get topLeftWorldY() {\n        return Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.game.map.height - this.height\n            )\n        );\n    }\n\n    computeSize() {\n        this.width = Math.floor(window.innerWidth / 32) - 2;\n        this.height = Math.floor(window.innerHeight / 32) - 2;\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height);\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const sector = this.game.world.sector;\n        let sectorTxt = '';\n\n        if (sector) {\n            sectorTxt = `(${sector.x}, ${sector.y})`;\n        }\n\n        const fps = Math.trunc(1000 / dt);\n        const display = `${sectorTxt} ${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.camera.width - textWidth;\n\n        this.game.renderer.drawText(\n            x,\n            this.game.camera.height - 1,\n            display,\n            '#172e2e'\n        );\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(4);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR)) {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n        });\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            console.warn('COULD NOT GET MINIMUM COUNT');\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 2;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - 1 - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}