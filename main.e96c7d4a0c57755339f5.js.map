{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/MapLayer.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Visible.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/core/ScreenCaptureManager.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","clock","ClockManager","renderer","Renderer","state","GameStateManager","mouse","MouseManager","MapManager","factions","FactionManager","player","PlayerManager","screens","ScreenManager","commands","CommandManager","input","InputController","screenCapture","ScreenCaptureManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","Date","now","newGame","requestAnimationFrame","loop","bind","t","dt","update","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","clear","xPx","yPx","Math","trunc","Manager","data","defaultFg","createElement","getContext","widthPx","heightPx","style","cssText","ctx","textBaseline","pixelX","pixelY","colorize","fillStyle","fillRect","clearRect","drawImage","color","tileImage","getElementById","fontImage","SpriteSheet","image","cp437","row","glyph","j","Sprite","spriteCountX","spriteCountY","isBlack","r","g","b","sheet","sourceX","sourceY","spriteWidth","spriteHeight","primaryCss","secondaryCss","primary","colorParse","values","secondary","key","alpha","pixels","getImageData","cvs","putImageData","cstr","m","space","parts","names","slice","test","size","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","value","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","get","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","constructor","component","enumerable","set","v","id","getEntity","console","Proxy","Reflect","old","deleteProperty","proxy","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","camelcase","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","hasOwnProperty","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","Entity","refs","Set","json","entityData","createOrGetById","d","any","none","hasAny","c","hasAll","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","entities","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","Brain","peekGoal","isFinished","popGoal","currentGoal","result","takeAction","FAILURE","removeGoal","INVALID","fireEvent","handle","goal","goalsToDestroy","goals","isSelf","isSiblingGoal","originalIntent","pop","SUCCESS","Body","corpse","createPrefab","pos","position","getPos","moniker","setPos","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","warn","BoredGoalType","GoalType","detectHostiles","handled","killGoal","KillSomethingGoalType","brain","pushGoal","boredomGoal","Dead","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","random","Moniker","Logger","log","Position","getPosition","setPosition","MapLayer","idx","content","mapEntity","Glyph","background","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","lifetime","fg1s","glyphs","Legs","targetX","targetY","targetTileEntities","getEntitiesAt","some","Blocker","nonHostile","find","Faction","areEntitiesHostile","MoveCommand","direction","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","IsPlayer","Wandering","floor","Directions","Shadowcaster","Visible","amount","range","Explorable","Explored","Health","add","max","Eyes","getNeighborEntities","flat","neighbor","Particle","arr","chunks","percent","age","frame","fg2s","bgs","speed","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","sorted","sort","incrementTick","isPlayer","Engine","registerComponent","registerPrefab","renderable","render","moveCommand","turn","subTurn","padEnd","str","ceil","hp","health","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","splice","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_LOOK","INPUT_CMD_SCREEN_CAPTURE_START","KEY_F5","INPUT_CMD_SCREEN_CAPTURE_END","KEY_F6","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_M","KEY_N","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","SCREEN_MAIN_MENU","MainMenuScreen","SCREEN_ADVENTURE","AdventureScreen","SCREEN_DEATH","DeathScreen","screenType","screen","onLeave","onEnter","onUpdate","setScreen","pushDomain","computeFOV","popDomain","dir","isEnabled","move","directionDelta","playerPosition","targetPosition","targets","melee","saveGame","loadGame","toggle","disable","startCapture","endCapture","wait","onDirectionInput","Screen","drawTextCenter","getRandomEmptyPosition","isTurn","remove","turns","playerEntityId","onNewGame","onSaveGame","localStorage","setItem","JSON","stringify","parse","getItem","onLoadGame","tick","enable","getEntities","FastMap","onEntityAdded","onEntityRemoved","MapGenerator","timeLimit","roomWidth","roomHeight","roomDugPercentage","wanderer","goblin","lookup","entityId","getEntityIdsAt","x1","y1","x2","y2","abs","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","min","getUniform","u","mean","stddev","gauss","sqrt","clone","indexOf","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_data","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","ch","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","message","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","parsed","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","dx","dy","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","keys","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","item","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","FOV","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","visibility","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","sx","sy","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","door","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","x0","y0","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","fov","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","compute","vis","entries","coord","isOutOfBounds","isRecording","stream","captureStream","MediaRecorder","ondataavailable","onstop","exportVideo","Blob","stop","blob","vid","src","URL","createObjectURL","controls","download","href","textContent","isSquareVisible","setVisible","meleeCommand","emitter","particleEmitter","isExpired","targetCount","factionA","factionB","entityA","entityB","isHostile","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","current","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAC7E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC5E,CAAC,IAAK,IAAK,IAA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","file":"main.e96c7d4a0c57755339f5.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) => new Promise((resolve, reject) => {\n    if (img.complete) {\n        resolve();\n    }\n\n    img.addEventListener('load', () => {\n        resolve();\n    });\n\n    img.addEventListener('error', (error) => {\n        reject(error);\n    });\n});\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport ScreenCaptureManager from './ScreenCaptureManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS();\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.mouse = new MouseManager(this);\n        this.map = new MapManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.screens = new ScreenManager(this);\n        this.commands = new CommandManager(this);\n        this.input = new InputController(this);\n        this.screenCapture = new ScreenCaptureManager(this);\n\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.state.newGame();\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    #tileWidth = 16;\n    #tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    width = 24;\n    height = 24;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: this.width,\n            height: this.height,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    draw(x, y, char, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText((this.width - len) / 2, y, text, fg1, fg2, bg);\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    onSaveGame() {}\n    onLoadGame(data) {}\n}\n","export default class Display {\n    #ctx;\n    #canvas;\n    #canvasDirty;\n    #width;\n    #height;\n    #tileWidth;\n    #tileHeight;\n    #defaultFg;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get canvas() {\n        return this.#canvas;\n    }\n\n    get ctx() {\n        return this.#ctx;\n    }\n\n    constructor({ width, height, tileWidth, tileHeight, defaultFg }) {\n        this.#width = width;\n        this.#height = height;\n        this.#tileWidth = tileWidth;\n        this.#tileHeight = tileHeight;\n        this.#defaultFg = defaultFg || '#fff';\n\n        this.#canvas = document.createElement('canvas');\n        this.#ctx = this.canvas.getContext('2d');\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.ctx.font = `${this.#tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        const pixelX = x * this.tileWidth;\n        const pixelY = y * this.tileHeight;\n\n        const img = sprite.colorize(fg1, fg2);\n\n        if (bg) {\n            this.ctx.fillStyle = bg;\n            this.ctx.fillRect(pixelX, pixelY, sprite.width, sprite.height);\n        } else {\n            this.ctx.clearRect(pixelX, pixelY, this.tileWidth, this.tileHeight);\n        }\n\n        this.ctx.drawImage(img, pixelX, pixelY);\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    fillTile(x, y, color) {\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(x, y, this.tileWidth, this.#tileHeight);\n    }\n\n    clearTile(x, y) {\n        this.ctx.clearRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth,\n            this.tileHeight\n        );\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n}\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #image = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get image() {\n        return this.#image;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    get spriteWidth() {\n        return this.image.width / this.spriteCountX;\n    }\n\n    get spriteHeight() {\n        return this.image.height / this.spriteCountY;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.#image = image;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import colorParse from 'color-parse';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    #cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = colorParse(primaryCss).values;\n        const secondary = colorParse(secondaryCss).values;\n\n        const key = `${primary[0]},${primary[1]},${primary[2]},${primary.alpha}-${secondary[0]},${secondary[1]},${secondary[2]},${secondary.alpha}`;\n\n        if (key in this.#cache) {\n            const data = this.#cache[key];\n\n            return data;\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary.alpha;\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary.alpha;\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this.#cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\r\n    component;\r\n\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.component.ecs;\r\n    }\r\n\r\n    get descriptor() {\r\n        return {\r\n            enumerable: true,\r\n            get: () => this.get(),\r\n            set: (v) => this.set(v),\r\n        };\r\n    }\r\n\r\n    get() {\r\n        return undefined;\r\n    }\r\n\r\n    set(value) {}\r\n\r\n    serialize() {\r\n        return undefined;\r\n    }\r\n\r\n    onDestroyed() {}\r\n\r\n    cleanupReference(entity) {}\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class SimpleProperty extends Property {\r\n    value = null;\r\n\r\n    set(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    get() {\r\n        return this.value;\r\n    }\r\n\r\n    serialize() {\r\n        return this.value;\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityArrayProperty extends Property {\r\n    proxy = [];\r\n\r\n    constructor(component) {\r\n        super(component);\r\n        this.proxy = new Proxy([], {\r\n            get: (target, prop, receiver) => {\r\n                return Reflect.get(target, prop, receiver);\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                const old = Reflect.get(target, prop, receiver);\r\n\r\n                if (typeof value === 'string') {\r\n                    value = this.ecs.entities.get(value);\r\n                }\r\n\r\n                if (old && old != value) {\r\n                    this.ecs.entities.removeRef(value, this);\r\n                }\r\n\r\n                if (value && value.id) {\r\n                    this.ecs.entities.addRef(value.id, this);\r\n\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                return Reflect.set(target, prop, value, receiver);\r\n            },\r\n            deleteProperty: (target, prop) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.deleteProperty(target, prop);\r\n                }\r\n\r\n                const value = Reflect.get(target, prop);\r\n                this.ecs.entities.removeRef(value, this);\r\n\r\n                return Reflect.deleteProperty(target, prop);\r\n            },\r\n        });\r\n    }\r\n\r\n    set(values = []) {\r\n        const len = Math.max(values.length, this.proxy.length);\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            if (i in values) {\r\n                this.proxy[i] = values[i];\r\n            } else {\r\n                delete this.proxy[i];\r\n            }\r\n        }\r\n\r\n        this.proxy.length = values.length;\r\n    }\r\n\r\n    get() {\r\n        return this.proxy;\r\n    }\r\n\r\n    serialize() {\r\n        return this.proxy.map((ref) => ref.id);\r\n    }\r\n\r\n    onDestroyed() {\r\n        this.set([]);\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\r\n    }\r\n}\r\n","import Property from './Property';\r\nimport SimpleProperty from './SimpleProperty';\r\nimport EntityProperty from './EntityProperty';\r\nimport EntityArrayProperty from './EntityArrayProperty';\r\n\r\nexport default class PropertyStrategy {\r\n    static create(component, value) {\r\n        switch (value) {\r\n            case '<Entity>':\r\n                return new EntityProperty(component);\r\n            case '<EntityArray>':\r\n                return new EntityArrayProperty(component);\r\n            default:\r\n                return new SimpleProperty(component);\r\n        }\r\n    }\r\n}\r\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(this.type, this.serialize());\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class ComponentRegistry {\r\n    #nameCache = new Map();\r\n    #definitions = new Map();\r\n    #ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    register(component) {\r\n        this.#definitions.set(component.name, component);\r\n        this.#nameCache.set(component.name, camelcase(component.name));\r\n    }\r\n\r\n    getAccessor(type) {\r\n        if (this.#nameCache.has(type)) {\r\n            return this.#nameCache.get(type);\r\n        }\r\n\r\n        this.#nameCache.set(type, camelcase(type));\r\n    }\r\n\r\n    get(typeOrClassOrComponent) {\r\n        const type = this._getType(typeOrClassOrComponent);\r\n\r\n        if (!type) {\r\n            console.warn(\r\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return this.#definitions.get(type);\r\n    }\r\n\r\n    create(typeOrClass, properties = {}) {\r\n        const definition = this.get(typeOrClass);\r\n\r\n        if (definition) {\r\n            return new definition(this.#ecs, properties);\r\n        }\r\n\r\n        console.warn(\r\n            `Could not create component definition for ${typeOrClass} since it is not registered`\r\n        );\r\n    }\r\n\r\n    _getType(typeOrClassOrComponent) {\r\n        if (typeof typeOrClassOrComponent === 'string') {\r\n            return typeOrClassOrComponent;\r\n        }\r\n\r\n        if (typeOrClassOrComponent instanceof Component) {\r\n            return typeOrClassOrComponent.type;\r\n        }\r\n\r\n        if (typeOrClassOrComponent.prototype instanceof Component) {\r\n            return typeOrClassOrComponent.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    get type() {\r\n        return this.componentDef.type;\r\n    }\r\n\r\n    constructor(componentDef, properties = {}, overwrite = true) {\r\n        this.componentDef = componentDef;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\r\n            if (this.overwrite) {\r\n                entity.remove(this.componentDef);\r\n            } else {\r\n                console.log(\r\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.componentDef, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\r\n                        initialCompProps = initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][arrComps[accessor]]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][arrComps[accessor]];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport PrefabComponent from '../PrefabComponent';\r\nimport Prefab from '../Prefab';\r\n\r\nexport default class PrefabRegistry {\r\n    #prefabs = {};\r\n    #ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(this.#ecs, data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        for (const componentData of comps) {\r\n            if (\r\n                typeof componentData === 'string' ||\r\n                componentData.prototype instanceof Component\r\n            ) {\r\n                const def = this.#ecs.components.get(componentData);\r\n                if (def) {\r\n                    prefab.addComponent(new PrefabComponent(def));\r\n                }\r\n            } else if (typeof componentData === 'object') {\r\n                const type = componentData.type;\r\n                const def = this.#ecs.components.get(type);\r\n                if (def) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            def,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n                }\r\n            } else {\r\n                console.warn(\r\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n                );\r\n            }\r\n        }\r\n\r\n        this.register(prefab);\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(prefab) {\r\n        this.#prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(nameOrClassOrPrefab) {\r\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\r\n\r\n        return this.#prefabs[name];\r\n    }\r\n\r\n    create(nameOrClass, initialProps = {}) {\r\n        const prefab = this.get(nameOrClass);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = this.#ecs.createEntity();\r\n        prefab.applyToEntity(entity, initialProps);\r\n\r\n        return entity;\r\n    }\r\n\r\n    static _getName(nameOrClassOrPrefab) {\r\n        if (typeof nameOrClassOrPrefab === 'string') {\r\n            return nameOrClassOrPrefab;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\r\n    data = {};\r\n    #prevented = false;\r\n    #handled = false;\r\n\r\n    get prevented() {\r\n        return this.#prevented;\r\n    }\r\n\r\n    get handled() {\r\n        return this.#handled;\r\n    }\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this.#handled = true;\r\n        this.#prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this.#prevented = true;\r\n    }\r\n}\r\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        if (typeOrClass instanceof Component) {\r\n            if (typeOrClass.isAttached) {\r\n                console.warn(\r\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return this.attach(typeOrClass);\r\n        }\r\n\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class EntityRegistry {\r\n    #entities = new Map();\r\n    #ecs = null;\r\n    #refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this.#entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this.#entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this.#entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this.#ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this.#ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this.#entities.delete(entity.id);\r\n        this.#ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this.#refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this.#refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this.#refs.has(entityId)) {\r\n            this.#refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this.#refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this.#refs.has(entityId)) {\r\n            this.#refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize() {\r\n        const json = [];\r\n\r\n        this.#entities.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = camelcase(key, { pascalCase: true });\r\n            const definition = this.#ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\r\n\r\nexport default class Query {\r\n    #ecs;\r\n    #filter;\r\n    #onEntityAddedCallbacks = [];\r\n    #onEntityRemovedCallbacks = [];\r\n    #cache = new Set();\r\n\r\n    constructor(ecs, filter = {}) {\r\n        this.#ecs = ecs;\r\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\r\n        this.bustCache();\r\n    }\r\n\r\n    isMatch(entity) {\r\n        const hasAny = this.#filter.any.length\r\n            ? this.#filter.any.some((c) => entity.has(c))\r\n            : true;\r\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\r\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\r\n\r\n        return hasAny && hasAll && hasNone;\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this.#onEntityAddedCallbacks.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this.#onEntityRemovedCallbacks.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this.#cache.has(entity);\r\n    }\r\n\r\n    candidate(entity) {\r\n        const isTracking = this.has(entity);\r\n\r\n        if (this.isMatch(entity)) {\r\n            if (!isTracking) {\r\n                this.#cache.add(entity);\r\n                this.#onEntityAddedCallbacks.forEach((cb) => cb(entity));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this.#cache.delete(entity);\r\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _onEntityCreated(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentAdded(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentRemoved(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onEntityDestroyed(entity) {\r\n        if (this.has(entity)) {\r\n            this.#cache.delete(entity);\r\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n    }\r\n\r\n    bustCache() {\r\n        this.#cache.clear();\r\n\r\n        for (const entity of this.#ecs.entities.all) {\r\n            this.candidate(entity);\r\n        }\r\n\r\n        return this.#cache;\r\n    }\r\n\r\n    get() {\r\n        return this.#cache;\r\n    }\r\n}\r\n","import Query from '../Query';\r\n\r\nexport default class QueryRegistry {\r\n    #ecs;\r\n    #queries = [];\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    create(filters) {\r\n        const query = new Query(this.#ecs, filters);\r\n\r\n        this.#queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    onComponentAdded(entity) {\r\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\r\n    }\r\n\r\n    onComponentRemoved(entity) {\r\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\r\n    }\r\n\r\n    onEntityCreated(entity) {\r\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\r\n    }\r\n}\r\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity() {\r\n        return this.entities.create();\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize() {\r\n        return {\r\n            entities: this.entities.serialize(),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\nimport { SUCCESS, INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\n\nexport class Body extends Component {\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const corpse = this.ecs.createPrefab('Corpse');\n        const pos = this.entity.position.getPos();\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n\n        corpse.position.setPos(pos.x, pos.y);\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker) ? this.entity.moniker.name : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class MapLayer extends Component {\n    static properties = {\n        mapEntity: '<Entity>',\n        name: '',\n        content: '<EntityArray>',\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    getByIndex(idx) {\n        return content[idx];\n    }\n\n    get(x, y) {}\n}\n","import { Component } from 'geotic';\n\nexport class Glyph extends Component {\n    static properties = {\n        primary: '#ddd',\n        secondary: '#666',\n        background: null,\n        char: '?',\n    };\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(selfPos.x, selfPos.y, targetPos.x, targetPos.y);\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['-'],\n        });\n\n        evt.data.target.fireEvent('damage', damage);\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\nimport { Blocker } from './Blocker';\nimport { Faction } from './Faction';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        if (!this.entity.has(Position)) {\n            return;\n        }\n\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.log('No energy??');\n            return;\n        }\n\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = window.game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return entity.has(Faction) && !window.game.factions.areEntitiesHostile(entity, this.entity);\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        this.entity.position.setPos(targetX, targetY);\n        this.entity.fireEvent('energy-consumed', 750);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n}\n","import { Component } from 'geotic';\n\nexport class Faction extends Component {\n    static properties = {\n        name: 'Neutral',\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>'\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {};\n","import { Component } from 'geotic';\n\nexport class Visible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.value;\n\n        console.log(`ouch! ${this.entity.moniker.name} takes ${evt.data.value} damage.`);\n\n        if (this.value <= 0) {\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {};\n","import { Component } from 'geotic';\nimport { Faction } from './Faction';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = window.game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = window.game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(Faction))\n            .find((neighbor) => {\n                return window.game.factions.areEntitiesHostile(this.entity, neighbor);\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: .05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0\n        }\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 1000,\n        rate: 10,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import ecs from '../ecs';\nimport { Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (!entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    onNewGame() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    onSaveGame() {\n        return {\n            engine: this.#engine.serialize(),\n        };\n    }\n\n    onLoadGame(data) {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n\n        this.#engine.deserialize(data.engine);\n    }\n}\n","import { Explorable, Explored, Glyph, Position, Visible } from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, Visible],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [Visible]\n        });\n    }\n\n    render() {\n        this.game.renderer.clear();\n\n        this.#explored.get().forEach((renderable) => {\n            const pos = renderable.position.getPos();\n            this.game.renderer.draw(\n                pos.x,\n                pos.y,\n                renderable.glyph.char,\n                '#283131',\n                '#283131'\n            );\n        });\n\n        this.#query.get().forEach((renderable) => {\n            const pos = renderable.position.getPos();\n            this.game.renderer.draw(\n                pos.x,\n                pos.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        });\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.renderer.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, this.game.renderer.height - 2, `${hp.value}/${hp.max}`, 'red');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_SCREEN_CAPTURE_START,\n    INPUT_CMD_SCREEN_CAPTURE_END,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_F5,\n    KEY_F6,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_NW,              'move_nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_N,               'move_n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_N,               'move_n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_NE,              'move_ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_W,               'move_w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_W,               'move_w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_E,               'move_e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_E,               'move_e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_SW,              'move_sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_S,               'move_s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_S,               'move_s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_SE,              'move_se',                true, KEY_C,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_SCREEN_CAPTURE_START, 'start capture screen',   true, KEY_F5,       false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_SCREEN_CAPTURE_END,   'end capture screen',     true, KEY_F6,       false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\nexport const INPUT_CMD_SCREEN_CAPTURE_START = 14;\nexport const INPUT_CMD_SCREEN_CAPTURE_END = 15;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import { SCREEN_MAIN_MENU, SCREEN_ADVENTURE, SCREEN_DEATH } from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\n\nexport default class ScreenManager extends Manager {\n    #screenType = SCREEN_MAIN_MENU;\n    #screens = {};\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n        };\n    }\n\n    get screen() {\n        return this.#screens[this.#screenType];\n    }\n\n    setScreen(screenType) {\n        this.screen.onLeave();\n        this.#screenType = screenType;\n        this.screen.onEnter();\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n\n    onLoadGame(data) {\n        this.setScreen(SCREEN_ADVENTURE);\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_SCREEN_CAPTURE_START,\n    INPUT_CMD_SCREEN_CAPTURE_END,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta\n} from '../../../enums/Directions';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        if (this.game.cursor.isEnabled) {\n            this.game.cursor.move(dir);\n        } else {\n            const delta = directionDelta(dir);\n            const playerPosition = this.game.player.position;\n            const targetPosition = {\n                x: playerPosition.x + delta.x,\n                y: playerPosition.y + delta.y,\n            };\n            const targets = this.game.map\n                .getEntitiesAt(targetPosition.x, targetPosition.y)\n                .filter((e) => this.game.factions.areEntitiesHostile(e, this.game.player.entity));\n\n            if (targets.length > 0) {\n                this.game.player.melee(targets[0]);\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            this.game.cursor.toggle();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            if (this.game.cursor.isEnabled) {\n                this.game.cursor.disable();\n            } else {\n                this.game.screens.setScreen(SCREEN_MAIN_MENU);\n            }\n        }\n        if (cmd.type === INPUT_CMD_SCREEN_CAPTURE_START) {\n            this.game.screenCapture.startCapture();\n        }\n        if (cmd.type === INPUT_CMD_SCREEN_CAPTURE_END) {\n            this.game.screenCapture.endCapture();\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.hungerSystem.update(dt);\n        this.game.actionSystem.update(dt);\n        this.game.movementSystem.update(dt);\n        this.game.meleeSystem.update(dt);\n        this.game.deathSystem.update(dt);\n        this.game.FOVSystem.update(dt);\n        this.game.renderSystem.update(dt);\n        this.game.particles.update(dt);\n        this.game.UISystem.update(dt);\n        this.game.cursor.update(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.state.newGame();\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(1, 4, `move       [w, a, d, x]`);\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 7, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 8, `confirm    [enter]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, 'red', 'red', 'black');\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    onNewGame() {\n        const position = this.game.map.getRandomEmptyPosition();\n        const player = this.game.ecs.createPrefab('Player');\n\n        player.position.setPos(position.x, position.y);\n\n        this.#entityId = player.id;\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.remove(MeleeCommand);\n        }\n\n        this.entity.add(MeleeCommand, {\n            target\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n\n    onSaveGame() {\n        return {\n            playerEntityId: this.#entityId,\n        };\n    }\n\n    onLoadGame(data) {\n        this.#entityId = data.playerEntityId;\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    newGame() {\n        console.log('NEW GAME');\n        this.game.clock.onNewGame();\n        this.game.engine.onNewGame();\n        this.game.map.onNewGame();\n        this.game.player.onNewGame();\n    }\n\n    saveGame() {\n        const data = {\n            ...this.game.clock.onSaveGame(),\n            ...this.game.player.onSaveGame(),\n            ...this.game.engine.onSaveGame(),\n            ...this.game.map.onSaveGame(),\n        };\n\n        console.log('SAVE GAME', data);\n        localStorage.setItem('save', JSON.stringify(data));\n    }\n\n    loadGame() {\n        const data = JSON.parse(localStorage.getItem('save'));\n\n        console.log('LOAD GAME', data);\n\n        this.game.clock.onLoadGame(data);\n        this.game.engine.onLoadGame(data);\n        this.game.map.onLoadGame(data);\n        this.game.player.onLoadGame(data);\n        this.game.screens.onLoadGame(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    onNewGame() {\n        this.#tick = 0;\n        this.#tickDelta = 0;\n    }\n\n    onLoadGame(data) {\n        this.#tick = data.clock.tick;\n        this.#tickDelta = data.clock.tickDelta;\n    }\n\n    onSaveGame() {\n        return {\n            clock: {\n                tick: this.tick,\n                tickDelta: this.tickDelta,\n            },\n        };\n    }\n}\n","import { Moniker, Visible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map.getEntitiesAt(this.x, this.y).filter((e) => e.has(Visible));\n    }\n\n    update(dt) {\n        if (!this.#isEnabled) {\n            return;\n        }\n\n        const entities = this.getEntities();\n\n        if (this.x < this.game.map.width / 2) {\n            entities\n                .filter((e) => e.has(Moniker))\n                .forEach((entity, i) => {\n                    const c = i === 0 ? '◄' : ' ';\n                    this.game.renderer.drawText(\n                        this.x + 1,\n                        this.y + i,\n                        `${c}█`,\n                        '#ddd'\n                    );\n                    this.game.renderer.drawText(\n                        this.x + 2,\n                        this.y + i,\n                        entity.moniker.name + ' ',\n                        '#111133',\n                        'white',\n                        '#ddd'\n                    );\n                });\n        } else {\n            entities\n                .filter((e) => e.has(Moniker))\n                .forEach((entity, i) => {\n                    const c = i === 0 ? '►' : ' ';\n                    this.game.renderer.drawText(\n                        this.x - 1,\n                        this.y + i,\n                        `█${c}`,\n                        '#ddd'\n                    );\n                    const len = this.game.renderer.computeTextWidth(entity.moniker.name);\n                    this.game.renderer.drawText(\n                        this.x - len - 1.5,\n                        this.y + i,\n                        ' ' + entity.moniker.name,\n                        '#111133',\n                        'white',\n                        '#ddd'\n                    );\n                });\n        }\n\n        this.game.renderer.draw(this.x, this.y, 'X', 'yellow');\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\r\nimport Manager from './Manager';\r\nimport FastMap from '../utils/FastMap';\r\nimport { BoredGoalType } from '../ai/GoalTypes';\r\nimport { Position } from '../ecs/components';\r\n\r\nexport default class MapManager extends Manager {\r\n    #lookup;\r\n    #width = 24;\r\n    #height = 24;\r\n\r\n    get width() {\r\n        return this.#width;\r\n    }\r\n\r\n    get height() {\r\n        return this.#height;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [Position],\r\n        });\r\n\r\n        this.#lookup = new FastMap(this.width, this.height);\r\n\r\n        this.query.onEntityAdded((e) => {\r\n            this.#lookup.set(0, 0, e.id);\r\n        });\r\n\r\n        this.query.onEntityRemoved((e) => {\r\n            this.#lookup.remove(e.id);\r\n        });\r\n    }\r\n\r\n    onNewGame() {\r\n        this.#lookup.clear();\r\n        const generator = new MapGenerator.Uniform(this.width, this.height, {\r\n            timeLimit: 8000,\r\n            roomWidth: [2, 5],\r\n            roomHeight: [2, 5],\r\n            roomDugPercentage: 0.9,\r\n        });\r\n\r\n        generator.create((x, y, v) => {\r\n            if (v !== 1) {\r\n                return;\r\n            }\r\n\r\n            const type = Math.random() < .5 ? 'PineTree' : 'SmallPineTree';\r\n            const entity = this.game.ecs.createPrefab(type);\r\n\r\n            entity.position.setPos(x, y);\r\n        });\r\n\r\n        for (let i = 0; i < 4; i++) {\r\n            const position = this.getRandomEmptyPosition();\r\n            const wanderer = this.game.ecs.createPrefab('HumanWanderer');\r\n\r\n            wanderer.position.setPos(position.x, position.y);\r\n            wanderer.brain.pushGoal(BoredGoalType.create());\r\n        }\r\n\r\n        for (let i = 0; i < 10; i++) {\r\n            const position = this.getRandomEmptyPosition();\r\n            const goblin = this.game.ecs.createPrefab('Goblin');\r\n\r\n            goblin.position.setPos(position.x, position.y);\r\n            goblin.brain.pushGoal(BoredGoalType.create());\r\n        }\r\n    }\r\n\r\n    onSaveGame() {\r\n        return {\r\n            map: {\r\n                lookup: this.#lookup.serialize()\r\n            }\r\n        };\r\n    }\r\n\r\n    onLoadGame(data) {\r\n        this.#lookup.deserialize(data.map.lookup);\r\n    }\r\n\r\n    getPosition(entityId) {\r\n        return this.#lookup.getPosition(entityId)\r\n    }\r\n\r\n    setPosition(x, y, entityId) {\r\n        this.#lookup.set(x, y, entityId);\r\n    }\r\n\r\n    getEntityIdsAt(x, y) {\r\n        return this.#lookup.get(x, y);\r\n    }\r\n\r\n    getEntitiesAt(x, y) {\r\n        return this.getEntityIdsAt(x, y).map((id) => this.game.ecs.getEntity(id));\r\n    }\r\n\r\n    isAdjacent(x1, y1, x2, y2) {\r\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 -y2) <= 1;\r\n    }\r\n\r\n    getNeighborEntities(x, y) {\r\n        return [\r\n            this.getEntitiesAt(x - 1, y - 1),   // TOP LEFT\r\n            this.getEntitiesAt(x, y - 1),       // TOP\r\n            this.getEntitiesAt(x + 1, y - 1),   // TOP RIGHT\r\n            this.getEntitiesAt(x - 1, y),       // LEFT\r\n            this.getEntitiesAt(x + 1, y),       // RIGHT\r\n            this.getEntitiesAt(x - 1, y + 1),   // BOTTOM LEFT\r\n            this.getEntitiesAt(x, y + 1),       // BOTTOM\r\n            this.getEntitiesAt(x + 1, y + 1),   // BOTTOM RIGHT\r\n        ];\r\n    }\r\n\r\n    getRandomEmptyPosition() {\r\n        let x, y;\r\n        do {\r\n            x = Math.trunc(Math.random() * this.width);\r\n            y = Math.trunc(Math.random() * this.height);\r\n        } while (this.getEntitiesAt(x, y).length > 0);\r\n\r\n        return { x, y };\r\n    }\r\n}\r\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","export default class FastMap {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #idHash = new Map();\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    constructor(width, height) {\n        this.#width = width;\n        this.#height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return (y * this.width) + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width)\n        };\n    }\n\n    clear() {\n        this.#idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this.#data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this.#width = data.width;\n        this.#height = data.height;\n        this.#idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this.#data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this.#idHash.set(id, coord)\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(`Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`);\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this.#idHash.set(id, { x, y });\n        this.#data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this.#data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this.#idHash.has(id);\n    }\n\n    getPosition(id) {\n        return this.#idHash.get(id);\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this.#idHash.delete(id);\n        this.#data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import Manager from './Manager';\n\nexport default class ScreenCaptureManager extends Manager {\n    #rec;\n    #isRecording = false;\n\n    get isRecording() {\n        return this.#isRecording;\n    }\n\n    startCapture(duration = null) {\n        if (this.isRecording) {\n            return;\n        }\n\n        this.#isRecording = true;\n\n        console.log('START CAPTURE');\n\n        const chunks = []; // here we will store our recorded media chunks (Blobs)\n        const stream = this.game.renderer.canvas.captureStream(); // grab our canvas MediaStream\n        this.#rec = new MediaRecorder(stream); // init the recorder\n        this.#rec.ondataavailable = (e) => chunks.push(e.data);\n        // only when the recorder stops, we construct a complete Blob from all the chunks\n        this.#rec.onstop = (e) =>\n            this.exportVideo(new Blob(chunks, { type: 'video/webm' }));\n\n        this.#rec.start();\n\n        if (duration) {\n            setTimeout(() => this.endCapture(), duration);\n        }\n    }\n\n    endCapture() {\n        if (!this.isRecording) {\n            return;\n        }\n\n        console.log('END CAPTURE');\n\n        this.#rec.stop();\n    }\n\n    exportVideo(blob) {\n        const vid = document.createElement('video');\n        vid.src = URL.createObjectURL(blob);\n        vid.controls = true;\n        document.body.appendChild(vid);\n        const a = document.createElement('a');\n        a.download = 'myvid.webm';\n        a.href = vid.src;\n        a.textContent = 'download the video';\n        document.body.appendChild(a);\n    }\n}\n","import { FOV } from 'rot-js';\nimport { Explorable, Explored, Shadowcaster, Visible } from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) => this.isSquareVisible(x, y));\n\n        this.query = this.game.ecs.createQuery({\n            all: [Visible]\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map\n            .getEntitiesAt(x, y)\n            .forEach((e) => {\n                e.add(Visible, {\n                    range,\n                    amount\n                });\n                if (e.has(Explorable) && !e.has(Explored)) {\n                    e.add(Explored);\n                }\n            });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.remove(Visible));\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 4, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.destroy();\n            }\n        });\n    }\n}\n","import { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y\n        });\n    }\n\n    createEmitter(x, y) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: -1,\n                    y: .24\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: .08,\n                lifetime: 600\n            }\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n            } else {\n                particle.x += particle.direction.x * particle.speed;\n                particle.y += particle.direction.y * particle.speed;\n\n                this.game.renderer.draw(\n                    Math.round(particle.x),\n                    Math.round(particle.y),\n                    particle.glyph,\n                    particle.fg1,\n                    particle.fg2,\n                    particle.bg,\n                );\n            }\n        });\n    }\n}\n","import { Faction } from '../ecs/components';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const factionA = entityA.get(Faction);\n        const factionB = entityB.get(Faction);\n\n        if (factionA && factionB) {\n            return this.isHostile(factionA.name, factionB.name);\n        }\n\n        return false;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}