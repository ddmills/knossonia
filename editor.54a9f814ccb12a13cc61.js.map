{"version":3,"sources":["webpack://sleepy/./editor/AreaType.js","webpack://sleepy/./editor/EditorMap.js","webpack://sleepy/./editor/EditorMapCell.js","webpack://sleepy/./editor/EditorRenderer.js","webpack://sleepy/./editor/EditorWorldGenerator.js","webpack://sleepy/./editor/index.js","webpack://sleepy/./src/utils/Grid.js","webpack://sleepy/./src/utils/rand.js","webpack://sleepy/webpack/bootstrap","webpack://sleepy/webpack/runtime/define property getters","webpack://sleepy/webpack/runtime/hasOwnProperty shorthand","webpack://sleepy/webpack/runtime/make namespace object","webpack://sleepy/webpack/startup"],"names":["AREA_TYPE_WATER","AREA_TYPE_PLAINS","AREA_TYPE_FOREST","AREA_TYPE_DESERT","AREA_TYPE_CANYON","EditorMap","constructor","width","height","this","grid","Grid","x","y","EditorMapCell","serialize","data","type","colorMap","renderEditorMap","display","document","getElementsByClassName","innerHTML","row","createElement","classList","add","area","get","cell","dataset","style","backgroundColor","appendChild","generateWorld","forEach","pickRandom","i","window","addEventListener","e","target","contains","parseInt","console","log","_width","_height","defaultValueGenerator","clear","idx","coord","Math","trunc","size","setAll","value","set","isOutOfBounds","suppressOOBWarn","warn","entries","deserialize","getNeighbors","clearAndResize","arr","floor","random","length","randomInt","min","max","randomBool","randomWeightedBool","weight","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"editor.54a9f814ccb12a13cc61.js","sourcesContent":["export const AREA_TYPE_WATER = 'AREA_TYPE_WATER';\nexport const AREA_TYPE_PLAINS = 'AREA_TYPE_PLAINS';\nexport const AREA_TYPE_FOREST = 'AREA_TYPE_FOREST';\nexport const AREA_TYPE_DESERT = 'AREA_TYPE_DESERT';\nexport const AREA_TYPE_CANYON = 'AREA_TYPE_CANYON';\n","import Grid from '../src/utils/Grid'\nimport { EditorMapCell } from './EditorMapCell';\n\nexport class EditorMap {\n    constructor(width, height) {\n        this.grid = new Grid(width, height, (x, y) => {\n            return new EditorMapCell({\n                x,\n                y\n            });\n        });\n    }\n\n    serialize() {\n        return {};\n    }\n}\n","import { AREA_TYPE_WATER } from './AreaType';\n\nexport class EditorMapCell {\n    constructor(data) {\n        this.x = data.x;\n        this.y = data.y;\n        this.type = data.type || AREA_TYPE_WATER;\n    }\n\n    serialize() {\n        return {\n            x: this.x,\n            y: this.y,\n            type: this.type,\n        };\n    }\n}\n","const colorMap = {\n    AREA_TYPE_PLAINS: '#57723a',\n    AREA_TYPE_CANYON: '#804c36',\n    AREA_TYPE_DESERT: '#b3904d',\n    AREA_TYPE_FOREST: '#3c5837',\n    AREA_TYPE_WATER: '#005784'\n};\n\nexport const renderEditorMap = (data) => {\n    const display = document.getElementsByClassName('display-grid')[0];\n\n    display.innerHTML = '';\n\n    for (let y = 0; y < data.grid.height; y++) {\n        const row = document.createElement('div');\n\n        row.classList.add('display-row');\n\n        for (let x = 0; x < data.grid.width; x++) {\n            const area = data.grid.get(x, y);\n            const cell = document.createElement('div');\n\n            cell.dataset.x = x;\n            cell.dataset.y = y;\n\n            cell.classList.add('display-cell');\n\n            cell.style.backgroundColor = colorMap[area.type];\n\n            row.appendChild(cell);\n        }\n\n        display.appendChild(row);\n    }\n};\n","import { pickRandom } from '../src/utils/rand';\nimport { AREA_TYPE_CANYON, AREA_TYPE_DESERT, AREA_TYPE_FOREST, AREA_TYPE_PLAINS, AREA_TYPE_WATER } from './AreaType';\nimport { EditorMap } from './EditorMap';\n\nexport const generateWorld = (width, height) => {\n    const data = new EditorMap(width, height);\n\n    data.grid.data.forEach((cell) => {\n        cell.type = pickRandom([\n            AREA_TYPE_PLAINS,\n            AREA_TYPE_CANYON,\n            AREA_TYPE_DESERT,\n            AREA_TYPE_FOREST,\n            AREA_TYPE_WATER,\n        ]);\n    });\n\n    for (let i = 0; i < width; i++) {\n        data.grid.get(i, 0).type = AREA_TYPE_WATER;\n        data.grid.get(i, height - 1).type = AREA_TYPE_WATER;\n    }\n\n    for (let i = 0; i < height; i++) {\n        data.grid.get(0, i).type = AREA_TYPE_WATER;\n        data.grid.get(width - 1, i).type = AREA_TYPE_WATER;\n    }\n\n    return data;\n};\n","import { EditorMap } from './EditorMap';\nimport { renderEditorMap } from './EditorRenderer';\nimport { generateWorld } from './EditorWorldGenerator';\n\nconst data = generateWorld(32, 24);\n\nwindow.data = data;\n\nrenderEditorMap(data);\n\ndocument.addEventListener('click', (e) => {\n    if (e.target.classList.contains('display-cell')) {\n        const x = parseInt(e.target.dataset.x);\n        const y = parseInt(e.target.dataset.y);\n        const cell = data.grid.get(x, y);\n\n        console.log(cell);\n    }\n});\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.defaultValueGenerator(x, y);\n        }\n    }\n\n    setAll(value) {\n        this.data = [];\n\n        for (let i = 0; i < this.size; i++) {\n            this.data[i] = value;\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    serialize() {\n        const entries = [...this.data];\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this.data = data.entries;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const randomBool = () => {\n    return pickRandom([true, false]);\n};\n\nexport const randomWeightedBool = (weight = 0.5) => {\n    return Math.random() <= weight;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(359);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}