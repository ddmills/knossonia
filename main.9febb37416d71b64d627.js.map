{"version":3,"sources":["webpack://sleepy/webpack/runtime/create fake namespace object","webpack://sleepy/./src/index.js","webpack://sleepy/./src/utils/ImageLoader.js","webpack://sleepy/./node_modules/howler/dist/howler.js","webpack://sleepy/./src/core/Game.js","webpack://sleepy/./src/core/rendering/RenderManager.js","webpack://sleepy/./src/core/Manager.js","webpack://sleepy/./src/core/rendering/Display.js","webpack://sleepy/./src/utils/Grid.js","webpack://sleepy/./src/core/rendering/spritesheets.js","webpack://sleepy/./src/core/rendering/SpriteSheet.js","webpack://sleepy/./src/core/rendering/cp437.js","webpack://sleepy/./src/core/rendering/Sprite.js","webpack://sleepy/./src/utils/ColorParser.js","webpack://sleepy/./node_modules/color-parse/index.mjs","webpack://sleepy/./node_modules/color-name/index.js","webpack://sleepy/./src/utils/ColorUtil.js","webpack://sleepy/./src/core/input/InputController.js","webpack://sleepy/./src/core/input/events/InputKeyboardEvent.js","webpack://sleepy/./src/core/input/events/InputEvent.js","webpack://sleepy/./src/core/input/events/InputMouseEvent.js","webpack://sleepy/./src/systems/ActionSystem.js","webpack://sleepy/./src/ecs/components/Actor.js","webpack://sleepy/../node_modules/camelcase/index.js","webpack://sleepy/../src/util/string-util.js","webpack://sleepy/../src/Properties/Property.js","webpack://sleepy/../src/Properties/SimpleProperty.js","webpack://sleepy/../src/Properties/EntityProperty.js","webpack://sleepy/../src/Properties/EntityArrayProperty.js","webpack://sleepy/../src/Properties/PropertyFactory.js","webpack://sleepy/../src/Component.js","webpack://sleepy/../src/registries/ComponentRegistry.js","webpack://sleepy/../node_modules/deepmerge/dist/cjs.js","webpack://sleepy/../src/PrefabComponent.js","webpack://sleepy/../src/Prefab.js","webpack://sleepy/../src/registries/PrefabRegistry.js","webpack://sleepy/../src/EntityEvent.js","webpack://sleepy/../src/Entity.js","webpack://sleepy/../src/registries/EntityRegistry.js","webpack://sleepy/../src/Query.js","webpack://sleepy/../src/registries/QueryRegistry.js","webpack://sleepy/../src/Engine.js","webpack://sleepy/../node_modules/nanoid/non-secure/index.js","webpack://sleepy/./src/ecs/components/IsDestroying.js","webpack://sleepy/./src/ecs/components/LiquidContainer.js","webpack://sleepy/./src/data/Spawnables.js","webpack://sleepy/./src/data/Spawner.js","webpack://sleepy/./src/data/spawnables/SpawnableVialHoney.js","webpack://sleepy/./src/enums/LiquidTypes.js","webpack://sleepy/./src/data/spawnables/SpawnableVialBlood.js","webpack://sleepy/./src/data/spawnables/SpawnableVialWater.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://sleepy/./src/ai/GoalTypes/BoredGoalType.js","webpack://sleepy/./src/ai/GoalTypes/GoalType.js","webpack://sleepy/./src/ai/GoalActionResult.js","webpack://sleepy/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://sleepy/./src/utils/AStar.js","webpack://sleepy/./src/utils/diagonalDistance.js","webpack://sleepy/./src/utils/ManhattanDistance.js","webpack://sleepy/./src/utils/PriorityQueue.js","webpack://sleepy/./src/ai/GoalTypes/MoveGoalType.js","webpack://sleepy/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://sleepy/./src/data/spawnables/SpawnablePineTree.js","webpack://sleepy/./src/utils/rand.js","webpack://sleepy/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://sleepy/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://sleepy/./src/ecs/components/Door.js","webpack://sleepy/./src/ecs/components/Blocker.js","webpack://sleepy/./src/ecs/components/Shadowcaster.js","webpack://sleepy/./src/ecs/components/Loot.js","webpack://sleepy/./src/ecs/components/Inventory.js","webpack://sleepy/./src/core/screens/ScreenType.js","webpack://sleepy/./src/ecs/components/IsInventoried.js","webpack://sleepy/./src/ecs/components/Stackable.js","webpack://sleepy/./src/enums/Stackables.js","webpack://sleepy/./src/ecs/components/Throwable.js","webpack://sleepy/./src/data/Abilities.js","webpack://sleepy/./src/data/abilities/ArmorAbility.js","webpack://sleepy/./src/data/abilities/Ability.js","webpack://sleepy/./src/data/Stats.js","webpack://sleepy/./src/data/abilities/SpeedAbility.js","webpack://sleepy/./src/data/abilities/ThrowingAbility.js","webpack://sleepy/./src/data/abilities/DodgeAbility.js","webpack://sleepy/./src/data/Attack.js","webpack://sleepy/./src/data/DamageTypes.js","webpack://sleepy/./src/enums/CursorSegments.js","webpack://sleepy/./src/utils/BresenhamLine.js","webpack://sleepy/./src/ecs/components/Body.js","webpack://sleepy/./src/ecs/components/IsVisible.js","webpack://sleepy/./src/ecs/components/FragileGlass.js","webpack://sleepy/./src/enums/ConsoleEvents.js","webpack://sleepy/./src/ecs/components/Brain.js","webpack://sleepy/./src/ecs/components/Goal.js","webpack://sleepy/./src/ai/GoalEvaluator.js","webpack://sleepy/./src/ecs/components/Moniker.js","webpack://sleepy/./src/ecs/components/Logger.js","webpack://sleepy/./src/ecs/components/Position.js","webpack://sleepy/./src/ecs/components/Glyph.js","webpack://sleepy/./src/ecs/components/Legs.js","webpack://sleepy/./src/ecs/components/IsPlayer.js","webpack://sleepy/./src/ecs/components/Wandering.js","webpack://sleepy/./src/enums/Directions.js","webpack://sleepy/./src/ecs/components/Explorable.js","webpack://sleepy/./src/ecs/components/Explored.js","webpack://sleepy/./src/ecs/components/Health.js","webpack://sleepy/./src/ecs/components/IsDead.js","webpack://sleepy/./src/ecs/components/FactionMember.js","webpack://sleepy/./src/enums/Factions.js","webpack://sleepy/./src/data/Faction.js","webpack://sleepy/./src/ecs/components/Eyes.js","webpack://sleepy/./src/ecs/components/Particle.js","webpack://sleepy/./src/ecs/components/ParticleEmitter.js","webpack://sleepy/./src/ecs/components/LootDropper.js","webpack://sleepy/./src/data/tables/LootSpawn.js","webpack://sleepy/./src/utils/WeightedTable.js","webpack://sleepy/./src/data/tables/loot/LootTableGoblin.js","webpack://sleepy/./src/data/tables/loot/LootTableForest.js","webpack://sleepy/./src/ecs/components/IsEquipped.js","webpack://sleepy/./src/ecs/components/Equipment.js","webpack://sleepy/./src/data/EquipmentSlotType.js","webpack://sleepy/./src/ecs/components/EquipmentSlot.js","webpack://sleepy/./src/data/WeaponTypes.js","webpack://sleepy/./src/data/WeaponFamilies.js","webpack://sleepy/./src/data/weapons/WpnTypeBattleAxe.js","webpack://sleepy/./src/data/weapons/WeaponType.js","webpack://sleepy/./src/data/weapons/WpnTypeGreatsword.js","webpack://sleepy/./src/data/weapons/WpnTypeMace.js","webpack://sleepy/./src/data/Statuses.js","webpack://sleepy/./src/data/statuses/StatusBleeding.js","webpack://sleepy/./src/enums/StatusTypes.js","webpack://sleepy/./src/data/statuses/Status.js","webpack://sleepy/./src/data/statuses/StatusStunned.js","webpack://sleepy/./src/data/weapons/WpnTypeShortsword.js","webpack://sleepy/./src/data/weapons/WpnTypeUnarmed.js","webpack://sleepy/./src/ecs/components/Stats.js","webpack://sleepy/./node_modules/rot-js/lib/util.js","webpack://sleepy/./src/ecs/components/Race.js","webpack://sleepy/./src/data/Races.js","webpack://sleepy/./src/data/RaceData.js","webpack://sleepy/./src/ecs/components/Weapon.js","webpack://sleepy/./src/ecs/components/Status.js","webpack://sleepy/./src/ecs/components/Ground.js","webpack://sleepy/./src/ecs/components/IsIncapacitated.js","webpack://sleepy/./src/ecs/components/SharpTrap.js","webpack://sleepy/./src/ecs/components/EquippedAbilityMod.js","webpack://sleepy/./src/ecs/components/Combustible.js","webpack://sleepy/./src/ecs/components/Fire.js","webpack://sleepy/./src/ecs/components/ThermalCapacity.js","webpack://sleepy/./src/systems/System.js","webpack://sleepy/./src/systems/RenderSystem.js","webpack://sleepy/./src/systems/UISystem.js","webpack://sleepy/./src/core/input/MouseManager.js","webpack://sleepy/./src/core/input/CommandManager.js","webpack://sleepy/./src/core/input/InputDomainType.js","webpack://sleepy/./src/core/input/commands.js","webpack://sleepy/./src/core/input/InputCommand.js","webpack://sleepy/./src/core/input/InputCommandType.js","webpack://sleepy/./src/core/input/KeyCodes.js","webpack://sleepy/./src/core/screens/ScreenManager.js","webpack://sleepy/./src/core/screens/screens/AdventureScreen.js","webpack://sleepy/./src/core/screens/screens/Screen.js","webpack://sleepy/./src/core/screens/screens/MainMenuScreen.js","webpack://sleepy/./src/core/screens/screens/DeathScreen.js","webpack://sleepy/./src/core/screens/screens/InventoryScreen.js","webpack://sleepy/./src/utils/SelectableList.js","webpack://sleepy/./src/core/screens/screens/InteractModalScreen.js","webpack://sleepy/./src/core/screens/screens/CursorScreen.js","webpack://sleepy/./src/core/screens/screens/LoadSectorScreen.js","webpack://sleepy/./src/core/screens/screens/EquipmentScreen.js","webpack://sleepy/./src/core/screens/screens/ListSelectionScreen.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/simple.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://sleepy/./node_modules/rot-js/lib/eventqueue.js","webpack://sleepy/./node_modules/rot-js/lib/MinHeap.js","webpack://sleepy/./src/core/screens/screens/CharacterScreen.js","webpack://sleepy/./src/core/PlayerManager.js","webpack://sleepy/./src/ecs/index.js","webpack://sleepy/./src/core/GameStateManager.js","webpack://sleepy/./src/core/ClockManager.js","webpack://sleepy/./src/systems/CursorSystem.js","webpack://sleepy/./src/core/MapManager.js","webpack://sleepy/./src/utils/FastMap.js","webpack://sleepy/./src/systems/FOVSystem.js","webpack://sleepy/./node_modules/rot-js/lib/index.js","webpack://sleepy/./node_modules/rot-js/lib/rng.js","webpack://sleepy/./node_modules/rot-js/lib/display/display.js","webpack://sleepy/./node_modules/rot-js/lib/display/hex.js","webpack://sleepy/./node_modules/rot-js/lib/display/canvas.js","webpack://sleepy/./node_modules/rot-js/lib/display/backend.js","webpack://sleepy/./node_modules/rot-js/lib/display/rect.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile-gl.js","webpack://sleepy/./node_modules/rot-js/lib/color.js","webpack://sleepy/./node_modules/rot-js/lib/display/term.js","webpack://sleepy/./node_modules/rot-js/lib/text.js","webpack://sleepy/./node_modules/rot-js/lib/constants.js","webpack://sleepy/./node_modules/rot-js/lib/stringgenerator.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/index.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/speed.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/action.js","webpack://sleepy/./node_modules/rot-js/lib/fov/index.js","webpack://sleepy/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/fov.js","webpack://sleepy/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/map/index.js","webpack://sleepy/./node_modules/rot-js/lib/map/arena.js","webpack://sleepy/./node_modules/rot-js/lib/map/map.js","webpack://sleepy/./node_modules/rot-js/lib/map/uniform.js","webpack://sleepy/./node_modules/rot-js/lib/map/dungeon.js","webpack://sleepy/./node_modules/rot-js/lib/map/features.js","webpack://sleepy/./node_modules/rot-js/lib/map/cellular.js","webpack://sleepy/./node_modules/rot-js/lib/map/digger.js","webpack://sleepy/./node_modules/rot-js/lib/map/ellermaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/iceymaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/rogue.js","webpack://sleepy/./node_modules/rot-js/lib/noise/index.js","webpack://sleepy/./node_modules/rot-js/lib/noise/simplex.js","webpack://sleepy/./node_modules/rot-js/lib/noise/noise.js","webpack://sleepy/./node_modules/rot-js/lib/path/index.js","webpack://sleepy/./node_modules/rot-js/lib/path/dijkstra.js","webpack://sleepy/./node_modules/rot-js/lib/path/path.js","webpack://sleepy/./node_modules/rot-js/lib/path/astar.js","webpack://sleepy/./node_modules/rot-js/lib/engine.js","webpack://sleepy/./node_modules/rot-js/lib/lighting.js","webpack://sleepy/./src/systems/DeathSystem.js","webpack://sleepy/./src/systems/ParticleSystem.js","webpack://sleepy/./src/core/FactionManager.js","webpack://sleepy/./src/core/CameraManager.js","webpack://sleepy/./src/systems/FPSMonitoringSystem.js","webpack://sleepy/./src/core/WorldManager.js","webpack://sleepy/./src/data/WorldData.js","webpack://sleepy/./src/data/Sector.js","webpack://sleepy/./src/level/generators/generators.js","webpack://sleepy/./src/level/generators/ForestCabinsGenerator.js","webpack://sleepy/./src/level/LevelConnections.js","webpack://sleepy/./src/level/TileData.js","webpack://sleepy/./src/level/themes/TileTheme.js","webpack://sleepy/./src/level/themes/CastleTheme.js","webpack://sleepy/./src/level/themes/TileThemePopulator.js","webpack://sleepy/./src/level/themes/ForestTheme.js","webpack://sleepy/./src/level/themes/CabinTheme.js","webpack://sleepy/./src/level/schemes/UniformScheme.js","webpack://sleepy/./src/level/TileContainer.js","webpack://sleepy/./src/level/RoomData.js","webpack://sleepy/./node_modules/nanoid/index.prod.js","webpack://sleepy/./node_modules/nanoid/url-alphabet/index.js","webpack://sleepy/./src/level/TileScheme.js","webpack://sleepy/./src/level/generators/SectorGenerator.js","webpack://sleepy/./src/level/generators/ForestGenerator.js","webpack://sleepy/./src/level/generators/ForestStrongholdGenerator.js","webpack://sleepy/./src/level/schemes/DenseCastleScheme.js","webpack://sleepy/./src/level/generators/ForestTownGenerator.js","webpack://sleepy/./src/level/schemes/ScatteredScheme.js","webpack://sleepy/./src/level/generators/GeneratorUtils.js","webpack://sleepy/./src/core/ConsoleManager.js","webpack://sleepy/./src/systems/DestroySystem.js","webpack://sleepy/./src/core/MusicManager.js","webpack://sleepy/./src/systems/StatusSystem.js","webpack://sleepy/./src/systems/LiquidSystem.js","webpack://sleepy/./src/systems/TrapSystem.js","webpack://sleepy/./src/systems/FireSystem.js","webpack://sleepy/./src/systems/TemperatureSystem.js","webpack://sleepy/./src/utils/ArrayUtil.js","webpack://sleepy/./src/utils/LerpUtil.js","webpack://sleepy/./src/utils/MemoryGrid.js","webpack://sleepy/webpack/bootstrap","webpack://sleepy/webpack/runtime/compat get default export","webpack://sleepy/webpack/runtime/define property getters","webpack://sleepy/webpack/runtime/global","webpack://sleepy/webpack/runtime/hasOwnProperty shorthand","webpack://sleepy/webpack/runtime/make namespace object","webpack://sleepy/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","require","window","game","ecs","start","Howler","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","HowlerGlobal","this","init","prototype","self","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","play","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Game","engine","constructor","ECS","music","MusicManager","mouse","MouseManager","clock","ClockManager","renderer","Renderer","GameStateManager","world","WorldManager","MapManager","camera","CameraManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","ConsoleManager","actionSystem","ActionSystem","deathSystem","DeathSystem","statusSystem","StatusSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","liquidSystem","LiquidSystem","trapSystem","TrapSystem","fireSystem","FireSystem","temperature","TemperatureSystem","boundLoop","requestAnimationFrame","updateAdventureSystems","dt","update","playerTurn","updatePlayerSystems","render","t","Manager","display","canvas","super","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","resizeDisplay","zoom","setSize","draw","char","fg1","fg2","bg","tiles","getSprite","computeTextWidth","text","drawText","font","charAt","drawTextCenter","clear","clearArea","pxToTile","xPx","yPx","trunc","onNewGame","getSaveGameData","cells","Grid","suppressOOBWarn","createElement","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","cellX","cellY","filter","c","cell","pixelX","pixelY","drawImage","_width","_height","defaultValueGenerator","idx","coord","size","setAll","value","isOutOfBounds","serialize","entries","deserialize","get","getNeighbors","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","_cache","hasOwnProperty","pixels","getImageData","r","g","b","isBlack","cvs","putImageData","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","base","isRGB","trim","baseHues","join","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","HSLToRGB","lerpHSL","deg","lerp","sat","light","isWhite","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","System","createQuery","Actor","none","IsDestroying","IsDead","IsIncapacitated","entities","sorted","sort","actor","energy","entity","hasEnergy","incrementTick","addEnergy","tickDelta","isPlayer","getNextAction","fireEvent","Component","onEnergyConsumed","reduceEnergy","onTick","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","_","p1","camelCache","camelString","camelcaseSlow","pascalCache","Property","component","enumerable","v","onDestroyed","cleanupReference","SimpleProperty","EntityProperty","getEntity","EntityArrayProperty","Proxy","target","prop","receiver","Reflect","old","deleteProperty","proxy","ref","PropertyStrategy","Boolean","ob","properties","_onAttached","_onDetached","_onDestroyed","onAttached","onDetached","remove","destroy","clone","createComponent","_onEvent","handlerName","onEvent","_defaultPropertyValue","propertyName","_defineProxies","initialProperties","initialValue","property","PropertyFactory","ComponentRegistry","Map","register","getAccessor","typeOrClassOrComponent","_getType","_definitions","typeOrClass","definition","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","PrefabComponent","componentDef","overwrite","applyToEntity","initialProps","props","merge","Prefab","addComponent","prefabComponent","arrComps","accessor","components","initialCompProps","PrefabRegistry","registered","prefab","inherit","comps","componentData","def","_ecs","nameOrClassOrPrefab","_prefabs","nameOrClass","EntityEvent","is","handle","prevent","Entity","has","hasType","nestedComponent","add","attach","configurable","writable","allowMultiple","owns","isComponent","instance","o2","k2","v2","EntityRegistry","_entities","createOrGetById","onEntityDestroyed","cleanupRefs","refs","_refs","addRef","entityId","Set","removeRef","json","list","entityData","deserializeEntity","pascalString","d","Query","any","isMatch","hasAny","_filter","some","hasAll","every","hasNone","onEntityAdded","onEntityRemoved","candidate","isTracking","cb","_onEntityCreated","_onComponentAdded","_onComponentRemoved","_onEntityDestroyed","bustCache","QueryRegistry","filters","query","onComponentAdded","onComponentRemoved","onEntityCreated","Engine","nanoid","generateId","createEntity","createPrefab","prefabs","destroyEntity","registerPrefab","registerComponent","queries","pass","LiquidContainer","isEmpty","liquids","content","maxVolume","overridePrimary","liquid","overrideSecondary","_checkDestroyOnEmpty","destroyOnEmpty","isDestroying","pour","quantity","isPourable","spawn","SPWN_POOL_LIQUID","combineFrom","other","sum","onTryPour","interactor","position","getPos","onTryDrink","drinkLiquid","onGetInteractions","interactions","LIQUID_BLOOD","isFreeFlowing","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_TWIG","SPWN_ASH","SPWN_GOBLIN_GRUNT","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","SPWN_LEATHER_BOOTS","SPWN_SHORTSWORD","SPWN_GREATSWORD","SPWN_BATTLE_AXE","SPWN_HATCHET","SPWN_MACE","SPWN_GROUND_GRASS","SPWN_GROUND_STONE","SPWN_HEAVY_PLATE_ARMOR","SPWN_LEATHER_ARMOR","SPWN_CLOTH_HOOD","SPWN_WIZARD_CAP","SPWN_HELM","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","GoblinGrunt","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","LIQUID_OIL","colorDesc","onDrink","log","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","sword","equipmentSlot","handRight","equip","GoalType","goal","targets","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","isDead","isDestroyed","handled","targetPos","result","computeAStar","cost","diagonalDistance","blocker","isIncapacitated","sharpTrap","segment","path","delta","moveGoal","MoveGoalType","allowDiagonals","neighbors","defaultSettings","settings","heuristic","manhattanDistance","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","costs","put","currentKey","current","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","dx","dy","peek","item","createItem","EatFoodGoalType","food","pickRandom","arr","floor","random","randomInt","randomBool","randomWeightedBool","weight","wanderer","Door","isOpen","chOpen","chClosed","openDoor","ch","shadowcaster","closeDoor","Blocker","Shadowcaster","onTryCloseDoor","onTryOpenDoor","onProjectileHit","stopProjectile","deflectProjectile","isAttached","Loot","take","newOwner","isInventoried","isOwnedBy","owner","inventory","removeLoot","addLoot","IsInventoried","Inventory","hasLoot","onEquipped","onTryPickUp","onTryTake","onQueryOwnership","getStackable","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","addOther","dropLoot","dropper","onTryOpen","SCREEN_INVENTORY","accessible","isOpenable","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","SCREEN_CHARACTER","onTryDrop","onThrown","increment","amount","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_ASH","STACKABLE_GLASS_SHARD","Throwable","throw","trajectory","initiator","stopped","deflected","hit","projectile","getStat","STAT_STRENGTH","damage","die","modifier","attack","Attack","attacker","defender","weaponName","moniker","damageType","ignoreDodge","onTryThrow","range","getAbilityValue","ABILITY_THROWING","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","DMG_TYPE_BLUDGEONING","ABILITY_SPEED","ABILITY_ARMOR","ABILITY_DODGE","lookup","ArmorAbility","SpeedAbility","ThrowingAbility","DodgeAbility","getAbility","getAbilityName","compute","getAbilityEquippedMod","modifiers","ability","getAllAbilityEquippedMods","reduce","mods","getAllAbilityEquippedModSums","mod","getArmorBlockPercent","getArmorBlockPercentDisplay","prcnt","Ability","baseStat","getModifiers","getModifierSum","cur","STAT_FINESSE","STAT_ATHLETICISM","STAT_TRICKERY","getStatName","stat","stats","rollStat","statCheck","getSpeedPercent","getSpeedPercentDisplay","getDodgePercent","unscaled","DMG_TYPE_PIERCING","DMG_TYPE_SLASHING","verb","getDmgTypeName","getDmgTypeVerb","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","sx","sy","e2","bresenhamLineExclusive","onDeath","corpse","corpseSpawnable","FragileGlass","shatter","CONSOLE_EVENT_SHATTER","onCollideGround","onCollide","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","CONSOLE_EVENT_MISS","CONSOLE_EVENT_BLOCK","CONSOLE_EVENT_TRAP_SHARP","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","dodgePrcnt","shouldAppear","dmgVerb","dmg","blocked","blockText","trap","getMessage","Brain","goals","onTakeAction","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","onLog","Position","getPosition","equals","Glyph","col","primaryColorOverride","secondaryColorOverride","Legs","onTryMove","targetX","targetY","targetTileEntities","nonHostile","factionMember","Wandering","onBoredom","Directions","directions","shortName","fullName","adjacent","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_Z","DIR_E","DIR_SW","DIR_S","DIR_SE","getAdjacentDeltas","directionFromDelta","dir","Explorable","Explored","Health","applyDamage","onAttacked","dodge","isDodged","isKilled","armor","armorPrcnt","onHeal","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","Eyes","canSee","onTryDetectHostiles","Particle","age","frame","chunks","percent","fg2s","bgs","startX","startY","ParticleEmitter","createParticle","particle","particleData","count","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","WeightedTable","pick","spawnable","rows","currentW","chance","maxWeight","table","goblins","forest","IsEquipped","slotKey","onDropped","slot","unequip","Equipment","onTryEquip","slots","slotTypes","includes","slotType","header","onRenderRow","isSelected","onSelect","onTryUnequip","isEquipped","EQ_SLOT_BODY","EQ_SLOT_HEAD","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EQ_SLOT_HAND","EquipmentSlot","equipment","onTryMelee","isPrimary","selfPos","isAdjacent","getWeaponType","WPN_TYPE_UNARMED","onQueryAbilityMod","isOffhand","WPN_TYPE_WAR_HAMMER","WPN_TYPE_SLEDGE_HAMMER","WPN_TYPE_CLUB","WPN_TYPE_MACE","WPN_TYPE_HEAVY_AXE","WPN_TYPE_BATTLE_AXE","WPN_TYPE_GREATSWORD","WPN_TYPE_SHORTSWORD","WPN_TYPE_DAGGER","WPN_TYPE_STAFF","WPN_TYPE_HALBERD","WPN_TYPE_JAVELIN","WpnTypeUnarmed","family","WPN_FAMILY_HAMMER","WPN_FAMILY_AXE","WpnTypeBattleAxe","WpnTypeGreatsword","WpnTypeShortsword","WpnTypeMace","WPN_FAMILY_BLADE","WPN_FAMILY_POLEARM","getWeaponTypeName","getWeaponTypeFamily","getWeaponTypeDmgType","WPN_FAMILY_ARCHERY","WPN_FAMILY_UNARMED","WPN_FAMILY_CUDGEL","getWeaponFamilyName","WeaponType","_createAttack","weapon","roll","attacks","secondAttack","weaponDamageText","user","getShortDescription","fam","getAttacks","_getNeighborAttacks","attackerPos","defenderPos","deltaX","deltaY","flat","hostile","_tryAttackDefender","addStatus","STATUS_STUNNED","STATUS_BLEEDING","StatusBleeding","StatusStunned","getStatus","Status","STATUS_TYPE_CONDITION","getDmgPerTurn","potency","ticks","remainingLifetime","health","isCompleted","Stats","_sumMods","getStatModifiers","getStatModifierSum","capitalize","modSum","strength","finesse","athleticism","trickery","baseStrength","baseFinesse","baseAthleticism","baseTrickery","n","clamp","toUpperCase","substring","template","group1","group2","obj","replaced","first","Race","getRaceData","modStrength","modFinesse","modAthleticism","modTrickery","onQueryStatModifierStrength","strengthMod","onQueryStatModifierFinesse","finesseMod","onQueryStatModifierAthleticism","athleticismMod","onQueryStatModifierTrickery","trickeryMod","RACE_HUMAN","RACE_GOBLIN","RaceData","Weapon","weaponType","onTryUseMelee","Ground","SharpTrap","challenge","EquippedAbilityMod","onQueryAbilityModEquipped","Combustible","fire","fuel","getTemperature","setTemperature","getDieOutChance","getSparkChance","getCatchChance","intensity","onSpark","isOnFire","Fire","flashPoint","onTryIgnite","spawnableRemains","burnRate","extinguish","onTryExtinguish","ThermalCapacity","modeLookup","isVisible","background","explored","worldX","worldY","temp","rgb","sqrt","temperatureGradient","renderTile","screenToWorld","isInView","getEntitiesAt","renderableZ","renderable","mode","beingsQuery","showTicks","turn","subTurn","toFixed","padEnd","hp","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","_inputStack","getNextCommand","getCommandForInputEvent","pushDomain","domain","_domainStack","popDomain","lastIndexOf","getDomainCommands","_commands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","INPUT_CMD_CHARACTER","KEY_Y","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_T","KEY_U","KEY_V","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","ListSelectionScreen","CharacterScreen","setScreen","screenType","screen","onLeave","onEnter","screenCtx","replaceScreen","pushScreen","popScreen","onUpdate","Screen","computeFOV","setFocus","onDirectionInput","directionDelta","playerPosition","targetPosition","hostileEntities","areEntitiesHostile","melee","doorEntity","move","onPickUpCommand","lootable","onInteract","items","onGetRowName","interactable","onInteractDirection","handleInput","saveGame","loadGame","wait","isStarted","onConfirm","newGame","inputCommand","gameOver","SelectableList","setItems","selectItem","selected","up","down","ypos","textLen","_items","_idx","refreshList","isBack","interaction","left","top","listPadding","xpos","weaponDmg","hasMod","NOOP","enable","disable","cursorColor","types","color","worldToScreen","getEntities","faction","relation","getEntityRelation","getDisplay","tmpC","tmpF","drawCursor","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","selectSlot","defaultRowRender","cancel","Simple","Scheduler","repeat","_current","_repeat","EventQueue","getTime","getTimeOf","getEventTime","_time","_events","MinHeap","time","heap","timestamp","lessThan","loc","updateUp","updateDown","last","parentNode","leftChildNode","rightChildNode","existNode","swap","minNode","numbers","validnumbers","minimal","leftChild","rightChild","debugPrint","healthMax","speedPrcnt","pad","modDir","getSetupData","serialized","setup","teardown","actionQueue","turns","destroyEntities","cloneEntity","initiateTeardown","initiateSetup","prompt","deleteFile","filename","localStorage","setItem","JSON","stringify","file","startsWith","removeItem","saveSectorPositionData","positionData","saveSectorTemperatureData","temperatureData","saveSectorEntityData","loadSectorEntityData","getItem","parse","loadSectorPositionData","loadSectorTemperatureData","loadSavefileData","prevTurn","curTurn","toggle","isEnabled","positions","FastMap","getRandomEmptyPosition","sector","includeGround","ground","x2","y2","getEntitiesInRect","getEntitiesInRange","diameter","getNeighborEntities","isOutOfbounds","onPlayerOutOfBounds","enterSector","northSector","southSector","eastSector","westSector","_data","_idHash","delete","fov","FOV","isSquareVisible","setVisible","explorable","visibility","Util","util","Color","Text","FRAC","RNG","_seed","_s0","_s1","_s2","_c","getSeed","setSeed","seed","getUniform","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","getPercentage","shuffle","getWeightedValue","total","part","getState","setState","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getOptions","getContainer","computeSize","availWidth","availHeight","computeFontSize","computeTileSize","eventToPosition","touches","clientX","clientY","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","cch","_draw","clearBefore","Canvas","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","_normalizedEventToPosition","nodeSize","beginPath","moveTo","lineTo","fill","_updateSize","opts","charWidth","xprop","yprop","Backend","textAlign","rect","getBoundingClientRect","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","multiply_","interpolate","color2","factor","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","randomize","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","DST_COLORS","_offset","_cursor","_lastColor","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","Speed","Action","getSpeed","_defaultDuration","setDuration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_fillMap","Dungeon","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","getRooms","getCorridors","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","addDoors","isWallCallback","right","bottom","debug","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","nx","ny","ok","firstCornerBad","secondCornerBad","createPriorityWalls","priorityWallCallback","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","local","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","deltas","addToList","removeFromList","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","_drawCorridor","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","Simplex","F2","G2","Noise","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Dijkstra","AStar","Path","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","setFOV","_fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","_updateFOV","fovKey","formFactor","key1","vis","createEmitter","emitter","particleEmitter","isExpired","targetCount","setRelation","getFactionById","isHostile","factionA","factionB","_relationKey","idA","idB","relations","getRelation","entityA","entityB","memberA","memberB","onWindowResize","clampX","innerWidth","renderedTileWidth","clampY","innerHeight","renderedTileHeight","topLeftWorldX","padding","_focusX","topLeftWorldY","_focusY","setZoom","setPadding","getScreenRect","fpsElement","getElementsByClassName","frames","frameCount","innerText","getSector","WorldData","getStartingSector","exploredSectorIds","Sector","getSectorByCoord","getExits","exits","connectionsNorth","connectionsWest","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","SectorGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","TileThemePopulator","populateTile","trySpawn","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileScheme","TileContainer","MapGenerator","digPercentage","createRoom","defaultType","getTile","setTileTheme","getTileType","addRoom","RoomData","combineOther","cloneTo","setTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","containsPoint","intersects","c1","c2","c3","c4","bytes","crypto","getRandomValues","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","urlAlphabet","populateRoom","exitOffset","castle","DenseCastleScheme","curId","createNodeId","splitNodeVertical","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","msgs","Track","intro","isPlaying","host","pathname","track","tracks","currentTrack","rv","sharpTrapQuery","turnDelta","trapEntity","combustible","sparkChance","dieChance","isOutOfFuel","grid","MemoryGrid","getAmbientTemperature","ambient","getAmbientCapacity","capacity","getCapacity","hasCap","hasFire","cap","thermalCapacity","copyToPrevious","avg","avgArray","sumArray","f0","f1","lerp2","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","getPrototypeOf","__proto__","ns","getOwnPropertyNames","defineProperty","globalThis","Function","toStringTag"],"mappings":"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","file":"main.9febb37416d71b64d627.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\nimport { Howler } from 'howler';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n\nHowler.volume(0);\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\nimport MusicManager from './MusicManager';\nimport StatusSystem from '../systems/StatusSystem';\nimport LiquidSystem from '../systems/LiquidSystem';\nimport TrapSystem from '../systems/TrapSystem';\nimport FireSystem from '../systems/FireSystem';\nimport TemperatureSystem from '../systems/TemperatureSystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.music = new MusicManager(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.camera = new CameraManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.actionSystem = new ActionSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.statusSystem = new StatusSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n        this.liquidSystem = new LiquidSystem(this);\n        this.trapSystem = new TrapSystem(this);\n        this.fireSystem = new FireSystem(this);\n        this.temperature = new TemperatureSystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        for (let i = 0; i < 20; i++) {\n            this.clock.update(dt);\n            const playerTurn = this.actionSystem.update(dt);\n\n            if (playerTurn) {\n                this.updatePlayerSystems(dt);\n            }\n\n            this.liquidSystem.update(dt);\n            this.trapSystem.update(dt);\n            this.fireSystem.update(dt);\n            this.temperature.update(dt);\n            this.statusSystem.update(dt);\n            this.deathSystem.update(dt);\n            this.destroySystem.update(dt);\n\n            if (playerTurn) {\n                return;\n            }\n        }\n    }\n\n    updatePlayerSystems(dt) {\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    tileWidth = 16;\n    tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: 20,\n            height: 20,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height, zoom) {\n        this.display.setSize(width, height, zoom);\n    }\n\n    draw(x, y, char, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n        this.ctx.globalCompositeOperation = 'destination-over';\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            0,\n            0,\n            this.tileWidth * this.width,\n            this.tileHeight * this.height\n        );\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + i * 2;\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.defaultValueGenerator(x, y);\n        }\n    }\n\n    setAll(value) {\n        this.data = [];\n\n        for (let i = 0; i < this.size; i++) {\n            this.data[i] = value;\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    serialize() {\n        const entries = [...this.data];\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this.data = data.entries;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\nimport { isBlack } from '../../utils/ColorUtil';\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","export const HSLToRGB = (h, s, l) => {\n    s /= 100;\n    l /= 100;\n\n    let c = (1 - Math.abs(2 * l - 1)) * s;\n    let x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    let m = l - c / 2;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    } else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    } else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    } else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    } else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    } else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n\n    return [\n        Math.round((r + m) * 255),\n        Math.round((g + m) * 255),\n        Math.round((b + m) * 255),\n    ];\n};\n\nexport const lerpHSL = (a, b, t) => {\n    const deg = Math.trunc(lerp(a[0], b[0], t));\n    const sat = Math.trunc(lerp(a[1], b[1], t));\n    const light = Math.trunc(lerp(a[2], b[2], t));\n\n    return HSLToRGB(deg, sat, light);\n};\n\nexport const isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nexport const isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import {\n    Actor,\n    IsDead,\n    IsDestroying,\n    IsIncapacitated,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            none: [IsDestroying, IsDead, IsIncapacitated],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy) {\n            if (entity.isPlayer) {\n                const action = this.game.player.getNextAction();\n\n                if (action) {\n                    action();\n                }\n\n                return true;\n            }\n\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n\n        return false;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\r\n\r\nconst camelCache = {};\r\n\r\nexport const camelString = (value) => {\r\n    if (!camelCache.hasOwnProperty(value)) {\r\n        camelCache[value] = camelcaseSlow(value);\r\n    }\r\n\r\n    return camelCache[value];\r\n};\r\n\r\nconst pascalCache = new Map();\r\n\r\nexport const pascalString = (value) => {\r\n    if (!pascalCache.has(value)) {\r\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\r\n    }\r\n\r\n    return pascalCache.get(value);\r\n};\r\n","export default class Property {\r\n    component;\r\n\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.component.ecs;\r\n    }\r\n\r\n    get descriptor() {\r\n        return {\r\n            enumerable: true,\r\n            get: () => this.get(),\r\n            set: (v) => this.set(v),\r\n        };\r\n    }\r\n\r\n    get() {\r\n        return undefined;\r\n    }\r\n\r\n    set(value) {}\r\n\r\n    serialize() {\r\n        return undefined;\r\n    }\r\n\r\n    onDestroyed() {}\r\n\r\n    cleanupReference(entity) {}\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class SimpleProperty extends Property {\r\n    value = null;\r\n\r\n    set(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    get() {\r\n        return this.value;\r\n    }\r\n\r\n    serialize() {\r\n        return this.value;\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\r\n                entity\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityArrayProperty extends Property {\r\n    proxy = [];\r\n\r\n    constructor(component) {\r\n        super(component);\r\n        this.proxy = new Proxy([], {\r\n            get: (target, prop, receiver) => {\r\n                return Reflect.get(target, prop, receiver);\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                const old = Reflect.get(target, prop, receiver);\r\n\r\n                if (typeof value === 'string') {\r\n                    value = this.ecs.entities.get(value);\r\n                }\r\n\r\n                if (old && old != value) {\r\n                    this.ecs.entities.removeRef(value, this);\r\n                }\r\n\r\n                if (value && value.id) {\r\n                    this.ecs.entities.addRef(value.id, this);\r\n\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                return Reflect.set(target, prop, value, receiver);\r\n            },\r\n            deleteProperty: (target, prop) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.deleteProperty(target, prop);\r\n                }\r\n\r\n                const value = Reflect.get(target, prop);\r\n                this.ecs.entities.removeRef(value, this);\r\n\r\n                return Reflect.deleteProperty(target, prop);\r\n            },\r\n        });\r\n    }\r\n\r\n    set(values = []) {\r\n        const len = Math.max(values.length, this.proxy.length);\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            if (i in values) {\r\n                this.proxy[i] = values[i];\r\n            } else {\r\n                delete this.proxy[i];\r\n            }\r\n        }\r\n\r\n        this.proxy.length = values.length;\r\n    }\r\n\r\n    get() {\r\n        return this.proxy;\r\n    }\r\n\r\n    serialize() {\r\n        return this.proxy.map((ref) => ref.id);\r\n    }\r\n\r\n    onDestroyed() {\r\n        this.set([]);\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\r\n    }\r\n}\r\n","import Property from './Property';\r\nimport SimpleProperty from './SimpleProperty';\r\nimport EntityProperty from './EntityProperty';\r\nimport EntityArrayProperty from './EntityArrayProperty';\r\n\r\nexport default class PropertyStrategy {\r\n    static create(component, value) {\r\n        switch (value) {\r\n            case '<Entity>':\r\n                return new EntityProperty(component);\r\n            case '<EntityArray>':\r\n                return new EntityArrayProperty(component);\r\n            default:\r\n                return new SimpleProperty(component);\r\n        }\r\n    }\r\n}\r\n","import { camelString } from './util/string-util';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    entity = null;\r\n    ecs = null;\r\n    _props = {};\r\n    _isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this._isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this._props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this._props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            this.entity = null;\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this._isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this._props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(this.type, this.serialize());\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelString(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this._props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport { camelString } from '../util/string-util';\r\n\r\nexport default class ComponentRegistry {\r\n    _definitions = new Map();\r\n    _ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    register(component) {\r\n        this._definitions.set(component.name, component);\r\n        camelString(component.name); // prime camelcase cache\r\n    }\r\n\r\n    getAccessor(type) {\r\n        return camelString(type);\r\n    }\r\n\r\n    get(typeOrClassOrComponent) {\r\n        const type = this._getType(typeOrClassOrComponent);\r\n\r\n        if (!type) {\r\n            console.warn(\r\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return this._definitions.get(type);\r\n    }\r\n\r\n    create(typeOrClass, properties = {}) {\r\n        const definition = this.get(typeOrClass);\r\n\r\n        if (definition) {\r\n            return new definition(this._ecs, properties);\r\n        }\r\n\r\n        console.warn(\r\n            `Could not create component definition for ${typeOrClass} since it is not registered`\r\n        );\r\n    }\r\n\r\n    _getType(typeOrClassOrComponent) {\r\n        if (typeof typeOrClassOrComponent === 'string') {\r\n            return typeOrClassOrComponent;\r\n        }\r\n\r\n        if (typeOrClassOrComponent instanceof Component) {\r\n            return typeOrClassOrComponent.type;\r\n        }\r\n\r\n        if (typeOrClassOrComponent.prototype instanceof Component) {\r\n            return typeOrClassOrComponent.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    get type() {\r\n        return this.componentDef.type;\r\n    }\r\n\r\n    constructor(componentDef, properties = {}, overwrite = true) {\r\n        this.componentDef = componentDef;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\r\n            if (this.overwrite) {\r\n                entity.remove(this.componentDef);\r\n            } else {\r\n                console.log(\r\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.componentDef, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\r\n                        initialCompProps = initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][arrComps[accessor]]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][arrComps[accessor]];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport PrefabComponent from '../PrefabComponent';\r\nimport Prefab from '../Prefab';\r\n\r\nexport default class PrefabRegistry {\r\n    _prefabs = {};\r\n    _ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(this._ecs, data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        for (const componentData of comps) {\r\n            if (\r\n                typeof componentData === 'string' ||\r\n                componentData.prototype instanceof Component\r\n            ) {\r\n                const def = this._ecs.components.get(componentData);\r\n                if (def) {\r\n                    prefab.addComponent(new PrefabComponent(def));\r\n                }\r\n            } else if (typeof componentData === 'object') {\r\n                const type = componentData.type;\r\n                const def = this._ecs.components.get(type);\r\n                if (def) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            def,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n                }\r\n            } else {\r\n                console.warn(\r\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n                );\r\n            }\r\n        }\r\n\r\n        this.register(prefab);\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(prefab) {\r\n        this._prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(nameOrClassOrPrefab) {\r\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\r\n\r\n        return this._prefabs[name];\r\n    }\r\n\r\n    create(nameOrClass, initialProps = {}) {\r\n        const prefab = this.get(nameOrClass);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = this._ecs.createEntity();\r\n        prefab.applyToEntity(entity, initialProps);\r\n\r\n        return entity;\r\n    }\r\n\r\n    static _getName(nameOrClassOrPrefab) {\r\n        if (typeof nameOrClassOrPrefab === 'string') {\r\n            return nameOrClassOrPrefab;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","export default class EntityEvent {\r\n    data = {};\r\n    _prevented = false;\r\n    _handled = false;\r\n\r\n    get prevented() {\r\n        return this._prevented;\r\n    }\r\n\r\n    get handled() {\r\n        return this._handled;\r\n    }\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this._handled = true;\r\n        this._prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this._prevented = true;\r\n    }\r\n}\r\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    id = null;\r\n    components = {};\r\n    ecs = null;\r\n    _isDestroyed = false;\r\n\r\n    get isDestroyed() {\r\n        return this._isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.ecs = ecs;\r\n        this.id = id || ecs.generateId();\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this._isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        if (typeOrClass instanceof Component) {\r\n            if (typeOrClass.isAttached) {\r\n                console.warn(\r\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return this.attach(typeOrClass);\r\n        }\r\n\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                writable: false,\r\n                value: this.components[accessor],\r\n            });\r\n\r\n            component._onAttached(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    writable: false,\r\n                    value: this.components[accessor],\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                writable: false,\r\n                value: this.components[accessor],\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import { pascalString } from '../util/string-util';\r\nimport Entity from '../Entity';\r\n\r\nexport default class EntityRegistry {\r\n    _entities = new Map();\r\n    _ecs = null;\r\n    _refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this._entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this._entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this._entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this._ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this._ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this._entities.delete(entity.id);\r\n        this._ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this._refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this._refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this._refs.has(entityId)) {\r\n            this._refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this._refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this._refs.has(entityId)) {\r\n            this._refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities ? entities : this._entities;\r\n\r\n        list.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = pascalString(key);\r\n            const definition = this._ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\r\n\r\nexport default class Query {\r\n    _ecs;\r\n    _filter;\r\n    _onEntityAddedCallbacks = [];\r\n    _onEntityRemovedCallbacks = [];\r\n    _cache = new Set();\r\n\r\n    constructor(ecs, filter = {}) {\r\n        this._ecs = ecs;\r\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\r\n        this.bustCache();\r\n    }\r\n\r\n    isMatch(entity) {\r\n        const hasAny = this._filter.any.length\r\n            ? this._filter.any.some((c) => entity.has(c))\r\n            : true;\r\n        const hasAll = this._filter.all.every((c) => entity.has(c));\r\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\r\n\r\n        return hasAny && hasAll && hasNone;\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this._onEntityAddedCallbacks.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this._onEntityRemovedCallbacks.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this._cache.has(entity);\r\n    }\r\n\r\n    candidate(entity) {\r\n        const isTracking = this.has(entity);\r\n\r\n        if (this.isMatch(entity)) {\r\n            if (!isTracking) {\r\n                this._cache.add(entity);\r\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this._cache.delete(entity);\r\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _onEntityCreated(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentAdded(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentRemoved(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onEntityDestroyed(entity) {\r\n        if (this.has(entity)) {\r\n            this._cache.delete(entity);\r\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n    }\r\n\r\n    bustCache() {\r\n        this._cache.clear();\r\n\r\n        for (const entity of this._ecs.entities.all) {\r\n            this.candidate(entity);\r\n        }\r\n\r\n        return this._cache;\r\n    }\r\n\r\n    get() {\r\n        return this._cache;\r\n    }\r\n}\r\n","import Query from '../Query';\r\n\r\nexport default class QueryRegistry {\r\n    _ecs;\r\n    _queries = [];\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    create(filters) {\r\n        const query = new Query(this._ecs, filters);\r\n\r\n        this._queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    onComponentAdded(entity) {\r\n        this._queries.forEach((query) => query._onComponentAdded(entity));\r\n    }\r\n\r\n    onComponentRemoved(entity) {\r\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\r\n    }\r\n\r\n    onEntityCreated(entity) {\r\n        this._queries.forEach((query) => query._onEntityCreated(entity));\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\r\n    }\r\n}\r\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity(id) {\r\n        return this.entities.create(id);\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize(entities) {\r\n        return {\r\n            entities: this.entities.serialize(entities),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n        isFreeFlowing: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty && !this.entity.isDestroying) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    combineFrom(other) {\n        if (this.content !== other.content) {\n            console.warn('Cannot combine different liquid types');\n\n            return false;\n        }\n\n        const sum = this.volume + other.volume;\n\n        if (sum > this.maxVolume) {\n            console.warn(\n                'Container is not large enought to combine both liquids'\n            );\n            this.volume = this.maxVolume;\n\n            other.volume -= sum - this.maxVolume;\n        } else {\n            this.volume += other.volume;\n\n            other.volume -= other.volume;\n        }\n\n        other._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.data.interactor.fireEvent('energy-consumed', 400);\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n\n        evt.data.interactor.fireEvent('energy-consumed', 700);\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_TWIG = 'SPWN_TWIG';\nexport const SPWN_ASH = 'SPWN_ASH';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\nexport const SPWN_LEATHER_BOOTS = 'SPWN_LEATHER_BOOTS';\nexport const SPWN_SHORTSWORD = 'SPWN_SHORTSWORD';\nexport const SPWN_GREATSWORD = 'SPWN_GREATSWORD';\nexport const SPWN_BATTLE_AXE = 'SPWN_BATTLE_AXE';\nexport const SPWN_HATCHET = 'SPWN_HATCHET';\nexport const SPWN_MACE = 'SPWN_MACE';\nexport const SPWN_GROUND_GRASS = 'SPWN_GROUND_GRASS';\nexport const SPWN_GROUND_STONE = 'SPWN_GROUND_STONE';\nexport const SPWN_HEAVY_PLATE_ARMOR = 'SPWN_HEAVY_PLATE_ARMOR';\nexport const SPWN_LEATHER_ARMOR = 'SPWN_LEATHER_ARMOR';\nexport const SPWN_CLOTH_HOOD = 'SPWN_CLOTH_HOOD';\nexport const SPWN_WIZARD_CAP = 'SPWN_WIZARD_CAP';\nexport const SPWN_HELM = 'SPWN_HELM';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_HEAVY_PLATE_ARMOR: simplePrefab('PlateArmor'),\n    SPWN_LEATHER_ARMOR: simplePrefab('LeatherArmor'),\n    SPWN_LEATHER_BOOTS: simplePrefab('Boots'),\n    SPWN_SHORTSWORD: simplePrefab('Shortsword'),\n    SPWN_GREATSWORD: simplePrefab('Greatsword'),\n    SPWN_BATTLE_AXE: simplePrefab('BattleAxe'),\n    SPWN_HATCHET: simplePrefab('Hatchet'),\n    SPWN_MACE: simplePrefab('Mace'),\n    SPWN_GROUND_GRASS: simplePrefab('Grass'),\n    SPWN_GROUND_STONE: simplePrefab('StoneGround'),\n    SPWN_CLOTH_HOOD: simplePrefab('ClothHood'),\n    SPWN_WIZARD_CAP: simplePrefab('WizardCap'),\n    SPWN_HELM: simplePrefab('Helm'),\n    SPWN_TWIG: simplePrefab('Twig'),\n    SPWN_ASH: simplePrefab('Ash'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\nexport const LIQUID_OIL = 4;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_SHORTSWORD } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    const sword = spawn(SPWN_SHORTSWORD);\n\n    goblin.equipmentSlot.handRight.equip(sword);\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const targets = new Set();\n\n        entity.fireEvent('try-detect-hostiles', {\n            targets,\n        });\n\n        if (targets.size > 0) {\n            const target = [...targets][0];\n\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { computeAStar } from '../../utils/AStar';\nimport { game } from '../../core/Game';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { MoveGoalType } from './MoveGoalType';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.isDead || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        // try melee\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        const start = entity.position.getPos();\n        const targetPos = goal.target.position.getPos();\n\n        // try pathing to target\n        const result = computeAStar({\n            start,\n            goal: targetPos,\n            cost: (a, b) => {\n                if (game.map.isOutOfbounds(b.x, b.y)) {\n                    return Infinity;\n                }\n\n                if (b.x === targetPos.x && b.y === targetPos.y) {\n                    return diagonalDistance(a, b);\n                }\n\n                const entities = game.map.getEntitiesAt(b.x, b.y);\n\n                if (entities.some((e) => e.blocker)) {\n                    return Infinity;\n                }\n\n                if (\n                    entities.some(\n                        (e) =>\n                            e.id !== entity.id && e.body && !e.isIncapacitated\n                    )\n                ) {\n                    return Infinity;\n                }\n\n                if (entities.some((e) => e.sharpTrap)) {\n                    return 8;\n                }\n\n                return diagonalDistance(a, b);\n            },\n        });\n\n        if (result.success && result.cost < 55) {\n            const segment = result.path[1];\n            const delta = {\n                x: segment.x - start.x,\n                y: segment.y - start.y,\n            };\n            const moveGoal = MoveGoalType.createAsSubGoal(goal, {\n                data: delta,\n            });\n\n            entity.brain.pushGoal(moveGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        entity.fireEvent('energy-consumed', 1000);\n\n        return FAILURE;\n    };\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y, allowDiagonals = true) => {\n    const neighbors = [\n        {\n            x: x,\n            y: y - 1,\n        },\n        {\n            x: x - 1,\n            y: y,\n        },\n        {\n            x: x + 1,\n            y: y,\n        },\n        {\n            x: x,\n            y: y + 1,\n        },\n    ];\n\n    if (allowDiagonals) {\n        neighbors.push(\n            {\n                x: x - 1,\n                y: y - 1,\n            },\n            {\n                x: x + 1,\n                y: y - 1,\n            },\n            {\n                x: x - 1,\n                y: y + 1,\n            },\n            {\n                x: x + 1,\n                y: y + 1,\n            }\n        );\n    }\n\n    return neighbors;\n};\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(\n            current.x,\n            current.y,\n            settings.allowDiagonals\n        );\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const randomBool = () => {\n    return pickRandom([true, false]);\n};\n\nexport const randomWeightedBool = (weight = 0.5) => {\n    return Math.random() <= weight;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return false;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n\n        return true;\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return false;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        if (this.closeDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        if (this.openDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    take(newOwner) {\n        if (this.entity.isInventoried) {\n            if (this.entity.isInventoried.isOwnedBy(newOwner)) {\n                return true;\n            }\n\n            const owner = this.entity.isInventoried.owner;\n\n            owner.inventory.removeLoot(this.entity);\n        }\n\n        newOwner.inventory.addLoot(this.entity);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        this.take(evt.data.interactor);\n\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        this.take(evt.data.interactor);\n\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n        isOpenable: true,\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        ob.fireEvent('dropped', {\n            dropper: this.entity,\n        });\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpenable) {\n            evt.data.interactions.push({\n                name: 'Open',\n                evt: 'try-open',\n            });\n        }\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\nexport const SCREEN_LIST_SELECT = 8;\nexport const SCREEN_CHARACTER = 9;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_ASH = 'STACKABLE_ASH';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport { ABILITY_THROWING, getAbilityValue } from '../../data/Abilities';\nimport Attack from '../../data/Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../../data/DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../../data/Stats';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { randomInt } from '../../utils/rand';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    static properties = {\n        die: 4,\n        modifier: 0,\n        cost: 500,\n        damageType: DMG_TYPE_BLUDGEONING,\n    };\n\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n\n                    const str = getStat(STAT_STRENGTH, initiator);\n                    const die = randomInt(1, this.die);\n                    const damage = die + str + this.modifier;\n                    const attack = new Attack({\n                        attacker: initiator,\n                        defender: hit,\n                        weaponName: this.entity.moniker.display,\n                        damage,\n                        damageType: this.damageType,\n                        ignoreDodge: true,\n                    });\n\n                    hit.fireEvent('attacked', { attack });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        const range = getAbilityValue(ABILITY_THROWING, evt.data.interactor);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.slice(0, range + 1).map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    const atMaxRange = idx === range;\n\n                    if (lineValid && (body || atMaxRange)) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < blockerIdx && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","import ArmorAbility from './abilities/ArmorAbility';\nimport SpeedAbility from './abilities/SpeedAbility';\nimport ThrowingAbility from './abilities/ThrowingAbility';\nimport DodgeAbility from './abilities/DodgeAbility';\n\nexport const ABILITY_SPEED = 'ABILITY_SPEED';\nexport const ABILITY_THROWING = 'ABILITY_THROWING';\nexport const ABILITY_ARMOR = 'ABILITY_ARMOR';\nexport const ABILITY_DODGE = 'ABILITY_DODGE';\n\nconst lookup = {\n    [ABILITY_ARMOR]: new ArmorAbility(),\n    [ABILITY_SPEED]: new SpeedAbility(),\n    [ABILITY_THROWING]: new ThrowingAbility(),\n    [ABILITY_DODGE]: new DodgeAbility(),\n};\n\nexport const getAbility = (key) => lookup[key];\nexport const getAbilityName = (key) => lookup[key].name;\nexport const getAbilityValue = (key, entity) => lookup[key].compute(entity);\nexport const getAbilityEquippedMod = (key, entity) => {\n    const modifiers = [];\n\n    entity.fireEvent(`query-ability-mod-equipped`, {\n        ability: key,\n        modifiers,\n    });\n\n    return modifiers;\n};\nexport const getAllAbilityEquippedMods = (entity) => {\n    return Object.keys(lookup).reduce(\n        (mods, ability) => ({\n            ...mods,\n            [ability]: getAbilityEquippedMod(ability, entity),\n        }),\n        {}\n    );\n};\nexport const getAllAbilityEquippedModSums = (entity) => {\n    const mods = getAllAbilityEquippedMods(entity);\n\n    return Object.keys(mods).reduce(\n        (all, ability) => ({\n            ...all,\n            [ability]: mods[ability].reduce((sum, mod) => sum + mod.mod, 0),\n        }),\n        {}\n    );\n};\n","import { ABILITY_ARMOR } from '../Abilities';\nimport Ability from './Ability';\n\nexport const getArmorBlockPercent = (ability = 0) => {\n    const base = 10;\n\n    return 1 - base / (ability + base);\n};\n\nexport const getArmorBlockPercentDisplay = (ability = 0) => {\n    const prcnt = getArmorBlockPercent(ability);\n\n    return Math.floor(prcnt * 100);\n};\n\nexport default class ArmorAbility extends Ability {\n    constructor() {\n        super(ABILITY_ARMOR, 'armor');\n    }\n}\n","import { getStat } from '../Stats';\n\nexport default class Ability {\n    key = -1;\n    name = 'ability';\n    baseStat = null;\n\n    constructor(key, name, baseStat) {\n        this.key = key;\n        this.name = name;\n        this.baseStat = baseStat;\n    }\n\n    getModifiers(entity) {\n        const modifiers = [];\n\n        entity.fireEvent(`query-ability-mod`, {\n            name: this.name,\n            ability: this.key,\n            modifiers,\n        });\n\n        return modifiers;\n    }\n\n    getModifierSum(entity) {\n        const modifiers = this.getModifiers(entity);\n\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    compute(entity) {\n        const stat = this.baseStat ? getStat(this.baseStat, entity) : 0;\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","import { randomInt } from '../utils/rand';\n\nexport const STAT_STRENGTH = 0;\nexport const STAT_FINESSE = 1;\nexport const STAT_ATHLETICISM = 2;\nexport const STAT_TRICKERY = 3;\n\nconst lookup = {\n    [STAT_STRENGTH]: {\n        name: 'strength',\n    },\n    [STAT_FINESSE]: {\n        name: 'finesse',\n    },\n    [STAT_ATHLETICISM]: {\n        name: 'athleticism',\n    },\n    [STAT_TRICKERY]: {\n        name: 'trickery',\n    },\n};\n\nexport const getStatName = (stat) => lookup[stat].name;\nexport const getStat = (stat, entity) => {\n    const name = lookup[stat].name;\n\n    return entity.stats[name]();\n};\nexport const rollStat = (stat, entity) => {\n    return randomInt(1, 20) + getStat(stat, entity);\n};\nexport const statCheck = (stat, entity, target) => {\n    return rollStat(stat, entity) >= target;\n};\n","import { ABILITY_SPEED } from '../Abilities';\nimport { STAT_ATHLETICISM } from '../Stats';\nimport Ability from './Ability';\n\nexport const getSpeedPercent = (ability = 0) => {\n    const base = 50;\n    const cost = base / (base + ability);\n\n    return cost;\n};\n\nexport const getSpeedPercentDisplay = (ability = 0) => {\n    const prcnt = getSpeedPercent(ability);\n\n    return Math.floor(prcnt * 100);\n};\n\nexport default class SpeedAbility extends Ability {\n    constructor() {\n        super(ABILITY_SPEED, 'speed', STAT_ATHLETICISM);\n    }\n}\n","import { ABILITY_THROWING } from '../Abilities';\nimport { getStat, STAT_ATHLETICISM } from '../Stats';\nimport Ability from './Ability';\n\nexport default class ThrowingAbility extends Ability {\n    constructor() {\n        super(ABILITY_THROWING, 'throwing', STAT_ATHLETICISM);\n    }\n\n    compute(entity) {\n        const base = getStat(STAT_ATHLETICISM, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return Math.max(0, base + modifier) + 6;\n    }\n}\n","import { ABILITY_DODGE } from '../Abilities';\nimport { STAT_FINESSE } from '../Stats';\nimport Ability from './Ability';\n\nexport const getDodgePercent = (ability = 0) => {\n    const base = 5;\n    const unscaled = 1 - base / (ability + base);\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class DodgeAbility extends Ability {\n    constructor() {\n        super(ABILITY_DODGE, 'dodge', STAT_FINESSE);\n    }\n}\n","export default class Attack {\n    constructor(data) {\n        this.attacker = data.attacker;\n        this.defender = data.defender;\n        this.weaponName = data.weaponName;\n        this.damage = data.damage;\n        this.damageType = data.damageType;\n        this.ignoreDodge = data.ignoreDodge;\n    }\n}\n","export const DMG_TYPE_BLUDGEONING = 'DMG_TYPE_BLUDGEONING';\nexport const DMG_TYPE_PIERCING = 'DMG_TYPE_PIERCING';\nexport const DMG_TYPE_SLASHING = 'DMG_TYPE_SLASHING';\n\nconst lookup = {\n    [DMG_TYPE_BLUDGEONING]: {\n        name: 'Bludgeoning',\n        verb: 'bludgeons',\n    },\n    [DMG_TYPE_PIERCING]: {\n        name: 'Piercing',\n        verb: 'pierces',\n    },\n    [DMG_TYPE_SLASHING]: {\n        name: 'Slashing',\n        verb: 'slashes',\n    },\n};\n\nexport const getDmgTypeName = (type) => lookup[type].name;\nexport const getDmgTypeVerb = (type) => lookup[type].verb;\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#57a5ef',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#57a5ef',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { getDmgTypeVerb } from '../data/DamageTypes';\nimport { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\nexport const CONSOLE_EVENT_MISS = 3;\nexport const CONSOLE_EVENT_BLOCK = 4;\nexport const CONSOLE_EVENT_TRAP_SHARP = 5;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_MISS]: {\n        message(data) {\n            const attacker = getMonikerIndirectObject(data.attacker);\n            const defender = getMonikerSubject(data.defender);\n\n            return `${defender} dodged an attack from ${attacker} (${data.dodgePrcnt}%)`;\n        },\n        shouldAppear(data) {\n            return data.defender.has(IsPlayer) || data.attacker.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n            const dmg = data.damage;\n            const blocked = data.blocked;\n\n            const blockText =\n                blocked > 0 ? `. (${blocked} damage was blocked)` : '';\n\n            return `${source} ${dmgVerb} ${target} for ${dmg} hp${blockText}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n\n            return `${source} ${dmgVerb} ${target} to death`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_TRAP_SHARP]: {\n        message(data) {\n            return `${getMonikerSubject(\n                data.entity\n            )} cuts themselves on ${getMonikerIndirectObject(\n                data.trap\n            )} and begins bleeding`;\n        },\n        shouldAppear(data) {\n            return data.trap.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n        z: 1000,\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { ABILITY_SPEED, getAbilityValue } from '../../data/Abilities';\nimport { Blocker } from './Blocker';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.entity);\n        const cost = (20 / (20 + speed)) * 1000;\n\n        this.entity.fireEvent('energy-consumed', cost);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        adjacent: [],\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\ndirections[DIR_NW].adjacent = [DIR_N, DIR_W];\ndirections[DIR_N].adjacent = [DIR_NW, DIR_NE];\ndirections[DIR_NE].adjacent = [DIR_N, DIR_E];\ndirections[DIR_W].adjacent = [DIR_NW, DIR_SW];\ndirections[DIR_E].adjacent = [DIR_NE, DIR_SE];\ndirections[DIR_SW].adjacent = [DIR_W, DIR_S];\ndirections[DIR_S].adjacent = [DIR_SW, DIR_SE];\ndirections[DIR_SE].adjacent = [DIR_S, DIR_E];\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n\nexport const adjacent = (direction) => directions[direction].adjacent;\n\nexport const getAdjacentDeltas = (direction) => adjacent(direction).map(delta);\n\nexport const directionFromDelta = (x, y) => {\n    return Object.values(directions).find((dir) => {\n        return dir.delta.x === x && dir.delta.y === y;\n    });\n};\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    ABILITY_ARMOR,\n    ABILITY_DODGE,\n    getAbilityValue,\n} from '../../data/Abilities';\nimport { getArmorBlockPercent } from '../../data/abilities/ArmorAbility';\nimport { getDodgePercent } from '../../data/abilities/DodgeAbility';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n    CONSOLE_EVENT_MISS,\n} from '../../enums/ConsoleEvents';\nimport { randomInt } from '../../utils/rand';\nimport { IsDead } from './IsDead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 32,\n        max: 32,\n    };\n\n    applyDamage(damage) {\n        this.value -= damage;\n\n        if (this.value <= 0) {\n            this.value = 0;\n            this.entity.add(IsDead);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    onAttacked(evt) {\n        const attack = evt.data.attack;\n        const attacker = attack.attacker;\n        const defender = attack.defender;\n        const dodge = getAbilityValue(ABILITY_DODGE, defender);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        if (!attack.ignoreDodge && randomInt(1, 100) <= dodgePrcnt) {\n            game.console.event(CONSOLE_EVENT_MISS, {\n                defender,\n                attacker,\n                dodgePrcnt,\n            });\n\n            evt.data.isDodged = true;\n            evt.data.isKilled = false;\n            evt.handle();\n\n            return;\n        }\n\n        evt.data.isDodged = false;\n\n        const armor = getAbilityValue(ABILITY_ARMOR, defender);\n        const armorPrcnt = getArmorBlockPercent(armor);\n        const blocked = Math.floor(attack.damage * armorPrcnt);\n        const damage = attack.damage - blocked;\n\n        const isKilled = this.applyDamage(damage);\n        evt.data.isKilled = isKilled;\n\n        if (isKilled) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: defender,\n                source: attacker,\n                damage,\n                damageType: attack.damageType,\n            });\n\n            evt.handle();\n\n            return;\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: defender,\n            source: attacker,\n            damage,\n            damageType: attack.damageType,\n            blocked,\n        });\n\n        const pos = this.entity.position.getPos();\n\n        game.particles.createParticle(pos.x, pos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['*'],\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDead extends Component {}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Eyes extends Component {\n    static properties = {\n        range: 5,\n    };\n\n    canSee(entity) {\n        const start = this.entity.position.getPos();\n        const end = entity.position.getPos();\n\n        const line = bresenhamLine(start.x, start.y, end.x, end.y);\n\n        if (line.length > this.range) {\n            return false;\n        }\n\n        return !line.some((segment) => {\n            return game.map\n                .getEntitiesAt(segment.x, segment.y)\n                .some((entity) => entity.has(Shadowcaster));\n        });\n    }\n\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        // get within square area\n        const targets = game.map\n            .getEntitiesInRange(position.x, position.y, this.range)\n            .filter((e) => {\n                if (!e.actor) {\n                    return false;\n                }\n                if (e.isDead) {\n                    return false;\n                }\n                if (!game.factions.areEntitiesHostile(this.entity, e)) {\n                    return false;\n                }\n\n                return this.canSee(e);\n            });\n\n        if (targets.length > 0) {\n            targets.forEach((e) => {\n                evt.data.targets.add(e);\n            });\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport {\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_SHORTSWORD,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n} from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(4, SPWN_CLOTH_ARMOR);\ngoblins.add(15, SPWN_SHORTSWORD);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY],\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter(\n            (slot) => {\n                return this.slotTypes.includes(slot.slotType);\n            }\n        );\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Equip ${this.entity.moniker.display}`,\n            list: slots,\n            onRenderRow: (slot, x, y, isSelected) => {\n                let text = slot.name;\n\n                if (!slot.isEmpty) {\n                    text += ` [${slot.content.moniker.display}]`;\n                }\n\n                if (isSelected) {\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n                } else {\n                    game.renderer.drawText(x, y, `- ${text}`);\n                }\n            },\n            onSelect: (slot) => {\n                slot.unequip();\n                slot.equip(this.entity);\n                evt.data.interactor.fireEvent('energy-consumed', 200);\n                evt.handle();\n                game.screens.popScreen();\n            },\n        });\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_HEAD = 'EQ_SLOT_HEAD';\nexport const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\nexport const EQ_SLOT_HAND = 'EQ_SLOT_HAND';\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { getWeaponType, WPN_TYPE_UNARMED } from '../../data/WeaponTypes';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n        isPrimary: false,\n        isOffhand: false,\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.loot.take(this.entity);\n\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n\n    onTryMelee(evt) {\n        if (!this.isPrimary) {\n            return;\n        }\n\n        const map = window.game.map;\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        if (this.isEmpty) {\n            const weaponType = getWeaponType(WPN_TYPE_UNARMED);\n\n            weaponType.attack(this.entity, evt.data.target);\n\n            this.entity.fireEvent('energy-consumed', 600);\n\n            evt.handle();\n            return;\n        }\n\n        this.content.fireEvent('try-use-melee', {\n            interactor: this.entity,\n            target: evt.data.target,\n        });\n\n        evt.handle();\n    }\n\n    onQueryAbilityMod(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        this.content.fireEvent(`query-ability-mod-equipped`, {\n            ability: evt.data.ability,\n            modifiers: evt.data.modifiers,\n        });\n    }\n}\n","import {\n    DMG_TYPE_BLUDGEONING,\n    DMG_TYPE_PIERCING,\n    DMG_TYPE_SLASHING,\n} from './DamageTypes';\nimport {\n    WPN_FAMILY_AXE,\n    WPN_FAMILY_BLADE,\n    WPN_FAMILY_HAMMER,\n    WPN_FAMILY_POLEARM,\n} from './WeaponFamilies';\nimport WpnTypeBattleAxe from './weapons/WpnTypeBattleAxe';\nimport WpnTypeGreatsword from './weapons/WpnTypeGreatsword';\nimport WpnTypeMace from './weapons/WpnTypeMace';\nimport WpnTypeShortsword from './weapons/WpnTypeShortsword';\nimport WpnTypeUnarmed from './weapons/WpnTypeUnarmed';\n\n// hammer family\nexport const WPN_TYPE_WAR_HAMMER = 'WPN_TYPE_WAR_HAMMER';\nexport const WPN_TYPE_SLEDGE_HAMMER = 'WPN_TYPE_SLEDGE_HAMMER';\n// cudgel family\nexport const WPN_TYPE_CLUB = 'WPN_TYPE_CLUB';\nexport const WPN_TYPE_MACE = 'WPN_TYPE_MACE';\n// axe family\nexport const WPN_TYPE_HEAVY_AXE = 'WPN_TYPE_HEAVY_AXE';\nexport const WPN_TYPE_BATTLE_AXE = 'WPN_TYPE_BATTLE_AXE';\n// blade family\nexport const WPN_TYPE_GREATSWORD = 'WPN_TYPE_GREATSWORD';\nexport const WPN_TYPE_SHORTSWORD = 'WPN_TYPE_SHORTSWORD';\nexport const WPN_TYPE_DAGGER = 'WPN_TYPE_DAGGER';\n// polearm family\nexport const WPN_TYPE_STAFF = 'WPN_TYPE_STAFF';\nexport const WPN_TYPE_HALBERD = 'WPN_TYPE_HALBERD';\nexport const WPN_TYPE_JAVELIN = 'WPN_TYPE_JAVELIN';\n// unarmed family\nexport const WPN_TYPE_UNARMED = 'WPN_TYPE_UNARMED';\n\nconst lookup = {\n    [WPN_TYPE_UNARMED]: new WpnTypeUnarmed(),\n    [WPN_TYPE_WAR_HAMMER]: {\n        name: 'War hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_WAR_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_SLEDGE_HAMMER]: {\n        name: 'Sledge hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_SLEDGE_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_CLUB]: {\n        name: 'Club',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_CLUB,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_MACE]: {\n        name: 'Mace',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_MACE,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HEAVY_AXE]: {\n        name: 'Heavy axe',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HEAVY_AXE,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_BATTLE_AXE]: new WpnTypeBattleAxe(),\n    [WPN_TYPE_GREATSWORD]: new WpnTypeGreatsword(),\n    [WPN_TYPE_SHORTSWORD]: new WpnTypeShortsword(),\n    [WPN_TYPE_MACE]: new WpnTypeMace(),\n    [WPN_TYPE_DAGGER]: {\n        name: 'Dagger',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_DAGGER,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_STAFF]: {\n        name: 'Staff',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_STAFF,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HALBERD]: {\n        name: 'Halberd',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_HALBERD,\n        damageType: DMG_TYPE_PIERCING,\n    },\n    [WPN_TYPE_JAVELIN]: {\n        name: 'Javelin',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_JAVELIN,\n        damageType: DMG_TYPE_PIERCING,\n    },\n};\n\nexport const getWeaponType = (type) => lookup[type];\nexport const getWeaponTypeName = (type) => lookup[type].name;\nexport const getWeaponTypeFamily = (type) => lookup[type].family;\nexport const getWeaponTypeDmgType = (type) => lookup[type].damageType;\n","export const WPN_FAMILY_HAMMER = 'WPN_FAMILY_HAMMER';\nexport const WPN_FAMILY_AXE = 'WPN_FAMILY_AXE';\nexport const WPN_FAMILY_BLADE = 'WPN_FAMILY_BLADE';\nexport const WPN_FAMILY_ARCHERY = 'WPN_FAMILY_ARCHERY';\nexport const WPN_FAMILY_POLEARM = 'WPN_FAMILY_POLEARM';\nexport const WPN_FAMILY_UNARMED = 'WPN_FAMILY_UNARMED';\nexport const WPN_FAMILY_CUDGEL = 'WPN_FAMILY_CUDGEL';\n\nconst lookup = {\n    [WPN_FAMILY_HAMMER]: {\n        name: 'Hammer',\n    },\n    [WPN_FAMILY_AXE]: {\n        name: 'Axe',\n    },\n    [WPN_FAMILY_BLADE]: {\n        name: 'Blade',\n    },\n    [WPN_FAMILY_ARCHERY]: {\n        name: 'Archery',\n    },\n    [WPN_FAMILY_POLEARM]: {\n        name: 'Polearm',\n    },\n    [WPN_FAMILY_UNARMED]: {\n        name: 'Unarmed',\n    },\n    [WPN_FAMILY_CUDGEL]: {\n        name: 'Cudgel',\n    },\n};\n\nexport const getWeaponFamilyName = (family) => lookup[family].name;\n","import { randomBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_AXE } from '../WeaponFamilies';\nimport { WPN_TYPE_BATTLE_AXE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeBattleAxe extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_BATTLE_AXE,\n            name: 'Battle axe',\n            family: WPN_FAMILY_AXE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (!result.data.isDodged && !result.data.isKilled && randomBool()) {\n            const secondAttack = this._createAttack(attacker, defender, weapon);\n\n            attacks.push(secondAttack);\n\n            defender.fireEvent('attacked', { attack });\n        }\n\n        return attacks;\n    }\n}\n","import { getDmgTypeName } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { getWeaponFamilyName } from '../WeaponFamilies';\n\nexport default class WeaponType {\n    constructor(data) {\n        this.name = data.name;\n        this.family = data.family;\n        this.key = data.key;\n        this.damageType = data.damageType;\n    }\n\n    weaponDamageText(user, weapon) {\n        let text = `1d${weapon.die}`;\n        const str = getStat(STAT_STRENGTH, user);\n        const mod = weapon.modifier + str;\n\n        if (mod) {\n            if (mod > 0) {\n                text += ` + ${mod}`;\n            } else {\n                text += ` - ${Math.abs(mod)}`;\n            }\n        }\n\n        return text;\n    }\n\n    getShortDescription(user, weapon) {\n        const fam = getWeaponFamilyName(this.family);\n\n        return `${fam}, ${this.weaponDamageText(user, weapon)}`;\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        return [];\n    }\n\n    attack(attacker, defender, weapon) {\n        const attacks = this.getAttacks(attacker, defender, weapon);\n\n        return attacks.map((attack) => {\n            attack.defender.fireEvent('attacked', { attack });\n        });\n    }\n}\n","import { game } from '../../core/Game';\nimport { getAdjacentDeltas, directionFromDelta } from '../../enums/Directions';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_GREATSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeGreatsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_GREATSWORD,\n            name: 'Greatsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _getNeighborAttacks(attacker, defender, weapon, damage) {\n        const attackerPos = attacker.position.getPos();\n        const defenderPos = defender.position.getPos();\n        const deltaX = defenderPos.x - attackerPos.x;\n        const deltaY = defenderPos.y - attackerPos.y;\n        const direction = directionFromDelta(deltaX, deltaY);\n        const adjacentDeltas = getAdjacentDeltas(direction.key);\n\n        return adjacentDeltas\n            .map((delta) =>\n                game.map.getEntitiesAt(\n                    attackerPos.x + delta.x,\n                    attackerPos.y + delta.y\n                )\n            )\n            .flat()\n            .filter((e) => game.factions.areEntitiesHostile(e, attacker))\n            .map((hostile) => {\n                return new Attack({\n                    attacker,\n                    ignoreDodge: true,\n                    defender: hostile,\n                    weaponName: weapon.name,\n                    damage: Math.floor(damage / 2),\n                    damageType: this.damageType,\n                });\n            });\n    }\n\n    _tryAttackDefender(attacker, defender, weapon, damage) {\n        const attack = new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n\n        return defender.fireEvent('attacked', { attack });\n    }\n\n    attack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n        const result = this._tryAttackDefender(\n            attacker,\n            defender,\n            weapon,\n            damage\n        );\n\n        const attacks = [result];\n\n        if (!result.data.isDodged) {\n            const neighborAttacks = this._getNeighborAttacks(\n                attacker,\n                defender,\n                weapon,\n                damage\n            );\n\n            neighborAttacks.forEach((attack) => {\n                attacks.push(attack);\n                attack.defender.fireEvent('attacked', { attack });\n            });\n        }\n\n        return attacks;\n    }\n}\n","import { randomBool, randomWeightedBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { addStatus, STATUS_STUNNED } from '../Statuses';\nimport { WPN_FAMILY_CUDGEL } from '../WeaponFamilies';\nimport { WPN_TYPE_MACE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeMace extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_MACE,\n            name: 'Mace',\n            family: WPN_FAMILY_CUDGEL,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (\n            !result.data.isDodged &&\n            !result.data.isKilled &&\n            randomWeightedBool(0.5)\n        ) {\n            addStatus(STATUS_STUNNED, defender);\n        }\n\n        return attacks;\n    }\n}\n","import { Status } from '../ecs/components';\nimport StatusBleeding from './statuses/StatusBleeding';\nimport StatusStunned from './statuses/StatusStunned';\n\nexport const STATUS_BLEEDING = 'STATUS_BLEEDING';\nexport const STATUS_STUNNED = 'STATUS_STUNNED';\n\nconst lookup = {\n    STATUS_BLEEDING: new StatusBleeding(),\n    STATUS_STUNNED: new StatusStunned(),\n};\n\nexport const getStatus = (key) => lookup[key];\nexport const addStatus = (key, entity) => {\n    return entity.add(Status, {\n        key,\n    });\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { SPWN_POOL_LIQUID } from '../Spawnables';\nimport { spawn } from '../Spawner';\nimport { STATUS_BLEEDING } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusBleeding extends Status {\n    constructor() {\n        super(STATUS_BLEEDING, 'Bleeding', STATUS_TYPE_CONDITION);\n    }\n\n    getDmgPerTurn(potency) {\n        return 3 * potency + 0.5;\n    }\n\n    update(ticks, entity, status) {\n        const tick = Math.min(ticks, status.remainingLifetime());\n        const dmgPerTurn = this.getDmgPerTurn(status.potency);\n        const damage = dmgPerTurn * (tick / 1000);\n\n        entity.health.applyDamage(damage);\n\n        const position = entity.position.getPos();\n\n        spawn(SPWN_POOL_LIQUID, position.x, position.y, {\n            content: LIQUID_BLOOD,\n            volume: Math.ceil(damage * 6),\n        });\n\n        status.lifetime += tick;\n    }\n}\n","export const STATUS_TYPE_CONDITION = 'STATUS_TYPE_CONDITION';\n","export default class Status {\n    constructor(key, name, type) {\n        this.key = key;\n        this.name = name;\n        this.type = type;\n    }\n}\n","import { game } from '../../core/Game';\nimport { IsIncapacitated } from '../../ecs/components';\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { STATUS_STUNNED } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusStunned extends Status {\n    constructor() {\n        super(STATUS_STUNNED, 'Stunned', STATUS_TYPE_CONDITION);\n    }\n\n    update(ticks, entity, status) {\n        status.lifetime += ticks;\n\n        if (!entity.isIncapacitated) {\n            entity.add(IsIncapacitated);\n\n            const pos = entity.position.getPos();\n\n            game.particles.createParticle(pos.x, pos.y, {\n                lifetime: 140,\n                fg1s: ['yellow'],\n                glyphs: ['*'],\n            });\n        }\n\n        if (status.isCompleted()) {\n            entity.remove(IsIncapacitated);\n        }\n    }\n}\n","import Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_SHORTSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeShortsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_SHORTSWORD,\n            name: 'Shortsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: weapon.name,\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { pickRandom, randomInt } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\nimport { WPN_TYPE_UNARMED } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeUnarmed extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_UNARMED,\n            name: 'Unarmed',\n            family: WPN_FAMILY_UNARMED,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = randomInt(1, 4);\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: pickRandom(['punch', 'kick']),\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { Component } from 'geotic';\nimport { capitalize } from 'rot-js/lib/util';\nimport {\n    getStatName,\n    STAT_ATHLETICISM,\n    STAT_FINESSE,\n    STAT_STRENGTH,\n    STAT_TRICKERY,\n} from '../../data/Stats';\n\nexport class Stats extends Component {\n    static properties = {\n        baseStrength: 0,\n        baseFinesse: 0,\n        baseAthleticism: 0,\n        baseTrickery: 0,\n    };\n\n    _sumMods(modifiers) {\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    getStatModifiers(stat) {\n        const name = getStatName(stat);\n        const modifiers = [];\n\n        this.entity.fireEvent(`query-stat-modifier-${name}`, {\n            modifiers,\n        });\n\n        return modifiers;\n    }\n\n    getStatModifierSum(stat) {\n        const mods = this.getStatModifiers(stat);\n\n        return this._sumMods(mods);\n    }\n\n    data(stat) {\n        const name = getStatName(stat);\n        const modifiers = this.getStatModifiers(stat);\n        const base = this[`base${capitalize(name)}`];\n        const modSum = this._sumMods(modifiers);\n        const sum = base + modSum;\n\n        return {\n            stat,\n            name,\n            modifiers,\n            base,\n            sum,\n            modSum,\n        };\n    }\n\n    all() {\n        return {\n            strength: this.data(STAT_STRENGTH),\n            finesse: this.data(STAT_FINESSE),\n            athleticism: this.data(STAT_ATHLETICISM),\n            trickery: this.data(STAT_TRICKERY),\n        };\n    }\n\n    strength() {\n        const mod = this.getStatModifierSum(STAT_STRENGTH);\n\n        return this.baseStrength + mod;\n    }\n\n    finesse() {\n        const mod = this.getStatModifierSum(STAT_FINESSE);\n\n        return this.baseFinesse + mod;\n    }\n\n    athleticism() {\n        const mod = this.getStatModifierSum(STAT_ATHLETICISM);\n\n        return this.baseAthleticism + mod;\n    }\n\n    trickery() {\n        const mod = this.getStatModifierSum(STAT_TRICKERY);\n\n        return this.baseTrickery + mod;\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { Component } from 'geotic';\nimport { ABILITY_SPEED } from '../../data/Abilities';\nimport { getRaceData, RACE_HUMAN } from '../../data/Races';\n\nexport class Race extends Component {\n    static properties = {\n        key: RACE_HUMAN,\n    };\n\n    data() {\n        return getRaceData(this.key);\n    }\n\n    get name() {\n        return this.data().name;\n    }\n\n    get speed() {\n        return this.data().speed;\n    }\n\n    get strengthMod() {\n        return this.data().modStrength;\n    }\n\n    get finesseMod() {\n        return this.data().modFinesse;\n    }\n\n    get athleticismMod() {\n        return this.data().modAthleticism;\n    }\n\n    get trickeryMod() {\n        return this.data().modTrickery;\n    }\n\n    onQueryStatModifierStrength(evt) {\n        const mod = this.strengthMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierFinesse(evt) {\n        const mod = this.finesseMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierAthleticism(evt) {\n        const mod = this.athleticismMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierTrickery(evt) {\n        const mod = this.trickeryMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryAbilityMod(evt) {\n        if (evt.data.ability === ABILITY_SPEED) {\n            const mod = this.speed;\n\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n}\n","import RaceData from './RaceData';\n\nexport const RACE_HUMAN = 'RACE_HUMAN';\nexport const RACE_GOBLIN = 'RACE_GOBLIN';\n\nconst lookup = {\n    [RACE_HUMAN]: new RaceData({\n        name: 'Human',\n        key: RACE_HUMAN,\n        speed: 1,\n        modStrength: 1,\n        modFinesse: 1,\n        modAthleticism: 1,\n        modTrickery: 1,\n    }),\n    [RACE_GOBLIN]: new RaceData({\n        name: 'Goblin',\n        key: RACE_GOBLIN,\n        speed: 2,\n        modStrength: -1,\n        modFinesse: 2,\n        modAthleticism: 1,\n        modTrickery: 2,\n    }),\n};\n\nexport const getRaceData = (name) => lookup[name];\n","export default class RaceData {\n    name = '';\n    speed = 1;\n    key = 1;\n    modStrength = 0;\n    modFinesse = 0;\n    modAthleticism = 0;\n    modTrickery = 0;\n\n    constructor(data) {\n        this.name = data.name || '';\n        this.speed = data.speed || 1;\n        this.key = data.key;\n\n        this.modStrength = data.modStrength || 0;\n        this.modFinesse = data.modFinesse || 0;\n        this.modAthleticism = data.modAthleticism || 0;\n        this.modTrickery = data.modTrickery || 0;\n    }\n}\n","import { Component } from 'geotic';\nimport {\n    getWeaponType,\n    getWeaponTypeDmgType,\n    getWeaponTypeFamily,\n    getWeaponTypeName,\n} from '../../data/WeaponTypes';\nimport { randomInt } from '../../utils/rand';\n\nexport class Weapon extends Component {\n    static properties = {\n        weaponType: 'WPN_TYPE_DAGGER',\n        die: 6,\n        modifier: 0,\n        cost: 600,\n    };\n\n    get name() {\n        return getWeaponTypeName(this.weaponType);\n    }\n\n    get family() {\n        return getWeaponTypeFamily(this.weaponType);\n    }\n\n    get damageType() {\n        return getWeaponTypeDmgType(this.weaponType);\n    }\n\n    getShortDescription(user) {\n        return getWeaponType(this.weaponType).getShortDescription(user, this);\n    }\n\n    roll() {\n        const r = randomInt(1, this.die);\n\n        return r + this.modifier;\n    }\n\n    onTryUseMelee(evt) {\n        const weaponType = getWeaponType(this.weaponType);\n\n        weaponType.attack(evt.data.interactor, evt.data.target, this);\n\n        evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { STATUS_BLEEDING } from '../../data/Statuses';\n\nexport class Status extends Component {\n    static allowMultiple = true;\n    static properties = {\n        key: STATUS_BLEEDING,\n        duration: 4000,\n        lifetime: 0,\n        potency: 0.5,\n    };\n\n    remainingLifetime() {\n        return this.duration - this.lifetime;\n    }\n\n    isCompleted() {\n        return this.lifetime >= this.duration;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Ground extends Component {}\n","import { Component } from 'geotic';\n\nexport class IsIncapacitated extends Component {}\n","import { Component } from 'geotic';\nimport { statCheck, STAT_FINESSE } from '../../data/Stats';\n\nexport class SharpTrap extends Component {\n    static properties = {\n        challenge: 15,\n    };\n\n    test(entity) {\n        return statCheck(STAT_FINESSE, entity, this.challenge);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class EquippedAbilityMod extends Component {\n    static allowMultiple = true;\n    static properties = {\n        ABILITY_ARMOR: 0,\n        ABILITY_SPEED: 0,\n        ABILITY_THROWING: 0,\n        ABILITY_DODGE: 0,\n    };\n\n    onQueryAbilityModEquipped(evt) {\n        const mod = this[evt.data.ability];\n\n        if (mod) {\n            evt.data.modifiers.push({\n                source: this.entity.moniker.name,\n                mod,\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { randomWeightedBool } from '../../utils/rand';\nimport { Fire } from './Fire';\n\nexport class Combustible extends Component {\n    static properties = {\n        fuel: 200,\n        flashPoint: 200,\n        spawnableRemains: null,\n        burnRate: 5,\n    };\n\n    get isOnFire() {\n        return !!this.entity.fire;\n    }\n\n    get isOutOfFuel() {\n        return this.fuel <= 0;\n    }\n\n    getTemperature() {\n        const pos = this.entity.position.getPos();\n\n        return game.temperature.getTemperature(pos.x, pos.y);\n    }\n\n    setTemperature(value) {\n        const pos = this.entity.position.getPos();\n\n        return game.temperature.setTemperature(pos.x, pos.y, value);\n    }\n\n    getDieOutChance() {\n        return 0.01;\n    }\n\n    getSparkChance() {\n        return this.getTemperature() / 1000;\n    }\n\n    getCatchChance(intensity) {\n        if (this.fuel <= 0) {\n            return 0;\n        }\n\n        const temperature = this.getTemperature();\n\n        return (temperature * intensity) / 1000;\n    }\n\n    onSpark(evt) {\n        if (this.isOnFire) {\n            return;\n        }\n\n        const intensity = evt.data.intensity;\n\n        if (randomWeightedBool(this.getCatchChance(intensity))) {\n            this.entity.add(Fire, {\n                intensity,\n            });\n            this.setTemperature(this.flashPoint);\n        }\n    }\n\n    onTryIgnite(evt) {\n        this.entity.add(Fire, {\n            intensity: 3,\n        });\n        this.setTemperature(this.flashPoint);\n    }\n\n    onGetInteractions(evt) {\n        if (!this.isOnFire && !this.entity.isInventoried) {\n            evt.data.interactions.push({\n                name: 'Ignite',\n                evt: 'try-ignite',\n                intensity: 3,\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Fire extends Component {\n    static properties = {\n        intensity: 3,\n    };\n\n    extinguish() {\n        this.destroy();\n    }\n\n    onTryExtinguish(evt) {\n        this.extinguish();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Extinguish',\n            evt: 'try-extinguish',\n        });\n    }\n}\n","import { Component } from 'geotic';\n\nexport class ThermalCapacity extends Component {\n    static properties = {\n        value: 0.5,\n    };\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { game } from '../core/Game';\nimport { lerpHSL } from '../utils/ColorUtil';\nimport System from './System';\n\nconst RENDER_MODE_DEFAULT = 0;\nconst RENDER_MODE_TEMPERATURE = 1;\n\nconst temperatureGradient = (v) => {\n    const blue = [216, 40, 50];\n    const red = [0, 80, 50];\n    const rgb = lerpHSL(blue, red, Math.sqrt(v));\n\n    return `rgb(${rgb[0]},${rgb[1]},${rgb[2]})`;\n};\n\nconst modeLookup = {\n    [RENDER_MODE_DEFAULT]: (x, y, e) => {\n        if (e.isVisible) {\n            game.renderer.draw(\n                x,\n                y,\n                e.glyph.char,\n                e.glyph.primary,\n                e.glyph.secondary,\n                e.glyph.background\n            );\n        } else if (e.explored) {\n            game.renderer.draw(x, y, e.glyph.char, '#2c3538', '#2c3538');\n        }\n    },\n    [RENDER_MODE_TEMPERATURE]: (x, y, e, worldX, worldY) => {\n        const temp = game.temperature.getTemperature(worldX, worldY) / 200;\n        const bg = temperatureGradient(Math.min(1, temp));\n\n        if (e.isVisible) {\n            game.renderer.draw(\n                x,\n                y,\n                e.glyph.char,\n                e.glyph.primary,\n                e.glyph.secondary,\n                bg\n            );\n        } else {\n            game.renderer.draw(x, y, e.glyph.char, '#2c3538', '#2c3538', bg);\n        }\n    },\n};\n\nexport default class RenderSystem extends System {\n    mode = RENDER_MODE_DEFAULT;\n\n    renderTile(x, y) {\n        const world = this.game.camera.screenToWorld(x, y);\n\n        if (!this.game.camera.isInView(world.x, world.y)) {\n            return;\n        }\n\n        const entities = this.game.map\n            .getEntitiesAt(world.x, world.y, true)\n            .filter((e) => e.glyph && !e.isInventoried && !e.isDestroying);\n\n        if (entities.length <= 0) {\n            return;\n        }\n\n        let renderableZ = -1;\n        let renderable = null;\n\n        entities.forEach((e) => {\n            if (e.glyph.z >= renderableZ) {\n                renderable = e;\n                renderableZ = e.glyph.z;\n            }\n        });\n\n        modeLookup[this.mode](x, y, renderable, world.x, world.y);\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        for (let x = 0; x < this.game.camera.width; x++) {\n            for (let y = 0; y < this.game.camera.height; y++) {\n                this.renderTile(x, y);\n            }\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { Moniker, Actor, IsPlayer, IsInventoried, IsVisible } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    showTicks = false;\n    beingsQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.beingsQuery = this.game.ecs.createQuery({\n            all: [Moniker, Actor, IsVisible],\n            none: [IsPlayer, IsInventoried],\n        });\n    }\n\n    update(dt) {\n        if (this.showTicks) {\n            const turn = this.game.clock.turn;\n            const subTurn = `${this.game.clock.subTurn.toFixed(0)}`.padEnd(3, '0');\n\n            const str = `${turn}.${subTurn}`;\n            const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n            this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n        }\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(\n            0,\n            0,\n            `${Math.round(hp.value)}/${hp.max}`,\n            '#ce5454'\n        );\n\n        let offsetY = 3;\n\n        this.beingsQuery.get().forEach((entity) => {\n            this.game.renderer.drawText(0, offsetY, entity.moniker.display);\n            // this.game.renderer.drawText(\n            //     0,\n            //     0,\n            //     `${Math.round(hp.value)}/${hp.max}`,\n            //     '#ce5454'\n            // );\n            offsetY += 1;\n        });\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    _commands = {};\n    _domainStack = [INPUT_DOMAIN_DEFAULT];\n    _inputStack = [];\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    onInputEvent(evt) {\n        this._inputStack.push(evt);\n    }\n\n    getNextCommand() {\n        const evt = this._inputStack.shift();\n\n        if (evt) {\n            return this.getCommandForInputEvent(evt);\n        }\n    }\n\n    pushDomain(domain) {\n        this._domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this._domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this._domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this._commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this._domainStack.length - 1; i >= 0; i--) {\n            const domain = this._domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this._commands[command.domain]) {\n            this._commands[command.domain] = [];\n        }\n\n        this._commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n    KEY_Y,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_CHARACTER,            'character',              true, KEY_Y,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\nexport const INPUT_CMD_CHARACTER = 30;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_LIST_SELECT,\n    SCREEN_CHARACTER,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport ListSelectionScreen from './screens/ListSelectionScreen';\nimport CharacterScreen from './screens/CharacterScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\n            [SCREEN_CHARACTER]: new CharacterScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    replaceScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_CHARACTER,\n    SCREEN_LIST_SELECT,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const items = entities.filter((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n\n            return evt.data.interactions.length > 0;\n        });\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        if (items.length == 1) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: items[0],\n            });\n            return;\n        }\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Choose`,\n            list: items,\n            onGetRowName: (item) => item.moniker.display,\n            onSelect: (item) => {\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\n                    interactor: this.game.player.entity,\n                    interactable: item,\n                });\n            },\n        });\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CHARACTER) {\n            this.game.screens.pushScreen(SCREEN_CHARACTER, {\n                character: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n\n        if (!this.game.state.isStarted) {\n            this.game.music.play('BARDS_TALE');\n        }\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    inputCommand() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.inputCommand();\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `sleepy crawler`, 'cyan');\n\n        this.game.renderer.drawText(\n            1,\n            4,\n            `move       [q, w, e, a, d, z, x, c]`\n        );\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderSystem.update(dt);\n\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454', '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InventoryScreen extends Screen {\n    #accessible;\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n        this.list.setItems(this.#accessible.inventory.content);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interactable = this.list.selected;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        if (this.list.items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            const textLen = this.game.renderer.computeTextWidth(\n                item.moniker.display\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n\n            if (item.isEquipped) {\n                const slot = item.isEquipped.slot.name;\n\n                this.game.renderer.drawText(\n                    4 + textLen + 0.5,\n                    ypos,\n                    `[${slot}]`,\n                    '#2c3538'\n                );\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","export default class SelectableList {\n    _items = [];\n    _idx = 0;\n\n    get selected() {\n        return this._items[this._idx];\n    }\n\n    get items() {\n        return this._items;\n    }\n\n    get data() {\n        return this._items.map((item, idx) => ({\n            item,\n            idx,\n            isSelected: idx === this._idx,\n        }));\n    }\n\n    get isEmpty() {\n        return this._items.length <= 0;\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    constructor(items = [], idx = 0) {\n        this._idx = idx;\n        this.setItems(items);\n    }\n\n    setItems(items = []) {\n        this._items = items;\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\n    }\n\n    up() {\n        this._idx--;\n\n        if (this._idx < 0) {\n            this._idx = this._items.length - 1;\n        }\n    }\n\n    down() {\n        this._idx++;\n\n        if (this._idx >= this._items.length) {\n            this._idx = 0;\n        }\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport {\n    getAbilityName,\n    getAllAbilityEquippedMods,\n    getAllAbilityEquippedModSums,\n} from '../../../data/Abilities';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 12;\n    #interactable;\n    #interactor;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.#width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.#height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.list.setItems([\n            ...evt.data.interactions,\n            {\n                name: 'Back',\n                isBack: true,\n            },\n        ]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interaction = this.list.selected;\n\n        if (interaction.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.#interactable.fireEvent(interaction.evt, {\n            interactor: this.#interactor,\n        });\n\n        if (this.#interactable.isDestroyed) {\n            this.game.screens.popScreen();\n\n            return;\n        }\n\n        this.refreshList();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width + 1,\n            this.#height + 1\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        let listPadding = 4;\n        const xpos = this.left + 2;\n\n        if (this.#interactable.weapon) {\n            const weaponDmg = this.#interactable.weapon.getShortDescription(\n                this.#interactor\n            );\n\n            this.game.renderer.drawText(\n                xpos,\n                this.top + listPadding,\n                weaponDmg\n            );\n\n            listPadding += 2;\n        }\n\n        const modifiers = getAllAbilityEquippedModSums(this.#interactable);\n        let hasMod = false;\n\n        Object.keys(modifiers).forEach((ability) => {\n            const modifier = modifiers[ability];\n\n            if (modifier === 0) {\n                return;\n            }\n\n            hasMod = true;\n\n            const name = getAbilityName(ability);\n            const ypos = this.top + listPadding;\n\n            this.game.renderer.drawText(xpos, ypos, name);\n            const len = this.game.renderer.computeTextWidth(name);\n\n            if (modifier > 0) {\n                this.game.renderer.drawText(\n                    xpos + len,\n                    ypos,\n                    ` +${modifier}`,\n                    'green'\n                );\n            } else {\n                this.game.renderer.drawText(\n                    xpos + len,\n                    ypos,\n                    ` -${modifier}`,\n                    'red'\n                );\n            }\n\n            listPadding++;\n        });\n\n        if (hasMod) {\n            listPadding++;\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + this.top + listPadding;\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    xpos,\n                    ypos,\n                    `→ ${item.name}`,\n                    'yellow'\n                );\n            } else {\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\n            }\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { FactionMember } from '../../../ecs/components';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        const target = this.game.cursor\n            .getEntities()\n            .filter((e) => e.has(FactionMember))\n            .pop();\n\n        const player = this.game.player.entity;\n\n        if (target) {\n            const faction = target.factionMember.faction;\n            const relation = this.game.factions.getEntityRelation(\n                player,\n                target\n            );\n\n            let disp = this.game.factions.getDisplay(relation);\n\n            this.game.renderer.drawTextCenter(\n                1,\n                `${faction.display} Faction [${disp}]`\n            );\n        }\n\n        const tmpC = this.game.temperature.getTemperature(\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        const tmpF = (tmpC * 9) / 5 + 32;\n\n        this.game.renderer.drawText(\n            this.game.camera.width - 12,\n            this.game.camera.height - 1,\n            `${Math.round(tmpF)}°F (${Math.round(tmpC)}°C)`\n        );\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.music.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.temperature.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class EquipmentScreen extends Screen {\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessor = ctx.accessor;\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectSlot() {\n        const interactable = this.list.selected.content;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectSlot();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\n            'purple'\n        );\n\n        if (this.list.isEmpty) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const slot = item;\n            const ypos = idx + 5;\n            const selectedColor = 'yellow';\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    1,\n                    ypos,\n                    `→ ${slot.name}`,\n                    selectedColor\n                );\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\n            }\n\n            if (slot.isEmpty) {\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\n            } else {\n                const content = slot.content;\n                this.game.renderer.draw(\n                    15,\n                    ypos,\n                    content.glyph.char,\n                    content.glyph.primary,\n                    content.glyph.secondary,\n                    content.glyph.background\n                );\n                this.game.renderer.drawText(\n                    16,\n                    ypos,\n                    ` ${content.moniker.display}`\n                );\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport Simple from 'rot-js/lib/scheduler/simple';\n\nconst NOOP = () => {};\n\nexport default class ListSelectionScreen extends Screen {\n    width = 16;\n    height = 12;\n    list = new SelectableList();\n    header = '';\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.list.setItems(ctx.list || []);\n        this.header = ctx.header || 'Select';\n        this.onSelect = ctx.onSelect || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onGetRowName = ctx.onGetRowName || NOOP;\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        this.onSelect(this.list.selected);\n    }\n\n    cancel() {\n        this.onCancel();\n        this.game.screens.popScreen();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.cancel();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    defaultRowRender(row, x, y, isSelected) {\n        const text = this.onGetRowName(row, x, y, isSelected);\n\n        if (isSelected) {\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n        } else {\n            this.game.renderer.drawText(x, y, `- ${text}`);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.width + 1,\n            this.height + 1\n        );\n\n        this.game.renderer.drawTextCenter(this.top + 2, this.header);\n\n        for (let i = this.left; i < this.left + this.width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.height, '└');\n        this.game.renderer.draw(\n            this.left + this.width,\n            this.top + this.height,\n            '┘'\n        );\n\n        const xpos = this.left + 2;\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + this.top + 4;\n\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\n        });\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport {\n    ABILITY_ARMOR,\n    ABILITY_DODGE,\n    ABILITY_SPEED,\n    getAbilityValue,\n} from '../../../data/Abilities';\nimport { getSpeedPercentDisplay } from '../../../data/abilities/SpeedAbility';\nimport { getArmorBlockPercentDisplay } from '../../../data/abilities/ArmorAbility';\nimport { getDodgePercent } from '../../../data/abilities/DodgeAbility';\n\nexport default class CharacterScreen extends Screen {\n    character;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.character = ctx.character;\n\n        const stats = this.character.stats.all();\n\n        this.list = new SelectableList(Object.values(stats));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        // if (cmd.type === INPUT_CMD_CONFIRM) {\n        //     this.selectItem();\n        // }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.character.moniker.display} Character ~`,\n            'orange'\n        );\n\n        const health = this.character.health.value;\n        const healthMax = this.character.health.max;\n\n        this.game.renderer.drawText(2, 5, 'health');\n        this.game.renderer.drawText(10, 5, `${health}/${healthMax}`);\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.character);\n        const speedPrcnt = getSpeedPercentDisplay(speed);\n\n        this.game.renderer.drawText(2, 6, 'speed');\n        this.game.renderer.drawText(\n            10,\n            6,\n            `+${speed} (${100 - speedPrcnt}% less movement cost)`\n        );\n\n        const armor = getAbilityValue(ABILITY_ARMOR, this.character);\n        const armorPrcnt = getArmorBlockPercentDisplay(armor);\n\n        this.game.renderer.drawText(2, 7, 'armor');\n        this.game.renderer.drawText(\n            10,\n            7,\n            `+${armor} (${armorPrcnt}% less melee damage taken)`\n        );\n\n        const dodge = getAbilityValue(ABILITY_DODGE, this.character);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        this.game.renderer.drawText(2, 8, 'dodge');\n        this.game.renderer.drawText(\n            10,\n            8,\n            `+${dodge} (${dodgePrcnt}% chance to avoid a melee attack)`\n        );\n\n        let pad = 0;\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const stat = item;\n            const ypos = idx + 13 + pad;\n            const modDir = stat.modSum > 0 ? '+' : '-';\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    1,\n                    ypos,\n                    `→ ${stat.name}`,\n                    'yellow'\n                );\n                this.game.renderer.drawText(\n                    10,\n                    ypos,\n                    `${modDir}${stat.sum}`,\n                    'yellow'\n                );\n\n                stat.modifiers.forEach((mod, i) => {\n                    if (mod.mod > 0) {\n                        this.game.renderer.drawText(\n                            3,\n                            ypos + i + 1,\n                            `+${mod.mod} (${mod.source})`,\n                            'green'\n                        );\n                    } else {\n                        this.game.renderer.drawText(\n                            3,\n                            ypos + i + 1,\n                            `-${Math.abs(mod.mod)} (${mod.source})`,\n                            'red'\n                        );\n                    }\n                });\n\n                pad += stat.modifiers.length;\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${stat.name}`);\n                this.game.renderer.drawText(10, ypos, `${modDir}${stat.sum}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Manager from './Manager';\nimport * as Directions from '../enums/Directions';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n    actionQueue = [];\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    getNextAction() {\n        return this.actionQueue.shift();\n    }\n\n    move(direction) {\n        this.actionQueue.push(() => {\n            const delta = Directions.delta(direction);\n\n            this.entity.fireEvent('try-move', delta);\n        });\n    }\n\n    melee(target) {\n        this.actionQueue.push(() => {\n            if (target.isDestroyed || target.isDead) {\n                console.warn(`Melee action on destroyed target ${target}`);\n\n                return;\n            }\n\n            this.entity.fireEvent('try-melee', {\n                target,\n            });\n        });\n    }\n\n    wait(turns = 1) {\n        this.actionQueue.push(() => {\n            this.entity.fireEvent('energy-consumed', turns * 1000);\n        });\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n        this.game.temperature.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n            temperature: this.game.temperature.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorTemperatureData(sectorId, temperatureData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-temperatures`,\n            JSON.stringify(temperatureData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorTemperatureData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-temperatures`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n    #turnDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turnDelta() {\n        return this.#turnDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        const prevTurn = this.turn;\n\n        this.#tickDelta = delta;\n        this.#tick += delta;\n\n        const curTurn = this.turn;\n\n        this.#turnDelta = curTurn - prevTurn;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n        this.#turnDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\nimport Grid from '../utils/Grid';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    positions;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n            none: [IsInventoried],\n        });\n\n        this.positions = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.positions.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.positions.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.positions.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.positions.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.positions.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.positions.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.positions.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.positions.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y, includeGround = false) {\n        return this.positions.get(x, y).reduce((entities, id) => {\n            const e = this.game.ecs.getEntity(id);\n\n            if (!e.isInventoried && (includeGround ? true : !e.ground)) {\n                entities.push(e);\n            }\n\n            return entities;\n        }, []);\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getEntitiesInRect(x, y, width, height) {\n        const entities = [];\n\n        for (let i = x; i < x + width + 1; i++) {\n            for (let j = y; j < y + height + 1; j++) {\n                entities.push(...this.getEntitiesAt(i, j));\n            }\n        }\n\n        return entities;\n    }\n\n    getEntitiesInRange(x, y, range) {\n        const diameter = range * 2;\n\n        return this.getEntitiesInRect(x - range, y - range, diameter, diameter);\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y, false).length > 0);\n\n        return { x, y };\n    }\n\n    isOutOfbounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y, true).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.explorable && !e.explored) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 8, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { IsDead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [IsDead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.isPlayer) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 120);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n    padding = 4;\n    clampX = 16;\n    clampY = 12;\n\n    _focusX = 0;\n    _focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    computeSize() {\n        this.width = Math.max(\n            this.clampX,\n            Math.floor(window.innerWidth / this.renderedTileWidth) - 2\n        );\n        this.height = Math.max(\n            this.clampY,\n            Math.floor(window.innerHeight / this.renderedTileHeight) - 2\n        );\n        this.topLeftWorldX = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusX - this.width / 2),\n                Math.max(\n                    (this.width - this.game.map.width) / -2,\n                    this.padding + this.game.map.width - this.width\n                )\n            )\n        );\n        this.topLeftWorldY = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusY - this.height / 2),\n                Math.max(\n                    (this.height - this.game.map.height) / -2,\n                    this.padding + this.game.map.height - this.height\n                )\n            )\n        );\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.computeSize();\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this._focusX = x;\n        this._focusY = y;\n        this.computeSize();\n    }\n\n    setPadding(value) {\n        this.padding = value;\n        this.computeSize();\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    getScreenRect() {\n        return {\n            x: this.topLeftWorldX,\n            y: this.topLeftWorldY,\n            width: this.width,\n            height: this.height,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nconst fpsElement = document.getElementsByClassName('fps')[0];\n\nexport default class FPSMonitoringSystem extends System {\n    frames = [];\n    frameCount = 60;\n\n    constructor(game) {\n        super(game);\n        this.frames = [];\n\n        for (let i = 0; i < this.frameCount; i++) {\n            this.frames[i] = 0;\n        }\n    }\n\n    update(dt) {\n        this.frames.push(1000 / dt);\n        this.frames.shift();\n\n        const sum = this.frames.reduce((s, v) => s + v, 0);\n        const fps = Math.trunc(sum / this.frameCount);\n\n        fpsElement.innerText = fps;\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            this.game.ecs.deserialize(data);\n        } else {\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(4);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n    music = null;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n        sector.music = data.music;\n        sector.temperature = data.temperature;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        allowDiagonals: false,\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return manhattanDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_GROUND_STONE,\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\n\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y).filter((e) => !e.ground);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n    SPWN_GROUND_GRASS,\n    SPWN_TWIG,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_GRASS, tile.x, tile.y);\n\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.1) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR) && Math.random() < 0.5) {\n                spawn(SPWN_TWIG, tile.x, tile.y);\n            } else {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_LEATHER_BOOTS,\n    SPWN_SHORTSWORD,\n    SPWN_GREATSWORD,\n    SPWN_BATTLE_AXE,\n    SPWN_HATCHET,\n    SPWN_GROUND_STONE,\n    SPWN_MACE,\n    SPWN_HEAVY_PLATE_ARMOR,\n    SPWN_LEATHER_ARMOR,\n    SPWN_CLOTH_HOOD,\n    SPWN_WIZARD_CAP,\n    SPWN_HELM,\n    SPWN_TWIG,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\n\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_TWIG));\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_BOOTS));\n            chest.inventory.addLoot(spawn(SPWN_SHORTSWORD));\n            chest.inventory.addLoot(spawn(SPWN_GREATSWORD));\n            chest.inventory.addLoot(spawn(SPWN_BATTLE_AXE));\n            chest.inventory.addLoot(spawn(SPWN_HATCHET));\n            chest.inventory.addLoot(spawn(SPWN_MACE));\n            chest.inventory.addLoot(spawn(SPWN_HEAVY_PLATE_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_HOOD));\n            chest.inventory.addLoot(spawn(SPWN_WIZARD_CAP));\n            chest.inventory.addLoot(spawn(SPWN_HELM));\n        });\n\n        for (let i = 0; i < randomInt(1, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { manhattanDistance } from '../../utils/ManhattanDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                allowDiagonals: false,\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return manhattanDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 4;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","import { Howl } from 'howler';\nimport Manager from './Manager';\nimport music from './../data/music.json';\n\nclass Track {\n    isPlaying = false;\n    isIntro = false;\n    howl = null;\n\n    constructor(path, data) {\n        this.name = data.name;\n        this.loop = new Howl({\n            loop: true,\n            src: [`${path}${data.loop}`],\n        });\n\n        if (data.intro) {\n            this.intro = new Howl({\n                loop: false,\n                src: [`${path}${data.intro}`],\n            });\n\n            this.intro.on('end', () => {\n                if (this.isPlaying) {\n                    this.howl = this.loop;\n                    this.loop.seek(0);\n                    this.loop.volume(1);\n                    this.loop.play();\n                } else {\n                    this.intro.stop();\n                    this.loop.stop();\n                }\n            });\n        }\n    }\n\n    play() {\n        if (this.isPlaying) {\n            return;\n        }\n\n        if (this.intro) {\n            this.howl = this.intro;\n            this.intro.seek(0);\n            this.intro.play();\n            this.intro.fade(0, 1, 5000);\n            this.loop.stop();\n            // this.intro.volume(1);\n        } else {\n            this.howl = this.loop;\n            this.loop.seek(0);\n            this.loop.play();\n            this.loop.fade(0, 1, 5000);\n            // this.loop.volume(1);\n        }\n\n        this.isPlaying = true;\n    }\n\n    stop() {\n        if (this.howl) {\n            this.howl.fade(1, 0, 500);\n        }\n        this.isPlaying = false;\n    }\n}\n\nexport default class MusicManager extends Manager {\n    tracks = {};\n    currentTrack = null;\n\n    constructor(game) {\n        super(game);\n        const path = `${window.location.protocol}//${window.location.host}${window.location.pathname}${music.path}`;\n\n        music.tracks.forEach((data) => {\n            const track = new Track(path, data);\n\n            this.tracks[data.key] = track;\n        });\n    }\n\n    play(key) {\n        if (key === this.currentTrack) {\n            return;\n        }\n\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n\n        this.tracks[key].play();\n        this.currentTrack = key;\n    }\n\n    stop() {\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n    }\n\n    onSectorLoaded(sector) {\n        this.play(sector.music);\n    }\n}\n","import { getStatus } from '../data/Statuses';\nimport { Status } from '../ecs/components';\nimport System from './System';\n\nexport default class StatusSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Status],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const delta = this.game.clock.tickDelta;\n\n        this.query.get().forEach((entity) => {\n            entity.status.forEach((status) => {\n                const statusType = getStatus(status.key);\n\n                statusType.update(delta, entity, status);\n\n                if (status.isCompleted()) {\n                    status.destroy();\n                }\n            });\n        });\n    }\n}\n","import {\n    IsDestroying,\n    IsInventoried,\n    LiquidContainer,\n    Position,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class LiquidSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [LiquidContainer, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const pools = Array.from(this.query.get());\n\n        pools.reduce((rv, pool) => {\n            const container = pool.liquidContainer;\n\n            if (!container.isFreeFlowing) {\n                return rv;\n            }\n\n            const pos = pool.position.getPos();\n            const liquid = container.content;\n            const key = `${pos.x},${pos.y},${liquid}`;\n\n            if (rv[key]) {\n                rv[key].combineFrom(container);\n            } else {\n                rv[key] = container;\n            }\n\n            return rv;\n        }, {});\n    }\n}\n","import { addStatus, STATUS_BLEEDING } from '../data/Statuses';\nimport {\n    IsDestroying,\n    IsInventoried,\n    Position,\n    SharpTrap,\n} from '../ecs/components';\nimport { CONSOLE_EVENT_TRAP_SHARP } from '../enums/ConsoleEvents';\nimport System from './System';\n\nexport default class TrapSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.sharpTrapQuery = this.game.ecs.createQuery({\n            all: [SharpTrap, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.turnDelta) {\n            return;\n        }\n\n        this.sharpTrapQuery.get().forEach((trapEntity) => {\n            const pos = trapEntity.position.getPos();\n            const entities = this.game.map.getEntitiesAt(pos.x, pos.y);\n\n            entities.forEach((entity) => {\n                if (entity.id === trapEntity.id) {\n                    return;\n                }\n                if (entity.stats) {\n                    const saved = trapEntity.sharpTrap.test(entity);\n\n                    if (!saved) {\n                        addStatus(STATUS_BLEEDING, entity);\n                        this.game.console.event(CONSOLE_EVENT_TRAP_SHARP, {\n                            trap: trapEntity,\n                            entity,\n                        });\n                    }\n                }\n            });\n        });\n    }\n}\n","import { spawn } from '../data/Spawner';\nimport {\n    Combustible,\n    Fire,\n    IsDestroying,\n    IsInventoried,\n    Position,\n} from '../ecs/components';\nimport { randomWeightedBool } from '../utils/rand';\nimport System from './System';\n\nexport default class FireSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Fire, Combustible, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.turnDelta) {\n            return;\n        }\n\n        this.query.get().forEach((entity) => {\n            const pos = entity.position.getPos();\n            const combustible = entity.combustible;\n            let temperature = this.game.temperature.getTemperature(\n                pos.x,\n                pos.y\n            );\n\n            combustible.fuel -= combustible.burnRate;\n            temperature += combustible.burnRate;\n\n            this.game.temperature.setTemperature(pos.x, pos.y, temperature);\n\n            const sparkChance = combustible.getSparkChance();\n            const dieChance = combustible.getDieOutChance();\n\n            this.game.map\n                .getNeighborEntities(pos.x, pos.y)\n                .flat()\n                .filter((e) => e.combustible)\n                .forEach((neighbor) => {\n                    const spark = randomWeightedBool(sparkChance);\n\n                    if (spark) {\n                        neighbor.fireEvent('spark', {\n                            intensity: entity.fire.intensity - 1,\n                        });\n                    }\n                });\n\n            if (combustible.isOutOfFuel) {\n                entity.add(IsDestroying);\n\n                if (combustible.spawnableRemains) {\n                    spawn(combustible.spawnableRemains, pos.x, pos.y);\n                }\n            } else if (randomWeightedBool(dieChance)) {\n                entity.fire.extinguish();\n\n                this.game.particles.createParticle(pos.x, pos.y, {\n                    lifetime: 1000,\n                    fg1s: ['yellow', 'red'],\n                    glyphs: ['.', '↑', '^'],\n                });\n            } else {\n                this.game.particles.createParticle(pos.x, pos.y, {\n                    lifetime: 1000,\n                    fg1s: ['yellow', 'red'],\n                    glyphs: ['.', '↑', '^'],\n                });\n            }\n        });\n    }\n}\n","import { avgArray } from '../utils/ArrayUtil';\nimport { lerp } from '../utils/LerpUtil';\nimport MemoryGrid from '../utils/MemoryGrid';\nimport System from './System';\n\nexport default class TemperatureSystem extends System {\n    data;\n\n    get width() {\n        return this.game.map.width;\n    }\n\n    get height() {\n        return this.game.map.height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.grid = new MemoryGrid(this.width, this.height);\n    }\n\n    teardown() {\n        this.grid.clear();\n    }\n\n    getAmbientTemperature() {\n        return this.game.world.sector.temperature.ambient;\n    }\n\n    getAmbientCapacity() {\n        return this.game.world.sector.temperature.capacity;\n    }\n\n    getSaveGameData() {\n        const data = this.grid.serialize();\n\n        this.game.state.saveSectorTemperatureData(\n            this.game.world.sectorId,\n            data\n        );\n    }\n\n    onSectorLoaded(sector) {\n        const data = this.game.state.loadSectorTemperatureData(sector.id);\n\n        if (data) {\n            this.grid.deserialize(data);\n        } else {\n            this.grid.defaultValueGenerator = () => sector.temperature.ambient;\n            this.grid.previous.defaultValueGenerator = () =>\n                sector.temperature.ambient;\n            this.grid.setAll(sector.temperature.ambient);\n        }\n    }\n\n    setTemperature(x, y, value) {\n        this.grid.set(x, y, value);\n    }\n\n    getTemperature(x, y) {\n        return this.grid.get(x, y);\n    }\n\n    getCapacity(x, y) {\n        let hasCap = false;\n        let hasFire = false;\n\n        const capacity = this.game.map.getEntitiesAt(x, y).reduce((cap, e) => {\n            if (e.fire) {\n                hasFire = true;\n                return 0;\n            }\n            if (e.thermalCapacity) {\n                hasCap = true;\n\n                return cap + e.thermalCapacity.value;\n            }\n\n            return cap;\n        }, 0);\n\n        if (hasFire) {\n            return 0;\n        }\n\n        if (hasCap) {\n            return capacity;\n        }\n\n        return this.getAmbientCapacity();\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        this.grid.copyToPrevious();\n\n        const ambient = this.getAmbientTemperature();\n\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                const previous = this.grid.previous.get(x, y);\n                const cells = this.grid.previous.getNeighbors(x, y);\n\n                cells.push(ambient);\n                cells.push(previous);\n\n                const avg = avgArray(cells);\n\n                if (Math.abs(previous - avg) < 0.01) {\n                    continue;\n                }\n\n                const capacity = this.getCapacity(x, y);\n                const t = lerp(previous, avg, capacity);\n\n                this.grid.set(x, y, t);\n            }\n        }\n    }\n}\n","export const sumArray = (arr = []) => arr.reduce((sum, val) => sum + val, 0);\nexport const avgArray = (arr = []) => sumArray(arr) / arr.length;\n","export const lerp = (f0, f1, t) => (1 - t) * f0 + t * f1;\nexport const lerp2 = (v1, v2, t) => {\n    return {\n        x: lerp(v1.x, v2.x, t),\n        y: lerp(v2.y, v2.x, t),\n    };\n};\n\nwindow.lerp = lerp;\n","import Grid from './Grid';\n\nexport default class MemoryGrid extends Grid {\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        super(width, height, defaultValueGenerator);\n        this.previous = new Grid(width, height, defaultValueGenerator);\n    }\n\n    copyToPrevious() {\n        this.previous._width = this._width;\n        this.previous._height = this._height;\n        this.previous.data = [...this.data];\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}