{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./node_modules/howler/dist/howler.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./src/utils/ColorParser.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/util/string-util.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/data/Spawnables.js","webpack://knossonia/./src/data/Spawner.js","webpack://knossonia/./src/data/spawnables/SpawnableVialHoney.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/data/spawnables/SpawnableVialBlood.js","webpack://knossonia/./src/data/spawnables/SpawnableVialWater.js","webpack://knossonia/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/utils/AStar.js","webpack://knossonia/./src/utils/diagonalDistance.js","webpack://knossonia/./src/utils/ManhattanDistance.js","webpack://knossonia/./src/utils/PriorityQueue.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/data/spawnables/SpawnablePineTree.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://knossonia/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Armor.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/data/Abilities.js","webpack://knossonia/./src/data/abilities/ArmorAbility.js","webpack://knossonia/./src/data/abilities/Ability.js","webpack://knossonia/./src/data/abilities/SpeedAbility.js","webpack://knossonia/./src/data/abilities/ThrowingAbility.js","webpack://knossonia/./src/data/Stats.js","webpack://knossonia/./src/data/abilities/DodgeAbility.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/data/DamageTypes.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/IsDead.js","webpack://knossonia/./src/ecs/components/FactionMember.js","webpack://knossonia/./src/enums/Factions.js","webpack://knossonia/./src/data/Faction.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/ecs/components/LootDropper.js","webpack://knossonia/./src/data/tables/LootSpawn.js","webpack://knossonia/./src/utils/WeightedTable.js","webpack://knossonia/./src/data/tables/loot/LootTableGoblin.js","webpack://knossonia/./src/data/tables/loot/LootTableForest.js","webpack://knossonia/./src/ecs/components/IsEquipped.js","webpack://knossonia/./src/ecs/components/Equipment.js","webpack://knossonia/./src/data/EquipmentSlotType.js","webpack://knossonia/./src/ecs/components/EquipmentSlot.js","webpack://knossonia/./src/data/WeaponTypes.js","webpack://knossonia/./src/data/WeaponFamilies.js","webpack://knossonia/./src/data/weapons/WpnTypeGreatsword.js","webpack://knossonia/./src/data/Attack.js","webpack://knossonia/./src/data/weapons/WeaponType.js","webpack://knossonia/./src/data/weapons/WpnTypeShortsword.js","webpack://knossonia/./src/data/weapons/WpnTypeUnarmed.js","webpack://knossonia/./src/ecs/components/Stats.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./src/ecs/components/Race.js","webpack://knossonia/./src/data/Races.js","webpack://knossonia/./src/data/RaceData.js","webpack://knossonia/./src/ecs/components/Weapon.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/utils/SelectableList.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/screens/screens/EquipmentScreen.js","webpack://knossonia/./src/core/screens/screens/ListSelectionScreen.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./src/core/screens/screens/CharacterScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/generators/generators.js","webpack://knossonia/./src/level/generators/ForestCabinsGenerator.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/themes/TileTheme.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/level/themes/TileThemePopulator.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/themes/CabinTheme.js","webpack://knossonia/./src/level/schemes/UniformScheme.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/level/RoomData.js","webpack://knossonia/./node_modules/nanoid/index.prod.js","webpack://knossonia/./node_modules/nanoid/url-alphabet/index.js","webpack://knossonia/./src/level/TileScheme.js","webpack://knossonia/./src/level/generators/SectorGenerator.js","webpack://knossonia/./src/level/generators/ForestGenerator.js","webpack://knossonia/./src/level/generators/ForestStrongholdGenerator.js","webpack://knossonia/./src/level/schemes/DenseCastleScheme.js","webpack://knossonia/./src/level/generators/ForestTownGenerator.js","webpack://knossonia/./src/level/schemes/ScatteredScheme.js","webpack://knossonia/./src/level/generators/GeneratorUtils.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/./src/core/MusicManager.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/compat get default export","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/global","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","HowlerGlobal","this","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","play","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Game","engine","ECS","music","MusicManager","mouse","MouseManager","clock","ClockManager","renderer","Renderer","GameStateManager","world","WorldManager","MapManager","camera","CameraManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","ConsoleManager","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","boundLoop","requestAnimationFrame","dt","update","render","t","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","zoom","setSize","char","fg1","fg2","bg","tiles","getSprite","draw","text","font","charAt","computeTextWidth","drawText","clear","clearArea","xPx","yPx","trunc","Manager","cells","Grid","suppressOOBWarn","createElement","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","cellX","cellY","filter","c","cell","pixelX","pixelY","drawImage","defaultValueGenerator","_width","_height","idx","size","coord","value","isOutOfBounds","get","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","_cache","hasOwnProperty","pixels","getImageData","cvs","putImageData","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","base","isRGB","trim","baseHues","join","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Actor","none","IsDestroying","IsDead","entities","sorted","sort","actor","energy","entity","hasEnergy","incrementTick","addEnergy","tickDelta","isPlayer","fireEvent","System","reduceEnergy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","camelCache","camelString","camelcaseSlow","pascalCache","constructor","component","enumerable","v","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","_getType","_definitions","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","_ecs","components","PrefabComponent","PrefabRegistry","_prefabs","nameOrClassOrPrefab","urlAlphabet","getAccessor","hasType","nestedComponent","typeOrClass","attach","configurable","has","allowMultiple","isComponent","instance","v2","EntityEvent","_entities","Entity","refs","_refs","Set","json","list","entityData","createOrGetById","pascalString","d","any","hasAny","_filter","some","hasAll","every","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","pass","LiquidContainer","destroyOnEmpty","isEmpty","add","quantity","isPourable","spawn","SPWN_POOL_LIQUID","content","_checkDestroyOnEmpty","interactor","position","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_GOBLIN_GRUNT","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","SPWN_LEATHER_BOOTS","SPWN_SHORTSWORD","SPWN_GREATSWORD","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","GoblinGrunt","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","LIQUID_OIL","colorDesc","onDrink","log","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","sword","equipmentSlot","handRight","equip","GoalType","goal","targets","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","isDead","isDestroyed","handled","targetPos","result","computeAStar","cost","blocker","diagonalDistance","segment","path","delta","moveGoal","MoveGoalType","getNeighbors","defaultSettings","allowDiagonals","settings","heuristic","manhattanDistance","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","costs","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","dx","dy","item","createItem","EatFoodGoalType","food","pickRandom","arr","floor","random","randomInt","wanderer","Door","isOpen","ch","shadowcaster","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Armor","modifiers","moniker","mod","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","dropper","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","SCREEN_CHARACTER","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","range","getAbilityValue","ABILITY_THROWING","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","ABILITY_SPEED","ABILITY_ARMOR","ABILITY_DODGE","lookup","ArmorAbility","SpeedAbility","ThrowingAbility","DodgeAbility","getAbility","getAbilityName","compute","getArmorBlockPercent","ability","unscaled","getModifierSum","Ability","baseStat","getModifiers","reduce","sum","cur","STAT_ATHLETICISM","getStat","modifier","STAT_STRENGTH","STAT_FINESSE","STAT_TRICKERY","getStatName","stat","stats","getDodgePercent","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","sx","sy","e2","bresenhamLineExclusive","corpse","corpseSpawnable","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","CONSOLE_EVENT_MISS","CONSOLE_EVENT_BLOCK","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","attacker","defender","dodgePrcnt","shouldAppear","dmgVerb","getDmgTypeVerb","damageType","dmg","damage","blocked","blockText","getMessage","DMG_TYPE_BLUDGEONING","DMG_TYPE_PIERCING","DMG_TYPE_SLASHING","verb","getDmgTypeName","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","Position","getPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Legs","targetX","targetY","targetTileEntities","nonHostile","factionMember","MoveCommand","DIR_Z","directions","shortName","fullName","adjacent","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","getAdjacentDeltas","directionFromDelta","dir","MeleeCommand","Wandering","Directions","Explorable","Explored","Health","attack","dodge","ignoreDodge","isDodged","isKilled","armor","armorPrcnt","sourceItem","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","Eyes","canSee","Particle","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","table","WeightedTable","pick","spawnable","rows","weight","currentW","maxWeight","goblins","forest","IsEquipped","slot","unequip","slotKey","Equipment","slots","slotTypes","includes","slotType","header","onRenderRow","isSelected","onSelect","isEquipped","isOwnedBy","EQ_SLOT_BODY","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EQ_SLOT_HAND","EquipmentSlot","equipment","isPrimary","selfPos","isAdjacent","getWeaponType","WPN_TYPE_UNARMED","isOffhand","WPN_TYPE_WAR_HAMMER","WPN_TYPE_SLEDGE_HAMMER","WPN_TYPE_CLUB","WPN_TYPE_MACE","WPN_TYPE_HEAVY_AXE","WPN_TYPE_HATCHET","WPN_TYPE_GREATSWORD","WPN_TYPE_SHORTSWORD","WPN_TYPE_DAGGER","WPN_TYPE_STAFF","WPN_TYPE_HALBERD","WPN_TYPE_JAVELIN","WpnTypeUnarmed","family","WPN_FAMILY_HAMMER","WPN_FAMILY_AXE","WpnTypeGreatsword","WpnTypeShortsword","WPN_FAMILY_BLADE","WPN_FAMILY_POLEARM","getWeaponTypeName","getWeaponTypeFamily","getWeaponTypeDmgType","WPN_FAMILY_ARCHERY","WPN_FAMILY_UNARMED","getWeaponFamilyName","weapon","attackerPos","defenderPos","deltaX","deltaY","flat","hostile","Attack","weaponName","roll","_tryAttackDefender","attacks","_getNeighborAttacks","WeaponType","getAttacks","Stats","mods","getStatModifiers","_sumMods","capitalize","modSum","strength","finesse","athleticism","trickery","getStatModifierSum","baseStrength","baseFinesse","baseAthleticism","baseTrickery","n","clamp","toUpperCase","substring","template","replacer","group1","group2","obj","replaced","first","Race","getRaceData","strengthMod","finesseMod","athleticismMod","trickeryMod","modStrength","modFinesse","modAthleticism","modTrickery","RACE_HUMAN","RACE_GOBLIN","RaceData","Weapon","die","weaponType","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","toFixed","padEnd","hp","health","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","INPUT_CMD_CHARACTER","KEY_Y","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_T","KEY_U","KEY_V","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","ListSelectionScreen","CharacterScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","directionDelta","playerPosition","targetPosition","getEntitiesAt","hostileEntities","areEntitiesHostile","melee","doorEntity","move","lootable","items","pushScreen","onGetRowName","replaceScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","SelectableList","setItems","selected","up","down","selectItem","ypos","textLen","_idx","_items","refreshList","isBack","interaction","left","top","xpos","NOOP","enable","disable","cursorColor","types","color","getEntities","faction","relation","getEntityRelation","getDisplay","drawCursor","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","selectSlot","defaultRowRender","cancel","Simple","repeat","_current","_repeat","Scheduler","EventQueue","getTime","getEventTime","remove","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","healthMax","pad","modDir","createPrefab","entityId","serialized","isTurn","meleeCommand","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","isEnabled","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","sector","loadSectorPositionData","x2","y2","diameter","getEntitiesInRect","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","_data","_idHash","entries","fov","FOV","isSquareVisible","isVisible","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","Speed","Action","getSpeed","_defaultDuration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","emitter","particleEmitter","isExpired","targetCount","createParticle","setRelation","factionA","factionB","idA","idB","_relationKey","relations","entityA","entityB","memberA","memberB","getRelation","onWindowResize","clampX","innerWidth","renderedTileWidth","clampY","innerHeight","renderedTileHeight","topLeftWorldX","padding","_focusX","topLeftWorldY","_focusY","resizeDisplay","worldX","worldY","fpsElement","getElementsByClassName","frames","frameCount","innerText","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","exits","connectionsNorth","connectionsWest","getExits","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","SectorGenerator","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","populateTile","trySpawn","TileThemePopulator","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileContainer","MapGenerator","digPercentage","getRooms","createRoom","getDoors","TileScheme","defaultType","getTile","RoomData","addRoom","cloneTo","setTileTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","c1","c2","c3","c4","bytes","crypto","getRandomValues","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","populateRoom","setTheme","exitOffset","castle","DenseCastleScheme","combineOther","curId","createNodeId","splitNodeVertical","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","intersects","msgs","isDestroying","Track","intro","isPlaying","host","pathname","track","tracks","currentTrack","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","getPrototypeOf","__proto__","mode","ns","getOwnPropertyNames","defineProperty","globalThis","Function","toStringTag"],"mappings":"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","file":"main.b95c239d743f77a60cc9.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\nimport { Howl } from 'howler';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import Renderer from './rendering/RenderManager';\r\nimport InputController from './input/InputController';\r\nimport ActionSystem from '../systems/ActionSystem';\r\nimport RenderSystem from '../systems/RenderSystem';\r\nimport MovementSystem from '../systems/MovementSystem';\r\nimport UISystem from '../systems/UISystem';\r\nimport MouseManager from './input/MouseManager';\r\nimport CommandManager from './input/CommandManager';\r\nimport ScreenManager from './screens/ScreenManager';\r\nimport PlayerManager from './PlayerManager';\r\nimport ECS from '../ecs';\r\nimport GameStateManager from './GameStateManager';\r\nimport ClockManager from './ClockManager';\r\nimport CursorSystem from '../systems/CursorSystem';\r\nimport MapManager from './MapManager';\r\nimport FOVSystem from '../systems/FOVSystem';\r\nimport MeleeSystem from '../systems/MeleeSystem';\r\nimport DeathSystem from '../systems/DeathSystem';\r\nimport ParticleSystem from '../systems/ParticleSystem';\r\nimport FactionManager from './FactionManager';\r\nimport CameraManager from './CameraManager';\r\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\r\nimport { WorldManager } from './WorldManager';\r\nimport ConsoleManager from './ConsoleManager';\r\nimport DestroySystem from '../systems/DestroySystem';\r\nimport MusicManager from './MusicManager';\r\n\r\nexport default class Game {\r\n    #lastUpdate;\r\n\r\n    get ecs() {\r\n        return this.engine.engine;\r\n    }\r\n\r\n    constructor() {\r\n        this.engine = new ECS(this);\r\n        this.music = new MusicManager(this);\r\n        this.mouse = new MouseManager(this);\r\n        this.clock = new ClockManager(this);\r\n        this.renderer = new Renderer(this);\r\n        this.state = new GameStateManager(this);\r\n        this.world = new WorldManager(this);\r\n        this.map = new MapManager(this);\r\n        this.camera = new CameraManager(this);\r\n        this.factions = new FactionManager(this);\r\n        this.player = new PlayerManager(this);\r\n        this.commands = new CommandManager(this);\r\n        this.screens = new ScreenManager(this);\r\n        this.input = new InputController(this);\r\n        this.console = new ConsoleManager(this);\r\n\r\n        this.actionSystem = new ActionSystem(this);\r\n        this.movementSystem = new MovementSystem(this);\r\n        this.meleeSystem = new MeleeSystem(this);\r\n        this.deathSystem = new DeathSystem(this);\r\n        this.FOVSystem = new FOVSystem(this);\r\n        this.renderSystem = new RenderSystem(this);\r\n        this.UISystem = new UISystem(this);\r\n        this.cursor = new CursorSystem(this);\r\n        this.particles = new ParticleSystem(this);\r\n        this.fps = new FPSMonitoringSystem(this);\r\n        this.destroySystem = new DestroySystem(this);\r\n    }\r\n\r\n    start() {\r\n        this.#lastUpdate = Date.now();\r\n        this.boundLoop = this.loop.bind(this);\r\n        requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    updateAdventureSystems(dt) {\r\n        this.clock.update(dt);\r\n        this.actionSystem.update(dt);\r\n        this.movementSystem.update(dt);\r\n        this.meleeSystem.update(dt);\r\n        this.deathSystem.update(dt);\r\n        this.FOVSystem.update(dt);\r\n        this.renderSystem.update(dt);\r\n        this.particles.update(dt);\r\n        this.UISystem.update(dt);\r\n        this.map.update(dt);\r\n        this.destroySystem.update(dt);\r\n        this.console.render(dt);\r\n    }\r\n\r\n    loop(t) {\r\n        const now = Date.now();\r\n        const dt = now - this.#lastUpdate;\r\n\r\n        this.screens.update(dt);\r\n        this.fps.update(dt);\r\n        this.renderer.render();\r\n\r\n        this.#lastUpdate = now;\r\n\r\n        requestAnimationFrame(this.boundLoop);\r\n    }\r\n}\r\n\r\nexport const game = new Game();\r\n","import Manager from '../Manager';\r\nimport Display from './Display';\r\nimport spritesheets from './spritesheets';\r\n\r\nexport default class Renderer extends Manager {\r\n    tileWidth = 16;\r\n    tileHeight = 16;\r\n    #spritesheets = {};\r\n    #display = null;\r\n\r\n    get display() {\r\n        return this.#display;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.display.canvas;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        spritesheets().forEach((spritesheet) => {\r\n            this.#spritesheets[spritesheet.name] = spritesheet;\r\n        });\r\n\r\n        this.#display = new Display({\r\n            width: 20,\r\n            height: 20,\r\n            tileWidth: this.tileWidth,\r\n            tileHeight: this.tileHeight,\r\n        });\r\n\r\n        document.body.appendChild(this.display.canvas);\r\n    }\r\n\r\n    resizeDisplay(width, height, zoom) {\r\n        this.display.setSize(width, height, zoom);\r\n    }\r\n\r\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        const sprite = this.#spritesheets.tiles.getSprite(char);\r\n\r\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\r\n    }\r\n\r\n    computeTextWidth(text) {\r\n        return text.length * 0.5;\r\n    }\r\n\r\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\r\n\r\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\r\n        }\r\n    }\r\n\r\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\r\n        const len = this.computeTextWidth(text);\r\n\r\n        this.drawText(\r\n            Math.ceil((this.game.camera.width - len) / 2),\r\n            y,\r\n            text,\r\n            fg1,\r\n            fg2,\r\n            bg\r\n        );\r\n    }\r\n\r\n    clear() {\r\n        this.display.clear();\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        this.display.clearArea(x, y, width, height);\r\n    }\r\n\r\n    pxToTile(xPx, yPx) {\r\n        const x = Math.trunc(xPx / this.tileWidth);\r\n        const y = Math.trunc(yPx / this.tileHeight);\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    render() {\r\n        this.display.render();\r\n    }\r\n}\r\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n        this.ctx.globalCompositeOperation = 'destination-over';\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(0, 0, this.tileWidth * this.width, this.tileHeight * this.height);\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + (i * 2);\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\r\n    _width = 0;\r\n    _height = 0;\r\n    data = [];\r\n    suppressOOBWarn = false;\r\n    #defaultValueGenerator = () => null;\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get size() {\r\n        return this._width * this._height;\r\n    }\r\n\r\n    constructor(width, height, defaultValueGenerator = () => null) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this.#defaultValueGenerator = defaultValueGenerator;\r\n\r\n        this.clear();\r\n    }\r\n\r\n    idx(x, y) {\r\n        return y * this._width + x;\r\n    }\r\n\r\n    coord(idx) {\r\n        return {\r\n            x: Math.trunc(idx % this._width),\r\n            y: Math.trunc(idx / this._width),\r\n        };\r\n    }\r\n\r\n    clear() {\r\n        this.data = [];\r\n        for (let i = 0; i < this.size; i++) {\r\n            const { x, y } = this.coord(i);\r\n\r\n            this.data[i] = this.#defaultValueGenerator(x, y);\r\n        }\r\n    }\r\n\r\n    set(x, y, value) {\r\n        if (this.isOutOfBounds(x, y)) {\r\n            if (!this.suppressOOBWarn) {\r\n                console.warn(\r\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\r\n                );\r\n            }\r\n            return;\r\n        }\r\n\r\n        const idx = this.idx(x, y);\r\n\r\n        this.data[idx] = value;\r\n    }\r\n\r\n    get(x, y) {\r\n        if (this.isOutOfBounds(x, y)) {\r\n            return this.#defaultValueGenerator();\r\n        }\r\n\r\n        return this.data[this.idx(x, y)];\r\n    }\r\n\r\n    isOutOfBounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\r\n    }\r\n\r\n    getNeighbors(x, y) {\r\n        return [\r\n            this.get(x - 1, y - 1), // TOP LEFT\r\n            this.get(x, y - 1), // TOP\r\n            this.get(x + 1, y - 1), // TOP RIGHT\r\n            this.get(x - 1, y), // LEFT\r\n            this.get(x + 1, y), // RIGHT\r\n            this.get(x - 1, y + 1), // BOTTOM LEFT\r\n            this.get(x, y + 1), // BOTTOM\r\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\r\n        ];\r\n    }\r\n\r\n    clearAndResize(width, height) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this.clear();\r\n    }\r\n}\r\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Actor, IsDead, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            none: [IsDestroying, IsDead],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = new Map();\n\nexport const camelString = (value) => {\n    if (!camelCache.has(value)) {\n        camelCache.set(value, camelcaseSlow(value));\n    }\n\n    return camelCache.get(value);\n};\n\nconst pascalCache = new Map();\n\nexport const pascalString = (value) => {\n    if (!pascalCache.has(value)) {\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\n    }\n\n    return pascalCache.get(value);\n};\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\n                entity\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import { camelString } from './util/string-util';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    entity = null;\n    ecs = null;\n    _props = {};\n    _isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this._props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this._props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.entity;\n\n            this.entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this._isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this._props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelString(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this._props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport { camelString } from '../util/string-util';\n\nexport default class ComponentRegistry {\n    _definitions = new Map();\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    register(component) {\n        this._definitions.set(component.name, component);\n        camelString(component.name); // prime camelcase cache\n    }\n\n    getAccessor(type) {\n        return camelString(type);\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this._definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this._ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    _prefabs = {};\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this._ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this._ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this._ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this._prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this._ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    _prevented = false;\n    _handled = false;\n\n    get prevented() {\n        return this._prevented;\n    }\n\n    get handled() {\n        return this._handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this._handled = true;\n        this._prevented = true;\n    }\n\n    prevent() {\n        this._prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    id = null;\n    components = {};\n    ecs = null;\n    _isDestroyed = false;\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.ecs = ecs;\n        this.id = id || ecs.generateId();\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this._isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { pascalString } from '../util/string-util';\nimport Entity from '../Entity';\n\nexport default class EntityRegistry {\n    _entities = new Map();\n    _ecs = null;\n    _refs = new Map();\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    get all() {\n        return this._entities.values();\n    }\n\n    register(entity) {\n        this._entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this._entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this._ecs, id);\n\n        this.register(entity);\n\n        this._ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this._entities.delete(entity.id);\n        this._ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this._refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this._refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this._refs.has(entityId)) {\n            this._refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this._refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this._refs.has(entityId)) {\n            this._refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities ? entities : this._entities;\n\n        list.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = pascalString(key);\n            const definition = this._ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    _ecs;\n    _filter;\n    _onEntityAddedCallbacks = [];\n    _onEntityRemovedCallbacks = [];\n    _cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this._ecs = ecs;\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this._filter.any.length\n            ? this._filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this._filter.all.every((c) => entity.has(c));\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this._onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this._cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this._cache.add(entity);\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this._cache.clear();\n\n        for (const entity of this._ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this._cache;\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    _ecs;\n    _queries = [];\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this._ecs, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this._queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this._queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity(id) {\n        return this.entities.create(id);\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize(entities) {\n        return {\n            entities: this.entities.serialize(entities),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.data.interactor.fireEvent('energy-consumed', 400);\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n\n        evt.data.interactor.fireEvent('energy-consumed', 700);\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\nexport const SPWN_LEATHER_BOOTS = 'SPWN_LEATHER_BOOTS';\nexport const SPWN_SHORTSWORD = 'SPWN_SHORTSWORD';\nexport const SPWN_GREATSWORD = 'SPWN_GREATSWORD';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_LEATHER_BOOTS: simplePrefab('Boots'),\n    SPWN_SHORTSWORD: simplePrefab('Shortsword'),\n    SPWN_GREATSWORD: simplePrefab('Greatsword'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\nexport const LIQUID_OIL = 4;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_SHORTSWORD } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    const sword = spawn(SPWN_SHORTSWORD);\n\n    goblin.equipmentSlot.handRight.equip(sword);\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const targets = new Set();\n\n        entity.fireEvent('try-detect-hostiles', {\n            targets,\n        });\n\n        if (targets.size > 0) {\n            const target = [...targets][0];\n\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { computeAStar } from '../../utils/AStar';\nimport { game } from '../../core/Game';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { MoveGoalType } from './MoveGoalType';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.isDead || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        // try melee\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        const start = entity.position.getPos();\n        const targetPos = goal.target.position.getPos();\n\n        // try pathing to target\n        const result = computeAStar({\n            start,\n            goal: targetPos,\n            cost: (a, b) => {\n                const entities = game.map.getEntitiesAt(b.x, b.y);\n\n                if (game.map.isOutOfbounds(b.x, b.y)) {\n                    return Infinity;\n                }\n\n                if (entities.some((e) => e.blocker)) {\n                    return Infinity;\n                }\n\n                return diagonalDistance(a, b);\n            }\n        });\n\n        if (result.success) {\n            const segment = result.path[1];\n            const delta = {\n                x: segment.x - start.x,\n                y: segment.y - start.y,\n            };\n            const moveGoal = MoveGoalType.createAsSubGoal(goal, {\n                data: delta\n            });\n\n            entity.brain.pushGoal(moveGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        entity.fireEvent('energy-consumed', 1000);\n\n        return FAILURE;\n    };\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return false;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n\n        return true;\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return false;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        if (this.closeDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        if (this.openDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\n\nexport class Armor extends Component {\n    static properties = {\n        value: 4,\n    };\n\n    onQueryEquippedAbilityModifierArmor(evt) {\n        evt.data.modifiers.push({\n            source: this.entity.moniker.name,\n            mod: this.value,\n        });\n    }\n}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        ob.fireEvent('dropped', {\n            dropper: this.entity,\n        });\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\nexport const SCREEN_LIST_SELECT = 8;\nexport const SCREEN_CHARACTER = 9;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport { ABILITY_THROWING, getAbilityValue } from '../../data/Abilities';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        const range = getAbilityValue(ABILITY_THROWING, evt.data.interactor);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.slice(0, range + 1).map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                evt.data.interactor.fireEvent('energy-consumed', 700);\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    const atMaxRange = idx === range;\n\n                    if (lineValid && (body || atMaxRange)) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < blockerIdx && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","import ArmorAbility from './abilities/ArmorAbility';\nimport SpeedAbility from './abilities/SpeedAbility';\nimport ThrowingAbility from './abilities/ThrowingAbility';\nimport DodgeAbility from './abilities/DodgeAbility';\n\nexport const ABILITY_SPEED = 'ABILITY_SPEED';\nexport const ABILITY_THROWING = 'ABILITY_THROWING';\nexport const ABILITY_ARMOR = 'ABILITY_ARMOR';\nexport const ABILITY_DODGE = 'ABILITY_DODGE';\n\nconst lookup = {\n    [ABILITY_ARMOR]: new ArmorAbility(),\n    [ABILITY_SPEED]: new SpeedAbility(),\n    [ABILITY_THROWING]: new ThrowingAbility(),\n    [ABILITY_DODGE]: new DodgeAbility(),\n};\n\nexport const getAbility = (key) => lookup[key];\nexport const getAbilityName = (key) => lookup[key].name;\nexport const getAbilityValue = (key, entity) => lookup[key].compute(entity);\n","import { ABILITY_ARMOR } from '../Abilities';\nimport Ability from './Ability';\n\nexport const getArmorBlockPercent = (ability = 0) => {\n    const base = 10;\n    const unscaled = 1 - (base / (ability + base));\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class ArmorAbility extends Ability {\n    constructor() {\n        super(ABILITY_ARMOR, 'armor');\n    }\n\n    compute(entity) {\n        return this.getModifierSum(entity);\n    }\n}\n","export default class Ability {\n    key = -1;\n    name = 'ability';\n    baseStat = null;\n\n    constructor(key, name, baseStat) {\n        this.key = key;\n        this.name = name;\n        this.baseStat = baseStat;\n    }\n\n    getModifiers(entity) {\n        const modifiers = [];\n\n        entity.fireEvent(`query-ability-modifier-${this.name}`, {\n            name: this.name,\n            modifiers,\n        });\n\n        return modifiers;\n    }\n\n    getModifierSum(entity) {\n        const modifiers = this.getModifiers(entity);\n\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    compute(entity) {\n        return 1;\n    }\n}\n","import { ABILITY_SPEED } from '../Abilities';\nimport Ability from './Ability';\n\nexport default class SpeedAbility extends Ability {\n    constructor() {\n        super(ABILITY_SPEED, 'speed');\n    }\n\n    compute(entity) {\n        return this.getModifierSum(entity);\n    }\n}\n","import { ABILITY_THROWING } from '../Abilities';\nimport { getStat, STAT_ATHLETICISM } from '../Stats';\nimport Ability from './Ability';\n\nexport default class ThrowingAbility extends Ability {\n    constructor() {\n        super(ABILITY_THROWING, 'throwing', STAT_ATHLETICISM);\n    }\n\n    compute(entity) {\n        const base = getStat(STAT_ATHLETICISM, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return Math.max(0, base + modifier) + 6;\n    }\n}\n","import { randomInt } from '../utils/rand';\n\nexport const STAT_STRENGTH = 0;\nexport const STAT_FINESSE = 1;\nexport const STAT_ATHLETICISM = 2;\nexport const STAT_TRICKERY = 3;\n\nconst lookup = {\n    [STAT_STRENGTH]: {\n        name: 'strength',\n    },\n    [STAT_FINESSE]: {\n        name: 'finesse',\n    },\n    [STAT_ATHLETICISM]: {\n        name: 'athleticism',\n    },\n    [STAT_TRICKERY]: {\n        name: 'trickery',\n    },\n};\n\nexport const getStatName = (stat) => lookup[stat].name;\nexport const getStat = (stat, entity) => {\n    const name = lookup[stat].name;\n\n    return entity.stats[name]();\n};\n","import { ABILITY_DODGE } from '../Abilities';\nimport { getStat, STAT_FINESSE } from '../Stats';\nimport Ability from './Ability';\n\nexport const getDodgePercent = (ability = 0) => {\n    const base = 5;\n    const unscaled = 1 - (base / (ability + base));\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class DodgeAbility extends Ability {\n    constructor() {\n        super(ABILITY_DODGE, 'dodge', STAT_FINESSE);\n    }\n\n    compute(entity) {\n        const stat = getStat(STAT_FINESSE, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { getDmgTypeVerb } from '../data/DamageTypes';\nimport { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\nexport const CONSOLE_EVENT_MISS = 3;\nexport const CONSOLE_EVENT_BLOCK = 4;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_MISS]: {\n        message(data) {\n            const attacker = getMonikerIndirectObject(data.attacker);\n            const defender = getMonikerSubject(data.defender);\n\n            return `${defender} dodged an attack from ${attacker} (${data.dodgePrcnt}%)`;\n        },\n        shouldAppear(data) {\n            return data.defender.has(IsPlayer) || data.attacker.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n            const dmg = data.damage;\n            const blocked = data.blocked;\n\n            const blockText = blocked > 0 ? `. (${blocked} damage was blocked)` : ''\n\n            return `${source} ${dmgVerb} ${target} for ${dmg} hp${blockText}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n\n            return `${source} ${dmgVerb} ${target} to death`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","export const DMG_TYPE_BLUDGEONING = 0;\nexport const DMG_TYPE_PIERCING = 1;\nexport const DMG_TYPE_SLASHING = 2;\n\nconst lookup = {\n    [DMG_TYPE_BLUDGEONING]: {\n        name: 'Bludgeoning',\n        verb: 'bludgeons',\n    },\n    [DMG_TYPE_PIERCING]: {\n        name: 'Piercing',\n        verb: 'pierces',\n    },\n    [DMG_TYPE_SLASHING]: {\n        name: 'Slashing',\n        verb: 'slashes',\n    },\n};\n\nexport const getDmgTypeName = (type) => lookup[type].name;\nexport const getDmgTypeVerb = (type) => lookup[type].verb;\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\r\nimport { LiquidContainer } from './LiquidContainer';\r\n\r\nexport class Glyph extends Component {\r\n    static properties = {\r\n        fg1: '#ddd',\r\n        fg2: '#666',\r\n        bg: null,\r\n        ch: '?',\r\n    };\r\n\r\n    get primary() {\r\n        if (this.entity.has(LiquidContainer)) {\r\n            const col = this.entity.liquidContainer.primaryColorOverride;\r\n\r\n            if (col) {\r\n                return col;\r\n            }\r\n        }\r\n\r\n        return this.fg1;\r\n    }\r\n\r\n    get secondary() {\r\n        if (this.entity.has(LiquidContainer)) {\r\n            const col = this.entity.liquidContainer.secondaryColorOverride;\r\n\r\n            if (col) {\r\n                return col;\r\n            }\r\n        }\r\n\r\n        return this.fg2;\r\n    }\r\n\r\n    get background() {\r\n        return this.bg;\r\n    }\r\n\r\n    get char() {\r\n        return this.ch;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { ABILITY_SPEED, getAbilityValue } from '../../data/Abilities';\nimport { Blocker } from './Blocker';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.entity);\n        const cost = (1 / speed) * 1000;\n\n        this.entity.fireEvent('energy-consumed', cost);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        adjacent: [],\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\ndirections[DIR_NW].adjacent = [DIR_N, DIR_W];\ndirections[DIR_N].adjacent = [DIR_NW, DIR_NE];\ndirections[DIR_NE].adjacent = [DIR_N, DIR_E];\ndirections[DIR_W].adjacent = [DIR_NW, DIR_SW];\ndirections[DIR_E].adjacent = [DIR_NE, DIR_SE];\ndirections[DIR_SW].adjacent = [DIR_W, DIR_S];\ndirections[DIR_S].adjacent = [DIR_SW, DIR_SE];\ndirections[DIR_SE].adjacent = [DIR_S, DIR_E];\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n\nexport const adjacent = (direction) => directions[direction].adjacent;\n\nexport const getAdjacentDeltas = (direction) => adjacent(direction).map(delta);\n\nexport const directionFromDelta = (x, y) => {\n    return Object.values(directions).find((dir) => {\n        return dir.delta.x === x && dir.delta.y === y;\n    });\n};\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { ABILITY_ARMOR, ABILITY_DODGE, getAbilityValue } from '../../data/Abilities';\nimport { getArmorBlockPercent } from '../../data/abilities/ArmorAbility';\nimport { getDodgePercent } from '../../data/abilities/DodgeAbility';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n    CONSOLE_EVENT_MISS,\n} from '../../enums/ConsoleEvents';\nimport { randomInt } from '../../utils/rand';\nimport { IsDead } from './IsDead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 32,\n        max: 32,\n    };\n\n    onAttacked(evt) {\n        const attack = evt.data.attack;\n        const attacker = attack.attacker;\n        const defender = attack.defender;\n        const dodge = getAbilityValue(ABILITY_DODGE, defender);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        if (!attack.ignoreDodge && randomInt(1, 100) <= dodgePrcnt) {\n            game.console.event(CONSOLE_EVENT_MISS, {\n                defender,\n                attacker,\n                dodgePrcnt,\n            });\n\n            evt.data.isDodged = true;\n            evt.data.isKilled = false;\n            evt.handle();\n\n            return;\n        }\n\n        evt.data.isDodged = false;\n\n        const armor = getAbilityValue(ABILITY_ARMOR, defender);\n        const armorPrcnt = getArmorBlockPercent(armor) / 100;\n        const blocked = Math.floor(attack.damage * armorPrcnt);\n        const damage = attack.damage - blocked;\n\n        this.value -= damage;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: defender,\n                source: attacker,\n                damage,\n                damageType: attack.damageType,\n            });\n\n            this.value = 0;\n            this.entity.add(IsDead);\n\n            evt.data.isKilled = true;\n            evt.handle();\n\n            return;\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: defender,\n            source: attacker,\n            damage,\n            damageType: attack.damageType,\n            blocked,\n        });\n\n        const pos = this.entity.position.getPos();\n\n        game.particles.createParticle(pos.x, pos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['*'],\n        });\n\n        evt.data.isKilled = false;\n        evt.handle();\n    }\n\n    onDamage(evt) {\n        this.value -= evt.data.damage.value;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: this.entity,\n                source: evt.data.source,\n                sourceItem: evt.data.sourceItem,\n                damage: evt.data.damage,\n            });\n\n            this.value = 0;\n            this.entity.add(IsDead);\n        } else {\n            game.console.event(CONSOLE_EVENT_DAMAGE, {\n                target: this.entity,\n                source: evt.data.source,\n                sourceItem: evt.data.sourceItem,\n                damage: evt.data.damage,\n            });\n\n            const pos = this.entity.position.getPos();\n\n            game.particles.createParticle(pos.x, pos.y, {\n                lifetime: 140,\n                fg1s: ['#8d4c4f', '#730d14'],\n                glyphs: ['*'],\n            });\n        }\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDead extends Component {}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Eyes extends Component {\n    static properties = {\n        range: 5,\n    };\n\n    canSee(entity) {\n        const start = this.entity.position.getPos();\n        const end = entity.position.getPos();\n\n        const line = bresenhamLine(start.x, start.y, end.x, end.y);\n\n        if (line.length > this.range) {\n            return false;\n        }\n\n        return !line.some((segment) => {\n            return game.map\n                .getEntitiesAt(segment.x, segment.y)\n                .some((entity) => entity.has(Shadowcaster));\n        });\n    }\n\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        // get within square area\n        const targets = game.map\n            .getEntitiesInRange(position.x, position.y, this.range)\n            .filter((e) => {\n                if (!e.actor) {\n                    return false;\n                }\n                if (!game.factions.areEntitiesHostile(this.entity, e)) {\n                    return false;\n                }\n\n                return this.canSee(e);\n            })\n\n        if (targets.length > 0) {\n            targets.forEach((e) => {\n                evt.data.targets.add(e);\n            });\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_AMULET, SPWN_CLOTH_ARMOR, SPWN_SHORTSWORD, SPWN_STONE, SPWN_VIAL_BLOOD } from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(4, SPWN_CLOTH_ARMOR);\ngoblins.add(15, SPWN_SHORTSWORD);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY]\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter((slot) => {\n            return this.slotTypes.includes(slot.slotType);\n        });\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Equip ${this.entity.moniker.display}`,\n            list: slots,\n            onRenderRow: (slot, x, y, isSelected) => {\n                let text = slot.name;\n\n                if (!slot.isEmpty) {\n                    text += ` [${slot.content.moniker.display}]`;\n                }\n\n                if (isSelected) {\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n                } else {\n                    game.renderer.drawText(x, y, `- ${text}`);\n                }\n            },\n            onSelect: (slot) => {\n                slot.unequip();\n                slot.equip(this.entity);\n                evt.data.interactor.fireEvent('energy-consumed', 200);\n                evt.handle();\n                game.screens.popScreen();\n            }\n        });\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.isInventoried) {\n            if (!this.entity.isInventoried.isOwnedBy(evt.data.interactor)) {\n                return;\n            }\n        }\n\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\nexport const EQ_SLOT_HAND = 'EQ_SLOT_HAND';\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { getWeaponType, WPN_TYPE_UNARMED } from '../../data/WeaponTypes';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n        isPrimary: false,\n        isOffhand: false,\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n\n    onTryMelee(evt) {\n        if (!this.isPrimary) {\n            return;\n        }\n\n        const map = window.game.map;\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        if (this.isEmpty) {\n            const weaponType = getWeaponType(WPN_TYPE_UNARMED);\n\n            weaponType.attack(this.entity, evt.data.target);\n\n            this.entity.fireEvent('energy-consumed', 600);\n            console.log(`attack ${this.name}, cost`, 600);\n\n            evt.handle();\n            return;\n        }\n\n        this.content.fireEvent('try-use-melee', {\n            interactor: this.entity,\n            target: evt.data.target,\n        });\n\n        evt.handle();\n    }\n\n    onQueryAbilityModifierArmor(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        this.content.fireEvent(`query-equipped-ability-modifier-${evt.data.name}`, {\n            name: evt.data.name,\n            modifiers: evt.data.modifiers,\n        });\n    }\n}\n","import { DMG_TYPE_BLUDGEONING, DMG_TYPE_PIERCING, DMG_TYPE_SLASHING } from './DamageTypes';\nimport { WPN_FAMILY_AXE, WPN_FAMILY_BLADE, WPN_FAMILY_HAMMER, WPN_FAMILY_POLEARM } from './WeaponFamilies';\nimport WpnTypeGreatsword from './weapons/WpnTypeGreatsword';\nimport WpnTypeShortsword from './weapons/WpnTypeShortsword';\nimport WpnTypeUnarmed from './weapons/WpnTypeUnarmed';\n\n// hammer family\nexport const WPN_TYPE_WAR_HAMMER = 'WPN_TYPE_WAR_HAMMER';\nexport const WPN_TYPE_SLEDGE_HAMMER = 'WPN_TYPE_SLEDGE_HAMMER';\nexport const WPN_TYPE_CLUB = 'WPN_TYPE_CLUB';\nexport const WPN_TYPE_MACE = 'WPN_TYPE_MACE';\n// axe family\nexport const WPN_TYPE_HEAVY_AXE = 'WPN_TYPE_HEAVY_AXE';\nexport const WPN_TYPE_HATCHET = 'WPN_TYPE_HATCHET';\n// blade family\nexport const WPN_TYPE_GREATSWORD = 'WPN_TYPE_GREATSWORD';\nexport const WPN_TYPE_SHORTSWORD = 'WPN_TYPE_SHORTSWORD';\nexport const WPN_TYPE_DAGGER = 'WPN_TYPE_DAGGER';\n// polearm family\nexport const WPN_TYPE_STAFF = 'WPN_TYPE_STAFF';\nexport const WPN_TYPE_HALBERD = 'WPN_TYPE_HALBERD';\nexport const WPN_TYPE_JAVELIN = 'WPN_TYPE_JAVELIN';\n// unarmed family\nexport const WPN_TYPE_UNARMED = 'WPN_TYPE_UNARMED';\n\nconst lookup = {\n    [WPN_TYPE_UNARMED]: new WpnTypeUnarmed(),\n    [WPN_TYPE_WAR_HAMMER]: {\n        name: 'War hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_WAR_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_SLEDGE_HAMMER]: {\n        name: 'Sledge hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_SLEDGE_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_CLUB]: {\n        name: 'Club',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_CLUB,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_MACE]: {\n        name: 'Mace',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_MACE,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HEAVY_AXE]: {\n        name: 'Heavy axe',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HEAVY_AXE,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_HATCHET]: {\n        name: 'Hatchet',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HATCHET,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_GREATSWORD]: new WpnTypeGreatsword(),\n    [WPN_TYPE_SHORTSWORD]: new WpnTypeShortsword(),\n    [WPN_TYPE_DAGGER]: {\n        name: 'Dagger',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_DAGGER,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_STAFF]: {\n        name: 'Staff',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_STAFF,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HALBERD]: {\n        name: 'Halberd',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_HALBERD,\n        damageType: DMG_TYPE_PIERCING,\n    },\n    [WPN_TYPE_JAVELIN]: {\n        name: 'Javelin',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_JAVELIN,\n        damageType: DMG_TYPE_PIERCING,\n    },\n};\n\nexport const getWeaponType = (type) => lookup[type];\nexport const getWeaponTypeName = (type) => lookup[type].name;\nexport const getWeaponTypeFamily = (type) => lookup[type].family;\nexport const getWeaponTypeDmgType = (type) => lookup[type].damageType;\n","export const WPN_FAMILY_HAMMER = 'WPN_FAMILY_HAMMER';\nexport const WPN_FAMILY_AXE = 'WPN_FAMILY_AXE';\nexport const WPN_FAMILY_BLADE = 'WPN_FAMILY_BLADE';\nexport const WPN_FAMILY_ARCHERY = 'WPN_FAMILY_ARCHERY';\nexport const WPN_FAMILY_POLEARM = 'WPN_FAMILY_POLEARM';\nexport const WPN_FAMILY_UNARMED = 'WPN_FAMILY_UNARMED';\n\nconst lookup = {\n    [WPN_FAMILY_HAMMER]: {\n        name: 'Hammer'\n    },\n    [WPN_FAMILY_AXE]: {\n        name: 'Axe'\n    },\n    [WPN_FAMILY_BLADE]: {\n        name: 'Blade'\n    },\n    [WPN_FAMILY_ARCHERY]: {\n        name: 'Archery'\n    },\n    [WPN_FAMILY_POLEARM]: {\n        name: 'Polearm'\n    },\n    [WPN_FAMILY_UNARMED]: {\n        name: 'Unarmed'\n    },\n};\n\nexport const getWeaponFamilyName = (family) => lookup[family].name;\n","import { game } from '../../core/Game';\nimport { getAdjacentDeltas, directionFromDelta } from '../../enums/Directions';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_GREATSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeGreatsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_GREATSWORD,\n            name: 'Greatsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _getNeighborAttacks(attacker, defender, weapon, damage) {\n        const attackerPos = attacker.position.getPos();\n        const defenderPos = defender.position.getPos();\n        const deltaX = defenderPos.x - attackerPos.x;\n        const deltaY = defenderPos.y - attackerPos.y;\n        const direction = directionFromDelta(deltaX, deltaY);\n        const adjacentDeltas = getAdjacentDeltas(direction.key);\n\n        return adjacentDeltas\n            .map((delta) => game.map.getEntitiesAt(\n                attackerPos.x + delta.x,\n                attackerPos.y + delta.y,\n            ))\n            .flat()\n            .filter((e) => game.factions.areEntitiesHostile(e, attacker))\n            .map((hostile) => {\n                return new Attack({\n                    attacker,\n                    ignoreDodge: true,\n                    defender: hostile,\n                    weaponName: weapon.name,\n                    damage: Math.floor(damage / 2),\n                    damageType: this.damageType,\n                });\n            });\n    }\n\n    _tryAttackDefender(attacker, defender, weapon, damage) {\n        const attack = new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n\n        return defender.fireEvent('attacked', { attack });\n    }\n\n    attack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n        const result = this._tryAttackDefender(attacker, defender, weapon, damage);\n\n        const attacks = [result];\n\n        if (!result.data.isDodged) {\n            const neighborAttacks = this._getNeighborAttacks(attacker, defender, weapon, damage);\n\n            neighborAttacks.forEach((attack) => {\n                attacks.push(attack);\n                attack.defender.fireEvent('attacked', { attack });\n            });\n        }\n\n        return attacks;\n    }\n}\n","export default class Attack {\n    constructor(data) {\n        this.attacker = data.attacker;\n        this.defender = data.defender;\n        this.weaponName = data.weaponName;\n        this.damage = data.damage;\n        this.damageType = data.damageType;\n        this.ignoreDodge = data.ignoreDodge;\n    }\n}\n","\nexport default class WeaponType {\n    constructor(data) {\n        this.name = data.name;\n        this.family = data.family;\n        this.key = data.key;\n        this.damageType = data.damageType;\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        return [];\n    }\n\n    attack(attacker, defender, weapon) {\n        const attacks = this.getAttacks(attacker, defender, weapon);\n\n        return attacks.map((attack) => {\n            attack.defender.fireEvent('attacked', { attack });\n        });\n    }\n}\n","import Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_SHORTSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeShortsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_SHORTSWORD,\n            name: 'Shortsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: weapon.name,\n                damage,\n                damageType: this.damageType,\n            })\n        ];\n    }\n}\n","import { pickRandom, randomInt } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\nimport { WPN_TYPE_UNARMED } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeUnarmed extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_UNARMED,\n            name: 'Unarmed',\n            family: WPN_FAMILY_UNARMED,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = randomInt(1, 4);\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: pickRandom(['punch', 'kick']),\n                damage,\n                damageType: this.damageType,\n            })\n        ];\n    }\n}\n","import { Component } from 'geotic';\nimport { capitalize } from 'rot-js/lib/util';\nimport { getStatName, STAT_ATHLETICISM, STAT_FINESSE, STAT_STRENGTH, STAT_TRICKERY } from '../../data/Stats';\n\nexport class Stats extends Component {\n    static properties = {\n        baseStrength: 0,\n        baseFinesse: 0,\n        baseAthleticism: 0,\n        baseTrickery: 0,\n    };\n\n    _sumMods(modifiers) {\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    getStatModifiers(stat) {\n        const name = getStatName(stat);\n        const modifiers = [];\n\n        this.entity.fireEvent(`query-stat-modifier-${name}`, {\n            modifiers\n        });\n\n        return modifiers;\n    }\n\n    getStatModifierSum(stat) {\n        const mods = this.getStatModifiers(stat);\n\n        return this._sumMods(mods);\n    }\n\n    data(stat) {\n        const name = getStatName(stat);\n        const modifiers = this.getStatModifiers(stat);\n        const base = this[`base${capitalize(name)}`];\n        const modSum = this._sumMods(modifiers);\n        const sum = base + modSum;\n\n        return {\n            stat,\n            name,\n            modifiers,\n            base,\n            sum,\n            modSum,\n        };\n    }\n\n    all() {\n        return {\n            strength: this.data(STAT_STRENGTH),\n            finesse: this.data(STAT_FINESSE),\n            athleticism: this.data(STAT_ATHLETICISM),\n            trickery: this.data(STAT_TRICKERY),\n        };\n    }\n\n    strength() {\n        const mod = this.getStatModifierSum(STAT_STRENGTH);\n\n        return this.baseStrength + mod;\n    }\n\n    finesse() {\n        const mod = this.getStatModifierSum(STAT_FINESSE);\n\n        return this.baseFinesse + mod;\n    }\n\n    athleticism() {\n        const mod = this.getStatModifierSum(STAT_ATHLETICISM);\n\n        return this.baseAthleticism + mod;\n    }\n\n    trickery() {\n        const mod = this.getStatModifierSum(STAT_TRICKERY);\n\n        return this.baseTrickery + mod;\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { Component } from 'geotic';\nimport { getRaceData, RACE_HUMAN } from '../../data/Races';\n\nexport class Race extends Component {\n    static properties = {\n        key: RACE_HUMAN\n    };\n\n    data() {\n        return getRaceData(this.key);\n    }\n\n    get name() {\n        return this.data().name;\n    }\n\n    get speed() {\n        return this.data().speed;\n    }\n\n    get strengthMod() {\n        return this.data().modStrength;\n    }\n\n    get finesseMod() {\n        return this.data().modFinesse;\n    }\n\n    get athleticismMod() {\n        return this.data().modAthleticism;\n    }\n\n    get trickeryMod() {\n        return this.data().modTrickery;\n    }\n\n    onQueryStatModifierStrength(evt) {\n        const mod = this.strengthMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierFinesse(evt) {\n        const mod = this.finesseMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierAthleticism(evt) {\n        const mod = this.athleticismMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierTrickery(evt) {\n        const mod = this.trickeryMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryAbilityModifierSpeed(evt) {\n        evt.data.modifiers.push({\n            source: this.name,\n            mod: this.speed,\n        });\n    }\n};\n","import RaceData from './RaceData';\n\nexport const RACE_HUMAN = 'RACE_HUMAN';\nexport const RACE_GOBLIN = 'RACE_GOBLIN';\n\nconst lookup = {\n    [RACE_HUMAN]: new RaceData({\n        name: 'Human',\n        key: RACE_HUMAN,\n        speed: 1.2,\n        modStrength: 1,\n        modFinesse: 1,\n        modAthleticism: 1,\n        modTrickery: 1,\n    }),\n    [RACE_GOBLIN]: new RaceData({\n        name: 'Goblin',\n        key: RACE_GOBLIN,\n        speed: 1,\n        modStrength: -1,\n        modFinesse: 2,\n        modAthleticism: 1,\n        modTrickery: 2,\n    }),\n};\n\nexport const getRaceData = (name) => lookup[name];\n","export default class RaceData {\n    name = '';\n    speed = 1;\n    key = 1;\n    modStrength = 0;\n    modFinesse = 0;\n    modAthleticism = 0;\n    modTrickery = 0;\n\n    constructor(data) {\n        this.name = data.name || '';\n        this.speed = data.speed || 1;\n        this.key = data.key;\n\n        this.modStrength = data.modStrength || 0;\n        this.modFinesse = data.modFinesse || 0;\n        this.modAthleticism = data.modAthleticism || 0;\n        this.modTrickery = data.modTrickery || 0;\n    }\n}\n","import { Component } from 'geotic';\nimport { getWeaponType, getWeaponTypeDmgType, getWeaponTypeFamily, getWeaponTypeName } from '../../data/WeaponTypes';\nimport { randomInt } from '../../utils/rand';\n\nexport class Weapon extends Component {\n    static properties = {\n        weaponType: 'WPN_TYPE_DAGGER',\n        die: 6,\n        modifier: 1,\n        cost: 600,\n    };\n\n    get name() {\n        return getWeaponTypeName(this.weaponType);\n    }\n\n    get family() {\n        return getWeaponTypeFamily(this.weaponType);\n    }\n\n    get damageType() {\n        return getWeaponTypeDmgType(this.weaponType);\n    }\n\n    roll() {\n        const r = randomInt(1, this.die);\n\n        console.log(`1d${this.die}+${this.modifier} = ${r}+${this.modifier} = ${r + this.modifier}`)\n        return r + this.modifier;\n    }\n\n    onTryUseMelee(evt) {\n        const weaponType = getWeaponType(this.weaponType);\n\n        weaponType.attack(\n            evt.data.interactor,\n            evt.data.target,\n            this,\n        );\n\n        evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n        evt.handle();\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import {\r\n    IsInventoried,\r\n    Explored,\r\n    Glyph,\r\n    Position,\r\n    IsVisible,\r\n    IsDestroying,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class RenderSystem extends System {\r\n    #query = null;\r\n    #explored = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Glyph, Position, IsVisible],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n        this.#explored = game.ecs.createQuery({\r\n            all: [Glyph, Position, Explored],\r\n            none: [IsInventoried, IsVisible, IsDestroying],\r\n        });\r\n    }\r\n\r\n    render(dt) {\r\n        this.game.renderer.clear();\r\n\r\n        const explored = Array.from(this.#explored.get());\r\n\r\n        for (let i = 0; i < explored.length; i++) {\r\n            const renderable = explored[i];\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                continue;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                '#2c3538',\r\n                '#2c3538'\r\n            );\r\n        }\r\n\r\n        const renderables = Array.from(this.#query.get());\r\n\r\n        for (let i = 0; i < renderables.length; i++) {\r\n            const renderable = renderables[i];\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                continue;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                renderable.glyph.primary,\r\n                renderable.glyph.secondary,\r\n                renderable.glyph.background\r\n            );\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.render();\r\n    }\r\n}\r\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn.toFixed(0)}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n    KEY_Y,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_CHARACTER,            'character',              true, KEY_Y,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\nexport const INPUT_CMD_CHARACTER = 30;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_LIST_SELECT,\n    SCREEN_CHARACTER,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport ListSelectionScreen from './screens/ListSelectionScreen';\nimport CharacterScreen from './screens/CharacterScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\n            [SCREEN_CHARACTER]: new CharacterScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    replaceScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_CHARACTER,\n    SCREEN_LIST_SELECT,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const items = entities.filter((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n\n            return evt.data.interactions.length > 0;\n        });\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        if (items.length == 1) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: items[0],\n            });\n            return;\n        }\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Choose`,\n            list: items,\n            onGetRowName: (item) => item.moniker.display,\n            onSelect: (item) => {\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\n                    interactor: this.game.player.entity,\n                    interactable: item,\n                });\n            }\n        });\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CHARACTER) {\n            this.game.screens.pushScreen(SCREEN_CHARACTER, {\n                character: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n\n        if (!this.game.state.isStarted) {\n            this.game.music.play('BARDS_TALE');\n        }\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(\n            1,\n            4,\n            `move       [q, w, e, a, d, z, x, c]`\n        );\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InventoryScreen extends Screen {\n    #accessible;\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n        this.list.setItems(this.#accessible.inventory.content);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interactable = this.list.selected;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down()\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        if (this.list.items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            const textLen = this.game.renderer.computeTextWidth(item.moniker.display);\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n\n            if (item.isEquipped) {\n                const slot = item.isEquipped.slot.name;\n\n                this.game.renderer.drawText(4 + textLen + 0.5, ypos, `[${slot}]`, '#2c3538');\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","export default class SelectableList {\n    _items = [];\n    _idx = 0;\n\n    get selected() {\n        return this._items[this._idx];\n    }\n\n    get items() {\n        return this._items;\n    }\n\n    get data() {\n        return this._items.map((item, idx) => ({\n            item,\n            idx,\n            isSelected: idx === this._idx,\n        }));\n    }\n\n    get isEmpty() {\n        return this._items.length <= 0;\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    constructor(items = [], idx = 0) {\n        this._idx = idx;\n        this.setItems(items);\n    }\n\n    setItems(items = []) {\n        this._items = items;\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\n    }\n\n    up() {\n        this._idx--;\n\n        if (this._idx < 0) {\n            this._idx = this._items.length - 1;\n        }\n    }\n\n    down() {\n        this._idx++;\n\n        if (this._idx >= this._items.length) {\n            this._idx = 0;\n        }\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 12;\n    #interactable;\n    #interactor;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.#width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.#height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.list.setItems([...evt.data.interactions, {\n            name: 'Back',\n            isBack: true,\n        }]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interaction = this.list.selected;\n\n        if (interaction.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.#interactable.fireEvent(interaction.evt, {\n            interactor: this.#interactor,\n        });\n\n        if (this.#interactable.isDestroyed) {\n            this.game.screens.popScreen();\n\n            return;\n        }\n\n        this.refreshList();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width + 1,\n            this.#height + 1\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const xpos = this.left + 2;\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const ypos = idx + this.top + 4;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, `→ ${item.name}`, 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\n            }\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { FactionMember } from '../../../ecs/components';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        const target = this.game.cursor\n            .getEntities()\n            .filter((e) => e.has(FactionMember))\n            .pop();\n\n        const player = this.game.player.entity;\n\n        if (target) {\n            const faction = target.factionMember.faction;\n            const relation = this.game.factions.getEntityRelation(\n                player,\n                target\n            );\n\n            let disp = this.game.factions.getDisplay(relation);\n\n            this.game.renderer.drawTextCenter(\n                1,\n                `${faction.display} Faction [${disp}]`\n            );\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.music.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class EquipmentScreen extends Screen {\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessor = ctx.accessor;\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectSlot() {\n        const interactable = this.list.selected.content;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectSlot();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\n            'purple'\n        );\n\n        if (this.list.isEmpty) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const slot = item;\n            const ypos = idx + 5;\n            const selectedColor = 'yellow';\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, `→ ${slot.name}`, selectedColor);\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\n            }\n\n            if (slot.isEmpty) {\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\n            } else {\n                const content = slot.content;\n                this.game.renderer.draw(15, ypos,\n                    content.glyph.char,\n                    content.glyph.primary,\n                    content.glyph.secondary,\n                    content.glyph.background\n                );\n                this.game.renderer.drawText(16, ypos, ` ${content.moniker.display}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport Simple from 'rot-js/lib/scheduler/simple';\n\nconst NOOP = () => {};\n\nexport default class ListSelectionScreen extends Screen {\n    width = 16;\n    height = 12;\n    list = new SelectableList();\n    header = '';\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.list.setItems(ctx.list || []);\n        this.header = ctx.header || 'Select';\n        this.onSelect = ctx.onSelect || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onGetRowName = ctx.onGetRowName || NOOP;\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        this.onSelect(this.list.selected);\n    }\n\n    cancel() {\n        this.onCancel();\n        this.game.screens.popScreen();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.cancel();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    defaultRowRender(row, x, y, isSelected) {\n        const text = this.onGetRowName(row, x, y, isSelected);\n\n        if (isSelected) {\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n        } else {\n            this.game.renderer.drawText(x, y, `- ${text}`);\n        }\n    };\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.width + 1,\n            this.height + 1\n        );\n\n        this.game.renderer.drawTextCenter(this.top + 2, this.header);\n\n        for (let i = this.left; i < this.left + this.width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.height, '└');\n        this.game.renderer.draw(\n            this.left + this.width,\n            this.top + this.height,\n            '┘'\n        );\n\n        const xpos = this.left + 2;\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const ypos = idx + this.top + 4;\n\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\n        });\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport { ABILITY_ARMOR, ABILITY_DODGE, ABILITY_SPEED, getAbilityValue } from '../../../data/Abilities';\nimport { getArmorBlockPercent } from '../../../data/abilities/ArmorAbility';\nimport { getDodgePercent } from '../../../data/abilities/DodgeAbility';\n\nexport default class CharacterScreen extends Screen {\n    character;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.character = ctx.character;\n\n        const stats = this.character.stats.all();\n\n        this.list = new SelectableList(Object.values(stats));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down()\n        }\n\n        // if (cmd.type === INPUT_CMD_CONFIRM) {\n        //     this.selectItem();\n        // }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.character.moniker.display} Character ~`,\n            'orange'\n        );\n\n        const health = this.character.health.value;\n        const healthMax = this.character.health.max;\n\n        this.game.renderer.drawText(2, 5, 'health');\n        this.game.renderer.drawText(10, 5, `${health}/${healthMax}`);\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.character);\n\n        this.game.renderer.drawText(2, 6, 'speed');\n        this.game.renderer.drawText(10, 6, `+${speed}`);\n\n        const armor = getAbilityValue(ABILITY_ARMOR, this.character);\n        const armorPrcnt = getArmorBlockPercent(armor);\n\n        this.game.renderer.drawText(2, 7, 'armor');\n        this.game.renderer.drawText(10, 7, `+${armor} (${armorPrcnt}% less melee damage taken)`);\n\n        const dodge = getAbilityValue(ABILITY_DODGE, this.character);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        this.game.renderer.drawText(2, 8, 'dodge');\n        this.game.renderer.drawText(10, 8, `+${dodge} (${dodgePrcnt}% chance to avoid a melee attack)`);\n\n        let pad = 0;\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const stat = item;\n            const ypos = idx + 13 + pad;\n            const modDir = stat.modSum > 0 ? '+' : '-';\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, `→ ${stat.name}`, 'yellow');\n                this.game.renderer.drawText(10, ypos, `${modDir}${stat.sum}`, 'yellow');\n\n                stat.modifiers.forEach((mod, i) => {\n                    if (mod.mod > 0) {\n                        this.game.renderer.drawText(3, ypos + i + 1, `+${mod.mod} (${mod.source})`, 'green');\n                    } else {\n                        this.game.renderer.drawText(3, ypos + i + 1, `-${Math.abs(mod.mod)} (${mod.source})`, 'red');\n                    }\n                });\n\n                pad += stat.modifiers.length;\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${stat.name}`);\n                this.game.renderer.drawText(10, ypos, `${modDir}${stat.sum}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.moveCommand.destroy();\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.meleeCommand.destroy();\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\r\nimport FastMap from '../utils/FastMap';\r\nimport { IsInventoried, Position } from '../ecs/components';\r\n\r\nexport default class MapManager extends Manager {\r\n    #playerOutOfBounds = null;\r\n    #lookup;\r\n    #width = 32;\r\n    #height = 32;\r\n\r\n    get width() {\r\n        return this.#width;\r\n    }\r\n\r\n    get height() {\r\n        return this.#height;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [Position],\r\n        });\r\n\r\n        this.#lookup = new FastMap(this.width, this.height);\r\n\r\n        this.query.onEntityAdded((e) => {\r\n            this.#lookup.set(0, 0, e.id);\r\n        });\r\n\r\n        this.query.onEntityRemoved((e) => {\r\n            this.#lookup.remove(e.id);\r\n        });\r\n    }\r\n\r\n    getSetupData() {\r\n        return {};\r\n    }\r\n\r\n    teardown() {\r\n        this.#playerOutOfBounds = false;\r\n        this.#lookup.clear();\r\n    }\r\n\r\n    setup(data) {\r\n        if (data.playerPosition) {\r\n            this.game.player.entity.position.setPos(\r\n                data.playerPosition.x,\r\n                data.playerPosition.y\r\n            );\r\n        } else {\r\n            const position = this.getRandomEmptyPosition();\r\n            this.game.player.entity.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        this.game.FOVSystem.computeFOV();\r\n    }\r\n\r\n    getSaveGameData() {\r\n        const data = this.#lookup.serialize();\r\n\r\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\r\n\r\n        return {\r\n            playerPosition: this.game.player.position,\r\n        };\r\n    }\r\n\r\n    onSectorLoaded(sector) {\r\n        this.#playerOutOfBounds = false;\r\n\r\n        const data = this.game.state.loadSectorPositionData(sector.id);\r\n\r\n        if (data) {\r\n            this.#lookup.deserialize(data);\r\n        }\r\n    }\r\n\r\n    getPosition(entityId) {\r\n        return this.#lookup.getPosition(entityId);\r\n    }\r\n\r\n    setPosition(x, y, entityId) {\r\n        if (this.#lookup.isOutOfBounds(x, y)) {\r\n            if (this.game.player.id === entityId) {\r\n                this.#playerOutOfBounds = { x, y };\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.#lookup.set(x, y, entityId);\r\n\r\n        if (entityId === this.game.player.id) {\r\n            this.game.camera.setFocus(x, y);\r\n        }\r\n    }\r\n\r\n    getEntitiesAt(x, y) {\r\n        return this.#lookup\r\n            .get(x, y)\r\n            .map((id) => this.game.ecs.getEntity(id))\r\n            .filter((e) => !e.has(IsInventoried));\r\n    }\r\n\r\n    isAdjacent(x1, y1, x2, y2) {\r\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\r\n    }\r\n\r\n    getEntitiesInRect(x, y, width, height) {\r\n        const entities = [];\r\n\r\n        for (let i = x; i < x + width + 1; i++) {\r\n            for (let j = y; j < y + height + 1; j++) {\r\n                entities.push(...this.getEntitiesAt(i, j));\r\n            }\r\n        }\r\n\r\n        return entities;\r\n    }\r\n\r\n    getEntitiesInRange(x, y, range) {\r\n        const diameter = range * 2;\r\n\r\n        return this.getEntitiesInRect(\r\n            x - range,\r\n            y - range,\r\n            diameter,\r\n            diameter\r\n        );\r\n    }\r\n\r\n    getNeighborEntities(x, y) {\r\n        return [\r\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\r\n            this.getEntitiesAt(x, y - 1), // TOP\r\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\r\n            this.getEntitiesAt(x - 1, y), // LEFT\r\n            this.getEntitiesAt(x + 1, y), // RIGHT\r\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\r\n            this.getEntitiesAt(x, y + 1), // BOTTOM\r\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\r\n        ];\r\n    }\r\n\r\n    getRandomEmptyPosition() {\r\n        let x, y;\r\n        do {\r\n            x = Math.trunc(Math.random() * this.width);\r\n            y = Math.trunc(Math.random() * this.height);\r\n        } while (this.getEntitiesAt(x, y).length > 0);\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    isOutOfbounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\r\n    }\r\n\r\n    onPlayerOutOfBounds(x, y) {\r\n        if (y < 0) {\r\n            this.game.world.enterSector(this.game.world.sector.northSector, {\r\n                x,\r\n                y: this.height - 1,\r\n            });\r\n        }\r\n        if (y >= this.height) {\r\n            this.game.world.enterSector(this.game.world.sector.southSector, {\r\n                x,\r\n                y: 0,\r\n            });\r\n        }\r\n        if (x >= this.width) {\r\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\r\n                x: 0,\r\n                y,\r\n            });\r\n        }\r\n        if (x < 0) {\r\n            this.game.world.enterSector(this.game.world.sector.westSector, {\r\n                x: this.width - 1,\r\n                y,\r\n            });\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.#playerOutOfBounds) {\r\n            this.onPlayerOutOfBounds(\r\n                this.#playerOutOfBounds.x,\r\n                this.#playerOutOfBounds.y\r\n            );\r\n        }\r\n    }\r\n}\r\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    IsDestroying,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 12, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { IsDead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [IsDead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 120);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n    padding = 4;\n    clampX = 32;\n    clampY = 24;\n\n    _focusX = 0;\n    _focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    computeSize() {\n        this.width = Math.max(this.clampX, Math.floor(window.innerWidth / this.renderedTileWidth) - 2);\n        this.height = Math.max(this.clampY, Math.floor(window.innerHeight / this.renderedTileHeight) - 2);\n        this.topLeftWorldX = Math.floor(Math.min(\n            Math.max(-this.padding, this._focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.padding + this.game.map.width - this.width\n            ))\n        );\n        this.topLeftWorldY = Math.floor(Math.min(\n            Math.max(-this.padding, this._focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.padding + this.game.map.height - this.height\n            ))\n        );\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.computeSize();\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this._focusX = x;\n        this._focusY = y;\n        this.computeSize();\n    }\n\n    setPadding(value) {\n        this.padding = value;\n        this.computeSize();\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nconst fpsElement = document.getElementsByClassName('fps')[0];\n\nexport default class FPSMonitoringSystem extends System {\n    frames = [];\n    frameCount = 60;\n\n    constructor(game) {\n        super(game);\n        this.frames = [];\n\n        for (let i = 0; i < this.frameCount; i++) {\n            this.frames[i] = 0;\n        }\n    }\n\n    update(dt) {\n        this.frames.push(1000 / dt);\n        this.frames.shift();\n\n        const sum = this.frames.reduce((s, v) => s + v, 0);\n        const fps = Math.trunc(sum / this.frameCount);\n\n        fpsElement.innerText = fps;\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\r\nimport data from './world.json';\r\n\r\nexport default class WorldData {\r\n    #sectors = [];\r\n\r\n    get width() {\r\n        return data.width;\r\n    }\r\n\r\n    get height() {\r\n        return data.height;\r\n    }\r\n\r\n    idx(x, y) {\r\n        return y * this.width + x;\r\n    }\r\n\r\n    coord(idx) {\r\n        return {\r\n            x: Math.trunc(idx % this.width),\r\n            y: Math.trunc(idx / this.width),\r\n        };\r\n    }\r\n\r\n    constructor() {\r\n        this.#sectors = [];\r\n\r\n        for (let x = 0; x < data.width; x++) {\r\n            for (let y = 0; y < data.height; y++) {\r\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\r\n\r\n                this.#sectors[sector.id] = sector;\r\n            }\r\n        }\r\n    }\r\n\r\n    isOutOfBounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\r\n    }\r\n\r\n    getStartingSector() {\r\n        return this.getSector(4);\r\n    }\r\n\r\n    getSectorByCoord(x, y) {\r\n        return this.getSector(this.idx(x, y));\r\n    }\r\n\r\n    getSector(idx) {\r\n        const { x, y } = this.coord(idx);\r\n\r\n        if (this.isOutOfBounds(x, y)) {\r\n            return new Sector(this, x, y);\r\n        }\r\n\r\n        return this.#sectors[idx];\r\n    }\r\n}\r\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n    music = null;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n        sector.music = data.music;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR)) {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_LEATHER_BOOTS,\n    SPWN_SHORTSWORD,\n    SPWN_GREATSWORD,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_BOOTS));\n            chest.inventory.addLoot(spawn(SPWN_SHORTSWORD));\n            chest.inventory.addLoot(spawn(SPWN_GREATSWORD));\n        });\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 4;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","import { Howl } from 'howler';\nimport Manager from './Manager';\nimport music from './../data/music.json';\n\nclass Track {\n    isPlaying = false;\n    isIntro = false;\n    howl = null;\n\n    constructor(path, data) {\n        this.name = data.name;\n        this.loop = new Howl({\n            loop: true,\n            src: [`${path}${data.loop}`],\n        });\n\n        if (data.intro) {\n            this.intro = new Howl({\n                loop: false,\n                src: [`${path}${data.intro}`],\n            });\n\n            this.intro.on('end', () => {\n                if (this.isPlaying) {\n                    this.howl = this.loop;\n                    this.loop.seek(0);\n                    this.loop.volume(1);\n                    this.loop.play();\n                } else {\n                    this.intro.stop();\n                    this.loop.stop();\n                }\n            });\n        }\n    }\n\n    play() {\n        if (this.isPlaying) {\n            return;\n        }\n\n        if (this.intro) {\n            this.howl = this.intro;\n            this.intro.seek(0);\n            this.intro.play();\n            this.intro.fade(0, 1, 5000);\n            this.loop.stop();\n            // this.intro.volume(1);\n        } else {\n            this.howl = this.loop;\n            this.loop.seek(0);\n            this.loop.play();\n            this.loop.fade(0, 1, 5000);\n            // this.loop.volume(1);\n        }\n\n        this.isPlaying = true;\n    }\n\n    stop() {\n        if (this.howl) {\n            this.howl.fade(1, 0, 500);\n        }\n        this.isPlaying = false;\n    }\n}\n\nexport default class MusicManager extends Manager {\n    tracks = {};\n    currentTrack = null;\n\n    constructor(game) {\n        super(game);\n        const path = `${window.location.protocol}//${window.location.host}${window.location.pathname}${music.path}`;\n\n        music.tracks.forEach((data) => {\n            const track = new Track(path, data);\n\n            this.tracks[data.key] = track;\n        });\n    }\n\n    play(key) {\n        if (key === this.currentTrack) {\n            return;\n        }\n\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n\n        this.tracks[key].play();\n        this.currentTrack = key;\n    }\n\n    stop() {\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n    }\n\n    onSectorLoaded(sector) {\n        this.play(sector.music);\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}