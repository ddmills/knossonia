{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./src/utils/ColorParser.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/utils/AStar.js","webpack://knossonia/./src/utils/diagonalDistance.js","webpack://knossonia/./src/utils/ManhattanDistance.js","webpack://knossonia/./src/utils/PriorityQueue.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/generators/generators.js","webpack://knossonia/./src/level/generators/ForestCabinsGenerator.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/themes/TileTheme.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/level/themes/TileThemePopulator.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/themes/CabinTheme.js","webpack://knossonia/./src/level/schemes/UniformScheme.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/level/RoomData.js","webpack://knossonia/./node_modules/nanoid/index.prod.js","webpack://knossonia/./node_modules/nanoid/url-alphabet/index.js","webpack://knossonia/./src/level/TileScheme.js","webpack://knossonia/./src/level/generators/SectorGenerator.js","webpack://knossonia/./src/level/generators/ForestGenerator.js","webpack://knossonia/./src/level/generators/ForestStrongholdGenerator.js","webpack://knossonia/./src/level/schemes/DenseCastleScheme.js","webpack://knossonia/./src/level/generators/ForestTownGenerator.js","webpack://knossonia/./src/level/schemes/ScatteredScheme.js","webpack://knossonia/./src/level/generators/GeneratorUtils.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","mouse","MouseManager","clock","ClockManager","camera","CameraManager","renderer","Renderer","state","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","console","ConsoleManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","Date","now","boundLoop","loop","bind","requestAnimationFrame","dt","update","render","t","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","setSize","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","clear","clearArea","xPx","yPx","Math","trunc","Manager","createElement","ctx","getContext","alpha","textBaseline","widthPx","heightPx","style","cssText","pixelX","pixelY","colorize","fillStyle","clearColor","fillRect","drawImage","color","clearRect","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","j","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","key","_cache","hasOwnProperty","pixels","getImageData","data","cvs","putImageData","cache","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","slice","test","size","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","value","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","get","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","constructor","component","enumerable","set","v","id","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","camelcase","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","Entity","refs","Set","json","entities","list","entityData","createOrGetById","d","any","none","hasAny","c","hasAll","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","IsDestroying","pass","LiquidContainer","destroyOnEmpty","isEmpty","add","quantity","isPourable","volume","warn","createPrefab","liquidContainer","contents","position","setPos","_checkDestroyOnEmpty","pos","interactor","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","LIQUID_WATER","LIQUID_HONEY","colorDesc","onDrink","log","fireEvent","direction","glyphs","fg1s","speed","lifetime","Door","isOpen","ch","remove","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","content","result","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","indexOf","idx","splice","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","blocker","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","bresenhamLineExclusive","pop","corpse","moniker","range","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","damage","shouldAppear","getMessage","Dead","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","FAILURE","removeGoal","INVALID","goal","goalsToDestroy","isSelf","isSiblingGoal","originalIntent","SUCCESS","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","BoredGoalType","GoalType","detectHostiles","handled","killGoal","KillSomethingGoalType","brain","pushGoal","boredomGoal","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","random","disp","door","Logger","Position","getPosition","setPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","getEntitiesAt","some","nonHostile","Faction","areEntitiesHostile","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","Wandering","floor","Directions","Explorable","Explored","Health","max","Eyes","getNeighborEntities","flat","neighbor","Particle","arr","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","not","sorted","sort","incrementTick","isPlayer","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","padEnd","str","ceil","hp","health","sector","sectorTxt","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","hostileEntities","melee","doorEntity","move","lootable","item","pushScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","items","pointerUp","pointerDown","selectItem","ypos","resetInteractions","interaction","left","top","xpos","isSelected","NOOP","enable","disable","cursorColor","types","segment","drawCursor","getNeighbors","defaultSettings","cost","allowDiagonals","computeAStar","settings","heuristic","diagonalDistance","manhattanDistance","open","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","success","path","costs","Infinity","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","min","createItem","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","entityId","serialized","isTurn","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","keys","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","tick","isEnabled","getEntities","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","loadSectorPositionData","isOutOfBounds","x2","y2","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","entries","coord","fov","FOV","isSquareVisible","compute","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_data","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","meleeCommand","emitter","particleEmitter","isExpired","targetCount","factionA","factionB","entityA","entityB","isHostile","onWindowResize","innerWidth","innerHeight","resizeDisplay","topLeftWorldX","topLeftWorldY","worldX","worldY","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","exits","connectionsNorth","connectionsWest","getExits","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","pickRandom","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","SectorGenerator","randomInt","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","populateTile","TileThemePopulator","tileArr","attempts","getRandomEmptyTile","interiorTiles","trySpawn","goblin","vial","chest","stone","wanderer","TileContainer","MapGenerator","digPercentage","getRooms","createRoom","getDoors","TileScheme","defaultType","Grid","getTile","RoomData","addRoom","cloneTo","setTileTheme","includes","defaultValueGenerator","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","c1","c2","c3","c4","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","populateRoom","setTheme","exitOffset","padding","castle","DenseCastleScheme","combineOther","curId","createNodeId","splitNodeVertical","node","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","intersects","msgs","isDestroying","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.91abbef99d1e8c63ebe5.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\r\nimport InputController from './input/InputController';\r\nimport HungerSystem from '../systems/HungerSystem';\r\nimport ActionSystem from '../systems/ActionSystem';\r\nimport RenderSystem from '../systems/RenderSystem';\r\nimport MovementSystem from '../systems/MovementSystem';\r\nimport UISystem from '../systems/UISystem';\r\nimport MouseManager from './input/MouseManager';\r\nimport CommandManager from './input/CommandManager';\r\nimport ScreenManager from './screens/ScreenManager';\r\nimport PlayerManager from './PlayerManager';\r\nimport ECS from '../ecs';\r\nimport GameStateManager from './GameStateManager';\r\nimport ClockManager from './ClockManager';\r\nimport CursorSystem from '../systems/CursorSystem';\r\nimport MapManager from './MapManager';\r\nimport FOVSystem from '../systems/FOVSystem';\r\nimport MeleeSystem from '../systems/MeleeSystem';\r\nimport DeathSystem from '../systems/DeathSystem';\r\nimport ParticleSystem from '../systems/ParticleSystem';\r\nimport FactionManager from './FactionManager';\r\nimport CameraManager from './CameraManager';\r\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\r\nimport { WorldManager } from './WorldManager';\r\nimport ConsoleManager from './ConsoleManager';\r\nimport DestroySystem from '../systems/DestroySystem';\r\n\r\nexport default class Game {\r\n    #lastUpdate;\r\n\r\n    get ecs() {\r\n        return this.engine.engine;\r\n    }\r\n\r\n    constructor() {\r\n        this.engine = new ECS(this);\r\n        this.mouse = new MouseManager(this);\r\n        this.clock = new ClockManager(this);\r\n        this.camera = new CameraManager(this);\r\n        this.renderer = new Renderer(this);\r\n        this.state = new GameStateManager(this);\r\n        this.world = new WorldManager(this);\r\n        this.map = new MapManager(this);\r\n        this.factions = new FactionManager(this);\r\n        this.player = new PlayerManager(this);\r\n        this.commands = new CommandManager(this);\r\n        this.screens = new ScreenManager(this);\r\n        this.input = new InputController(this);\r\n        this.console = new ConsoleManager(this);\r\n\r\n        this.hungerSystem = new HungerSystem(this);\r\n        this.actionSystem = new ActionSystem(this);\r\n        this.movementSystem = new MovementSystem(this);\r\n        this.meleeSystem = new MeleeSystem(this);\r\n        this.deathSystem = new DeathSystem(this);\r\n        this.FOVSystem = new FOVSystem(this);\r\n        this.renderSystem = new RenderSystem(this);\r\n        this.UISystem = new UISystem(this);\r\n        this.cursor = new CursorSystem(this);\r\n        this.particles = new ParticleSystem(this);\r\n        this.fps = new FPSMonitoringSystem(this);\r\n        this.destroySystem = new DestroySystem(this);\r\n    }\r\n\r\n    start() {\r\n        this.#lastUpdate = Date.now();\r\n        this.boundLoop = this.loop.bind(this);\r\n        requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    updateAdventureSystems(dt) {\r\n        this.hungerSystem.update(dt);\r\n        this.actionSystem.update(dt);\r\n        this.movementSystem.update(dt);\r\n        this.meleeSystem.update(dt);\r\n        this.deathSystem.update(dt);\r\n        this.FOVSystem.update(dt);\r\n        this.renderSystem.update(dt);\r\n        this.particles.update(dt);\r\n        this.UISystem.update(dt);\r\n        this.map.update(dt);\r\n        this.destroySystem.update(dt);\r\n        this.console.render(dt);\r\n    }\r\n\r\n    loop(t) {\r\n        const now = Date.now();\r\n        const dt = now - this.#lastUpdate;\r\n\r\n        this.screens.update(dt);\r\n        this.fps.update(dt);\r\n\r\n        this.#lastUpdate = now;\r\n\r\n        requestAnimationFrame(this.boundLoop);\r\n    }\r\n}\r\n\r\nexport const game = new Game();\r\n","import Manager from '../Manager';\r\nimport Display from './Display';\r\nimport spritesheets from './spritesheets';\r\n\r\nexport default class Renderer extends Manager {\r\n    #tileWidth = 16;\r\n    #tileHeight = 16;\r\n    #spritesheets = {};\r\n    #display = null;\r\n\r\n    get tileWidth() {\r\n        return this.#tileWidth;\r\n    }\r\n\r\n    get tileHeight() {\r\n        return this.#tileHeight;\r\n    }\r\n\r\n    get display() {\r\n        return this.#display;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.display.canvas;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        spritesheets().forEach((spritesheet) => {\r\n            this.#spritesheets[spritesheet.name] = spritesheet;\r\n        });\r\n\r\n        this.#display = new Display({\r\n            width: this.game.camera.width,\r\n            height: this.game.camera.height,\r\n            tileWidth: this.tileWidth,\r\n            tileHeight: this.tileHeight,\r\n        });\r\n\r\n        document.body.appendChild(this.display.canvas);\r\n    }\r\n\r\n    resizeDisplay(width, height) {\r\n        this.display.setSize(width, height);\r\n    }\r\n\r\n    draw(x, y, char, fg1 = '#c6d5da', fg2 = '#333', bg) {\r\n        const sprite = this.#spritesheets.tiles.getSprite(char);\r\n\r\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\r\n    }\r\n\r\n    computeTextWidth(text) {\r\n        return text.length * 0.5;\r\n    }\r\n\r\n    drawText(x, y, text, fg1 = '#c6d5da', fg2 = '#333', bg) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\r\n\r\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\r\n        }\r\n    }\r\n\r\n    drawTextCenter(y, text, fg1 = '#c6d5da', fg2 = '#333', bg) {\r\n        const len = this.computeTextWidth(text);\r\n\r\n        this.drawText(\r\n            (this.game.camera.width - len) / 2,\r\n            y,\r\n            text,\r\n            fg1,\r\n            fg2,\r\n            bg\r\n        );\r\n    }\r\n\r\n    clear() {\r\n        this.display.clear();\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        this.display.clearArea(x, y, width, height);\r\n    }\r\n\r\n    pxToTile(xPx, yPx) {\r\n        const x = Math.trunc(xPx / this.tileWidth);\r\n        const y = Math.trunc(yPx / this.tileHeight);\r\n\r\n        return { x, y };\r\n    }\r\n}\r\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","export default class Display {\r\n    ctx;\r\n    canvas;\r\n    width;\r\n    height;\r\n    tileWidth;\r\n    tileHeight;\r\n    clearColor = '#141a23';\r\n\r\n    constructor({ width, height, tileWidth, tileHeight }) {\r\n        this.tileWidth = tileWidth;\r\n        this.tileHeight = tileHeight;\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\r\n\r\n        this.ctx.font = `${this.tileHeight}px monospace`;\r\n        this.ctx.textBaseline = 'top';\r\n\r\n        this.setSize(width, height);\r\n    }\r\n\r\n    setSize(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n\r\n        const widthPx = this.tileWidth * this.width;\r\n        const heightPx = this.tileHeight * this.height;\r\n\r\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\r\n        this.canvas.width = widthPx;\r\n        this.canvas.height = heightPx;\r\n    }\r\n\r\n    draw(x, y, sprite, fg1, fg2, bg) {\r\n        const pixelX = x * this.tileWidth;\r\n        const pixelY = y * this.tileHeight;\r\n\r\n        const img = sprite.colorize(fg1, fg2);\r\n\r\n        this.ctx.fillStyle = bg || this.clearColor;\r\n        this.ctx.fillRect(pixelX, pixelY, sprite.width, sprite.height);\r\n\r\n        this.ctx.drawImage(img, pixelX, pixelY);\r\n    }\r\n\r\n    clear() {\r\n        this.ctx.fillStyle = this.clearColor;\r\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        this.ctx.fillStyle = this.clearColor;\r\n        this.ctx.fillRect(\r\n            x * this.tileWidth,\r\n            y * this.tileHeight,\r\n            this.tileWidth * width,\r\n            this.tileHeight * height\r\n        );\r\n    }\r\n\r\n    fillTile(x, y, color) {\r\n        this.ctx.fillStyle = color;\r\n        this.ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\r\n    }\r\n\r\n    clearTile(x, y) {\r\n        this.ctx.clearRect(\r\n            x * this.tileWidth,\r\n            y * this.tileHeight,\r\n            this.tileWidth,\r\n            this.tileHeight\r\n        );\r\n    }\r\n}\r\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [\n            parsed[0],\n            parsed[1],\n            parsed[2],\n            parsed.alpha,\n        ];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\r\n                entity\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    #entity = null;\n    #ecs = null;\n    #props = {};\n    #isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get entity() {\n        return this.#entity;\n    }\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this.#props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.#ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this.#props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.#entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.#entity;\n\n            this.#entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this.#isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this.#props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelcase(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this.#props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    #id = null;\n    #components = {};\n    #ecs = null;\n    #isDestroyed = false;\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get components() {\n        return this.#components;\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.#ecs = ecs;\n        this.#id = id || ecs.generateId();\n        Object.defineProperty(this, 'id', {\n            value: this.#id,\n            enumerable: true,\n            writable: false,\n        });\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this.#isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import Entity from '../Entity';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class EntityRegistry {\r\n    #entities = new Map();\r\n    #ecs = null;\r\n    #refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this.#entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this.#entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this.#entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this.#ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this.#ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this.#entities.delete(entity.id);\r\n        this.#ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this.#refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this.#refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this.#refs.has(entityId)) {\r\n            this.#refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this.#refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this.#refs.has(entityId)) {\r\n            this.#refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities ? entities : this.#entities;\r\n\r\n        list.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = camelcase(key, { pascalCase: true });\r\n            const definition = this.#ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #onEntityAddedCallbacks = [];\n    #onEntityRemovedCallbacks = [];\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this.#onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this.#onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this.#cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this.#cache.add(entity);\n                this.#onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this.#cache.delete(entity);\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this.#cache.delete(entity);\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity(id) {\r\n        return this.entities.create(id);\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize(entities) {\r\n        return {\r\n            entities: this.entities.serialize(entities),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        contents: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.contents];\n    }\n\n    get isEmpty() {\n        return isNaN(this.contents) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.contents].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        const pool = this.ecs.createPrefab('Pool', {\n            liquidContainer: {\n                contents: this.contents,\n                volume: quantity,\n            },\n        });\n        pool.position.setPos(x, y);\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.contents, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.remove(Blocker);\n        this.entity.remove(Shadowcaster);\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        this.closeDoor();\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        this.openDoor();\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.remove(IsInventoried);\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.pushScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    if (lineValid && body) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < 0 && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\n\nexport class Body extends Component {\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const corpse = this.ecs.createPrefab('Corpse');\n        const pos = this.entity.position.getPos();\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n\n        corpse.position.setPos(pos.x, pos.y);\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        const shards = this.ecs.createPrefab('GlassShard', {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        shards.position.setPos(x, y);\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.contents,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )} and dies`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } contents!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {}\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['-'],\n        });\n\n        evt.data.target.fireEvent('damage', {\n            source: this.entity,\n            damage,\n        });\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { Blocker } from './Blocker';\nimport { Faction } from './Faction';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = window.game.map.getEntitiesAt(\n            targetX,\n            targetY\n        );\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.has(Faction) &&\n                !window.game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        this.entity.fireEvent('energy-consumed', 750);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Faction extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n} from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.damage.value;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: this.entity,\n                source: evt.data.source,\n                damage: evt.data.damage,\n            });\n\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: this.entity,\n            source: evt.data.source,\n            damage: evt.data.damage,\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { Faction } from './Faction';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = window.game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = window.game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(Faction))\n            .find((neighbor) => {\n                return window.game.factions.areEntitiesHostile(\n                    this.entity,\n                    neighbor\n                );\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { Actor, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import {\r\n    IsInventoried,\r\n    Explored,\r\n    Glyph,\r\n    Position,\r\n    IsVisible,\r\n    IsDestroying,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class RenderSystem extends System {\r\n    #query = null;\r\n    #explored = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Glyph, Position, IsVisible],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n        this.#explored = game.ecs.createQuery({\r\n            all: [Glyph, Position, Explored],\r\n            none: [IsInventoried, IsVisible, IsDestroying],\r\n        });\r\n    }\r\n\r\n    render(dt) {\r\n        this.game.renderer.clear();\r\n\r\n        const explored = Array.from(this.#explored.get());\r\n\r\n        for (let i = 0; i < explored.length; i++) {\r\n            const renderable = explored[i];\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                continue;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                '#283131',\r\n                '#283131'\r\n            );\r\n        };\r\n\r\n        const renderables = Array.from(this.#query.get());\r\n\r\n        for (let i = 0; i < renderables.length; i++) {\r\n            const renderable = renderables[i];\r\n            const pos = renderable.position.getPos();\r\n\r\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\r\n                continue;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\r\n\r\n            this.game.renderer.draw(\r\n                screen.x,\r\n                screen.y,\r\n                renderable.glyph.char,\r\n                renderable.glyph.primary,\r\n                renderable.glyph.secondary,\r\n                renderable.glyph.background\r\n            );\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.render();\r\n    }\r\n}\r\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n\n        const sector = this.game.world.sector;\n        const sectorTxt = `sector ${sector.id} (${sector.x}, ${sector.y})`;\n\n        this.game.renderer.drawText(0, 0, sectorTxt, '#172e2e');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const item = entities.find((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n            return evt.data.interactions.length > 0;\n        });\n\n        if (item) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: item,\n            });\n        }\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(1, 4, `move       [q, w, e, a, d, z, x, c]`);\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class InventoryScreen extends Screen {\n    #selectedIdx = 0;\n    #accessible;\n    #accessor;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n        const interactable = items[idx];\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n\n        if (items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        items.forEach((item, i) => {\n            const isSelected = i === idx;\n            const ypos = i + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 16;\n    #selectedIdx = 0;\n    #interactions = [];\n    #interactable;\n    #interactor;\n\n    get left() {\n        return (this.game.camera.width - this.#width) / 2;\n    }\n\n    get top() {\n        return (this.game.camera.height - this.#height) / 2;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.resetInteractions();\n    }\n\n    resetInteractions() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.#interactions = evt.data.interactions;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const idx = this.#selectedIdx % this.#interactions.length;\n        const interaction = this.#interactions[idx];\n\n        if (interaction) {\n            this.#interactable.fireEvent(interaction.evt, {\n                interactor: this.#interactor,\n            });\n\n            if (this.#interactable.isDestroyed) {\n                this.game.screens.popScreen();\n\n                return;\n            }\n\n            this.resetInteractions();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderSystem.update(dt);\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width,\n            this.#height\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const idx = this.#selectedIdx % this.#interactions.length;\n\n        if (this.#interactions.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        const xpos = this.left + 2;\n\n        this.#interactions.forEach((interaction, i) => {\n            const isSelected = i === idx;\n            const ypos = i + this.top + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, '-');\n            }\n\n            this.game.renderer.drawText(xpos + 1, ypos, interaction.name);\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport {\n    bresenhamLine\n} from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { game } from '../../Game';\nimport { computeAStar } from '../../../utils/AStar';\nimport { Blocker } from '../../../ecs/components';\nimport { diagonalDistance } from '../../../utils/diagonalDistance';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals ? diagonalDistance : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put({\n        key: startKey,\n        pos: start\n    }, 0);\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const {\n            key: currentKey,\n            pos: current\n        } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put({\n                    key: nextKey,\n                    pos: next\n                }, priority);\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n}\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy)\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.remove(MeleeCommand);\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #idHash = new Map();\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    constructor(width, height) {\n        this.#width = width;\n        this.#height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this.#idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this.#data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this.#width = data.width;\n        this.#height = data.height;\n        this.#idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this.#data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this.#idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this.#idHash.set(id, { x, y });\n        this.#data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this.#data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this.#idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this.#idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this.#idHash.delete(id);\n        this.#data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\r\nimport {\r\n    Explorable,\r\n    Explored,\r\n    IsDestroying,\r\n    Shadowcaster,\r\n    IsVisible,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class FOVSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\r\n            this.isSquareVisible(x, y)\r\n        );\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [IsVisible],\r\n            not: [IsDestroying],\r\n        });\r\n    }\r\n\r\n    isSquareVisible(x, y) {\r\n        return !this.game.map\r\n            .getEntitiesAt(x, y)\r\n            .some((e) => e.has(Shadowcaster));\r\n    }\r\n\r\n    setVisible(x, y, amount, range) {\r\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\r\n            e.add(IsVisible, {\r\n                range,\r\n                amount,\r\n            });\r\n            if (e.has(Explorable) && !e.has(Explored)) {\r\n                e.add(Explored);\r\n            }\r\n        });\r\n    }\r\n\r\n    computeFOV() {\r\n        this.query.get().forEach((e) => e.remove(IsVisible));\r\n\r\n        const pos = this.game.player.position;\r\n\r\n        this.fov.compute(pos.x, pos.y, 7, (x, y, r, visibility) => {\r\n            this.setVisible(x, y, visibility, r);\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.game.clock.tickDelta) {\r\n            this.computeFOV();\r\n        }\r\n    }\r\n}\r\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { Faction } from '../ecs/components';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const factionA = entityA.get(Faction);\n        const factionB = entityB.get(Faction);\n\n        if (factionA && factionB) {\n            return this.isHostile(factionA.name, factionB.name);\n        }\n\n        return false;\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.computeSize();\n    }\n\n    get topLeftWorldX() {\n        return Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.game.map.width - this.width\n            )\n        );\n    }\n\n    get topLeftWorldY() {\n        return Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.game.map.height - this.height\n            )\n        );\n    }\n\n    computeSize() {\n        this.width = Math.floor(window.innerWidth / 32) - 2;\n        this.height = Math.floor(window.innerHeight / 32) - 2;\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height);\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const fps = Math.trunc(1000 / dt);\n        const display = `${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.camera.width - textWidth;\n\n        this.game.renderer.drawText(\n            x,\n            this.game.camera.height - 1,\n            display,\n            '#172e2e'\n        );\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(0);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(...this.connectionsNorth.map((c) => ({\n            x: 12,\n            y: 0,\n        })));\n\n        // west\n        exits.push(...this.connectionsWest.map((c) => ({\n            x: 0,\n            y: 12,\n        })));\n\n        // east\n        exits.push(...this.eastSector.connectionsWest.map((c) => ({\n            x: game.map.width - 1,\n            y: 12,\n        })));\n\n        // south\n        exits.push(...this.southSector.connectionsNorth.map((c) => ({\n            x: 12,\n            y: game.map.height - 1,\n        })));\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => room.theme = TILE_THEME_FOREST);\n\n        const mediumRooms = tiles.rooms.filter((r) => r.width >= 3 && r.height >= 3);\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n}\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        }\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import { game } from '../../core/Game';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                const wall = game.ecs.createPrefab('Wall');\n\n                wall.position.setPos(tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            const door = game.ecs.createPrefab('Door');\n\n            if (this.getEntities(exit).length === 0) {\n                door.position.setPos(exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts=100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(`ran out of attempts (${attempts}) to place item`, tileArr);\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { LIQUID_BLOOD, LIQUID_HONEY, LIQUID_WATER } from '../../enums/LiquidTypes';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            const type = Math.random() < 0.5 ? 'PineTree' : 'SmallPineTree';\n            const tree = game.ecs.createPrefab(type);\n\n            tree.position.setPos(tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() < .1) {\n                if (tile.isType(TILE_TYPE_FLOOR)) {\n                    const stone = game.ecs.createPrefab('Stone');\n\n                    stone.position.setPos(tile.x, tile.y);\n                }\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 2); i++) {\n            this.trySpawn(room, (tile) => {\n                const goblin = game.ecs.createPrefab('Goblin');\n\n                goblin.position.setPos(tile.x, tile.y);\n                goblin.brain.pushGoal(BoredGoalType.create());\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_BLOOD;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_WATER;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                const vial = game.ecs.createPrefab('Vial');\n\n                vial.liquidContainer.contents = LIQUID_HONEY;\n                vial.position.setPos(tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                const wall = game.ecs.createPrefab('WoodWall');\n\n                wall.position.setPos(tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            const door = game.ecs.createPrefab('Door');\n\n            if (this.getEntities(exit).length === 0) {\n                door.position.setPos(exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = game.ecs.createPrefab('Chest');\n            const stone = game.ecs.createPrefab('Stone');\n            const vial = game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_HONEY;\n            chest.position.setPos(tile.x, tile.y);\n            chest.inventory.addLoot(vial);\n            chest.inventory.addLoot(stone);\n        });\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n                wanderer.position.setPos(tile.x, tile.y);\n                wanderer.brain.pushGoal(BoredGoalType.create());\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                (r.getRight() - r.getLeft()) + 1,\n                (r.getBottom() - r.getTop()) + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1;\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => room.theme = theme);\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","export default class Grid {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    get data() {\n        return this.#data;\n    }\n\n    constructor(width, height, defaultValueGenerator) {\n        this.#width = width;\n        this.#height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.#data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.#data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.#data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n}\n","import { nanoid } from 'nanoid'\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls ? this.x + this.width + 1 : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls ? this.y + this.height + 1 : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (i === start || i === endWidth - 1|| j === start || j === endHeight - 1) {\n                    borders.push(this.#container.getTile(\n                        i + this.x,\n                        j + this.y\n                    ));\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(\n                    i + this.x,\n                    j + this.y\n                ));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return x <= this.right && x >= this.left && y <= this.bottom && y >= this.top;\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n};\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ]\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                { x: padding - 1, y: settings.height - padding - exitOffset - 1 }\n            ]\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 }\n            ]\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 }\n            ]\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: (settings.width - (padding * 2)) + 2,\n            height: (settings.height - (padding * 2)) + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport { getThemePopulator, TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) => t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) => t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) => t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter((t) => !(\n                isTopLeftCorner(t, room)\n                || isBottomLeftCorner(t, room)\n                || isBottomRightCorner(t, room)\n                || isTopRightCorner(t, room)\n            ));\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                const walkway = game.ecs.createPrefab('DirtPathway');\n\n                walkway.position.setPos(segment.x, segment.y);\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) => n.isType(TILE_TYPE_WALL));\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return .1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                }\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(`Failed to generate ScatteredScheme in ${maxAttempts} attempts`);\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() { return this.y - roomPadding; },\n                get bottom() { return this.y + this.height + roomPadding; },\n                get left() { return this.x - roomPadding; },\n                get right() { return this.x + this.width + roomPadding; },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(box.left, box.top, box.right, box.bottom)\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (i === 0 || i === box.width - 1 || j === 0 || j === box.height - 1) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            console.warn('COULD NOT GET MINIMUM COUNT');\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 2;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - 1 - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}