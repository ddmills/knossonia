{"version":3,"sources":["webpack://sleepy/webpack/runtime/create fake namespace object","webpack://sleepy/./src/index.js","webpack://sleepy/./src/utils/ImageLoader.js","webpack://sleepy/./node_modules/howler/dist/howler.js","webpack://sleepy/./src/core/Game.js","webpack://sleepy/./src/core/rendering/RenderManager.js","webpack://sleepy/./src/core/Manager.js","webpack://sleepy/./src/core/rendering/Display.js","webpack://sleepy/./src/utils/Grid.js","webpack://sleepy/./src/core/rendering/spritesheets.js","webpack://sleepy/./src/core/rendering/SpriteSheet.js","webpack://sleepy/./src/core/rendering/cp437.js","webpack://sleepy/./src/core/rendering/Sprite.js","webpack://sleepy/./src/utils/ColorParser.js","webpack://sleepy/./node_modules/color-parse/index.mjs","webpack://sleepy/./node_modules/color-name/index.js","webpack://sleepy/./src/utils/ColorUtil.js","webpack://sleepy/./src/core/input/InputController.js","webpack://sleepy/./src/core/input/events/InputKeyboardEvent.js","webpack://sleepy/./src/core/input/events/InputEvent.js","webpack://sleepy/./src/core/input/events/InputMouseEvent.js","webpack://sleepy/./src/systems/ActionSystem.js","webpack://sleepy/./src/core/screens/ScreenType.js","webpack://sleepy/./src/ecs/components/Actor.js","webpack://sleepy/../node_modules/camelcase/index.js","webpack://sleepy/../src/util/string-util.js","webpack://sleepy/../src/Properties/Property.js","webpack://sleepy/../src/Properties/SimpleProperty.js","webpack://sleepy/../src/Properties/EntityProperty.js","webpack://sleepy/../src/Properties/EntityArrayProperty.js","webpack://sleepy/../src/Properties/PropertyFactory.js","webpack://sleepy/../src/Component.js","webpack://sleepy/../src/registries/ComponentRegistry.js","webpack://sleepy/../node_modules/deepmerge/dist/cjs.js","webpack://sleepy/../src/PrefabComponent.js","webpack://sleepy/../src/Prefab.js","webpack://sleepy/../src/registries/PrefabRegistry.js","webpack://sleepy/../src/EntityEvent.js","webpack://sleepy/../src/Entity.js","webpack://sleepy/../src/registries/EntityRegistry.js","webpack://sleepy/../src/Query.js","webpack://sleepy/../src/registries/QueryRegistry.js","webpack://sleepy/../src/Engine.js","webpack://sleepy/../node_modules/nanoid/non-secure/index.js","webpack://sleepy/./src/ecs/components/IsDestroying.js","webpack://sleepy/./src/ecs/components/LiquidContainer.js","webpack://sleepy/./src/data/Spawnables.js","webpack://sleepy/./src/data/Spawner.js","webpack://sleepy/./src/data/spawnables/SpawnableVialHoney.js","webpack://sleepy/./src/enums/LiquidTypes.js","webpack://sleepy/./src/data/spawnables/SpawnableVialBlood.js","webpack://sleepy/./src/data/spawnables/SpawnableVialWater.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://sleepy/./src/ai/GoalTypes/BoredGoalType.js","webpack://sleepy/./src/ai/GoalTypes/GoalType.js","webpack://sleepy/./src/ai/GoalActionResult.js","webpack://sleepy/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://sleepy/./src/utils/AStar.js","webpack://sleepy/./src/utils/diagonalDistance.js","webpack://sleepy/./src/utils/ManhattanDistance.js","webpack://sleepy/./src/utils/PriorityQueue.js","webpack://sleepy/./src/ai/GoalTypes/MoveGoalType.js","webpack://sleepy/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinBruiser.js","webpack://sleepy/./src/data/spawnables/SpawnablePineTree.js","webpack://sleepy/./src/utils/rand.js","webpack://sleepy/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://sleepy/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://sleepy/./src/data/spawnables/SpawnableGrass.js","webpack://sleepy/./src/ecs/components/Door.js","webpack://sleepy/./src/ecs/components/Blocker.js","webpack://sleepy/./src/ecs/components/Shadowcaster.js","webpack://sleepy/./src/ecs/components/Loot.js","webpack://sleepy/./src/ecs/components/Inventory.js","webpack://sleepy/./src/ecs/components/IsInventoried.js","webpack://sleepy/./src/ecs/components/Stackable.js","webpack://sleepy/./src/enums/Stackables.js","webpack://sleepy/./src/ecs/components/Throwable.js","webpack://sleepy/./src/data/Skills.js","webpack://sleepy/./src/data/skills/ArmorSkill.js","webpack://sleepy/./src/data/skills/Skill.js","webpack://sleepy/./src/data/Stats.js","webpack://sleepy/./src/data/skills/SpeedSkill.js","webpack://sleepy/./src/data/skills/ThrowingSkill.js","webpack://sleepy/./src/data/skills/DodgeSkill.js","webpack://sleepy/./src/data/Attack.js","webpack://sleepy/./src/data/DamageTypes.js","webpack://sleepy/./src/utils/BresenhamLine.js","webpack://sleepy/./src/utils/cursor/SimpleLineRenderer.js","webpack://sleepy/./src/ecs/components/FragileGlass.js","webpack://sleepy/./src/enums/ConsoleEvents.js","webpack://sleepy/./src/ecs/components/Brain.js","webpack://sleepy/./src/ecs/components/Body.js","webpack://sleepy/./src/ecs/components/Goal.js","webpack://sleepy/./src/ai/GoalEvaluator.js","webpack://sleepy/./src/ecs/components/Moniker.js","webpack://sleepy/./src/ecs/components/Logger.js","webpack://sleepy/./src/ecs/components/Position.js","webpack://sleepy/./src/ecs/components/Glyph.js","webpack://sleepy/./src/ecs/components/Legs.js","webpack://sleepy/./src/ecs/components/IsPlayer.js","webpack://sleepy/./src/ecs/components/Wandering.js","webpack://sleepy/./src/enums/Directions.js","webpack://sleepy/./src/ecs/components/IsVisible.js","webpack://sleepy/./src/ecs/components/Explorable.js","webpack://sleepy/./src/ecs/components/Explored.js","webpack://sleepy/./src/ecs/components/Health.js","webpack://sleepy/./src/ecs/components/IsDead.js","webpack://sleepy/./src/ecs/components/FactionMember.js","webpack://sleepy/./src/enums/Factions.js","webpack://sleepy/./src/data/Faction.js","webpack://sleepy/./src/ecs/components/Eyes.js","webpack://sleepy/./src/ecs/components/Particle.js","webpack://sleepy/./src/ecs/components/ParticleEmitter.js","webpack://sleepy/./src/ecs/components/LootDropper.js","webpack://sleepy/./src/data/tables/LootSpawn.js","webpack://sleepy/./src/utils/WeightedTable.js","webpack://sleepy/./src/data/tables/loot/LootTableGoblin.js","webpack://sleepy/./src/data/tables/loot/LootTableForest.js","webpack://sleepy/./src/ecs/components/IsEquipped.js","webpack://sleepy/./src/ecs/components/Equipment.js","webpack://sleepy/./src/data/EquipmentSlotType.js","webpack://sleepy/./src/ecs/components/EquipmentSlot.js","webpack://sleepy/./src/data/WeaponTypes.js","webpack://sleepy/./src/data/WeaponFamilies.js","webpack://sleepy/./src/data/weapons/WpnTypeBattleAxe.js","webpack://sleepy/./src/data/weapons/WeaponType.js","webpack://sleepy/./src/data/weapons/WpnTypeGreatsword.js","webpack://sleepy/./src/data/weapons/WpnTypeMace.js","webpack://sleepy/./src/data/Statuses.js","webpack://sleepy/./src/data/statuses/StatusBleeding.js","webpack://sleepy/./src/enums/StatusTypes.js","webpack://sleepy/./src/data/statuses/Status.js","webpack://sleepy/./src/data/statuses/StatusStunned.js","webpack://sleepy/./src/data/weapons/WpnTypeShortsword.js","webpack://sleepy/./src/data/weapons/WpnTypeUnarmed.js","webpack://sleepy/./src/ecs/components/Stats.js","webpack://sleepy/./node_modules/rot-js/lib/util.js","webpack://sleepy/./src/ecs/components/Race.js","webpack://sleepy/./src/data/Races.js","webpack://sleepy/./src/data/RaceData.js","webpack://sleepy/./src/ecs/components/Weapon.js","webpack://sleepy/./src/ecs/components/Status.js","webpack://sleepy/./src/ecs/components/Ground.js","webpack://sleepy/./src/ecs/components/IsIncapacitated.js","webpack://sleepy/./src/ecs/components/SharpTrap.js","webpack://sleepy/./src/ecs/components/EquippedSkillMod.js","webpack://sleepy/./src/ecs/components/Combustible.js","webpack://sleepy/./src/ecs/components/Fire.js","webpack://sleepy/./src/ecs/components/ThermalCapacity.js","webpack://sleepy/./src/ecs/components/Abilities.js","webpack://sleepy/./src/ecs/components/AbilityStatus.js","webpack://sleepy/./src/data/Abilities.js","webpack://sleepy/./src/data/abilities/prayers/PrayerOfProtectionAbility.js","webpack://sleepy/./src/enums/AbilityTypes.js","webpack://sleepy/./src/data/abilities/SimpleChannelAbility.js","webpack://sleepy/./src/data/abilities/Ability.js","webpack://sleepy/./src/data/abilities/spells/BlinkAbility.js","webpack://sleepy/./src/utils/cursor/SimpleCursorRenderer.js","webpack://sleepy/./src/data/abilities/spells/CrimsonWellAbility.js","webpack://sleepy/./src/data/abilities/SimpleDurationAbility.js","webpack://sleepy/./src/data/abilities/stances/RageAbility.js","webpack://sleepy/./src/data/abilities/SimpleToggledAbility.js","webpack://sleepy/./src/data/abilities/stances/SprintAbility.js","webpack://sleepy/./src/data/abilities/stunts/JumpAbility.js","webpack://sleepy/./src/systems/System.js","webpack://sleepy/./src/systems/RenderSystem.js","webpack://sleepy/./src/systems/UISystem.js","webpack://sleepy/./src/core/input/MouseManager.js","webpack://sleepy/./src/core/input/CommandManager.js","webpack://sleepy/./src/core/input/InputDomainType.js","webpack://sleepy/./src/core/input/commands.js","webpack://sleepy/./src/core/input/InputCommand.js","webpack://sleepy/./src/core/input/InputCommandType.js","webpack://sleepy/./src/core/input/KeyCodes.js","webpack://sleepy/./src/core/screens/ScreenManager.js","webpack://sleepy/./src/core/screens/screens/AdventureScreen.js","webpack://sleepy/./src/core/screens/screens/Screen.js","webpack://sleepy/./src/core/screens/screens/MainMenuScreen.js","webpack://sleepy/./src/enums/UIGlyphs.js","webpack://sleepy/./src/utils/UIWindowUtil.js","webpack://sleepy/./src/core/screens/screens/DeathScreen.js","webpack://sleepy/./src/core/screens/screens/InventoryScreen.js","webpack://sleepy/./src/utils/SelectableList.js","webpack://sleepy/./src/core/screens/screens/InteractModalScreen.js","webpack://sleepy/./src/core/screens/screens/CursorScreen.js","webpack://sleepy/./src/utils/UITags.js","webpack://sleepy/./src/core/screens/screens/LoadSectorScreen.js","webpack://sleepy/./src/core/screens/screens/EquipmentScreen.js","webpack://sleepy/./src/core/screens/screens/ListSelectionScreen.js","webpack://sleepy/./src/core/screens/screens/CharacterScreen.js","webpack://sleepy/./src/core/screens/screens/AbilityScreen.js","webpack://sleepy/./src/core/screens/screens/ConfirmationScreen.js","webpack://sleepy/./src/core/screens/screens/WaitScreen.js","webpack://sleepy/./src/core/PlayerManager.js","webpack://sleepy/./src/ecs/index.js","webpack://sleepy/./src/core/GameStateManager.js","webpack://sleepy/./src/core/ClockManager.js","webpack://sleepy/./src/core/MapManager.js","webpack://sleepy/./src/utils/FastMap.js","webpack://sleepy/./src/systems/FOVSystem.js","webpack://sleepy/./node_modules/rot-js/lib/index.js","webpack://sleepy/./node_modules/rot-js/lib/rng.js","webpack://sleepy/./node_modules/rot-js/lib/display/display.js","webpack://sleepy/./node_modules/rot-js/lib/display/hex.js","webpack://sleepy/./node_modules/rot-js/lib/display/canvas.js","webpack://sleepy/./node_modules/rot-js/lib/display/backend.js","webpack://sleepy/./node_modules/rot-js/lib/display/rect.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile-gl.js","webpack://sleepy/./node_modules/rot-js/lib/color.js","webpack://sleepy/./node_modules/rot-js/lib/display/term.js","webpack://sleepy/./node_modules/rot-js/lib/text.js","webpack://sleepy/./node_modules/rot-js/lib/constants.js","webpack://sleepy/./node_modules/rot-js/lib/stringgenerator.js","webpack://sleepy/./node_modules/rot-js/lib/eventqueue.js","webpack://sleepy/./node_modules/rot-js/lib/MinHeap.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/index.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/simple.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/speed.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/action.js","webpack://sleepy/./node_modules/rot-js/lib/fov/index.js","webpack://sleepy/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/fov.js","webpack://sleepy/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/map/index.js","webpack://sleepy/./node_modules/rot-js/lib/map/arena.js","webpack://sleepy/./node_modules/rot-js/lib/map/map.js","webpack://sleepy/./node_modules/rot-js/lib/map/uniform.js","webpack://sleepy/./node_modules/rot-js/lib/map/dungeon.js","webpack://sleepy/./node_modules/rot-js/lib/map/features.js","webpack://sleepy/./node_modules/rot-js/lib/map/cellular.js","webpack://sleepy/./node_modules/rot-js/lib/map/digger.js","webpack://sleepy/./node_modules/rot-js/lib/map/ellermaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/iceymaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/rogue.js","webpack://sleepy/./node_modules/rot-js/lib/noise/index.js","webpack://sleepy/./node_modules/rot-js/lib/noise/simplex.js","webpack://sleepy/./node_modules/rot-js/lib/noise/noise.js","webpack://sleepy/./node_modules/rot-js/lib/path/index.js","webpack://sleepy/./node_modules/rot-js/lib/path/dijkstra.js","webpack://sleepy/./node_modules/rot-js/lib/path/path.js","webpack://sleepy/./node_modules/rot-js/lib/path/astar.js","webpack://sleepy/./node_modules/rot-js/lib/engine.js","webpack://sleepy/./node_modules/rot-js/lib/lighting.js","webpack://sleepy/./src/systems/DeathSystem.js","webpack://sleepy/./src/systems/ParticleSystem.js","webpack://sleepy/./src/core/FactionManager.js","webpack://sleepy/./src/core/CameraManager.js","webpack://sleepy/./src/systems/FPSMonitoringSystem.js","webpack://sleepy/./src/core/WorldManager.js","webpack://sleepy/./src/data/WorldData.js","webpack://sleepy/./src/data/Sector.js","webpack://sleepy/./src/level/generators/generators.js","webpack://sleepy/./src/level/generators/ForestCabinsGenerator.js","webpack://sleepy/./src/level/LevelConnections.js","webpack://sleepy/./src/level/TileData.js","webpack://sleepy/./src/level/themes/TileTheme.js","webpack://sleepy/./src/level/themes/CastleTheme.js","webpack://sleepy/./src/level/themes/TileThemePopulator.js","webpack://sleepy/./src/level/themes/ForestTheme.js","webpack://sleepy/./src/level/themes/CabinTheme.js","webpack://sleepy/./src/level/schemes/UniformScheme.js","webpack://sleepy/./src/level/TileContainer.js","webpack://sleepy/./src/level/RoomData.js","webpack://sleepy/./node_modules/nanoid/index.prod.js","webpack://sleepy/./node_modules/nanoid/url-alphabet/index.js","webpack://sleepy/./src/level/TileScheme.js","webpack://sleepy/./src/level/generators/SectorGenerator.js","webpack://sleepy/./src/level/generators/ForestGenerator.js","webpack://sleepy/./src/level/generators/ForestStrongholdGenerator.js","webpack://sleepy/./src/level/schemes/DenseCastleScheme.js","webpack://sleepy/./src/level/generators/ForestTownGenerator.js","webpack://sleepy/./src/level/schemes/ScatteredScheme.js","webpack://sleepy/./src/level/generators/GeneratorUtils.js","webpack://sleepy/./src/core/ConsoleManager.js","webpack://sleepy/./src/systems/DestroySystem.js","webpack://sleepy/./src/core/MusicManager.js","webpack://sleepy/./src/systems/StatusSystem.js","webpack://sleepy/./src/systems/LiquidSystem.js","webpack://sleepy/./src/systems/TrapSystem.js","webpack://sleepy/./src/systems/FireSystem.js","webpack://sleepy/./src/systems/TemperatureSystem.js","webpack://sleepy/./src/utils/ArrayUtil.js","webpack://sleepy/./src/utils/LerpUtil.js","webpack://sleepy/./src/utils/MemoryGrid.js","webpack://sleepy/./src/systems/AbilitySystem.js","webpack://sleepy/webpack/bootstrap","webpack://sleepy/webpack/runtime/compat get default export","webpack://sleepy/webpack/runtime/define property getters","webpack://sleepy/webpack/runtime/global","webpack://sleepy/webpack/runtime/hasOwnProperty shorthand","webpack://sleepy/webpack/runtime/make namespace object","webpack://sleepy/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","require","window","game","ecs","start","Howler","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","HowlerGlobal","this","init","prototype","self","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","play","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Game","engine","constructor","ECS","music","MusicManager","mouse","MouseManager","clock","ClockManager","renderer","Renderer","GameStateManager","world","WorldManager","MapManager","camera","CameraManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","ConsoleManager","actionSystem","ActionSystem","deathSystem","DeathSystem","statusSystem","StatusSystem","FOVSystem","renderSystem","RenderSystem","UISystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","liquidSystem","LiquidSystem","trapSystem","TrapSystem","fireSystem","FireSystem","temperature","TemperatureSystem","abilities","AbilitySystem","boundLoop","requestAnimationFrame","updateAdventureSystems","dt","update","playerTurn","updatePlayerSystems","render","t","Manager","display","canvas","super","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","resizeDisplay","zoom","setSize","draw","char","fg1","fg2","bg","tiles","getSprite","drawUI","ui","computeTextWidth","text","computeTextWidthTile","drawTextWrapping","drawText","left","right","lastSpace","nextLeft","substr","charAt","trimLeft","font","drawTextCenter","clear","clearArea","pxToTile","xPx","yPx","trunc","onNewGame","getSaveGameData","cells","Grid","suppressOOBWarn","createElement","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","cellX","cellY","filter","c","cell","pixelX","pixelY","drawImage","_width","_height","defaultValueGenerator","idx","coord","size","setAll","value","isOutOfBounds","serialize","entries","deserialize","get","getNeighbors","tileImage","getElementById","fontImage","uiImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","_cache","hasOwnProperty","pixels","getImageData","r","g","b","a","isBlack","isWhite","cvs","putImageData","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","base","isRGB","trim","baseHues","join","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","opacity","orange","yellow","purple","module","HSLToRGB","lerpHSL","deg","lerp","sat","light","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","System","createQuery","Actor","none","IsDestroying","IsDead","entities","sorted","sort","actor","energy","entity","hasEnergy","incrementTick","addEnergy","tickDelta","isIncapacitated","fireEvent","isPlayer","pushScreen","SCREEN_WAIT","time","getNextAction","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INVENTORY","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","SCREEN_CHARACTER","SCREEN_ABILITIES","SCREEN_CONFIRM","Component","onEnergyConsumed","reduceEnergy","onTick","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","_","p1","camelCache","camelString","camelcaseSlow","pascalCache","Property","component","enumerable","v","onDestroyed","cleanupReference","SimpleProperty","EntityProperty","getEntity","EntityArrayProperty","Proxy","target","prop","receiver","Reflect","old","deleteProperty","proxy","ref","PropertyStrategy","Boolean","ob","properties","_onAttached","_onDetached","_onDestroyed","onAttached","onDetached","remove","destroy","clone","createComponent","_onEvent","handlerName","onEvent","_defaultPropertyValue","propertyName","_defineProxies","initialProperties","initialValue","property","PropertyFactory","ComponentRegistry","Map","register","getAccessor","typeOrClassOrComponent","_getType","_definitions","typeOrClass","definition","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","PrefabComponent","componentDef","overwrite","applyToEntity","initialProps","props","merge","Prefab","addComponent","prefabComponent","arrComps","accessor","components","initialCompProps","PrefabRegistry","registered","prefab","inherit","comps","componentData","def","_ecs","nameOrClassOrPrefab","_prefabs","nameOrClass","EntityEvent","is","handle","prevent","Entity","has","hasType","nestedComponent","add","attach","configurable","writable","allowMultiple","owns","isComponent","instance","o2","k2","v2","EntityRegistry","_entities","createOrGetById","onEntityDestroyed","cleanupRefs","refs","_refs","addRef","entityId","Set","removeRef","json","list","entityData","deserializeEntity","pascalString","d","Query","any","isMatch","hasAny","_filter","some","hasAll","every","hasNone","onEntityAdded","onEntityRemoved","candidate","isTracking","cb","_onEntityCreated","_onComponentAdded","_onComponentRemoved","_onEntityDestroyed","bustCache","QueryRegistry","filters","query","onComponentAdded","onComponentRemoved","onEntityCreated","Engine","nanoid","generateId","createEntity","createPrefab","prefabs","destroyEntity","registerPrefab","registerComponent","queries","pass","LiquidContainer","isEmpty","liquids","content","maxVolume","overridePrimary","liquid","overrideSecondary","_checkDestroyOnEmpty","destroyOnEmpty","isDestroying","pour","quantity","isPourable","spawn","SPWN_POOL_LIQUID","combineFrom","other","sum","onTryPour","interactor","position","getPos","onTryDrink","drinkLiquid","onGetInteractions","interactions","LIQUID_BLOOD","isFreeFlowing","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_TWIG","SPWN_ASH","SPWN_GOBLIN_GRUNT","SPWN_GOBLIN_BRUISER","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","SPWN_LEATHER_BOOTS","SPWN_SHORTSWORD","SPWN_GREATSWORD","SPWN_BATTLE_AXE","SPWN_HATCHET","SPWN_MACE","SPWN_GROUND_GRASS","SPWN_GROUND_STONE","SPWN_HEAVY_PLATE_ARMOR","SPWN_LEATHER_ARMOR","SPWN_CLOTH_HOOD","SPWN_WIZARD_CAP","SPWN_HELM","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","Grass","GoblinGrunt","GoblinBruiser","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","LIQUID_OIL","colorDesc","onDrink","log","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","sword","equipmentSlot","handRight","equip","GoalType","goal","targets","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","isDead","isDestroyed","handled","targetPos","result","computeAStar","cost","diagonalDistance","blocker","sharpTrap","segment","path","delta","moveGoal","MoveGoalType","allowDiagonals","neighbors","defaultSettings","settings","heuristic","manhattanDistance","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","costs","put","currentKey","current","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","dx","dy","peek","item","createItem","EatFoodGoalType","food","mace","pickRandom","arr","floor","random","randomInt","randomBool","randomWeightedBool","weight","wanderer","grass","ch","Door","isOpen","chOpen","chClosed","openDoor","shadowcaster","closeDoor","Blocker","Shadowcaster","onTryCloseDoor","onTryOpenDoor","onProjectileHit","stopProjectile","deflectProjectile","isAttached","Loot","take","newOwner","isInventoried","isOwnedBy","owner","inventory","removeLoot","addLoot","IsInventoried","Inventory","hasLoot","onEquipped","onTryPickUp","onTryTake","onQueryOwnership","getStackable","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","addOther","dropLoot","dropper","onTryOpen","accessible","isOpenable","onTryDrop","onThrown","increment","amount","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_ASH","STACKABLE_GLASS_SHARD","Throwable","throw","trajectory","initiator","stopped","deflected","hit","projectile","getStat","STAT_STRENGTH","damage","die","modifier","attack","Attack","attacker","defender","weaponName","moniker","damageType","ignoreDodge","onTryThrow","range","getSkillValue","SKILL_THROWING","simpleLineRenderer","onResult","cursor","bresenhamLine","onCancel","DMG_TYPE_BLUDGEONING","SKILL_SPEED","SKILL_ARMOR","SKILL_DODGE","lookup","ArmorSkill","SpeedSkill","ThrowingSkill","DodgeSkill","getSkill","getSkillName","compute","getSkillEquippedMod","modifiers","skill","getAllSkillEquippedMods","reduce","mods","getAllSkillEquippedModSums","mod","getArmorBlockPercent","getArmorBlockPercentDisplay","prcnt","Skill","baseStat","getModifiers","getModifierSum","cur","STAT_FINESSE","STAT_ATHLETICISM","STAT_TRICKERY","STAT_FAITH","getStatName","stat","stats","rollStat","statCheck","getSpeedPercent","getSpeedPercentDisplay","getDodgePercent","unscaled","DMG_TYPE_PIERCING","DMG_TYPE_SLASHING","DMG_TYPE_NECROTIC","verb","getDmgTypeName","getDmgTypeVerb","x0","y0","x1","y1","sx","sy","e2","bresenhamLineExclusive","line","truthy","isValid","opts","color","screen","FragileGlass","shatter","CONSOLE_EVENT_SHATTER","onCollideGround","onCollide","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","CONSOLE_EVENT_MISS","CONSOLE_EVENT_BLOCK","CONSOLE_EVENT_TRAP_SHARP","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","dodgePrcnt","shouldAppear","IsVisible","dmgVerb","dmg","blocked","blockText","trap","getMessage","Brain","goals","onTakeAction","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Body","onDeath","corpse","corpseSpawnable","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","onLog","Position","getPosition","equals","Glyph","col","primaryColorOverride","secondaryColorOverride","Legs","onTryMove","targetX","targetY","targetTileEntities","nonHostile","factionMember","Wandering","onBoredom","directionDelta","directions","shortName","fullName","adjacent","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_Z","DIR_E","DIR_SW","DIR_S","DIR_SE","getAdjacentDeltas","directionFromDelta","dir","Explorable","Explored","Health","applyDamage","onAttacked","dodge","isDodged","isKilled","armor","armorPrcnt","onHeal","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","Eyes","canSee","onTryDetectHostiles","Particle","age","frame","chunks","percent","fg2s","bgs","startX","startY","ParticleEmitter","createParticle","particle","particleData","count","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","WeightedTable","pick","spawnable","rows","currentW","chance","maxWeight","table","goblins","forest","IsEquipped","slotKey","onDropped","slot","unequip","Equipment","onTryEquip","slots","slotTypes","includes","slotType","header","icon","leadText","onRenderRow","isSelected","onSelect","onTryUnequip","isEquipped","EQ_SLOT_BODY","EQ_SLOT_HEAD","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EQ_SLOT_HAND","EquipmentSlot","equipment","onTryMelee","isPrimary","selfPos","isAdjacent","getWeaponType","WPN_TYPE_UNARMED","onQuerySkillMod","isOffhand","WPN_TYPE_WAR_HAMMER","WPN_TYPE_SLEDGE_HAMMER","WPN_TYPE_CLUB","WPN_TYPE_MACE","WPN_TYPE_HEAVY_AXE","WPN_TYPE_BATTLE_AXE","WPN_TYPE_GREATSWORD","WPN_TYPE_SHORTSWORD","WPN_TYPE_DAGGER","WPN_TYPE_STAFF","WPN_TYPE_HALBERD","WPN_TYPE_JAVELIN","WpnTypeUnarmed","family","WPN_FAMILY_HAMMER","WPN_FAMILY_AXE","WpnTypeBattleAxe","WpnTypeGreatsword","WpnTypeShortsword","WpnTypeMace","WPN_FAMILY_BLADE","WPN_FAMILY_POLEARM","getWeaponTypeName","getWeaponTypeFamily","getWeaponTypeDmgType","WPN_FAMILY_ARCHERY","WPN_FAMILY_UNARMED","WPN_FAMILY_CUDGEL","getWeaponFamilyName","WeaponType","_createAttack","weapon","roll","attacks","secondAttack","weaponDamageText","user","getShortDescription","fam","getAttacks","_getNeighborAttacks","attackerPos","defenderPos","deltaX","deltaY","flat","hostile","_tryAttackDefender","addStatus","STATUS_STUNNED","STATUS_BLEEDING","StatusBleeding","StatusStunned","getStatus","Status","STATUS_TYPE_CONDITION","isDot","getDmgPerTurn","potency","getPipCount","ticks","remainingLifetime","health","IsIncapacitated","isCompleted","Stats","_sumMods","getStatModifiers","getStatModifierSum","capitalize","modSum","strength","finesse","athleticism","trickery","faith","baseStrength","baseFinesse","baseAthleticism","baseTrickery","baseFaith","n","clamp","toUpperCase","substring","template","group1","group2","obj","replaced","first","Race","getRaceData","getModifier","onQueryStatMod","RACE_HUMAN","RACE_GOBLIN","RaceData","Weapon","weaponType","onTryUseMelee","Ground","SharpTrap","challenge","EquippedSkillMod","onQuerySkillModEquipped","Combustible","fire","fuel","getTemperature","setTemperature","getDieOutChance","getSparkChance","getCatchChance","intensity","onSpark","isOnFire","Fire","flashPoint","onTryIgnite","spawnableRemains","burnRate","extinguish","onTryExtinguish","ThermalCapacity","Abilities","onQueryAbilities","known","AbilityStatus","getAbility","isCoolingDown","cooldownDuration","currentCooldownDuration","currentDuration","currentChannelDuration","channelDuration","startCooldown","isToggledOn","skillMods","ability","statMods","ABILITY_SPRINT","ABILITY_RAGE","ABILITY_CRIMSON_WELL","ABILITY_BLINK","ABILITY_JUMP","ABILITY_PRAYER_PROTECTION","SprintAbility","RageAbility","CrimsonWellAbility","BlinkAbility","JumpAbility","PrayerOfProtectionAbility","getAbilityStatus","abilityStatus","getStance","isStance","isComplete","SimpleChannelAbility","ABILITY_TYPE_PRAYER","getCooldownDuration","getChannelDuration","getArmorModifier","getDescription","getSkillMods","ABILITY_TYPE_STANCE","ABILITY_TYPE_SHOUT","ABILITY_TYPE_STUNT","ABILITY_TYPE_SPELL","getAbilityTypeName","Ability","getDuration","execute","getStatMods","initiate","onConfirm","toggleOn","toggleOff","isChanneling","isCooldownComplete","getDisplayText","cd","remainingCooldownDuration","toFixed","isEnabled","isToggleable","simpleCursorRenderer","visible","isVisible","prevPos","nextPos","SimpleDurationAbility","performLifeteal","enemyPos","SimpleToggledAbility","computeStrengthMod","computeSpeedMod","getJumpDistance","distance","word","modeLookup","background","explored","worldX","worldY","temp","rgb","sqrt","temperatureGradient","renderTile","screenToWorld","isInView","getEntitiesAt","renderableZ","renderable","mode","beingsQuery","renderNearbyCreatures","beings","glyphOffset","relation","getEntityRelation","getAttitudeGlyph","statusOffset","dotLevel","statusType","barWidth","healthWidth","middle","primaryHP","secondaryHp","showTicks","turn","subTurn","padEnd","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","_inputStack","getNextCommand","getCommandForInputEvent","pushDomain","domain","_domainStack","popDomain","lastIndexOf","getDomainCommands","_commands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","INPUT_CMD_CHARACTER","KEY_Y","INPUT_CMD_ABILITIES","KEY_T","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_U","KEY_V","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","ListSelectionScreen","CharacterScreen","AbilityScreen","ConfirmationScreen","WaitScreen","setScreen","screenType","onLeave","onEnter","screenCtx","replaceScreen","popScreen","onUpdate","Screen","computeFOV","setFocus","onDirectionInput","playerPosition","targetPosition","hostileEntities","areEntitiesHostile","melee","doorEntity","move","onPickUpCommand","lootable","onInteract","items","interactable","onInteractDirection","handleInput","saveGame","loadGame","drawTags","drawFaction","drawTemperature","wait","isStarted","newGame","inputCommand","UI_GLYPH_BORDER_TERM_L","UI_BORDER_FG1","UI_BORDER_FG2","UI_GLYPH_BORDER_TERM_R","UI_GLYPH_BORDER_T","UI_GLYPH_BORDER_TL","UI_GLYPH_BORDER_TR","UI_GLYPH_BORDER_L","UI_GLYPH_BORDER_R","UI_GLYPH_BORDER_BL","UI_GLYPH_BORDER_B","UI_GLYPH_BORDER_BR","drawUIBox","drawUIWindow","title","titleText","titleWidth","titleOffset","iconWidth","gameOver","SelectableList","setItems","selectItem","selected","up","down","ypos","textLen","_items","_idx","refreshList","isBack","interaction","top","listPadding","xpos","weaponDmg","hasMod","NOOP","getOpts","worldToScreen","faction","getDisplay","tmpC","tmpF","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","selectSlot","onGetRowName","defaultRowRender","cancel","yOffset","healthMax","speedPrcnt","pad","modDir","PADDING_RIGHT","PADDING_HEIGHT","stance","xOffset","description","textW","confirmText","cancelText","onSelection","toggleSelection","option","confirm","bottom","textWidth","curTime","getSetupData","serialized","setup","owned","teardown","actionQueue","turns","destroyEntities","cloneEntity","initiateTeardown","initiateSetup","prompt","deleteFile","filename","localStorage","setItem","JSON","stringify","file","startsWith","removeItem","saveSectorPositionData","positionData","saveSectorTemperatureData","temperatureData","saveSectorEntityData","loadSectorEntityData","getItem","parse","loadSectorPositionData","loadSectorTemperatureData","loadSavefileData","prevTurn","curTurn","positions","FastMap","getRandomEmptyPosition","sector","includeGround","ground","x2","y2","getEntitiesInRect","getEntitiesInRange","diameter","getNeighborEntities","isOutOfbounds","onPlayerOutOfBounds","enterSector","northSector","southSector","eastSector","westSector","_data","_idHash","delete","fov","FOV","isSquareVisible","setVisible","explorable","visibility","Util","util","Color","Text","FRAC","RNG","_seed","_s0","_s1","_s2","_c","getSeed","setSeed","seed","getUniform","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","getPercentage","shuffle","getWeightedValue","total","part","getState","setState","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getOptions","getContainer","computeSize","availWidth","availHeight","computeFontSize","computeTileSize","eventToPosition","touches","clientX","clientY","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","cch","_draw","clearBefore","Canvas","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","_normalizedEventToPosition","nodeSize","beginPath","moveTo","lineTo","fill","_updateSize","charWidth","xprop","yprop","Backend","textAlign","rect","getBoundingClientRect","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","multiply_","interpolate","color2","factor","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","randomize","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","DST_COLORS","_offset","_cursor","_lastColor","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","getTime","getEventTime","heap","timestamp","lessThan","loc","updateUp","updateDown","last","parentNode","leftChildNode","rightChildNode","existNode","swap","minNode","numbers","validnumbers","minimal","leftChild","rightChild","debugPrint","Simple","Speed","Action","Scheduler","repeat","_current","_repeat","getTimeOf","getSpeed","_defaultDuration","setDuration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","P","P1","P2","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_fillMap","Dungeon","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","getRooms","getCorridors","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","addDoors","isWallCallback","debug","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","nx","ny","ok","firstCornerBad","secondCornerBad","createPriorityWalls","priorityWallCallback","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","local","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","deltas","addToList","removeFromList","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","_drawCorridor","startPosition","endPosition","tempDist","xDir","yDir","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","Simplex","F2","G2","Noise","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Dijkstra","AStar","Path","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","setFOV","_fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","_updateFOV","fovKey","formFactor","key1","vis","createEmitter","emitter","particleEmitter","isExpired","targetCount","setRelation","getFactionById","isHostile","factionA","factionB","_relationKey","idA","idB","relations","getRelation","entityA","entityB","memberA","memberB","onWindowResize","clampX","innerWidth","renderedTileWidth","clampY","innerHeight","renderedTileHeight","topLeftWorldX","padding","_focusX","topLeftWorldY","_focusY","setZoom","setPadding","getScreenRect","fpsElement","getElementsByClassName","frames","frameCount","innerText","getSector","WorldData","getStartingSector","exploredSectorIds","Sector","getSectorByCoord","getExits","exits","connectionsNorth","connectionsWest","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","SectorGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","TileThemePopulator","getEntities","populateTile","trySpawn","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileScheme","TileContainer","MapGenerator","digPercentage","createRoom","defaultType","getTile","setTileTheme","getTileType","addRoom","RoomData","combineOther","cloneTo","setTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","containsPoint","intersects","c1","c2","c3","c4","bytes","crypto","getRandomValues","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","urlAlphabet","populateRoom","exitOffset","castle","DenseCastleScheme","curId","createNodeId","splitNodeVertical","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","msgs","Track","intro","isPlaying","host","pathname","track","tracks","currentTrack","rv","sharpTrapQuery","turnDelta","trapEntity","combustible","sparkChance","dieChance","isOutOfFuel","grid","MemoryGrid","getAmbientTemperature","ambient","getAmbientCapacity","capacity","getCapacity","hasCap","hasFire","cap","thermalCapacity","copyToPrevious","avg","avgArray","sumArray","f0","f1","lerp2","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","getPrototypeOf","__proto__","ns","getOwnPropertyNames","defineProperty","globalThis","Function","toStringTag"],"mappings":"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","file":"main.f50aa4bf697768020742.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\nimport { Howler } from 'howler';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n\nHowler.volume(0);\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\nimport MusicManager from './MusicManager';\nimport StatusSystem from '../systems/StatusSystem';\nimport LiquidSystem from '../systems/LiquidSystem';\nimport TrapSystem from '../systems/TrapSystem';\nimport FireSystem from '../systems/FireSystem';\nimport TemperatureSystem from '../systems/TemperatureSystem';\nimport AbilitySystem from '../systems/AbilitySystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.music = new MusicManager(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.camera = new CameraManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.actionSystem = new ActionSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.statusSystem = new StatusSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n        this.liquidSystem = new LiquidSystem(this);\n        this.trapSystem = new TrapSystem(this);\n        this.fireSystem = new FireSystem(this);\n        this.temperature = new TemperatureSystem(this);\n        this.abilities = new AbilitySystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        for (let i = 0; i < 20; i++) {\n            this.clock.update(dt);\n            const playerTurn = this.actionSystem.update(dt);\n\n            if (playerTurn) {\n                this.updatePlayerSystems(dt);\n            }\n\n            this.liquidSystem.update(dt);\n            this.trapSystem.update(dt);\n            this.fireSystem.update(dt);\n            this.temperature.update(dt);\n            this.statusSystem.update(dt);\n            this.abilities.update(dt);\n            this.deathSystem.update(dt);\n            this.destroySystem.update(dt);\n\n            if (playerTurn) {\n                return;\n            }\n        }\n    }\n\n    updatePlayerSystems(dt) {\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    tileWidth = 16;\n    tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: 20,\n            height: 20,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height, zoom) {\n        this.display.setSize(width, height, zoom);\n    }\n\n    draw(x, y, char, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    drawUI(x, y, char, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.ui.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    computeTextWidthTile(text) {\n        return Math.ceil(this.computeTextWidth(text));\n    }\n\n    drawTextWrapping(x, y, width, text, fg1, fg2, bg) {\n        if (this.computeTextWidthTile(text) < width) {\n            return this.drawText(x, y, text, fg1, fg2, bg);\n        }\n\n        let left;\n        let right;\n        let lastSpace = -1;\n\n        for (let i = 0; i < text.length; i++) {\n            const nextLeft = text.substr(0, i);\n\n            if (this.computeTextWidthTile(nextLeft) >= width) {\n                break;\n            }\n\n            if (text.charAt(i) === ' ') {\n                left = nextLeft;\n                right = text.substr(i, text.length - left.length).trimLeft();\n                lastSpace = i;\n            }\n        }\n\n        if (lastSpace >= 0) {\n            this.drawText(x, y, left, fg1, fg2, bg);\n            this.drawTextWrapping(x, y + 1, width, right, fg1, fg2, bg);\n        }\n    }\n\n    drawText(x, y, text, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#adb8bc', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n        this.ctx.globalCompositeOperation = 'destination-over';\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            0,\n            0,\n            this.tileWidth * this.width,\n            this.tileHeight * this.height\n        );\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + i * 2;\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.defaultValueGenerator(x, y);\n        }\n    }\n\n    setAll(value) {\n        this.data = [];\n\n        for (let i = 0; i < this.size; i++) {\n            this.data[i] = value;\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    serialize() {\n        const entries = [...this.data];\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this.data = data.entries;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n    const uiImage = document.getElementById('spritesheet-ui');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n        new SpriteSheet('ui', uiImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\nimport { isBlack, isWhite } from '../../utils/ColorUtil';\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i + 0];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n            const a = pixels.data[i + 3];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 3] = a;\n            } else if (isWhite(r, g, b)) {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 3] = a;\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","export const HSLToRGB = (h, s, l) => {\n    s /= 100;\n    l /= 100;\n\n    let c = (1 - Math.abs(2 * l - 1)) * s;\n    let x = c * (1 - Math.abs(((h / 60) % 2) - 1));\n    let m = l - c / 2;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    } else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    } else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    } else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    } else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    } else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n\n    return [\n        Math.round((r + m) * 255),\n        Math.round((g + m) * 255),\n        Math.round((b + m) * 255),\n    ];\n};\n\nexport const lerpHSL = (a, b, t) => {\n    const deg = Math.trunc(lerp(a[0], b[0], t));\n    const sat = Math.trunc(lerp(a[1], b[1], t));\n    const light = Math.trunc(lerp(a[2], b[2], t));\n\n    return HSLToRGB(deg, sat, light);\n};\n\nexport const isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nexport const isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { SCREEN_CONFIRM, SCREEN_WAIT } from '../core/screens/ScreenType';\nimport {\n    Actor,\n    IsDead,\n    IsDestroying,\n    IsIncapacitated,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            none: [IsDestroying, IsDead],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((e) => {\n                e.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy) {\n            if (entity.isIncapacitated) {\n                entity.fireEvent('energy-consumed', 100);\n                if (entity.isPlayer) {\n                    this.game.screens.pushScreen(SCREEN_WAIT, {\n                        time: 250\n                    });\n                    return true;\n                }\n                continue;\n            }\n\n            if (entity.isPlayer) {\n                const action = this.game.player.getNextAction();\n\n                if (action) {\n                    action();\n                }\n\n                return true;\n            }\n\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n\n        return false;\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\nexport const SCREEN_LIST_SELECT = 8;\nexport const SCREEN_CHARACTER = 9;\nexport const SCREEN_ABILITIES = 10;\nexport const SCREEN_CONFIRM = 11;\nexport const SCREEN_WAIT = 12;\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\r\n\r\nconst camelCache = {};\r\n\r\nexport const camelString = (value) => {\r\n    if (!camelCache.hasOwnProperty(value)) {\r\n        camelCache[value] = camelcaseSlow(value);\r\n    }\r\n\r\n    return camelCache[value];\r\n};\r\n\r\nconst pascalCache = new Map();\r\n\r\nexport const pascalString = (value) => {\r\n    if (!pascalCache.has(value)) {\r\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\r\n    }\r\n\r\n    return pascalCache.get(value);\r\n};\r\n","export default class Property {\r\n    component;\r\n\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.component.ecs;\r\n    }\r\n\r\n    get descriptor() {\r\n        return {\r\n            enumerable: true,\r\n            get: () => this.get(),\r\n            set: (v) => this.set(v),\r\n        };\r\n    }\r\n\r\n    get() {\r\n        return undefined;\r\n    }\r\n\r\n    set(value) {}\r\n\r\n    serialize() {\r\n        return undefined;\r\n    }\r\n\r\n    onDestroyed() {}\r\n\r\n    cleanupReference(entity) {}\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class SimpleProperty extends Property {\r\n    value = null;\r\n\r\n    set(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    get() {\r\n        return this.value;\r\n    }\r\n\r\n    serialize() {\r\n        return this.value;\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\r\n                entity\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityArrayProperty extends Property {\r\n    proxy = [];\r\n\r\n    constructor(component) {\r\n        super(component);\r\n        this.proxy = new Proxy([], {\r\n            get: (target, prop, receiver) => {\r\n                return Reflect.get(target, prop, receiver);\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                const old = Reflect.get(target, prop, receiver);\r\n\r\n                if (typeof value === 'string') {\r\n                    value = this.ecs.entities.get(value);\r\n                }\r\n\r\n                if (old && old != value) {\r\n                    this.ecs.entities.removeRef(value, this);\r\n                }\r\n\r\n                if (value && value.id) {\r\n                    this.ecs.entities.addRef(value.id, this);\r\n\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                return Reflect.set(target, prop, value, receiver);\r\n            },\r\n            deleteProperty: (target, prop) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.deleteProperty(target, prop);\r\n                }\r\n\r\n                const value = Reflect.get(target, prop);\r\n                this.ecs.entities.removeRef(value, this);\r\n\r\n                return Reflect.deleteProperty(target, prop);\r\n            },\r\n        });\r\n    }\r\n\r\n    set(values = []) {\r\n        const len = Math.max(values.length, this.proxy.length);\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            if (i in values) {\r\n                this.proxy[i] = values[i];\r\n            } else {\r\n                delete this.proxy[i];\r\n            }\r\n        }\r\n\r\n        this.proxy.length = values.length;\r\n    }\r\n\r\n    get() {\r\n        return this.proxy;\r\n    }\r\n\r\n    serialize() {\r\n        return this.proxy.map((ref) => ref.id);\r\n    }\r\n\r\n    onDestroyed() {\r\n        this.set([]);\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\r\n    }\r\n}\r\n","import Property from './Property';\r\nimport SimpleProperty from './SimpleProperty';\r\nimport EntityProperty from './EntityProperty';\r\nimport EntityArrayProperty from './EntityArrayProperty';\r\n\r\nexport default class PropertyStrategy {\r\n    static create(component, value) {\r\n        switch (value) {\r\n            case '<Entity>':\r\n                return new EntityProperty(component);\r\n            case '<EntityArray>':\r\n                return new EntityArrayProperty(component);\r\n            default:\r\n                return new SimpleProperty(component);\r\n        }\r\n    }\r\n}\r\n","import { camelString } from './util/string-util';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    entity = null;\r\n    ecs = null;\r\n    _props = {};\r\n    _isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this._isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this._props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this._props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            this.entity = null;\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this._isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this._props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(this.type, this.serialize());\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelString(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this._props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport { camelString } from '../util/string-util';\r\n\r\nexport default class ComponentRegistry {\r\n    _definitions = new Map();\r\n    _ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    register(component) {\r\n        this._definitions.set(component.name, component);\r\n        camelString(component.name); // prime camelcase cache\r\n    }\r\n\r\n    getAccessor(type) {\r\n        return camelString(type);\r\n    }\r\n\r\n    get(typeOrClassOrComponent) {\r\n        const type = this._getType(typeOrClassOrComponent);\r\n\r\n        if (!type) {\r\n            console.warn(\r\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return this._definitions.get(type);\r\n    }\r\n\r\n    create(typeOrClass, properties = {}) {\r\n        const definition = this.get(typeOrClass);\r\n\r\n        if (definition) {\r\n            return new definition(this._ecs, properties);\r\n        }\r\n\r\n        console.warn(\r\n            `Could not create component definition for ${typeOrClass} since it is not registered`\r\n        );\r\n    }\r\n\r\n    _getType(typeOrClassOrComponent) {\r\n        if (typeof typeOrClassOrComponent === 'string') {\r\n            return typeOrClassOrComponent;\r\n        }\r\n\r\n        if (typeOrClassOrComponent instanceof Component) {\r\n            return typeOrClassOrComponent.type;\r\n        }\r\n\r\n        if (typeOrClassOrComponent.prototype instanceof Component) {\r\n            return typeOrClassOrComponent.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    get type() {\r\n        return this.componentDef.type;\r\n    }\r\n\r\n    constructor(componentDef, properties = {}, overwrite = true) {\r\n        this.componentDef = componentDef;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\r\n            if (this.overwrite) {\r\n                entity.remove(this.componentDef);\r\n            } else {\r\n                console.log(\r\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.componentDef, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\r\n                        initialCompProps = initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][arrComps[accessor]]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][arrComps[accessor]];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport PrefabComponent from '../PrefabComponent';\r\nimport Prefab from '../Prefab';\r\n\r\nexport default class PrefabRegistry {\r\n    _prefabs = {};\r\n    _ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(this._ecs, data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        for (const componentData of comps) {\r\n            if (\r\n                typeof componentData === 'string' ||\r\n                componentData.prototype instanceof Component\r\n            ) {\r\n                const def = this._ecs.components.get(componentData);\r\n                if (def) {\r\n                    prefab.addComponent(new PrefabComponent(def));\r\n                }\r\n            } else if (typeof componentData === 'object') {\r\n                const type = componentData.type;\r\n                const def = this._ecs.components.get(type);\r\n                if (def) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            def,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n                }\r\n            } else {\r\n                console.warn(\r\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n                );\r\n            }\r\n        }\r\n\r\n        this.register(prefab);\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(prefab) {\r\n        this._prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(nameOrClassOrPrefab) {\r\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\r\n\r\n        return this._prefabs[name];\r\n    }\r\n\r\n    create(nameOrClass, initialProps = {}) {\r\n        const prefab = this.get(nameOrClass);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = this._ecs.createEntity();\r\n        prefab.applyToEntity(entity, initialProps);\r\n\r\n        return entity;\r\n    }\r\n\r\n    static _getName(nameOrClassOrPrefab) {\r\n        if (typeof nameOrClassOrPrefab === 'string') {\r\n            return nameOrClassOrPrefab;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","export default class EntityEvent {\r\n    data = {};\r\n    _prevented = false;\r\n    _handled = false;\r\n\r\n    get prevented() {\r\n        return this._prevented;\r\n    }\r\n\r\n    get handled() {\r\n        return this._handled;\r\n    }\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this._handled = true;\r\n        this._prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this._prevented = true;\r\n    }\r\n}\r\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    id = null;\r\n    components = {};\r\n    ecs = null;\r\n    _isDestroyed = false;\r\n\r\n    get isDestroyed() {\r\n        return this._isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.ecs = ecs;\r\n        this.id = id || ecs.generateId();\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this._isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        if (typeOrClass instanceof Component) {\r\n            if (typeOrClass.isAttached) {\r\n                console.warn(\r\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return this.attach(typeOrClass);\r\n        }\r\n\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                writable: false,\r\n                value: this.components[accessor],\r\n            });\r\n\r\n            component._onAttached(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    writable: false,\r\n                    value: this.components[accessor],\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                writable: false,\r\n                value: this.components[accessor],\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import { pascalString } from '../util/string-util';\r\nimport Entity from '../Entity';\r\n\r\nexport default class EntityRegistry {\r\n    _entities = new Map();\r\n    _ecs = null;\r\n    _refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this._entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this._entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this._entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this._ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this._ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this._entities.delete(entity.id);\r\n        this._ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this._refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this._refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this._refs.has(entityId)) {\r\n            this._refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this._refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this._refs.has(entityId)) {\r\n            this._refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities ? entities : this._entities;\r\n\r\n        list.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = pascalString(key);\r\n            const definition = this._ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\r\n\r\nexport default class Query {\r\n    _ecs;\r\n    _filter;\r\n    _onEntityAddedCallbacks = [];\r\n    _onEntityRemovedCallbacks = [];\r\n    _cache = new Set();\r\n\r\n    constructor(ecs, filter = {}) {\r\n        this._ecs = ecs;\r\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\r\n        this.bustCache();\r\n    }\r\n\r\n    isMatch(entity) {\r\n        const hasAny = this._filter.any.length\r\n            ? this._filter.any.some((c) => entity.has(c))\r\n            : true;\r\n        const hasAll = this._filter.all.every((c) => entity.has(c));\r\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\r\n\r\n        return hasAny && hasAll && hasNone;\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this._onEntityAddedCallbacks.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this._onEntityRemovedCallbacks.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this._cache.has(entity);\r\n    }\r\n\r\n    candidate(entity) {\r\n        const isTracking = this.has(entity);\r\n\r\n        if (this.isMatch(entity)) {\r\n            if (!isTracking) {\r\n                this._cache.add(entity);\r\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this._cache.delete(entity);\r\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _onEntityCreated(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentAdded(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentRemoved(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onEntityDestroyed(entity) {\r\n        if (this.has(entity)) {\r\n            this._cache.delete(entity);\r\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n    }\r\n\r\n    bustCache() {\r\n        this._cache.clear();\r\n\r\n        for (const entity of this._ecs.entities.all) {\r\n            this.candidate(entity);\r\n        }\r\n\r\n        return this._cache;\r\n    }\r\n\r\n    get() {\r\n        return this._cache;\r\n    }\r\n}\r\n","import Query from '../Query';\r\n\r\nexport default class QueryRegistry {\r\n    _ecs;\r\n    _queries = [];\r\n\r\n    constructor(ecs) {\r\n        this._ecs = ecs;\r\n    }\r\n\r\n    create(filters) {\r\n        const query = new Query(this._ecs, filters);\r\n\r\n        this._queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    onComponentAdded(entity) {\r\n        this._queries.forEach((query) => query._onComponentAdded(entity));\r\n    }\r\n\r\n    onComponentRemoved(entity) {\r\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\r\n    }\r\n\r\n    onEntityCreated(entity) {\r\n        this._queries.forEach((query) => query._onEntityCreated(entity));\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\r\n    }\r\n}\r\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity(id) {\r\n        return this.entities.create(id);\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize(entities) {\r\n        return {\r\n            entities: this.entities.serialize(entities),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n        isFreeFlowing: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty && !this.entity.isDestroying) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    combineFrom(other) {\n        if (this.content !== other.content) {\n            console.warn('Cannot combine different liquid types');\n\n            return false;\n        }\n\n        const sum = this.volume + other.volume;\n\n        if (sum > this.maxVolume) {\n            console.warn(\n                'Container is not large enought to combine both liquids'\n            );\n            this.volume = this.maxVolume;\n\n            other.volume -= sum - this.maxVolume;\n        } else {\n            this.volume += other.volume;\n\n            other.volume -= other.volume;\n        }\n\n        other._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.data.interactor.fireEvent('energy-consumed', 400);\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n\n        evt.data.interactor.fireEvent('energy-consumed', 700);\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_TWIG = 'SPWN_TWIG';\nexport const SPWN_ASH = 'SPWN_ASH';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_GOBLIN_BRUISER = 'SPWN_GOBLIN_BRUISER';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\nexport const SPWN_LEATHER_BOOTS = 'SPWN_LEATHER_BOOTS';\nexport const SPWN_SHORTSWORD = 'SPWN_SHORTSWORD';\nexport const SPWN_GREATSWORD = 'SPWN_GREATSWORD';\nexport const SPWN_BATTLE_AXE = 'SPWN_BATTLE_AXE';\nexport const SPWN_HATCHET = 'SPWN_HATCHET';\nexport const SPWN_MACE = 'SPWN_MACE';\nexport const SPWN_GROUND_GRASS = 'SPWN_GROUND_GRASS';\nexport const SPWN_GROUND_STONE = 'SPWN_GROUND_STONE';\nexport const SPWN_HEAVY_PLATE_ARMOR = 'SPWN_HEAVY_PLATE_ARMOR';\nexport const SPWN_LEATHER_ARMOR = 'SPWN_LEATHER_ARMOR';\nexport const SPWN_CLOTH_HOOD = 'SPWN_CLOTH_HOOD';\nexport const SPWN_WIZARD_CAP = 'SPWN_WIZARD_CAP';\nexport const SPWN_HELM = 'SPWN_HELM';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as GoblinBruiser from './spawnables/SpawnableGoblinBruiser';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\nimport * as Grass from './spawnables/SpawnableGrass';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_HEAVY_PLATE_ARMOR: simplePrefab('PlateArmor'),\n    SPWN_LEATHER_ARMOR: simplePrefab('LeatherArmor'),\n    SPWN_LEATHER_BOOTS: simplePrefab('Boots'),\n    SPWN_SHORTSWORD: simplePrefab('Shortsword'),\n    SPWN_GREATSWORD: simplePrefab('Greatsword'),\n    SPWN_BATTLE_AXE: simplePrefab('BattleAxe'),\n    SPWN_HATCHET: simplePrefab('Hatchet'),\n    SPWN_MACE: simplePrefab('Mace'),\n    SPWN_GROUND_GRASS: Grass.createSpawnable,\n    SPWN_GROUND_STONE: simplePrefab('StoneGround'),\n    SPWN_CLOTH_HOOD: simplePrefab('ClothHood'),\n    SPWN_WIZARD_CAP: simplePrefab('WizardCap'),\n    SPWN_HELM: simplePrefab('Helm'),\n    SPWN_TWIG: simplePrefab('Twig'),\n    SPWN_ASH: simplePrefab('Ash'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_GOBLIN_BRUISER: GoblinBruiser.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\nexport const LIQUID_OIL = 4;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_SHORTSWORD } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    const sword = spawn(SPWN_SHORTSWORD);\n\n    goblin.equipmentSlot.handRight.equip(sword);\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const targets = new Set();\n\n        entity.fireEvent('try-detect-hostiles', {\n            targets,\n        });\n\n        if (targets.size > 0) {\n            const target = [...targets][0];\n\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { computeAStar } from '../../utils/AStar';\nimport { game } from '../../core/Game';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { MoveGoalType } from './MoveGoalType';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.isDead || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        // try melee\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        const start = entity.position.getPos();\n        const targetPos = goal.target.position.getPos();\n\n        // try pathing to target\n        const result = computeAStar({\n            start,\n            goal: targetPos,\n            cost: (a, b) => {\n                if (game.map.isOutOfbounds(b.x, b.y)) {\n                    return Infinity;\n                }\n\n                if (b.x === targetPos.x && b.y === targetPos.y) {\n                    return diagonalDistance(a, b);\n                }\n\n                const entities = game.map.getEntitiesAt(b.x, b.y);\n\n                if (entities.some((e) => e.blocker)) {\n                    return Infinity;\n                }\n\n                if (\n                    entities.some(\n                        (e) =>\n                            e.id !== entity.id && e.body && !e.isIncapacitated\n                    )\n                ) {\n                    return Infinity;\n                }\n\n                if (entities.some((e) => e.sharpTrap)) {\n                    return 8;\n                }\n\n                return diagonalDistance(a, b);\n            },\n        });\n\n        if (result.success && result.cost < 55) {\n            const segment = result.path[1];\n            const delta = {\n                x: segment.x - start.x,\n                y: segment.y - start.y,\n            };\n            const moveGoal = MoveGoalType.createAsSubGoal(goal, {\n                data: delta,\n            });\n\n            entity.brain.pushGoal(moveGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        entity.fireEvent('energy-consumed', 1000);\n\n        return FAILURE;\n    };\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y, allowDiagonals = true) => {\n    const neighbors = [\n        {\n            x: x,\n            y: y - 1,\n        },\n        {\n            x: x - 1,\n            y: y,\n        },\n        {\n            x: x + 1,\n            y: y,\n        },\n        {\n            x: x,\n            y: y + 1,\n        },\n    ];\n\n    if (allowDiagonals) {\n        neighbors.push(\n            {\n                x: x - 1,\n                y: y - 1,\n            },\n            {\n                x: x + 1,\n                y: y - 1,\n            },\n            {\n                x: x - 1,\n                y: y + 1,\n            },\n            {\n                x: x + 1,\n                y: y + 1,\n            }\n        );\n    }\n\n    return neighbors;\n};\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(\n            current.x,\n            current.y,\n            settings.allowDiagonals\n        );\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_MACE } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('GoblinBruiser');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    const mace = spawn(SPWN_MACE);\n\n    goblin.equipmentSlot.handRight.equip(mace);\n\n    return goblin;\n};\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const randomBool = () => {\n    return pickRandom([true, false]);\n};\n\nexport const randomWeightedBool = (weight = 0.5) => {\n    return Math.random() <= weight;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const grass = game.ecs.createPrefab('Grass');\n    const ch = pickRandom(['≡', '±', '≥', '≤']);\n\n    grass.glyph.ch = ch;\n\n    return grass;\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return false;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n\n        return true;\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return false;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        if (this.closeDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        if (this.openDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    take(newOwner) {\n        if (this.entity.isInventoried) {\n            if (this.entity.isInventoried.isOwnedBy(newOwner)) {\n                return true;\n            }\n\n            const owner = this.entity.isInventoried.owner;\n\n            owner.inventory.removeLoot(this.entity);\n        }\n\n        newOwner.inventory.addLoot(this.entity);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        this.take(evt.data.interactor);\n\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        this.take(evt.data.interactor);\n\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n        isOpenable: true,\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        ob.fireEvent('dropped', {\n            dropper: this.entity,\n        });\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpenable) {\n            evt.data.interactions.push({\n                name: 'Open',\n                evt: 'try-open',\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_ASH = 'STACKABLE_ASH';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport { SKILL_THROWING, getSkillValue } from '../../data/Skills';\nimport Attack from '../../data/Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../../data/DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../../data/Stats';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { randomInt } from '../../utils/rand';\nimport { Inventory } from './Inventory';\nimport { simpleLineRenderer } from '../../utils/cursor/SimpleLineRenderer';\n\nexport class Throwable extends Component {\n    static properties = {\n        die: 4,\n        modifier: 0,\n        cost: 500,\n        damageType: DMG_TYPE_BLUDGEONING,\n    };\n\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n\n                    const str = getStat(STAT_STRENGTH, initiator);\n                    const die = randomInt(1, this.die);\n                    const damage = die + str + this.modifier;\n                    const attack = new Attack({\n                        attacker: initiator,\n                        defender: hit,\n                        weaponName: this.entity.moniker.display,\n                        damage,\n                        damageType: this.damageType,\n                        ignoreDodge: true,\n                    });\n\n                    hit.fireEvent('attacked', { attack });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        const range = getSkillValue(SKILL_THROWING, evt.data.interactor);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            renderer: simpleLineRenderer(),\n            start: evt.data.interactor.position.getPos(),\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.slice(0, range + 1).map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n        });\n    }\n}\n","import ArmorSkill from './skills/ArmorSkill';\nimport SpeedSkill from './skills/SpeedSkill';\nimport ThrowingSkill from './skills/ThrowingSkill';\nimport DodgeSkill from './skills/DodgeSkill';\n\nexport const SKILL_SPEED = 'SKILL_SPEED';\nexport const SKILL_THROWING = 'SKILL_THROWING';\nexport const SKILL_ARMOR = 'SKILL_ARMOR';\nexport const SKILL_DODGE = 'SKILL_DODGE';\n\nconst lookup = {\n    [SKILL_ARMOR]: new ArmorSkill(),\n    [SKILL_SPEED]: new SpeedSkill(),\n    [SKILL_THROWING]: new ThrowingSkill(),\n    [SKILL_DODGE]: new DodgeSkill(),\n};\n\nexport const getSkill = (key) => lookup[key];\nexport const getSkillName = (key) => lookup[key].name;\nexport const getSkillValue = (key, entity) => lookup[key].compute(entity);\nexport const getSkillEquippedMod = (key, entity) => {\n    const modifiers = [];\n\n    entity.fireEvent(`query-skill-mod-equipped`, {\n        skill: key,\n        modifiers,\n    });\n\n    return modifiers;\n};\nexport const getAllSkillEquippedMods = (entity) => {\n    return Object.keys(lookup).reduce(\n        (mods, skill) => ({\n            ...mods,\n            [skill]: getSkillEquippedMod(skill, entity),\n        }),\n        {}\n    );\n};\nexport const getAllSkillEquippedModSums = (entity) => {\n    const mods = getAllSkillEquippedMods(entity);\n\n    return Object.keys(mods).reduce(\n        (all, skill) => ({\n            ...all,\n            [skill]: mods[skill].reduce((sum, mod) => sum + mod.mod, 0),\n        }),\n        {}\n    );\n};\n","import { SKILL_ARMOR } from '../Skills';\nimport Skill from './Skill';\n\nexport const getArmorBlockPercent = (skill = 0) => {\n    const base = 10;\n\n    return 1 - base / (skill + base);\n};\n\nexport const getArmorBlockPercentDisplay = (skill = 0) => {\n    const prcnt = getArmorBlockPercent(skill);\n\n    return Math.floor(prcnt * 100);\n};\n\nexport default class ArmorSkill extends Skill {\n    constructor() {\n        super(SKILL_ARMOR, 'armor');\n    }\n}\n","import { getStat } from '../Stats';\n\nexport default class Skill {\n    key = -1;\n    name = 'skill';\n    baseStat = null;\n\n    constructor(key, name, baseStat) {\n        this.key = key;\n        this.name = name;\n        this.baseStat = baseStat;\n    }\n\n    getModifiers(entity) {\n        const evt = entity.fireEvent(`query-skill-mod`, {\n            name: this.name,\n            skill: this.key,\n            modifiers: [],\n        });\n\n        return evt.data.modifiers;\n    }\n\n    getModifierSum(entity) {\n        const modifiers = this.getModifiers(entity);\n\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    compute(entity) {\n        const stat = this.baseStat ? getStat(this.baseStat, entity) : 0;\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","import { randomInt } from '../utils/rand';\n\nexport const STAT_STRENGTH = 'STAT_STRENGTH';\nexport const STAT_FINESSE = 'STAT_FINESSE';\nexport const STAT_ATHLETICISM = 'STAT_ATHLETICISM';\nexport const STAT_TRICKERY = 'STAT_TRICKERY';\nexport const STAT_FAITH = 'STAT_FAITH';\n\nconst lookup = {\n    [STAT_STRENGTH]: {\n        name: 'strength',\n    },\n    [STAT_FINESSE]: {\n        name: 'finesse',\n    },\n    [STAT_ATHLETICISM]: {\n        name: 'athleticism',\n    },\n    [STAT_TRICKERY]: {\n        name: 'trickery',\n    },\n    [STAT_FAITH]: {\n        name: 'faith',\n    },\n};\n\nexport const getStatName = (stat) => lookup[stat].name;\nexport const getStat = (stat, entity) => {\n    const name = lookup[stat].name;\n\n    return entity.stats[name]();\n};\nexport const rollStat = (stat, entity) => {\n    return randomInt(1, 20) + getStat(stat, entity);\n};\nexport const statCheck = (stat, entity, target) => {\n    return rollStat(stat, entity) >= target;\n};\n","import { SKILL_SPEED } from '../Skills';\nimport { STAT_ATHLETICISM } from '../Stats';\nimport Skill from './Skill';\n\nexport const getSpeedPercent = (skill = 0) => {\n    const base = 5;\n    const cost = base / (base + skill);\n\n    return cost;\n};\n\nexport const getSpeedPercentDisplay = (skill = 0) => {\n    const prcnt = getSpeedPercent(skill);\n\n    return Math.floor(prcnt * 100);\n};\n\nexport default class SpeedSkill extends Skill {\n    constructor() {\n        super(SKILL_SPEED, 'speed', STAT_ATHLETICISM);\n    }\n}\n","import { SKILL_THROWING } from '../Skills';\nimport { getStat, STAT_ATHLETICISM } from '../Stats';\nimport Skill from './Skill';\n\nexport default class ThrowingSkill extends Skill {\n    constructor() {\n        super(SKILL_THROWING, 'throwing', STAT_ATHLETICISM);\n    }\n\n    compute(entity) {\n        const base = getStat(STAT_ATHLETICISM, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return Math.max(0, base + modifier) + 6;\n    }\n}\n","import { SKILL_DODGE } from '../Skills';\nimport { STAT_FINESSE } from '../Stats';\nimport Skill from './Skill';\n\nexport const getDodgePercent = (skill = 0) => {\n    const base = 5;\n    const unscaled = 1 - base / (skill + base);\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class DodgeSkill extends Skill {\n    constructor() {\n        super(SKILL_DODGE, 'dodge', STAT_FINESSE);\n    }\n}\n","export default class Attack {\n    constructor(data) {\n        this.attacker = data.attacker;\n        this.defender = data.defender;\n        this.weaponName = data.weaponName;\n        this.damage = data.damage;\n        this.damageType = data.damageType;\n        this.ignoreDodge = data.ignoreDodge;\n    }\n}\n","export const DMG_TYPE_BLUDGEONING = 'DMG_TYPE_BLUDGEONING';\nexport const DMG_TYPE_PIERCING = 'DMG_TYPE_PIERCING';\nexport const DMG_TYPE_SLASHING = 'DMG_TYPE_SLASHING';\nexport const DMG_TYPE_NECROTIC = 'DMG_TYPE_NECROTIC';\n\nconst lookup = {\n    [DMG_TYPE_BLUDGEONING]: {\n        name: 'Bludgeoning',\n        verb: 'bludgeons',\n    },\n    [DMG_TYPE_PIERCING]: {\n        name: 'Piercing',\n        verb: 'pierces',\n    },\n    [DMG_TYPE_SLASHING]: {\n        name: 'Slashing',\n        verb: 'slashes',\n    },\n    [DMG_TYPE_NECROTIC]: {\n        name: 'Necrotic',\n        verb: 'saps',\n    },\n};\n\nexport const getDmgTypeName = (type) => lookup[type].name;\nexport const getDmgTypeVerb = (type) => lookup[type].verb;\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { game } from '../../core/Game';\n\nconst truthy = () => true;\n\nexport const simpleLineRenderer = (options = {}) => {\n    const isValid = options.isValid || truthy;\n\n    return {\n        isValid,\n        render: (opts) => {\n            opts.line.forEach(({ x, y }, idx) => {\n                if (idx === 0) {\n                    return;\n                }\n\n                const color = isValid({\n                    ...opts,\n                    x,\n                    y\n                }, idx) ? 'blue' : 'red';\n                const screen = game.camera.worldToScreen(x, y);\n\n                game.renderer.draw(screen.x, screen.y, '•', color);\n            });\n        },\n    };\n};\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { getDmgTypeVerb } from '../data/DamageTypes';\nimport { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\nexport const CONSOLE_EVENT_MISS = 3;\nexport const CONSOLE_EVENT_BLOCK = 4;\nexport const CONSOLE_EVENT_TRAP_SHARP = 5;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_MISS]: {\n        message(data) {\n            const attacker = getMonikerIndirectObject(data.attacker);\n            const defender = getMonikerSubject(data.defender);\n\n            return `${defender} dodged an attack from ${attacker} (${data.dodgePrcnt}%)`;\n        },\n        shouldAppear(data) {\n            return data.defender.has(IsPlayer) || data.attacker.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n            const dmg = data.damage;\n            const blocked = data.blocked;\n\n            const blockText =\n                blocked > 0 ? `. (${blocked} damage was blocked)` : '';\n\n            return `${source} ${dmgVerb} ${target} for ${dmg} hp${blockText}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n\n            return `${source} ${dmgVerb} ${target} to death`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_TRAP_SHARP]: {\n        message(data) {\n            return `${getMonikerSubject(\n                data.entity\n            )} cuts themselves on ${getMonikerIndirectObject(\n                data.trap\n            )} and begins bleeding`;\n        },\n        shouldAppear(data) {\n            return data.trap.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n        z: 1000,\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SKILL_SPEED, getSkillValue } from '../../data/Skills';\nimport { Blocker } from './Blocker';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        const speed = getSkillValue(SKILL_SPEED, this.entity);\n        const cost = (20 / (20 + speed)) * 1000;\n\n        this.entity.fireEvent('energy-consumed', cost);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport { directionDelta } from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = directionDelta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        adjacent: [],\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\ndirections[DIR_NW].adjacent = [DIR_N, DIR_W];\ndirections[DIR_N].adjacent = [DIR_NW, DIR_NE];\ndirections[DIR_NE].adjacent = [DIR_N, DIR_E];\ndirections[DIR_W].adjacent = [DIR_NW, DIR_SW];\ndirections[DIR_E].adjacent = [DIR_NE, DIR_SE];\ndirections[DIR_SW].adjacent = [DIR_W, DIR_S];\ndirections[DIR_S].adjacent = [DIR_SW, DIR_SE];\ndirections[DIR_SE].adjacent = [DIR_S, DIR_E];\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const directionDelta = (direction) => directions[direction].delta;\n\nexport const adjacent = (direction) => directions[direction].adjacent;\n\nexport const getAdjacentDeltas = (direction) => adjacent(direction).map(directionDelta);\n\nexport const directionFromDelta = (x, y) => {\n    return Object.values(directions).find((dir) => {\n        return dir.delta.x === x && dir.delta.y === y;\n    });\n};\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SKILL_ARMOR, SKILL_DODGE, getSkillValue } from '../../data/Skills';\nimport { getArmorBlockPercent } from '../../data/skills/ArmorSkill';\nimport { getDodgePercent } from '../../data/skills/DodgeSkill';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n    CONSOLE_EVENT_MISS,\n} from '../../enums/ConsoleEvents';\nimport { randomInt } from '../../utils/rand';\nimport { IsDead } from './IsDead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 32,\n        max: 32,\n    };\n\n    applyDamage(damage) {\n        this.value -= damage;\n\n        if (this.value <= 0) {\n            this.value = 0;\n            this.entity.add(IsDead);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    onAttacked(evt) {\n        const attack = evt.data.attack;\n        const attacker = attack.attacker;\n        const defender = attack.defender;\n        const dodge = getSkillValue(SKILL_DODGE, defender);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        if (!attack.ignoreDodge && randomInt(1, 100) <= dodgePrcnt) {\n            game.console.event(CONSOLE_EVENT_MISS, {\n                defender,\n                attacker,\n                dodgePrcnt,\n            });\n\n            evt.data.damage = 0;\n            evt.data.isDodged = true;\n            evt.data.isKilled = false;\n            evt.handle();\n\n            return;\n        }\n\n        evt.data.isDodged = false;\n\n        const armor = getSkillValue(SKILL_ARMOR, defender);\n        const armorPrcnt = getArmorBlockPercent(armor);\n        const blocked = Math.floor(attack.damage * armorPrcnt);\n        const damage = attack.damage - blocked;\n        evt.data.damage = damage;\n\n        const isKilled = this.applyDamage(damage);\n        evt.data.isKilled = isKilled;\n\n        if (isKilled) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: defender,\n                source: attacker,\n                damage,\n                damageType: attack.damageType,\n            });\n\n            evt.handle();\n\n            return;\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: defender,\n            source: attacker,\n            damage,\n            damageType: attack.damageType,\n            blocked,\n        });\n\n        const pos = this.entity.position.getPos();\n\n        game.particles.createParticle(pos.x, pos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['*'],\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDead extends Component {}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Eyes extends Component {\n    static properties = {\n        range: 5,\n    };\n\n    canSee(entity) {\n        const start = this.entity.position.getPos();\n        const end = entity.position.getPos();\n\n        const line = bresenhamLine(start.x, start.y, end.x, end.y);\n\n        if (line.length > this.range) {\n            return false;\n        }\n\n        return !line.some((segment) => {\n            return game.map\n                .getEntitiesAt(segment.x, segment.y)\n                .some((entity) => entity.has(Shadowcaster));\n        });\n    }\n\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        // get within square area\n        const targets = game.map\n            .getEntitiesInRange(position.x, position.y, this.range)\n            .filter((e) => {\n                if (!e.actor) {\n                    return false;\n                }\n                if (e.isDead) {\n                    return false;\n                }\n                if (!game.factions.areEntitiesHostile(this.entity, e)) {\n                    return false;\n                }\n\n                return this.canSee(e);\n            });\n\n        if (targets.length > 0) {\n            targets.forEach((e) => {\n                evt.data.targets.add(e);\n            });\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport {\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_SHORTSWORD,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n} from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(4, SPWN_CLOTH_ARMOR);\ngoblins.add(15, SPWN_SHORTSWORD);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY],\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter(\n            (slot) => {\n                return this.slotTypes.includes(slot.slotType);\n            }\n        );\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: this.entity.moniker.display,\n            icon: this.entity.glyph,\n            leadText: 'Select a slot',\n            list: slots,\n            onRenderRow: (slot, x, y, isSelected) => {\n                let text = slot.name;\n\n                if (!slot.isEmpty) {\n                    text += ` [${slot.content.moniker.display}]`;\n                }\n\n                if (isSelected) {\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n                } else {\n                    game.renderer.drawText(x, y, `- ${text}`);\n                }\n            },\n            onSelect: (slot) => {\n                slot.unequip();\n                slot.equip(this.entity);\n                evt.data.interactor.fireEvent('energy-consumed', 200);\n                evt.handle();\n                game.screens.popScreen();\n            },\n        });\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_HEAD = 'EQ_SLOT_HEAD';\nexport const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\nexport const EQ_SLOT_HAND = 'EQ_SLOT_HAND';\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { getWeaponType, WPN_TYPE_UNARMED } from '../../data/WeaponTypes';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n        isPrimary: false,\n        isOffhand: false,\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.loot.take(this.entity);\n\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n\n    onTryMelee(evt) {\n        if (!this.isPrimary) {\n            return;\n        }\n\n        const map = window.game.map;\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        if (this.isEmpty) {\n            const weaponType = getWeaponType(WPN_TYPE_UNARMED);\n\n            weaponType.attack(this.entity, evt.data.target);\n\n            this.entity.fireEvent('energy-consumed', 600);\n\n            evt.handle();\n            return;\n        }\n\n        this.content.fireEvent('try-use-melee', {\n            interactor: this.entity,\n            target: evt.data.target,\n        });\n\n        evt.handle();\n    }\n\n    onQuerySkillMod(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        this.content.fireEvent(`query-skill-mod-equipped`, {\n            skill: evt.data.skill,\n            modifiers: evt.data.modifiers,\n        });\n    }\n}\n","import {\n    DMG_TYPE_BLUDGEONING,\n    DMG_TYPE_PIERCING,\n    DMG_TYPE_SLASHING,\n} from './DamageTypes';\nimport {\n    WPN_FAMILY_AXE,\n    WPN_FAMILY_BLADE,\n    WPN_FAMILY_HAMMER,\n    WPN_FAMILY_POLEARM,\n} from './WeaponFamilies';\nimport WpnTypeBattleAxe from './weapons/WpnTypeBattleAxe';\nimport WpnTypeGreatsword from './weapons/WpnTypeGreatsword';\nimport WpnTypeMace from './weapons/WpnTypeMace';\nimport WpnTypeShortsword from './weapons/WpnTypeShortsword';\nimport WpnTypeUnarmed from './weapons/WpnTypeUnarmed';\n\n// hammer family\nexport const WPN_TYPE_WAR_HAMMER = 'WPN_TYPE_WAR_HAMMER';\nexport const WPN_TYPE_SLEDGE_HAMMER = 'WPN_TYPE_SLEDGE_HAMMER';\n// cudgel family\nexport const WPN_TYPE_CLUB = 'WPN_TYPE_CLUB';\nexport const WPN_TYPE_MACE = 'WPN_TYPE_MACE';\n// axe family\nexport const WPN_TYPE_HEAVY_AXE = 'WPN_TYPE_HEAVY_AXE';\nexport const WPN_TYPE_BATTLE_AXE = 'WPN_TYPE_BATTLE_AXE';\n// blade family\nexport const WPN_TYPE_GREATSWORD = 'WPN_TYPE_GREATSWORD';\nexport const WPN_TYPE_SHORTSWORD = 'WPN_TYPE_SHORTSWORD';\nexport const WPN_TYPE_DAGGER = 'WPN_TYPE_DAGGER';\n// polearm family\nexport const WPN_TYPE_STAFF = 'WPN_TYPE_STAFF';\nexport const WPN_TYPE_HALBERD = 'WPN_TYPE_HALBERD';\nexport const WPN_TYPE_JAVELIN = 'WPN_TYPE_JAVELIN';\n// unarmed family\nexport const WPN_TYPE_UNARMED = 'WPN_TYPE_UNARMED';\n\nconst lookup = {\n    [WPN_TYPE_UNARMED]: new WpnTypeUnarmed(),\n    [WPN_TYPE_WAR_HAMMER]: {\n        name: 'War hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_WAR_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_SLEDGE_HAMMER]: {\n        name: 'Sledge hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_SLEDGE_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_CLUB]: {\n        name: 'Club',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_CLUB,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_MACE]: {\n        name: 'Mace',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_MACE,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HEAVY_AXE]: {\n        name: 'Heavy axe',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HEAVY_AXE,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_BATTLE_AXE]: new WpnTypeBattleAxe(),\n    [WPN_TYPE_GREATSWORD]: new WpnTypeGreatsword(),\n    [WPN_TYPE_SHORTSWORD]: new WpnTypeShortsword(),\n    [WPN_TYPE_MACE]: new WpnTypeMace(),\n    [WPN_TYPE_DAGGER]: {\n        name: 'Dagger',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_DAGGER,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_STAFF]: {\n        name: 'Staff',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_STAFF,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HALBERD]: {\n        name: 'Halberd',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_HALBERD,\n        damageType: DMG_TYPE_PIERCING,\n    },\n    [WPN_TYPE_JAVELIN]: {\n        name: 'Javelin',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_JAVELIN,\n        damageType: DMG_TYPE_PIERCING,\n    },\n};\n\nexport const getWeaponType = (type) => lookup[type];\nexport const getWeaponTypeName = (type) => lookup[type].name;\nexport const getWeaponTypeFamily = (type) => lookup[type].family;\nexport const getWeaponTypeDmgType = (type) => lookup[type].damageType;\n","export const WPN_FAMILY_HAMMER = 'WPN_FAMILY_HAMMER';\nexport const WPN_FAMILY_AXE = 'WPN_FAMILY_AXE';\nexport const WPN_FAMILY_BLADE = 'WPN_FAMILY_BLADE';\nexport const WPN_FAMILY_ARCHERY = 'WPN_FAMILY_ARCHERY';\nexport const WPN_FAMILY_POLEARM = 'WPN_FAMILY_POLEARM';\nexport const WPN_FAMILY_UNARMED = 'WPN_FAMILY_UNARMED';\nexport const WPN_FAMILY_CUDGEL = 'WPN_FAMILY_CUDGEL';\n\nconst lookup = {\n    [WPN_FAMILY_HAMMER]: {\n        name: 'Hammer',\n    },\n    [WPN_FAMILY_AXE]: {\n        name: 'Axe',\n    },\n    [WPN_FAMILY_BLADE]: {\n        name: 'Blade',\n    },\n    [WPN_FAMILY_ARCHERY]: {\n        name: 'Archery',\n    },\n    [WPN_FAMILY_POLEARM]: {\n        name: 'Polearm',\n    },\n    [WPN_FAMILY_UNARMED]: {\n        name: 'Unarmed',\n    },\n    [WPN_FAMILY_CUDGEL]: {\n        name: 'Cudgel',\n    },\n};\n\nexport const getWeaponFamilyName = (family) => lookup[family].name;\n","import { randomBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_AXE } from '../WeaponFamilies';\nimport { WPN_TYPE_BATTLE_AXE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeBattleAxe extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_BATTLE_AXE,\n            name: 'Battle axe',\n            family: WPN_FAMILY_AXE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (!result.data.isDodged && !result.data.isKilled && randomBool()) {\n            const secondAttack = this._createAttack(attacker, defender, weapon);\n\n            attacks.push(secondAttack);\n\n            defender.fireEvent('attacked', { attack });\n        }\n\n        return attacks;\n    }\n}\n","import { getDmgTypeName } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { getWeaponFamilyName } from '../WeaponFamilies';\n\nexport default class WeaponType {\n    constructor(data) {\n        this.name = data.name;\n        this.family = data.family;\n        this.key = data.key;\n        this.damageType = data.damageType;\n    }\n\n    weaponDamageText(user, weapon) {\n        let text = `1d${weapon.die}`;\n        const str = getStat(STAT_STRENGTH, user);\n        const mod = weapon.modifier + str;\n\n        if (mod) {\n            if (mod > 0) {\n                text += ` + ${mod}`;\n            } else {\n                text += ` - ${Math.abs(mod)}`;\n            }\n        }\n\n        return text;\n    }\n\n    getShortDescription(user, weapon) {\n        const fam = getWeaponFamilyName(this.family);\n\n        return `${fam}, ${this.weaponDamageText(user, weapon)}`;\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        return [];\n    }\n\n    attack(attacker, defender, weapon) {\n        const attacks = this.getAttacks(attacker, defender, weapon);\n\n        return attacks.map((attack) => {\n            attack.defender.fireEvent('attacked', { attack });\n        });\n    }\n}\n","import { game } from '../../core/Game';\nimport { getAdjacentDeltas, directionFromDelta } from '../../enums/Directions';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_GREATSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeGreatsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_GREATSWORD,\n            name: 'Greatsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _getNeighborAttacks(attacker, defender, weapon, damage) {\n        const attackerPos = attacker.position.getPos();\n        const defenderPos = defender.position.getPos();\n        const deltaX = defenderPos.x - attackerPos.x;\n        const deltaY = defenderPos.y - attackerPos.y;\n        const direction = directionFromDelta(deltaX, deltaY);\n        const adjacentDeltas = getAdjacentDeltas(direction.key);\n\n        return adjacentDeltas\n            .map((delta) =>\n                game.map.getEntitiesAt(\n                    attackerPos.x + delta.x,\n                    attackerPos.y + delta.y\n                )\n            )\n            .flat()\n            .filter((e) => game.factions.areEntitiesHostile(e, attacker))\n            .map((hostile) => {\n                return new Attack({\n                    attacker,\n                    ignoreDodge: true,\n                    defender: hostile,\n                    weaponName: weapon.name,\n                    damage: Math.floor(damage / 2),\n                    damageType: this.damageType,\n                });\n            });\n    }\n\n    _tryAttackDefender(attacker, defender, weapon, damage) {\n        const attack = new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n\n        return defender.fireEvent('attacked', { attack });\n    }\n\n    attack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n        const result = this._tryAttackDefender(\n            attacker,\n            defender,\n            weapon,\n            damage\n        );\n\n        const attacks = [result];\n\n        if (!result.data.isDodged) {\n            const neighborAttacks = this._getNeighborAttacks(\n                attacker,\n                defender,\n                weapon,\n                damage\n            );\n\n            neighborAttacks.forEach((attack) => {\n                attacks.push(attack);\n                attack.defender.fireEvent('attacked', { attack });\n            });\n        }\n\n        return attacks;\n    }\n}\n","import { randomBool, randomWeightedBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { addStatus, STATUS_STUNNED } from '../Statuses';\nimport { WPN_FAMILY_CUDGEL } from '../WeaponFamilies';\nimport { WPN_TYPE_MACE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeMace extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_MACE,\n            name: 'Mace',\n            family: WPN_FAMILY_CUDGEL,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (\n            !result.data.isDodged &&\n            !result.data.isKilled &&\n            randomWeightedBool(0.2)\n        ) {\n            addStatus(STATUS_STUNNED, defender, {\n                duration: 1000\n            });\n        }\n\n        return attacks;\n    }\n}\n","import { Status } from '../ecs/components';\nimport StatusBleeding from './statuses/StatusBleeding';\nimport StatusStunned from './statuses/StatusStunned';\n\nexport const STATUS_BLEEDING = 'STATUS_BLEEDING';\nexport const STATUS_STUNNED = 'STATUS_STUNNED';\n\nconst lookup = {\n    STATUS_BLEEDING: new StatusBleeding(),\n    STATUS_STUNNED: new StatusStunned(),\n};\n\nexport const getStatus = (key) => lookup[key];\nexport const addStatus = (key, entity, properties = {}) => {\n    return entity.add(Status, {\n        ...properties,\n        key,\n    });\n};\n","import { LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { SPWN_POOL_LIQUID } from '../Spawnables';\nimport { spawn } from '../Spawner';\nimport { STATUS_BLEEDING } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusBleeding extends Status {\n    constructor() {\n        const glyph = {\n            fg1: '#f42323',\n            fg2: '#411010',\n            bg: null,\n            ch: 's',\n        };\n        super(STATUS_BLEEDING, 'Bleeding', STATUS_TYPE_CONDITION, glyph);\n        this.isDot = true;\n    }\n\n    getDmgPerTurn(potency) {\n        return 3 * potency + 0.5;\n    }\n\n    getPipCount(potency) {\n        return Math.round(2 * potency);\n    }\n\n    update(ticks, entity, status) {\n        const tick = Math.min(ticks, status.remainingLifetime());\n        const dmgPerTurn = this.getDmgPerTurn(status.potency);\n        const damage = dmgPerTurn * (tick / 1000);\n\n        entity.health.applyDamage(damage);\n\n        const position = entity.position.getPos();\n\n        spawn(SPWN_POOL_LIQUID, position.x, position.y, {\n            content: LIQUID_BLOOD,\n            volume: Math.ceil(damage * 6),\n        });\n\n        status.lifetime += tick;\n    }\n}\n","export const STATUS_TYPE_CONDITION = 'STATUS_TYPE_CONDITION';\n","export default class Status {\n    isDot = false;\n\n    getPipCount(potency) {\n        return 0;\n    }\n\n    constructor(key, name, type, glyph) {\n        this.key = key;\n        this.name = name;\n        this.type = type;\n        this.glyph = glyph;\n    }\n}\n","import { game } from '../../core/Game';\nimport { IsIncapacitated } from '../../ecs/components';\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { STATUS_STUNNED } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusStunned extends Status {\n    constructor() {\n        const glyph = {\n            fg1: '#daa53a',\n            fg2: '#f2da97',\n            bg: null,\n            ch: '|',\n        };\n        super(STATUS_STUNNED, 'Stunned', STATUS_TYPE_CONDITION, glyph);\n    }\n\n    update(ticks, entity, status) {\n        status.lifetime += ticks;\n\n        if (!entity.isIncapacitated) {\n            entity.add(IsIncapacitated);\n\n            const pos = entity.position.getPos();\n\n            game.particles.createParticle(pos.x, pos.y, {\n                lifetime: 140,\n                fg1s: ['yellow'],\n                glyphs: ['*'],\n            });\n        }\n\n        if (status.isCompleted()) {\n            entity.isIncapacitated.destroy();\n        }\n    }\n}\n","import Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_SHORTSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeShortsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_SHORTSWORD,\n            name: 'Shortsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: weapon.name,\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { pickRandom, randomInt } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\nimport { WPN_TYPE_UNARMED } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeUnarmed extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_UNARMED,\n            name: 'Unarmed',\n            family: WPN_FAMILY_UNARMED,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = randomInt(1, 4);\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: pickRandom(['punch', 'kick']),\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { Component } from 'geotic';\nimport { capitalize } from 'rot-js/lib/util';\nimport {\n    getStatName,\n    STAT_ATHLETICISM,\n    STAT_FINESSE,\n    STAT_STRENGTH,\n    STAT_TRICKERY,\n    STAT_FAITH,\n} from '../../data/Stats';\n\nexport class Stats extends Component {\n    static properties = {\n        baseStrength: 0,\n        baseFinesse: 0,\n        baseAthleticism: 0,\n        baseTrickery: 0,\n        baseFaith: 0,\n    };\n\n    _sumMods(modifiers) {\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    getStatModifiers(stat) {\n        const evt = this.entity.fireEvent(`query-stat-mod`, {\n            name: getStatName(stat),\n            stat,\n            modifiers: [],\n        });\n\n        return evt.data.modifiers;\n    }\n\n    getStatModifierSum(stat) {\n        const mods = this.getStatModifiers(stat);\n\n        return this._sumMods(mods);\n    }\n\n    data(stat) {\n        const name = getStatName(stat);\n        const modifiers = this.getStatModifiers(stat);\n        const base = this[`base${capitalize(name)}`];\n        const modSum = this._sumMods(modifiers);\n        const sum = base + modSum;\n\n        return {\n            stat,\n            name,\n            modifiers,\n            base,\n            sum,\n            modSum,\n        };\n    }\n\n    all() {\n        return {\n            strength: this.data(STAT_STRENGTH),\n            finesse: this.data(STAT_FINESSE),\n            athleticism: this.data(STAT_ATHLETICISM),\n            trickery: this.data(STAT_TRICKERY),\n            faith: this.data(STAT_FAITH),\n        };\n    }\n\n    strength() {\n        const mod = this.getStatModifierSum(STAT_STRENGTH);\n\n        return this.baseStrength + mod;\n    }\n\n    finesse() {\n        const mod = this.getStatModifierSum(STAT_FINESSE);\n\n        return this.baseFinesse + mod;\n    }\n\n    athleticism() {\n        const mod = this.getStatModifierSum(STAT_ATHLETICISM);\n\n        return this.baseAthleticism + mod;\n    }\n\n    trickery() {\n        const mod = this.getStatModifierSum(STAT_TRICKERY);\n\n        return this.baseTrickery + mod;\n    }\n\n    faith() {\n        const mod = this.getStatModifierSum(STAT_FAITH);\n\n        return this.baseFaith + mod;\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { Component } from 'geotic';\nimport { SKILL_SPEED } from '../../data/Skills';\nimport { getRaceData, RACE_HUMAN } from '../../data/Races';\n\nexport class Race extends Component {\n    static properties = {\n        key: RACE_HUMAN,\n    };\n\n    data() {\n        return getRaceData(this.key);\n    }\n\n    get name() {\n        return this.data().name;\n    }\n\n    get speed() {\n        return this.data().speed;\n    }\n\n    getModifier(stat) {\n        return this.data()[stat];\n    }\n\n    onQueryStatMod(evt) {\n        const mod = this.getModifier(evt.data.stat);\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQuerySkillMod(evt) {\n        if (evt.data.skill === SKILL_SPEED) {\n            const mod = this.speed;\n\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n}\n","import RaceData from './RaceData';\n\nexport const RACE_HUMAN = 'RACE_HUMAN';\nexport const RACE_GOBLIN = 'RACE_GOBLIN';\n\nconst lookup = {\n    [RACE_HUMAN]: new RaceData({\n        name: 'Human',\n        key: RACE_HUMAN,\n        speed: 1,\n        STAT_STRENGTH: 1,\n        STAT_FINESSE: 1,\n        STAT_ATHLETICISM: 1,\n        STAT_TRICKERY: 1,\n        STAT_FAITH: 0,\n    }),\n    [RACE_GOBLIN]: new RaceData({\n        name: 'Goblin',\n        key: RACE_GOBLIN,\n        speed: 2,\n        STAT_STRENGTH: -1,\n        STAT_FINESSE: 2,\n        STAT_ATHLETICISM: 1,\n        STAT_TRICKERY: 2,\n        STAT_FAITH: 0,\n    }),\n};\n\nexport const getRaceData = (name) => lookup[name];\n","export default class RaceData {\n    name = '';\n    speed = 1;\n    key = 1;\n    STAT_STRENGTH = 0;\n    STAT_FINESSE = 0;\n    STAT_ATHLETICISM = 0;\n    STAT_TRICKERY = 0;\n    STAT_FAITH = 0;\n\n    constructor(data) {\n        this.name = data.name || '';\n        this.speed = data.speed || 1;\n        this.key = data.key;\n\n        this.STAT_STRENGTH = data.STAT_STRENGTH || 0;\n        this.STAT_FINESSE = data.STAT_FINESSE || 0;\n        this.STAT_ATHLETICISM = data.STAT_ATHLETICISM || 0;\n        this.STAT_TRICKERY = data.STAT_TRICKERY || 0;\n        this.STAT_FAITH = data.STAT_FAITH || 0;\n    }\n}\n","import { Component } from 'geotic';\nimport {\n    getWeaponType,\n    getWeaponTypeDmgType,\n    getWeaponTypeFamily,\n    getWeaponTypeName,\n} from '../../data/WeaponTypes';\nimport { randomInt } from '../../utils/rand';\n\nexport class Weapon extends Component {\n    static properties = {\n        weaponType: 'WPN_TYPE_DAGGER',\n        die: 6,\n        modifier: 0,\n        cost: 600,\n    };\n\n    get name() {\n        return getWeaponTypeName(this.weaponType);\n    }\n\n    get family() {\n        return getWeaponTypeFamily(this.weaponType);\n    }\n\n    get damageType() {\n        return getWeaponTypeDmgType(this.weaponType);\n    }\n\n    getShortDescription(user) {\n        return getWeaponType(this.weaponType).getShortDescription(user, this);\n    }\n\n    roll() {\n        const r = randomInt(1, this.die);\n\n        return r + this.modifier;\n    }\n\n    onTryUseMelee(evt) {\n        const weaponType = getWeaponType(this.weaponType);\n\n        weaponType.attack(evt.data.interactor, evt.data.target, this);\n\n        evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { STATUS_BLEEDING } from '../../data/Statuses';\n\nexport class Status extends Component {\n    static allowMultiple = true;\n    static properties = {\n        key: STATUS_BLEEDING,\n        duration: 4000,\n        lifetime: 0,\n        potency: 0.5,\n    };\n\n    remainingLifetime() {\n        return this.duration - this.lifetime;\n    }\n\n    isCompleted() {\n        return this.lifetime >= this.duration;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Ground extends Component {}\n","import { Component } from 'geotic';\n\nexport class IsIncapacitated extends Component {}\n","import { Component } from 'geotic';\nimport { statCheck, STAT_FINESSE } from '../../data/Stats';\n\nexport class SharpTrap extends Component {\n    static properties = {\n        challenge: 15,\n    };\n\n    test(entity) {\n        return statCheck(STAT_FINESSE, entity, this.challenge);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class EquippedSkillMod extends Component {\n    static allowMultiple = true;\n    static properties = {\n        SKILL_ARMOR: 0,\n        SKILL_SPEED: 0,\n        SKILL_THROWING: 0,\n        SKILL_DODGE: 0,\n    };\n\n    onQuerySkillModEquipped(evt) {\n        const mod = this[evt.data.skill];\n\n        if (mod) {\n            evt.data.modifiers.push({\n                source: this.entity.moniker.name,\n                mod,\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { randomWeightedBool } from '../../utils/rand';\nimport { Fire } from './Fire';\n\nexport class Combustible extends Component {\n    static properties = {\n        fuel: 200,\n        flashPoint: 200,\n        spawnableRemains: null,\n        burnRate: 5,\n    };\n\n    get isOnFire() {\n        return !!this.entity.fire;\n    }\n\n    get isOutOfFuel() {\n        return this.fuel <= 0;\n    }\n\n    getTemperature() {\n        const pos = this.entity.position.getPos();\n\n        return game.temperature.getTemperature(pos.x, pos.y);\n    }\n\n    setTemperature(value) {\n        const pos = this.entity.position.getPos();\n\n        return game.temperature.setTemperature(pos.x, pos.y, value);\n    }\n\n    getDieOutChance() {\n        return 0.01;\n    }\n\n    getSparkChance() {\n        return this.getTemperature() / 1000;\n    }\n\n    getCatchChance(intensity) {\n        if (this.fuel <= 0) {\n            return 0;\n        }\n\n        const temperature = this.getTemperature();\n\n        return (temperature * intensity) / 1000;\n    }\n\n    onSpark(evt) {\n        if (this.isOnFire) {\n            return;\n        }\n\n        const intensity = evt.data.intensity;\n\n        if (randomWeightedBool(this.getCatchChance(intensity))) {\n            this.entity.add(Fire, {\n                intensity,\n            });\n            this.setTemperature(this.flashPoint);\n        }\n    }\n\n    onTryIgnite(evt) {\n        this.entity.add(Fire, {\n            intensity: 3,\n        });\n        this.setTemperature(this.flashPoint);\n    }\n\n    onGetInteractions(evt) {\n        if (!this.isOnFire && !this.entity.isInventoried) {\n            evt.data.interactions.push({\n                name: 'Ignite',\n                evt: 'try-ignite',\n                intensity: 3,\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Fire extends Component {\n    static properties = {\n        intensity: 3,\n    };\n\n    extinguish() {\n        this.destroy();\n    }\n\n    onTryExtinguish(evt) {\n        this.extinguish();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Extinguish',\n            evt: 'try-extinguish',\n        });\n    }\n}\n","import { Component } from 'geotic';\n\nexport class ThermalCapacity extends Component {\n    static properties = {\n        value: 0.5,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class Abilities extends Component {\n    static properties = {\n        known: [],\n        state: {},\n    };\n\n    onQueryAbilities(evt) {\n        evt.data.abilities.push(...this.known);\n    }\n}\n","import { Component } from 'geotic';\nimport { getAbility } from '../../data/Abilities';\n\nexport class AbilityStatus extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        key: 'ABILITY_SPRINT',\n        isCoolingDown: false,\n        isToggledOn: true,\n        cooldownDuration: 50000,\n        currentCooldownDuration: 0,\n        duration: 10000,\n        currentDuration: 0,\n        channelDuration: 0,\n        currentChannelDuration: 0,\n        statMods: {},\n        skillMods: {},\n    };\n\n    get ability() {\n        return getAbility(this.key);\n    }\n\n    get remainingCooldownDuration() {\n        if (!this.isCoolingDown) {\n            return Infinity;\n        }\n\n        return this.cooldownDuration - this.currentCooldownDuration;\n    }\n\n    get remainingDuration() {\n        if (this.isCoolingDown) {\n            return 0;\n        }\n\n        return this.duration - this.currentDuration;\n    }\n\n    get isChanneling() {\n        return this.currentChannelDuration < this.channelDuration;\n    }\n\n    get isComplete() {\n        return this.currentDuration >= this.duration;\n    }\n\n    get isCooldownComplete() {\n        return (\n            this.isCoolingDown &&\n            this.currentCooldownDuration >= this.cooldownDuration\n        );\n    }\n\n    startCooldown() {\n        this.isCoolingDown = true;\n        this.isToggledOn = false;\n    }\n\n    onQuerySkillMod(evt) {\n        if (this.isCoolingDown) {\n            return;\n        }\n\n        const mod = this.skillMods[evt.data.skill];\n\n        if (mod) {\n            evt.data.modifiers.push({\n                source: this.ability.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatMod(evt) {\n        if (this.isCoolingDown) {\n            return;\n        }\n\n        const mod = this.statMods[evt.data.stat];\n\n        if (mod) {\n            evt.data.modifiers.push({\n                source: this.ability.name,\n                mod,\n            });\n        }\n    }\n}\n","import PrayerOfProtectionAbility from './abilities/prayers/PrayerOfProtectionAbility';\nimport BlinkAbility from './abilities/spells/BlinkAbility';\nimport CrimsonWellAbility from './abilities/spells/CrimsonWellAbility';\nimport RageAbility from './abilities/stances/RageAbility';\nimport SprintAbility from './abilities/stances/SprintAbility';\nimport JumpAbility from './abilities/stunts/JumpAbility';\n\nexport const ABILITY_SPRINT = 'ABILITY_SPRINT';\nexport const ABILITY_RAGE = 'ABILITY_RAGE';\nexport const ABILITY_CRIMSON_WELL = 'ABILITY_CRIMSON_WELL';\nexport const ABILITY_BLINK = 'ABILITY_BLINK';\nexport const ABILITY_JUMP = 'ABILITY_JUMP';\nexport const ABILITY_PRAYER_PROTECTION = 'ABILITY_PRAYER_PROTECTION';\n\nconst lookup = {\n    ABILITY_SPRINT: new SprintAbility(),\n    ABILITY_RAGE: new RageAbility(),\n    ABILITY_CRIMSON_WELL: new CrimsonWellAbility(),\n    ABILITY_BLINK: new BlinkAbility(),\n    ABILITY_JUMP: new JumpAbility(),\n    ABILITY_PRAYER_PROTECTION: new PrayerOfProtectionAbility(),\n};\n\nexport const getAbility = (key) => lookup[key];\nexport const getAbilityStatus = (key, entity) => {\n    if (entity.abilityStatus) {\n        return entity.abilityStatus[key];\n    }\n};\nexport const getStance = (entity) => {\n    if (!entity.abilityStatus) {\n        return;\n    }\n\n    return Object.values(entity.abilityStatus).find((status) => {\n        return status.ability.isStance && !status.isCoolingDown && !status.isComplete;\n    });\n};\n","import { ABILITY_TYPE_PRAYER } from '../../../enums/AbilityTypes';\nimport { ABILITY_PRAYER_PROTECTION } from '../../Abilities';\nimport { getStat, STAT_FAITH } from '../../Stats';\nimport SimpleChannelAbility from '../SimpleChannelAbility';\n\nexport default class PrayerOfProtectionAbility extends SimpleChannelAbility {\n    key = ABILITY_PRAYER_PROTECTION;\n    type = ABILITY_TYPE_PRAYER;\n    name = 'Prayer of Protection';\n\n    getCooldownDuration(entity) {\n        return 20000;\n    }\n\n    getChannelDuration(entity) {\n        return 20000;\n    }\n\n    getArmorModifier(entity) {\n        return Math.max(2, getStat(STAT_FAITH, entity));\n    }\n\n    getDescription(entity) {\n        const armor = this.getArmorModifier(entity);\n\n        return `Grant +${armor} bonus armor. [FTH]`;\n    }\n\n    getSkillMods(entity) {\n        return {\n            SKILL_ARMOR: this.getArmorModifier(entity),\n        };\n    }\n}\n","export const ABILITY_TYPE_STANCE = 0;\nexport const ABILITY_TYPE_SHOUT = 1;\nexport const ABILITY_TYPE_STUNT = 2;\nexport const ABILITY_TYPE_SPELL = 3;\nexport const ABILITY_TYPE_PRAYER = 4;\n\nconst lookup = {\n    [ABILITY_TYPE_STANCE]: {\n        name: 'Stance',\n    },\n    [ABILITY_TYPE_SHOUT]: {\n        name: 'Shout',\n    },\n    [ABILITY_TYPE_STUNT]: {\n        name: 'Stunt',\n    },\n    [ABILITY_TYPE_SPELL]: {\n        name: 'Spell',\n    },\n    [ABILITY_TYPE_PRAYER]: {\n        name: 'Prayer',\n    },\n};\n\nexport const getAbilityTypeName = (key) => lookup[key].name;\n","import { AbilityStatus } from '../../ecs/components';\nimport Ability from './Ability';\n\nexport default class SimpleChannelAbility extends Ability {\n    isToggleable = false;\n    isChanneled = true;\n\n    getDuration(entity) {\n        return 10000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    getChannelDuration(entity) {\n        return 10000;\n    }\n\n    execute(entity, data) {\n        entity.add(AbilityStatus, {\n            key: this.key,\n            isCoolingDown: false,\n            channelDuration: this.getChannelDuration(entity),\n            currentChannelDuration: 0,\n            cooldownDuration: this.getCooldownDuration(entity),\n            statMods: this.getStatMods(entity),\n            skillMods: this.getSkillMods(entity),\n        });\n        entity.fireEvent('energy-consumed', 100);\n    }\n}\n","import { AbilityStatus } from '../../ecs/components';\nimport { ABILITY_TYPE_STANCE } from '../../enums/AbilityTypes';\nimport { getAbilityStatus } from '../Abilities';\n\nexport default class Ability {\n    key = '';\n    type = 0;\n    name = '';\n    isToggleable = false;\n    isChanneled = false;\n\n    get isStance() {\n        return this.type === ABILITY_TYPE_STANCE;\n    }\n\n    getDescription(entity) {\n        return '';\n    }\n\n    getCooldownDuration(entity) {\n        return 5000;\n    }\n\n    getChannelDuration(entity) {\n        return 0;\n    }\n\n    constructor(key, type, name) {\n        this.key = key;\n        this.type = type;\n        this.name = name;\n    }\n\n    initiate(entity, options) {\n        options.onConfirm();\n    }\n\n    execute(entity, data) {\n        entity.add(AbilityStatus, {\n            key: this.key,\n            isCoolingDown: true,\n            cooldownDuration: this.getCooldownDuration(entity),\n        });\n    }\n\n    getStatMods(entity) {\n        return {};\n    }\n\n    getSkillMods(entity) {\n        return {};\n    }\n\n    toggleOn(entity) {\n        entity.add(AbilityStatus, {\n            key: this.key,\n            isToggledOn: true,\n            isCoolingDown: false,\n            duration: this.getDuration(entity),\n            cooldownDuration: this.getCooldownDuration(entity),\n            statMods: this.getStatMods(entity),\n            skillMods: this.getSkillMods(entity),\n        });\n\n        return true;\n    }\n\n    toggleOff(entity, status) {\n        status.startCooldown();\n    }\n\n    update(dt, status) {\n        if (status.isCoolingDown) {\n            status.currentCooldownDuration += dt;\n        } else if (status.isComplete) {\n            status.startCooldown();\n        }\n\n        if (status.isChanneling) {\n            status.currentChannelDuration += dt;\n\n            const entity = status.entity;\n\n            entity.fireEvent('energy-consumed', Math.floor(dt));\n\n            return;\n        }\n\n        if (status.isToggledOn) {\n            status.currentDuration += dt;\n        }\n\n        if (status.isCooldownComplete) {\n            status.destroy();\n        }\n    }\n\n    getDisplayText(entity) {\n        const status = getAbilityStatus(this.key, entity);\n\n        if (status && status.isCoolingDown) {\n            const cd = (status.remainingCooldownDuration / 1000).toFixed(1);\n\n            return {\n                text: `${this.name} [${cd}]`,\n                isEnabled: false,\n            };\n        }\n\n        if (this.isToggleable) {\n            if (status && status.isToggledOn) {\n                return {\n                    text: `${this.name} [toggle OFF]`,\n                    isEnabled: true,\n                };\n            } else {\n                return {\n                    text: `${this.name} [toggle ON]`,\n                    isEnabled: true,\n                };\n            }\n        }\n\n        return {\n            text: this.name,\n            isEnabled: true,\n        };\n    }\n}\n","import { game } from '../../../core/Game';\nimport { SCREEN_CURSOR } from '../../../core/screens/ScreenType';\nimport { ABILITY_TYPE_SPELL } from '../../../enums/AbilityTypes';\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\nimport { ABILITY_BLINK } from '../../Abilities';\nimport Ability from '../Ability';\n\nexport default class BlinkAbility extends Ability {\n    key = ABILITY_BLINK;\n    type = ABILITY_TYPE_SPELL;\n    name = 'Blink';\n\n    getCooldownDuration(entity) {\n        return 20000;\n    }\n\n    getDescription(entity) {\n        return `Teleport to a visible location.`;\n    }\n\n    initiate(entity, options) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            renderer: simpleCursorRenderer({\n                isValid: ({ x, y }) => {\n                    // must be visible\n                    const visible = game.map\n                        .getEntitiesAt(x, y, true)\n                        .filter((e) => e.isVisible);\n\n                    // must be at least one entity visible\n                    if (visible.length <= 0) {\n                        return false;\n                    }\n\n                    // must not be any blocker or beings\n                    return !visible.some((e) => e.blocker || e.body);\n                },\n            }),\n            onResult: (result) => {\n                game.screens.popScreen();\n                options.onConfirm(result);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n                options.onCancel();\n            },\n        });\n    }\n\n    execute(entity, data) {\n        super.execute(entity, data);\n\n        const prevPos = entity.position.getPos();\n        const nextPos = data.position;\n\n        game.particles.createEmitter(prevPos.x, prevPos.y, {\n            glyphs: ['O', 'o', '·'],\n            fg1s: ['purple'],\n            speed: 1,\n            lifetime: 300,\n        });\n\n        entity.position.setPos(data.position.x, data.position.y);\n\n        game.particles.createEmitter(nextPos.x, nextPos.y, {\n            glyphs: ['·', 'o', 'O'],\n            fg1s: ['purple'],\n            speed: 1,\n            lifetime: 300,\n        });\n    }\n}\n","import { game } from '../../core/Game';\n\nconst truthy = () => true;\n\nexport const simpleCursorRenderer = (options = {}) => {\n    const isValid = options.isValid || truthy;\n\n    return {\n        isValid,\n        render: (opts) => {\n            const color = isValid(opts) ? 'blue' : 'red';\n            const screen = game.camera.worldToScreen(opts.x, opts.y);\n\n            game.renderer.draw(screen.x, screen.y, 'X', color);\n        },\n    };\n};\n","import { game } from '../../../core/Game';\nimport { ABILITY_TYPE_SPELL } from '../../../enums/AbilityTypes';\nimport { ABILITY_CRIMSON_WELL, getAbilityStatus } from '../../Abilities';\nimport Attack from '../../Attack';\nimport { DMG_TYPE_NECROTIC } from '../../DamageTypes';\nimport { addStatus, STATUS_BLEEDING } from '../../Statuses';\nimport SimpleDurationAbility from '../SimpleDurationAbility';\n\nexport default class CrimsonWellAbility extends SimpleDurationAbility {\n    key = ABILITY_CRIMSON_WELL;\n    type = ABILITY_TYPE_SPELL;\n    name = 'Crimson Well';\n\n    getDuration(entity) {\n        return 8000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    getDescription(entity) {\n        return `Siphon the blood of nearby enemies. Lifesteal +${4} HP from adjacent enemies per turn. You gain bleeding for the duration.`;\n    }\n\n    execute(entity, data) {\n        super.execute(entity, data);\n        addStatus(STATUS_BLEEDING, entity, {\n            duration: this.getDuration(entity),\n            potency: 0.5,\n        });\n\n        const status = getAbilityStatus(this.key, entity);\n\n        this.performLifeteal(status);\n    }\n\n    performLifeteal(status) {\n        const entity = status.entity;\n        const pos = status.entity.position.getPos();\n        game.map\n            .getNeighborEntities(pos.x, pos.y)\n            .flat()\n            .filter((e) => game.factions.areEntitiesHostile(e, entity))\n            .map((hostile) => {\n                const attack = new Attack({\n                    attacker: entity,\n                    ignoreDodge: true,\n                    defender: hostile,\n                    weaponName: this.name,\n                    damage: 3,\n                    damageType: DMG_TYPE_NECROTIC,\n                });\n\n                const evt = hostile.fireEvent('attacked', { attack });\n\n                if (evt.data.damage > 0) {\n                    entity.fireEvent('heal', {\n                        value: evt.data.damage,\n                    });\n\n                    const enemyPos = hostile.position.getPos();\n                    game.particles.createEmitter(enemyPos.x, enemyPos.y, {\n                        glyphs: ['·', 'x'],\n                        fg1s: ['red'],\n                        speed: 0.01,\n                        lifetime: 120,\n                    });\n                }\n            });\n\n        game.particles.createEmitter(pos.x, pos.y, {\n            glyphs: ['x', '·'],\n            fg1s: ['red'],\n            speed: 0.01,\n            lifetime: 120,\n        });\n    }\n\n    update(dt, status) {\n        super.update(dt, status);\n\n        if (game.clock.turnDelta <= 0 || status.isComplete) {\n            return;\n        }\n\n        this.performLifeteal(status);\n    }\n}\n","import { AbilityStatus } from '../../ecs/components/AbilityStatus';\nimport { getAbilityStatus } from '../Abilities';\nimport Ability from './Ability';\n\nexport default class SimpleDurationAbility extends Ability {\n    getDuration(entity) {\n        return 20000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    execute(entity, data) {\n        const status = getAbilityStatus(this.key, entity);\n\n        if (status) {\n            return false;\n        }\n\n        entity.add(AbilityStatus, {\n            key: this.key,\n            isToggledOn: true,\n            isCoolingDown: true,\n            duration: this.getDuration(entity),\n            cooldownDuration: this.getCooldownDuration(entity),\n            statMods: this.getStatMods(entity),\n            skillMods: this.getSkillMods(entity),\n        });\n\n        return true;\n    }\n}\n","import { ABILITY_TYPE_STANCE } from '../../../enums/AbilityTypes';\nimport { ABILITY_RAGE } from '../../Abilities';\nimport { getStat, STAT_STRENGTH } from '../../Stats';\nimport SimpleToggledAbility from '../SimpleToggledAbility';\n\nexport default class RageAbility extends SimpleToggledAbility {\n    key = ABILITY_RAGE;\n    type = ABILITY_TYPE_STANCE;\n    name = 'Rage';\n\n    computeStrengthMod(entity) {\n        return getStat(STAT_STRENGTH, entity) * 3;\n    }\n\n    getDuration(entity) {\n        return 20000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    getDescription(entity) {\n        const str = this.computeStrengthMod(entity);\n\n        return `Enter a fit of rage. Gain +${str} STR and ${-2} dodge. [STR]`;\n    }\n\n    getSkillMods(entity) {\n        return {\n            SKILL_DODGE: -2,\n        };\n    }\n\n    getStatMods(entity) {\n        return {\n            STAT_STRENGTH: this.computeStrengthMod(entity),\n        };\n    }\n}\n","import { getAbilityStatus } from '../Abilities';\nimport Ability from './Ability';\n\nexport default class SimpleToggledAbility extends Ability {\n    isToggleable = true;\n\n    getDuration(entity) {\n        return 10000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    execute(entity, data) {\n        // const status = getAbilityStatus(this.key, entity);\n\n        // if (status) {\n        //     this.toggleOff(entity, status);\n        // } else {\n        //     this.toggleOn(entity);\n        // }\n    }\n}\n","import { ABILITY_TYPE_STANCE } from '../../../enums/AbilityTypes';\nimport { ABILITY_SPRINT } from '../../Abilities';\nimport { getStat, STAT_ATHLETICISM } from '../../Stats';\nimport SimpleToggledAbility from '../SimpleToggledAbility';\n\nexport default class SprintAbility extends SimpleToggledAbility {\n    key = ABILITY_SPRINT;\n    type = ABILITY_TYPE_STANCE;\n    name = 'Sprint';\n\n    computeSpeedMod(entity) {\n        return 5 + 2 * getStat(STAT_ATHLETICISM, entity);\n    }\n\n    getDuration(entity) {\n        return 20000;\n    }\n\n    getCooldownDuration(entity) {\n        return 50000;\n    }\n\n    getDescription(entity) {\n        const speed = this.computeSpeedMod(entity);\n\n        return `Gain +${speed} move speed. [ATH]`;\n    }\n\n    getSkillMods(entity) {\n        return {\n            SKILL_SPEED: this.computeSpeedMod(entity),\n        };\n    }\n}\n","import { game } from '../../../core/Game';\nimport { SCREEN_CURSOR } from '../../../core/screens/ScreenType';\nimport { ABILITY_TYPE_STUNT } from '../../../enums/AbilityTypes';\nimport { simpleLineRenderer } from '../../../utils/cursor/SimpleLineRenderer';\nimport { ABILITY_JUMP } from '../../Abilities';\nimport { getStat, STAT_ATHLETICISM } from '../../Stats';\nimport Ability from '../Ability';\n\nexport default class JumpAbility extends Ability {\n    key = ABILITY_JUMP;\n    type = ABILITY_TYPE_STUNT;\n    name = 'Jump';\n\n    getCooldownDuration(entity) {\n        return 20000;\n    }\n\n    getJumpDistance(entity) {\n        return Math.floor(Math.max(3, getStat(STAT_ATHLETICISM, entity)) / 3);\n    }\n\n    getDescription(entity) {\n        const distance = this.getJumpDistance(entity);\n        const word = distance > 1 ? 'tiles' : 'tile';\n\n        return `Jump up to ${distance} ${word} away. You cannot jump over other creatures. [ATH]`;\n    }\n\n    initiate(entity, options) {\n        const distance = this.getJumpDistance(entity);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            maxDistance: distance + 1,\n            renderer: simpleLineRenderer({\n                isValid: ({ x, y }, idx) => {\n                    // must be within range\n                    if (idx - 1 > distance) {\n                        return false;\n                    }\n\n                    // must be visible\n                    const visible = game.map\n                        .getEntitiesAt(x, y, true)\n                        .filter((e) => e.isVisible);\n\n                    // must be at least one entity visible\n                    if (visible.length <= 0) {\n                        return false;\n                    }\n\n                    // must not be any blocker or beings\n                    return !visible.some((e) => e.blocker || e.body);\n                },\n            }),\n            onResult: (result) => {\n                game.screens.popScreen();\n                options.onConfirm(result);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n                options.onCancel();\n            },\n        });\n    }\n\n    execute(entity, data) {\n        super.execute(entity, data);\n\n        entity.position.setPos(data.position.x, data.position.y);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { game } from '../core/Game';\nimport { lerpHSL } from '../utils/ColorUtil';\nimport System from './System';\n\nconst RENDER_MODE_DEFAULT = 0;\nconst RENDER_MODE_TEMPERATURE = 1;\n\nconst temperatureGradient = (v) => {\n    const blue = [216, 40, 50];\n    const red = [0, 80, 50];\n    const rgb = lerpHSL(blue, red, Math.sqrt(v));\n\n    return `rgb(${rgb[0]},${rgb[1]},${rgb[2]})`;\n};\n\nconst modeLookup = {\n    [RENDER_MODE_DEFAULT]: (x, y, e) => {\n        if (e.isVisible) {\n            game.renderer.draw(\n                x,\n                y,\n                e.glyph.char,\n                e.glyph.primary,\n                e.glyph.secondary,\n                e.glyph.background\n            );\n        } else if (e.explored) {\n            game.renderer.draw(x, y, e.glyph.char, '#2c3538', '#2c3538');\n        }\n    },\n    [RENDER_MODE_TEMPERATURE]: (x, y, e, worldX, worldY) => {\n        const temp = game.temperature.getTemperature(worldX, worldY) / 200;\n        const bg = temperatureGradient(Math.min(1, temp));\n\n        if (e.isVisible) {\n            game.renderer.draw(\n                x,\n                y,\n                e.glyph.char,\n                e.glyph.primary,\n                e.glyph.secondary,\n                bg\n            );\n        } else {\n            game.renderer.draw(x, y, e.glyph.char, '#2c3538', '#2c3538', bg);\n        }\n    },\n};\n\nexport default class RenderSystem extends System {\n    mode = RENDER_MODE_DEFAULT;\n\n    renderTile(x, y) {\n        const world = this.game.camera.screenToWorld(x, y);\n\n        if (!this.game.camera.isInView(world.x, world.y)) {\n            return;\n        }\n\n        const entities = this.game.map\n            .getEntitiesAt(world.x, world.y, true)\n            .filter((e) => e.glyph && !e.isInventoried && !e.isDestroying);\n\n        if (entities.length <= 0) {\n            return;\n        }\n\n        let renderableZ = -1;\n        let renderable = null;\n\n        entities.forEach((e) => {\n            if (e.glyph.z >= renderableZ) {\n                renderable = e;\n                renderableZ = e.glyph.z;\n            }\n        });\n\n        modeLookup[this.mode](x, y, renderable, world.x, world.y);\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        for (let x = 0; x < this.game.camera.width; x++) {\n            for (let y = 0; y < this.game.camera.height; y++) {\n                this.renderTile(x, y);\n            }\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { getStatus } from '../data/Statuses';\nimport { Moniker, Actor, IsInventoried, IsVisible } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    showTicks = false;\n    beingsQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.beingsQuery = this.game.ecs.createQuery({\n            all: [Moniker, Actor, IsVisible],\n            none: [IsInventoried],\n        });\n    }\n\n    renderNearbyCreatures() {\n        const beings = this.beingsQuery.get();\n\n        const offsetX = 1;\n        let offsetY = 1;\n\n        beings.forEach((entity) => {\n            let moniker = entity.moniker.display;\n            let glyphOffset = offsetX;\n\n            if (entity.factionMember) {\n                const relation = this.game.factions.getEntityRelation(\n                    game.player.entity,\n                    entity\n                );\n                const glyph = this.game.factions.getAttitudeGlyph(relation);\n\n                this.game.renderer.drawUI(\n                    offsetX,\n                    offsetY,\n                    glyph.char,\n                    glyph.fg1,\n                    glyph.fg2\n                );\n\n                glyphOffset += 1.5;\n            }\n\n            this.game.renderer.drawText(glyphOffset, offsetY, moniker);\n\n            let statusOffset =\n                this.game.renderer.computeTextWidth(moniker) +\n                glyphOffset +\n                0.5;\n\n            let dotLevel = 0;\n\n            if (entity.status) {\n                entity.status.forEach((status) => {\n                    const statusType = getStatus(status.key);\n\n                    dotLevel += statusType.getPipCount(status.potency);\n\n                    this.game.renderer.drawUI(\n                        statusOffset,\n                        offsetY,\n                        statusType.glyph.ch,\n                        statusType.glyph.fg1,\n                        statusType.glyph.fg2\n                    );\n                    statusOffset++;\n                });\n            }\n\n            dotLevel = Math.min(3, dotLevel);\n\n            if (entity.health) {\n                offsetY++;\n\n                const health = entity.health;\n                const barWidth = 8;\n\n                const prcnt = health.value / health.max;\n                const healthWidth = Math.ceil(prcnt * barWidth * 2) / 2;\n                const middle = Math.floor(barWidth / 2) - 1;\n\n                const primaryHP = '#803636';\n                const secondaryHp = '#352323';\n\n                for (let i = 0; i < barWidth; i++) {\n                    const diff = healthWidth - i;\n                    if (dotLevel && i === middle) {\n                        if (diff === 0.5) {\n                            if (dotLevel === 1) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '#',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            } else if (dotLevel === 2) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '\"',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            } else if (dotLevel === 3) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '!',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            }\n                        } else if (diff > 0) {\n                            if (dotLevel === 1) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '‼',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            } else if (dotLevel === 2) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '↕',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            } else if (dotLevel === 3) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '◄',\n                                    primaryHP,\n                                    secondaryHp\n                                );\n                            }\n                        } else {\n                            if (dotLevel === 1) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '‼',\n                                    secondaryHp,\n                                    primaryHP\n                                );\n                            } else if (dotLevel === 2) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '↕',\n                                    secondaryHp,\n                                    primaryHP\n                                );\n                            } else if (dotLevel === 3) {\n                                this.game.renderer.drawUI(\n                                    i + offsetX,\n                                    offsetY,\n                                    '◄',\n                                    secondaryHp,\n                                    primaryHP\n                                );\n                            }\n                        }\n                    } else if (diff === 0.5) {\n                        this.game.renderer.drawUI(\n                            i + offsetX,\n                            offsetY,\n                            ' ',\n                            primaryHP,\n                            secondaryHp\n                        );\n                    } else if (diff > 0) {\n                        this.game.renderer.drawUI(\n                            i + offsetX,\n                            offsetY,\n                            '►',\n                            primaryHP,\n                            secondaryHp\n                        );\n                    } else {\n                        this.game.renderer.drawUI(\n                            i + offsetX,\n                            offsetY,\n                            '►',\n                            secondaryHp\n                        );\n                    }\n                }\n            }\n\n            offsetY++;\n        });\n    }\n\n    update(dt) {\n        if (this.showTicks) {\n            const turn = this.game.clock.turn;\n            const subTurn = `${this.game.clock.subTurn.toFixed(0)}`.padEnd(\n                3,\n                '0'\n            );\n\n            const str = `${turn}.${subTurn}`;\n            const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n            this.game.renderer.drawText(\n                this.game.camera.width - 1 - len,\n                1,\n                str\n            );\n        }\n\n        this.renderNearbyCreatures();\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    _commands = {};\n    _domainStack = [INPUT_DOMAIN_DEFAULT];\n    _inputStack = [];\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    onInputEvent(evt) {\n        this._inputStack.push(evt);\n    }\n\n    getNextCommand() {\n        const evt = this._inputStack.shift();\n\n        if (evt) {\n            return this.getCommandForInputEvent(evt);\n        }\n    }\n\n    pushDomain(domain) {\n        this._domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this._domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this._domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this._commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this._domainStack.length - 1; i >= 0; i--) {\n            const domain = this._domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this._commands[command.domain]) {\n            this._commands[command.domain] = [];\n        }\n\n        this._commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n    INPUT_CMD_ABILITIES,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n    KEY_Y,\n    KEY_T,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_CHARACTER,            'character',              true, KEY_Y,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_ABILITIES,            'abilities',              true, KEY_T,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\nexport const INPUT_CMD_CHARACTER = 30;\nexport const INPUT_CMD_ABILITIES = 31;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_LIST_SELECT,\n    SCREEN_CHARACTER,\n    SCREEN_ABILITIES,\n    SCREEN_CONFIRM,\n    SCREEN_WAIT,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport ListSelectionScreen from './screens/ListSelectionScreen';\nimport CharacterScreen from './screens/CharacterScreen';\nimport AbilityScreen from './screens/AbilityScreen';\nimport ConfirmationScreen from './screens/ConfirmationScreen';\nimport WaitScreen from './screens/WaitScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\n            [SCREEN_CHARACTER]: new CharacterScreen(game),\n            [SCREEN_ABILITIES]: new AbilityScreen(game),\n            [SCREEN_CONFIRM]: new ConfirmationScreen(game),\n            [SCREEN_WAIT]: new WaitScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    replaceScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_ABILITIES,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_CHARACTER,\n    SCREEN_LIST_SELECT,\n    SCREEN_MAIN_MENU,\n    SCREEN_ABILITIES,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const items = entities.filter((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n\n            return evt.data.interactions.length > 0;\n        });\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        if (items.length == 1) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: items[0],\n            });\n            return;\n        }\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Ground`,\n            leadText: 'Select an item to interact',\n            list: items,\n            onRenderRow: (item, x, y, isSelected) => {\n                const text = ` ${item.moniker.display}`;\n\n                this.game.renderer.draw(\n                    x + 1,\n                    y,\n                    item.glyph.char,\n                    item.glyph.primary,\n                    item.glyph.secondary,\n                    item.glyph.background\n                );\n\n                if (isSelected) {\n                    this.game.renderer.drawText(x, y, '→', 'yellow');\n                    this.game.renderer.drawText(x + 2, y, text, 'yellow');\n                } else {\n                    this.game.renderer.drawText(x, y, '-');\n                    this.game.renderer.drawText(x + 2, y, text);\n                }\n            },\n            onSelect: (item) => {\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\n                    interactor: this.game.player.entity,\n                    interactable: item,\n                });\n            },\n        });\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                drawFaction: true,\n                drawTemperature: true,\n                renderer: simpleCursorRenderer(),\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_ABILITIES) {\n            this.game.screens.pushScreen(SCREEN_ABILITIES, {\n                character: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CHARACTER) {\n            this.game.screens.pushScreen(SCREEN_CHARACTER, {\n                character: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\nimport {\n    UI_GLYPH_BORDER_T,\n    UI_GLYPH_BORDER_TERM_L,\n    UI_GLYPH_BORDER_TERM_R,\n} from '../../../enums/UIGlyphs';\nimport { UI_BORDER_FG1, UI_BORDER_FG2 } from '../../../utils/UIWindowUtil';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n\n        if (!this.game.state.isStarted) {\n            this.game.music.play('BARDS_TALE');\n        }\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    inputCommand() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.inputCommand();\n        this.game.renderer.clear();\n        this.game.renderer.draw(2, 1, '@', '#adb8bc', '#66a3dc');\n        this.game.renderer.drawText(3, 1, ` Sleepy Crawler`, '#66a3dc');\n\n        for (let i = 1; i < this.game.camera.width - 1; i++) {\n            if (i === 1) {\n                this.game.renderer.drawUI(\n                    i,\n                    2,\n                    UI_GLYPH_BORDER_TERM_L,\n                    UI_BORDER_FG1,\n                    UI_BORDER_FG2\n                );\n            } else if (i === this.game.camera.width - 2) {\n                this.game.renderer.drawUI(\n                    i,\n                    2,\n                    UI_GLYPH_BORDER_TERM_R,\n                    UI_BORDER_FG1,\n                    UI_BORDER_FG2\n                );\n            } else {\n                this.game.renderer.drawUI(\n                    i,\n                    2,\n                    UI_GLYPH_BORDER_T,\n                    UI_BORDER_FG1,\n                    UI_BORDER_FG2\n                );\n            }\n        }\n\n        this.game.renderer.drawText(2, 4, `∙ Movement`);\n        this.game.renderer.drawText(3, 6, `▬Q  ↑W  ↨E`);\n        this.game.renderer.drawText(3, 7, `←A      →D`);\n        this.game.renderer.drawText(3, 8, `∟Z  ↓X  ↔C`);\n        this.game.renderer.drawText(\n            3,\n            10,\n            `hold [SHIFT] and a direction to interact`\n        );\n\n        this.game.renderer.drawText(2, 12, `∙ Look [L]`);\n        this.game.renderer.drawText(2, 13, `∙ Inventory [I]`);\n        this.game.renderer.drawText(2, 14, `∙ Player Character [P]`);\n        this.game.renderer.drawText(2, 15, `∙ Equipment [Y]`);\n        this.game.renderer.drawText(2, 16, `∙ Abilities [T]`);\n        this.game.renderer.drawText(2, 17, `∙ Confirm [ENTER]`);\n        this.game.renderer.drawText(2, 18, `∙ Cancel [ESC]`);\n\n        this.game.renderer.drawTextCenter(20, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(22, `press [ENTER]`, '#213942');\n    }\n}\n","export const UI_GLYPH_BORDER_TL = '╨';\nexport const UI_GLYPH_BORDER_T = '╤';\nexport const UI_GLYPH_BORDER_TR = '╥';\nexport const UI_GLYPH_BORDER_L = 'α';\nexport const UI_GLYPH_BORDER_R = 'Γ';\nexport const UI_GLYPH_BORDER_BL = '≡';\nexport const UI_GLYPH_BORDER_B = '±';\nexport const UI_GLYPH_BORDER_BR = '≥';\nexport const UI_GLYPH_BORDER_TERM_R = '╙';\nexport const UI_GLYPH_BORDER_TERM_L = 'π';\n","import { game } from '../core/Game';\nimport {\n    UI_GLYPH_BORDER_T,\n    UI_GLYPH_BORDER_B,\n    UI_GLYPH_BORDER_L,\n    UI_GLYPH_BORDER_R,\n    UI_GLYPH_BORDER_TL,\n    UI_GLYPH_BORDER_TR,\n    UI_GLYPH_BORDER_BL,\n    UI_GLYPH_BORDER_BR,\n    UI_GLYPH_BORDER_TERM_R,\n    UI_GLYPH_BORDER_TERM_L,\n} from '../enums/UIGlyphs';\n\nexport const UI_BORDER_FG1 = '#405362';\nexport const UI_BORDER_FG2 = '#979545';\n\nexport const drawUIBox = (x, y, width, height) => {\n    game.renderer.clearArea(x, y, width + 1, height + 1);\n\n    for (let i = x; i < x + width; i++) {\n        game.renderer.drawUI(\n            i,\n            y,\n            UI_GLYPH_BORDER_T,\n            UI_BORDER_FG1,\n            UI_BORDER_FG2\n        );\n        game.renderer.drawUI(\n            i,\n            y + height,\n            UI_GLYPH_BORDER_B,\n            UI_BORDER_FG1,\n            UI_BORDER_FG2\n        );\n    }\n\n    for (let i = y; i < y + height; i++) {\n        game.renderer.drawUI(\n            x,\n            i,\n            UI_GLYPH_BORDER_L,\n            UI_BORDER_FG1,\n            UI_BORDER_FG2\n        );\n        game.renderer.drawUI(\n            x + width,\n            i,\n            UI_GLYPH_BORDER_R,\n            UI_BORDER_FG1,\n            UI_BORDER_FG2\n        );\n    }\n\n    game.renderer.drawUI(\n        x,\n        y,\n        UI_GLYPH_BORDER_TL,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n    game.renderer.drawUI(\n        x + width,\n        y,\n        UI_GLYPH_BORDER_TR,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n    game.renderer.drawUI(\n        x,\n        y + height,\n        UI_GLYPH_BORDER_BL,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n    game.renderer.drawUI(\n        x + width,\n        y + height,\n        UI_GLYPH_BORDER_BR,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n};\n\nexport const drawUIWindow = (x, y, width, height, title, icon) => {\n    drawUIBox(x, y, width, height);\n\n    const titleText = icon ? ` ${title}` : title;\n    const titleWidth = Math.ceil(game.renderer.computeTextWidth(titleText));\n\n    const titleOffset = x + 2;\n    const iconWidth = icon ? 1 : 0;\n\n    game.renderer.drawUI(\n        titleOffset - 1,\n        y,\n        UI_GLYPH_BORDER_TERM_R,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n    game.renderer.drawUI(\n        titleOffset + iconWidth + titleWidth,\n        y,\n        UI_GLYPH_BORDER_TERM_L,\n        UI_BORDER_FG1,\n        UI_BORDER_FG2\n    );\n\n    if (icon) {\n        game.renderer.draw(\n            titleOffset,\n            y,\n            icon.char,\n            icon.primary,\n            icon.secondary,\n            icon.background\n        );\n    }\n\n    game.renderer.drawText(titleOffset + iconWidth, y, titleText);\n};\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderSystem.update(dt);\n\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454', '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InventoryScreen extends Screen {\n    #accessible;\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n        this.list.setItems(this.#accessible.inventory.content);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interactable = this.list.selected;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        if (this.list.items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            const textLen = this.game.renderer.computeTextWidth(\n                item.moniker.display\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n\n            if (item.isEquipped) {\n                const slot = item.isEquipped.slot.name;\n\n                this.game.renderer.drawText(\n                    4 + textLen + 0.5,\n                    ypos,\n                    `[${slot}]`,\n                    '#2c3538'\n                );\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","export default class SelectableList {\n    _items = [];\n    _idx = 0;\n\n    get selected() {\n        return this._items[this._idx];\n    }\n\n    get items() {\n        return this._items;\n    }\n\n    get data() {\n        return this._items.map((item, idx) => ({\n            item,\n            idx,\n            isSelected: idx === this._idx,\n        }));\n    }\n\n    get isEmpty() {\n        return this._items.length <= 0;\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    constructor(items = [], idx = 0) {\n        this._idx = idx;\n        this.setItems(items);\n    }\n\n    setItems(items = []) {\n        this._items = items;\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\n    }\n\n    up() {\n        this._idx--;\n\n        if (this._idx < 0) {\n            this._idx = this._items.length - 1;\n        }\n    }\n\n    down() {\n        this._idx++;\n\n        if (this._idx >= this._items.length) {\n            this._idx = 0;\n        }\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport { getSkillName, getAllSkillEquippedModSums } from '../../../data/Skills';\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 18;\n    #height = 10;\n    #interactable;\n    #interactor;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.#width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.#height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.list.setItems([\n            ...evt.data.interactions,\n            {\n                name: 'Back',\n                isBack: true,\n            },\n        ]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interaction = this.list.selected;\n\n        if (interaction.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.#interactable.fireEvent(interaction.evt, {\n            interactor: this.#interactor,\n        });\n\n        if (this.#interactable.isDestroyed) {\n            this.game.screens.popScreen();\n\n            return;\n        }\n\n        this.refreshList();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        drawUIWindow(\n            this.left,\n            this.top,\n            this.#width,\n            this.#height,\n            this.#interactable.moniker.display,\n            this.#interactable.glyph\n        );\n\n        let listPadding = 2;\n        const xpos = this.left + 2;\n\n        if (this.#interactable.weapon) {\n            const weaponDmg = this.#interactable.weapon.getShortDescription(\n                this.#interactor\n            );\n\n            this.game.renderer.drawText(\n                xpos,\n                this.top + listPadding,\n                weaponDmg\n            );\n\n            listPadding += 2;\n        }\n\n        const modifiers = getAllSkillEquippedModSums(this.#interactable);\n        let hasMod = false;\n\n        Object.keys(modifiers).forEach((skill) => {\n            const modifier = modifiers[skill];\n\n            if (modifier === 0) {\n                return;\n            }\n\n            hasMod = true;\n\n            const name = getSkillName(skill);\n            const ypos = this.top + listPadding;\n\n            this.game.renderer.drawText(xpos, ypos, name);\n            const len = this.game.renderer.computeTextWidth(name);\n\n            if (modifier > 0) {\n                this.game.renderer.drawText(\n                    xpos + len,\n                    ypos,\n                    ` +${modifier}`,\n                    'green'\n                );\n            } else {\n                this.game.renderer.drawText(\n                    xpos + len,\n                    ypos,\n                    ` -${modifier}`,\n                    'red'\n                );\n            }\n\n            listPadding++;\n        });\n\n        if (hasMod) {\n            listPadding++;\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + this.top + listPadding;\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    xpos,\n                    ypos,\n                    `→ ${item.name}`,\n                    'yellow'\n                );\n            } else {\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\n            }\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    directionDelta,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport { FactionMember } from '../../../ecs/components';\nimport { drawTags } from '../../../utils/UITags';\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    x = 0;\n    y = 0;\n    maxDistance = Infinity;\n    start = {};\n    drawTags = false;\n    drawFaction = false;\n    drawTemperature = false;\n    onResult = NOOP;\n    onCancel = NOOP;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n\n        this.start = ctx.start || this.game.player.position;\n        this.drawTags = ctx.drawTags || false;\n        this.drawFaction = ctx.drawFaction || false;\n        this.drawTemperature = ctx.drawTemperature || false;\n        this.onResult = ctx.onResult || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.renderer = ctx.renderer || simpleCursorRenderer();\n        this.maxDistance = ctx.maxDistance || Infinity;\n\n        this.x = this.start.x;\n        this.y = this.start.y;\n    }\n\n    onDirectionInput(direction) {\n        const delta = directionDelta(direction);\n\n        if (Math.abs(this.start.x - (this.x + delta.x)) <= this.maxDistance) {\n            this.x += delta.x;\n        }\n        if (Math.abs(this.start.y - (this.y + delta.y)) <= this.maxDistance) {\n            this.y += delta.y;\n        }\n    }\n\n    onConfirm() {\n        const opts = this.getOpts();\n\n        if (this.renderer.isValid(opts)) {\n            this.onResult(opts);\n        }\n    }\n\n    onCancel() {\n        this.onCancel();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    getOpts() {\n        return {\n            start: {\n                x: this.start.x,\n                y: this.start.y,\n            },\n            position: {\n                x: this.x,\n                y: this.y,\n            },\n            x: this.x,\n            y: this.y,\n            screen: this.game.camera.worldToScreen(this.x, this.y),\n            line: bresenhamLine(this.start.x, this.start.y, this.x, this.y),\n        };\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.updateAdventureSystems(dt);\n\n        this.renderer.render(this.getOpts());\n\n        if (this.drawTags) {\n            drawTags(this.x, this.y);\n        }\n\n        if (this.drawFaction) {\n            const target = this.game.map\n                .getEntitiesAt(this.x, this.y)\n                .filter((e) => e.isVisible && e.factionMember)\n                .pop();\n\n            const player = this.game.player.entity;\n\n            if (target) {\n                const faction = target.factionMember.faction;\n                const relation = this.game.factions.getEntityRelation(\n                    player,\n                    target\n                );\n\n                let disp = this.game.factions.getDisplay(relation);\n\n                this.game.renderer.drawTextCenter(\n                    1,\n                    `${faction.display} Faction [${disp}]`\n                );\n            }\n        }\n\n        if (this.drawTemperature) {\n            const tmpC = this.game.temperature.getTemperature(this.x, this.y);\n            const tmpF = (tmpC * 9) / 5 + 32;\n\n            this.game.renderer.drawText(\n                this.game.camera.width - 12,\n                this.game.camera.height - 1,\n                `${Math.round(tmpF)}°F (${Math.round(tmpC)}°C)`\n            );\n        }\n    }\n}\n","import { game } from '../core/Game';\n\nexport const drawTags = (x, y) => {\n    const entities = game.map\n        .getEntitiesAt(x, y)\n        .filter((e) => e.moniker && e.isVisible);\n    const screen = game.camera.worldToScreen(x, y);\n\n    if (screen.x < game.camera.width / 2) {\n        entities.forEach((entity, i) => {\n            const c = i === 0 ? '◄' : ' ';\n            game.renderer.drawText(screen.x + 1, screen.y + i, `${c}█`, '#ddd');\n            game.renderer.drawText(\n                screen.x + 2,\n                screen.y + i,\n                entity.moniker.display + ' ',\n                '#111133',\n                'white',\n                '#ddd'\n            );\n        });\n    } else {\n        entities.forEach((entity, i) => {\n            const c = i === 0 ? '►' : ' ';\n            game.renderer.drawText(screen.x - 1, screen.y + i, `█${c}`, '#ddd');\n            const len = game.renderer.computeTextWidth(entity.moniker.display);\n            game.renderer.drawText(\n                screen.x - len - 1.5,\n                screen.y + i,\n                ' ' + entity.moniker.display,\n                '#111133',\n                'white',\n                '#ddd'\n            );\n        });\n    }\n};\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.music.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.temperature.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class EquipmentScreen extends Screen {\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessor = ctx.accessor;\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectSlot() {\n        const interactable = this.list.selected.content;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectSlot();\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\n            'purple'\n        );\n\n        if (this.list.isEmpty) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const slot = item;\n            const ypos = idx + 5;\n            const selectedColor = 'yellow';\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    1,\n                    ypos,\n                    `→ ${slot.name}`,\n                    selectedColor\n                );\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\n            }\n\n            if (slot.isEmpty) {\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\n            } else {\n                const content = slot.content;\n                this.game.renderer.draw(\n                    15,\n                    ypos,\n                    content.glyph.char,\n                    content.glyph.primary,\n                    content.glyph.secondary,\n                    content.glyph.background\n                );\n                this.game.renderer.drawText(\n                    16,\n                    ypos,\n                    ` ${content.moniker.display}`\n                );\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\n\nconst NOOP = () => {};\n\nexport default class ListSelectionScreen extends Screen {\n    width = 18;\n    height = 10;\n    list = new SelectableList();\n    header = '';\n    icon = null;\n    leadText = null;\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.list.setItems(ctx.list || []);\n        this.header = ctx.header || 'Select';\n        this.icon = ctx.icon || null;\n        this.leadText = ctx.leadText || null;\n        this.onSelect = ctx.onSelect || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onGetRowName = ctx.onGetRowName || NOOP;\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        this.onSelect(this.list.selected);\n    }\n\n    cancel() {\n        this.onCancel();\n        this.game.screens.popScreen();\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.cancel();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    defaultRowRender(row, x, y, isSelected) {\n        const text = this.onGetRowName(row, x, y, isSelected);\n\n        if (isSelected) {\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n        } else {\n            this.game.renderer.drawText(x, y, `- ${text}`);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        drawUIWindow(\n            this.left,\n            this.top,\n            this.width,\n            this.height,\n            this.header,\n            this.icon\n        );\n\n        let yOffset = this.top + 2;\n\n        const xpos = this.left + 2;\n\n        if (this.leadText) {\n            this.game.renderer.drawText(xpos, yOffset, this.leadText);\n\n            yOffset += 2;\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = yOffset + idx;\n\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport {\n    SKILL_ARMOR,\n    SKILL_DODGE,\n    SKILL_SPEED,\n    getSkillValue,\n} from '../../../data/Skills';\nimport { getSpeedPercentDisplay } from '../../../data/skills/SpeedSkill';\nimport { getArmorBlockPercentDisplay } from '../../../data/skills/ArmorSkill';\nimport { getDodgePercent } from '../../../data/skills/DodgeSkill';\n\nexport default class CharacterScreen extends Screen {\n    character;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.character = ctx.character;\n\n        const stats = this.character.stats.all();\n\n        this.list = new SelectableList(Object.values(stats));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        // if (cmd.type === INPUT_CMD_CONFIRM) {\n        //     this.selectItem();\n        // }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.character.moniker.display} Character ~`,\n            'orange'\n        );\n\n        const health = this.character.health.value;\n        const healthMax = this.character.health.max;\n\n        this.game.renderer.drawText(2, 5, 'health');\n        this.game.renderer.drawText(10, 5, `${health}/${healthMax}`);\n\n        const speed = getSkillValue(SKILL_SPEED, this.character);\n        const speedPrcnt = getSpeedPercentDisplay(speed);\n\n        this.game.renderer.drawText(2, 6, 'speed');\n        this.game.renderer.drawText(\n            10,\n            6,\n            `+${speed} (${100 - speedPrcnt}% less movement cost)`\n        );\n\n        const armor = getSkillValue(SKILL_ARMOR, this.character);\n        const armorPrcnt = getArmorBlockPercentDisplay(armor);\n\n        this.game.renderer.drawText(2, 7, 'armor');\n        this.game.renderer.drawText(\n            10,\n            7,\n            `+${armor} (${armorPrcnt}% less melee damage taken)`\n        );\n\n        const dodge = getSkillValue(SKILL_DODGE, this.character);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        this.game.renderer.drawText(2, 8, 'dodge');\n        this.game.renderer.drawText(\n            10,\n            8,\n            `+${dodge} (${dodgePrcnt}% chance to avoid a melee attack)`\n        );\n\n        let pad = 0;\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const stat = item;\n            const ypos = idx + 13 + pad;\n            const modDir = stat.modSum >= 0 ? '+' : '-';\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    1,\n                    ypos,\n                    `→ ${stat.name}`,\n                    'yellow'\n                );\n                this.game.renderer.drawText(\n                    10,\n                    ypos,\n                    `${modDir}${stat.sum}`,\n                    'yellow'\n                );\n\n                stat.modifiers.forEach((mod, i) => {\n                    if (mod.mod > 0) {\n                        this.game.renderer.drawText(\n                            3,\n                            ypos + i + 1,\n                            `+${mod.mod} (${mod.source})`,\n                            'green'\n                        );\n                    } else {\n                        this.game.renderer.drawText(\n                            3,\n                            ypos + i + 1,\n                            `-${Math.abs(mod.mod)} (${mod.source})`,\n                            'red'\n                        );\n                    }\n                });\n\n                pad += stat.modifiers.length;\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${stat.name}`);\n                this.game.renderer.drawText(10, ypos, `${modDir}${stat.sum}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\nimport { getAbility, getAbilityStatus, getStance } from '../../../data/Abilities';\nimport { getAbilityTypeName } from '../../../enums/AbilityTypes';\nimport { SCREEN_CONFIRM } from '../ScreenType';\n\nexport default class AbilityScreen extends Screen {\n    width = 18;\n    PADDING_RIGHT = 1;\n    PADDING_HEIGHT = 4;\n    character;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor(\n            this.game.camera.width - this.width - this.PADDING_RIGHT\n        );\n    }\n\n    get top() {\n        return this.PADDING_HEIGHT;\n    }\n\n    get height() {\n        return Math.floor(this.game.camera.height - this.PADDING_HEIGHT * 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.character = ctx.character;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.character.fireEvent('query-abilities', {\n            abilities: [],\n        });\n\n        this.list.setItems([\n            ...evt.data.abilities.map((type) => getAbility(type)),\n            {\n                name: 'Back',\n                isBack: true,\n            },\n        ]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const ability = this.list.selected;\n\n        if (ability.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        const status = getAbilityStatus(ability.key, this.character);\n\n        // is the ability on cooldown? IGNORE IT\n        if (status && status.isCoolingDown) {\n            return;\n        }\n\n        // is the ability toggled on?\n        if (status && status.isToggledOn) {\n            ability.toggleOff(this.character, status);\n            this.game.screens.popScreen();\n            return;\n        }\n\n        // is the ability a stance?\n        if (ability.isStance) {\n            const stance = getStance(this.character);\n\n            if (stance) {\n                this.game.screens.pushScreen(SCREEN_CONFIRM, {\n                    header: 'Switch stance?',\n                    leadText: `Only one stance can be active at a time. Do you want to switch from ${stance.ability.name} to ${ability.name}?`,\n                    onConfirm: () => {\n                        stance.ability.toggleOff(this.character, stance);\n                        ability.toggleOn(this.character);\n                        this.game.screens.popScreen();\n                    },\n                });\n                return;\n            }\n        }\n\n        if (!status && ability.isToggleable) {\n            ability.toggleOn(this.character);\n            this.game.screens.popScreen();\n            return;\n        }\n\n        ability.initiate(this.character, {\n            onConfirm: (data) => {\n                ability.execute(this.character, data);\n                this.game.screens.popScreen();\n            },\n            onCancel: () => {},\n        });\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n        this.handleInput();\n\n        drawUIWindow(\n            this.left,\n            this.top,\n            this.width,\n            this.height,\n            'Abilities',\n            this.character.glyph\n        );\n\n        let yOffset = this.top + 2;\n        let xOffset = this.left + 2;\n\n        this.list.data.forEach(({ item: ability, idx, isSelected }) => {\n            if (ability.isBack) {\n                if (isSelected) {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        '→ Back',\n                        'yellow'\n                    );\n                } else {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        '- Back'\n                    );\n                }\n                return;\n            }\n\n            const display = ability.getDisplayText(this.character);\n\n            if (isSelected) {\n                if (display.isEnabled) {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        `→ ${display.text}`,\n                        'yellow'\n                    );\n                } else {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        `→ ${display.text}`,\n                        'gray'\n                    );\n                }\n            } else {\n                if (display.isEnabled) {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        `- ${display.text}`\n                    );\n                } else {\n                    this.game.renderer.drawText(\n                        xOffset,\n                        yOffset + idx,\n                        `- ${display.text}`,\n                        'gray'\n                    );\n                }\n            }\n        });\n\n        const ability = this.list.selected;\n\n        if (ability.isBack) {\n            return;\n        }\n\n        const description = `${getAbilityTypeName(\n            ability.type\n        )}. ${ability.getDescription(this.character)}`;\n\n        this.game.renderer.drawTextWrapping(\n            xOffset,\n            yOffset + this.list.length + 1,\n            this.width - 2,\n            description\n        );\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_W,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\n\nconst NOOP = () => {};\n\nconst OPT_YES = 1;\nconst OPT_NO = 0;\n\nexport default class ConfirmationScreen extends Screen {\n    width = 18;\n    option = 0;\n\n    get height() {\n        if (!this.leadText) {\n            return 4;\n        }\n\n        const textW = this.game.renderer.computeTextWidthTile(this.leadText);\n\n        return Math.ceil(textW / (this.width - 2) + 6);\n    }\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    get bottom() {\n        return this.top + this.height;\n    }\n\n    get right() {\n        return this.left + this.width;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n\n        this.header = ctx.header || 'Are you sure?';\n        this.onConfirm = ctx.onConfirm || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onResult = ctx.onResult || NOOP;\n        this.confirmText = ctx.confirmText || 'confirm';\n        this.cancelText = ctx.cancelText || 'cancel';\n        this.leadText = ctx.leadText || '';\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onSelection(result) {\n        this.game.screens.popScreen();\n\n        if (result) {\n            this.onConfirm();\n        } else {\n            this.onCancel();\n        }\n\n        this.onResult(result);\n    }\n\n    toggleSelection() {\n        this.option = this.option ? OPT_NO : OPT_YES;\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n\n        if (\n            [\n                INPUT_CMD_MOVE_N,\n                INPUT_CMD_MOVE_E,\n                INPUT_CMD_MOVE_S,\n                INPUT_CMD_MOVE_W,\n            ].includes(cmd.type)\n        ) {\n            this.toggleSelection();\n        }\n\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onSelection(OPT_NO);\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onSelection(this.option);\n        }\n    }\n\n    onUpdate(dt) {\n        this.handleInput();\n\n        drawUIWindow(this.left, this.top, this.width, this.height, this.header);\n\n        if (this.leadText) {\n            this.game.renderer.drawTextWrapping(\n                this.left + 2,\n                this.top + 2,\n                this.width - 2,\n                this.leadText\n            );\n        }\n\n        const cancel = this.option\n            ? `- ${this.cancelText}`\n            : `→ ${this.cancelText}`;\n        const confirm = this.option\n            ? `→ ${this.confirmText}`\n            : `- ${this.confirmText}`;\n\n        this.game.renderer.drawText(\n            this.left + 3,\n            this.bottom - 2,\n            cancel,\n            this.option ? undefined : 'yellow'\n        );\n\n        const textWidth = this.game.renderer.computeTextWidth(confirm);\n\n        this.game.renderer.drawText(\n            this.right - 2 - textWidth,\n            this.bottom - 2,\n            confirm,\n            this.option ? 'yellow' : undefined\n        );\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\n\nexport default class WaitScreen extends Screen {\n    time = 1000;\n    curTime = 0;\n\n    onEnter(ctx) {\n        this.time = ctx.time || 1000;\n        this.curTime = 0;\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    handleInput() {\n        const cmd = this.game.commands.getNextCommand();\n\n        if (!cmd) {\n            return;\n        }\n    }\n\n    onUpdate(dt) {\n        this.curTime += dt;\n\n        if (this.curTime >= this.time) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.handleInput();\n        this.game.updatePlayerSystems(dt);\n    }\n}\n","import Manager from './Manager';\nimport { directionDelta } from '../enums/Directions';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n    actionQueue = [];\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const owned = Array.from(evt.data.result);\n        const serialized = this.game.ecs.serialize(owned);\n\n        owned.forEach((e) => e.destroy());\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    getNextAction() {\n        return this.actionQueue.shift();\n    }\n\n    move(direction) {\n        this.actionQueue.push(() => {\n            const delta = directionDelta(direction);\n\n            this.entity.fireEvent('try-move', delta);\n        });\n    }\n\n    melee(target) {\n        this.actionQueue.push(() => {\n            if (target.isDestroyed || target.isDead) {\n                console.warn(`Melee action on destroyed target ${target}`);\n\n                return;\n            }\n\n            this.entity.fireEvent('try-melee', {\n                target,\n            });\n        });\n    }\n\n    wait(turns = 1) {\n        this.actionQueue.push(() => {\n            this.entity.fireEvent('energy-consumed', turns * 1000);\n        });\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n        this.game.temperature.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n            temperature: this.game.temperature.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorTemperatureData(sectorId, temperatureData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-temperatures`,\n            JSON.stringify(temperatureData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorTemperatureData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-temperatures`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n    #turnDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turnDelta() {\n        return this.#turnDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        const prevTurn = this.turn;\n\n        this.#tickDelta = delta;\n        this.#tick += delta;\n\n        const curTurn = this.turn;\n\n        this.#turnDelta = curTurn - prevTurn;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n        this.#turnDelta = 0;\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\nimport Grid from '../utils/Grid';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    positions;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n            none: [IsInventoried],\n        });\n\n        this.positions = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.positions.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.positions.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.positions.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.positions.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.positions.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.positions.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.positions.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.positions.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y, includeGround = false) {\n        return this.positions.get(x, y).reduce((entities, id) => {\n            const e = this.game.ecs.getEntity(id);\n\n            if (!e.isInventoried && (includeGround ? true : !e.ground)) {\n                entities.push(e);\n            }\n\n            return entities;\n        }, []);\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getEntitiesInRect(x, y, width, height) {\n        const entities = [];\n\n        for (let i = x; i < x + width + 1; i++) {\n            for (let j = y; j < y + height + 1; j++) {\n                entities.push(...this.getEntitiesAt(i, j));\n            }\n        }\n\n        return entities;\n    }\n\n    getEntitiesInRange(x, y, range) {\n        const diameter = range * 2;\n\n        return this.getEntitiesInRect(x - range, y - range, diameter, diameter);\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y, false).length > 0);\n\n        return { x, y };\n    }\n\n    isOutOfbounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y, true).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.explorable && !e.explored) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 8, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { IsDead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [IsDead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.isPlayer) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 0,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 300);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n\n    getAttitudeGlyph(value) {\n        if (value <= -200) {\n            return {\n                char: '☻',\n                fg1: '#ca4444',\n                fg2: '#411010',\n            };\n        }\n\n        if (value >= 200) {\n            return {\n                char: '☺',\n                fg1: '#78b478',\n                fg2: '#1a251a',\n            };\n        }\n\n        return {\n            char: '♥',\n            fg1: '#b9bcc2',\n            fg2: '#222832',\n        };\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n    padding = 5;\n    clampX = 16;\n    clampY = 12;\n\n    _focusX = 0;\n    _focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    computeSize() {\n        this.width = Math.max(\n            this.clampX,\n            Math.floor(window.innerWidth / this.renderedTileWidth)\n        );\n        this.height = Math.max(\n            this.clampY,\n            Math.floor(window.innerHeight / this.renderedTileHeight)\n        );\n        this.topLeftWorldX = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusX - this.width / 2),\n                Math.max(\n                    (this.width - this.game.map.width) / -2,\n                    this.padding + this.game.map.width - this.width\n                )\n            )\n        );\n        this.topLeftWorldY = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusY - this.height / 2),\n                Math.max(\n                    (this.height - this.game.map.height) / -2,\n                    this.padding + this.game.map.height - this.height\n                )\n            )\n        );\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.computeSize();\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this._focusX = x;\n        this._focusY = y;\n        this.computeSize();\n    }\n\n    setPadding(value) {\n        this.padding = value;\n        this.computeSize();\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    getScreenRect() {\n        return {\n            x: this.topLeftWorldX,\n            y: this.topLeftWorldY,\n            width: this.width,\n            height: this.height,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nconst fpsElement = document.getElementsByClassName('fps')[0];\n\nexport default class FPSMonitoringSystem extends System {\n    frames = [];\n    frameCount = 60;\n\n    constructor(game) {\n        super(game);\n        this.frames = [];\n\n        for (let i = 0; i < this.frameCount; i++) {\n            this.frames[i] = 0;\n        }\n    }\n\n    update(dt) {\n        this.frames.push(1000 / dt);\n        this.frames.shift();\n\n        const sum = this.frames.reduce((s, v) => s + v, 0);\n        const fps = Math.trunc(sum / this.frameCount);\n\n        fpsElement.innerText = fps;\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            this.game.ecs.deserialize(data);\n        } else {\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(4);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n    music = null;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n        sector.music = data.music;\n        sector.temperature = data.temperature;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        allowDiagonals: false,\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return manhattanDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_GROUND_STONE,\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\n\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y).filter((e) => !e.ground);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n    SPWN_GROUND_GRASS,\n    SPWN_TWIG,\n    SPWN_GOBLIN_BRUISER,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_GRASS, tile.x, tile.y);\n\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.1) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR) && Math.random() < 0.5) {\n                spawn(SPWN_TWIG, tile.x, tile.y);\n            } else {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_BRUISER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_LEATHER_BOOTS,\n    SPWN_SHORTSWORD,\n    SPWN_GREATSWORD,\n    SPWN_BATTLE_AXE,\n    SPWN_HATCHET,\n    SPWN_GROUND_STONE,\n    SPWN_MACE,\n    SPWN_HEAVY_PLATE_ARMOR,\n    SPWN_LEATHER_ARMOR,\n    SPWN_CLOTH_HOOD,\n    SPWN_WIZARD_CAP,\n    SPWN_HELM,\n    SPWN_TWIG,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\n\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_TWIG));\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_BOOTS));\n            chest.inventory.addLoot(spawn(SPWN_SHORTSWORD));\n            chest.inventory.addLoot(spawn(SPWN_GREATSWORD));\n            chest.inventory.addLoot(spawn(SPWN_BATTLE_AXE));\n            chest.inventory.addLoot(spawn(SPWN_HATCHET));\n            chest.inventory.addLoot(spawn(SPWN_MACE));\n            chest.inventory.addLoot(spawn(SPWN_HEAVY_PLATE_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_HOOD));\n            chest.inventory.addLoot(spawn(SPWN_WIZARD_CAP));\n            chest.inventory.addLoot(spawn(SPWN_HELM));\n        });\n\n        for (let i = 0; i < randomInt(1, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { manhattanDistance } from '../../utils/ManhattanDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                allowDiagonals: false,\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return manhattanDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 4;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","import { Howl } from 'howler';\nimport Manager from './Manager';\nimport music from './../data/music.json';\n\nclass Track {\n    isPlaying = false;\n    isIntro = false;\n    howl = null;\n\n    constructor(path, data) {\n        this.name = data.name;\n        this.loop = new Howl({\n            loop: true,\n            src: [`${path}${data.loop}`],\n        });\n\n        if (data.intro) {\n            this.intro = new Howl({\n                loop: false,\n                src: [`${path}${data.intro}`],\n            });\n\n            this.intro.on('end', () => {\n                if (this.isPlaying) {\n                    this.howl = this.loop;\n                    this.loop.seek(0);\n                    this.loop.volume(1);\n                    this.loop.play();\n                } else {\n                    this.intro.stop();\n                    this.loop.stop();\n                }\n            });\n        }\n    }\n\n    play() {\n        if (this.isPlaying) {\n            return;\n        }\n\n        if (this.intro) {\n            this.howl = this.intro;\n            this.intro.seek(0);\n            this.intro.play();\n            this.intro.fade(0, 1, 5000);\n            this.loop.stop();\n            // this.intro.volume(1);\n        } else {\n            this.howl = this.loop;\n            this.loop.seek(0);\n            this.loop.play();\n            this.loop.fade(0, 1, 5000);\n            // this.loop.volume(1);\n        }\n\n        this.isPlaying = true;\n    }\n\n    stop() {\n        if (this.howl) {\n            this.howl.fade(1, 0, 500);\n        }\n        this.isPlaying = false;\n    }\n}\n\nexport default class MusicManager extends Manager {\n    tracks = {};\n    currentTrack = null;\n\n    constructor(game) {\n        super(game);\n        const path = `${window.location.protocol}//${window.location.host}${window.location.pathname}${music.path}`;\n\n        music.tracks.forEach((data) => {\n            const track = new Track(path, data);\n\n            this.tracks[data.key] = track;\n        });\n    }\n\n    play(key) {\n        if (key === this.currentTrack) {\n            return;\n        }\n\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n\n        this.tracks[key].play();\n        this.currentTrack = key;\n    }\n\n    stop() {\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n    }\n\n    onSectorLoaded(sector) {\n        this.play(sector.music);\n    }\n}\n","import { getStatus } from '../data/Statuses';\nimport { Status } from '../ecs/components';\nimport System from './System';\n\nexport default class StatusSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Status],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const delta = this.game.clock.tickDelta;\n\n        this.query.get().forEach((entity) => {\n            entity.status.forEach((status) => {\n                const statusType = getStatus(status.key);\n\n                statusType.update(delta, entity, status);\n\n                if (status.isCompleted()) {\n                    status.destroy();\n                }\n            });\n        });\n    }\n}\n","import {\n    IsDestroying,\n    IsInventoried,\n    LiquidContainer,\n    Position,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class LiquidSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [LiquidContainer, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const pools = Array.from(this.query.get());\n\n        pools.reduce((rv, pool) => {\n            const container = pool.liquidContainer;\n\n            if (!container.isFreeFlowing) {\n                return rv;\n            }\n\n            const pos = pool.position.getPos();\n            const liquid = container.content;\n            const key = `${pos.x},${pos.y},${liquid}`;\n\n            if (rv[key]) {\n                rv[key].combineFrom(container);\n            } else {\n                rv[key] = container;\n            }\n\n            return rv;\n        }, {});\n    }\n}\n","import { addStatus, STATUS_BLEEDING } from '../data/Statuses';\nimport {\n    IsDestroying,\n    IsInventoried,\n    Position,\n    SharpTrap,\n} from '../ecs/components';\nimport { CONSOLE_EVENT_TRAP_SHARP } from '../enums/ConsoleEvents';\nimport System from './System';\n\nexport default class TrapSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.sharpTrapQuery = this.game.ecs.createQuery({\n            all: [SharpTrap, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.turnDelta) {\n            return;\n        }\n\n        this.sharpTrapQuery.get().forEach((trapEntity) => {\n            const pos = trapEntity.position.getPos();\n            const entities = this.game.map.getEntitiesAt(pos.x, pos.y);\n\n            entities.forEach((entity) => {\n                if (entity.id === trapEntity.id) {\n                    return;\n                }\n                if (entity.stats) {\n                    const saved = trapEntity.sharpTrap.test(entity);\n\n                    if (!saved) {\n                        addStatus(STATUS_BLEEDING, entity);\n                        this.game.console.event(CONSOLE_EVENT_TRAP_SHARP, {\n                            trap: trapEntity,\n                            entity,\n                        });\n                    }\n                }\n            });\n        });\n    }\n}\n","import { spawn } from '../data/Spawner';\nimport {\n    Combustible,\n    Fire,\n    IsDestroying,\n    IsInventoried,\n    Position,\n} from '../ecs/components';\nimport { randomWeightedBool } from '../utils/rand';\nimport System from './System';\n\nexport default class FireSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Fire, Combustible, Position],\n            none: [IsInventoried, IsDestroying],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.turnDelta) {\n            return;\n        }\n\n        this.query.get().forEach((entity) => {\n            const pos = entity.position.getPos();\n            const combustible = entity.combustible;\n            let temperature = this.game.temperature.getTemperature(\n                pos.x,\n                pos.y\n            );\n\n            combustible.fuel -= combustible.burnRate;\n            temperature += combustible.burnRate;\n\n            this.game.temperature.setTemperature(pos.x, pos.y, temperature);\n\n            const sparkChance = combustible.getSparkChance();\n            const dieChance = combustible.getDieOutChance();\n\n            this.game.map\n                .getNeighborEntities(pos.x, pos.y)\n                .flat()\n                .filter((e) => e.combustible)\n                .forEach((neighbor) => {\n                    const spark = randomWeightedBool(sparkChance);\n\n                    if (spark) {\n                        neighbor.fireEvent('spark', {\n                            intensity: entity.fire.intensity - 1,\n                        });\n                    }\n                });\n\n            if (combustible.isOutOfFuel) {\n                entity.add(IsDestroying);\n\n                if (combustible.spawnableRemains) {\n                    spawn(combustible.spawnableRemains, pos.x, pos.y);\n                }\n            } else if (randomWeightedBool(dieChance)) {\n                entity.fire.extinguish();\n\n                this.game.particles.createParticle(pos.x, pos.y, {\n                    lifetime: 1000,\n                    fg1s: ['yellow', 'red'],\n                    glyphs: ['.', '↑', '^'],\n                });\n            } else {\n                this.game.particles.createParticle(pos.x, pos.y, {\n                    lifetime: 1000,\n                    fg1s: ['yellow', 'red'],\n                    glyphs: ['.', '↑', '^'],\n                });\n            }\n        });\n    }\n}\n","import { avgArray } from '../utils/ArrayUtil';\nimport { lerp } from '../utils/LerpUtil';\nimport MemoryGrid from '../utils/MemoryGrid';\nimport System from './System';\n\nexport default class TemperatureSystem extends System {\n    data;\n\n    get width() {\n        return this.game.map.width;\n    }\n\n    get height() {\n        return this.game.map.height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.grid = new MemoryGrid(this.width, this.height);\n    }\n\n    teardown() {\n        this.grid.clear();\n    }\n\n    getAmbientTemperature() {\n        return this.game.world.sector.temperature.ambient;\n    }\n\n    getAmbientCapacity() {\n        return this.game.world.sector.temperature.capacity;\n    }\n\n    getSaveGameData() {\n        const data = this.grid.serialize();\n\n        this.game.state.saveSectorTemperatureData(\n            this.game.world.sectorId,\n            data\n        );\n    }\n\n    onSectorLoaded(sector) {\n        const data = this.game.state.loadSectorTemperatureData(sector.id);\n\n        if (data) {\n            this.grid.deserialize(data);\n        } else {\n            this.grid.defaultValueGenerator = () => sector.temperature.ambient;\n            this.grid.previous.defaultValueGenerator = () =>\n                sector.temperature.ambient;\n            this.grid.setAll(sector.temperature.ambient);\n        }\n    }\n\n    setTemperature(x, y, value) {\n        this.grid.set(x, y, value);\n    }\n\n    getTemperature(x, y) {\n        return this.grid.get(x, y);\n    }\n\n    getCapacity(x, y) {\n        let hasCap = false;\n        let hasFire = false;\n\n        const capacity = this.game.map.getEntitiesAt(x, y).reduce((cap, e) => {\n            if (e.fire) {\n                hasFire = true;\n                return 0;\n            }\n            if (e.thermalCapacity) {\n                hasCap = true;\n\n                return cap + e.thermalCapacity.value;\n            }\n\n            return cap;\n        }, 0);\n\n        if (hasFire) {\n            return 0;\n        }\n\n        if (hasCap) {\n            return capacity;\n        }\n\n        return this.getAmbientCapacity();\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        this.grid.copyToPrevious();\n\n        const ambient = this.getAmbientTemperature();\n\n        for (let x = 0; x < this.width; x++) {\n            for (let y = 0; y < this.height; y++) {\n                const previous = this.grid.previous.get(x, y);\n                const cells = this.grid.previous.getNeighbors(x, y);\n\n                cells.push(ambient);\n                cells.push(previous);\n\n                const avg = avgArray(cells);\n\n                if (Math.abs(previous - avg) < 0.01) {\n                    continue;\n                }\n\n                const capacity = this.getCapacity(x, y);\n                const t = lerp(previous, avg, capacity);\n\n                this.grid.set(x, y, t);\n            }\n        }\n    }\n}\n","export const sumArray = (arr = []) => arr.reduce((sum, val) => sum + val, 0);\nexport const avgArray = (arr = []) => sumArray(arr) / arr.length;\n","export const lerp = (f0, f1, t) => (1 - t) * f0 + t * f1;\nexport const lerp2 = (v1, v2, t) => {\n    return {\n        x: lerp(v1.x, v2.x, t),\n        y: lerp(v2.y, v2.x, t),\n    };\n};\n\nwindow.lerp = lerp;\n","import Grid from './Grid';\n\nexport default class MemoryGrid extends Grid {\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        super(width, height, defaultValueGenerator);\n        this.previous = new Grid(width, height, defaultValueGenerator);\n    }\n\n    copyToPrevious() {\n        this.previous._width = this._width;\n        this.previous._height = this._height;\n        this.previous.data = [...this.data];\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport { AbilityStatus } from '../ecs/components/AbilityStatus';\nimport System from './System';\n\nexport default class AbilitySystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [AbilityStatus],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const delta = this.game.clock.tickDelta;\n\n        if (!delta) {\n            return;\n        }\n\n        this.query.get().forEach((entity) => {\n            Object.values(entity.abilityStatus).forEach((status) => {\n                status.ability.update(delta, status);\n            });\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}