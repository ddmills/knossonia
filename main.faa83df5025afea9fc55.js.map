{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./src/utils/ColorParser.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/util/string-util.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/data/Spawnables.js","webpack://knossonia/./src/data/Spawner.js","webpack://knossonia/./src/data/spawnables/SpawnableVialHoney.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/data/spawnables/SpawnableVialBlood.js","webpack://knossonia/./src/data/spawnables/SpawnableVialWater.js","webpack://knossonia/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/data/spawnables/SpawnablePineTree.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://knossonia/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/FactionMember.js","webpack://knossonia/./src/enums/Factions.js","webpack://knossonia/./src/data/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/ecs/components/LootDropper.js","webpack://knossonia/./src/data/tables/LootSpawn.js","webpack://knossonia/./src/utils/WeightedTable.js","webpack://knossonia/./src/data/tables/loot/LootTableGoblin.js","webpack://knossonia/./src/data/tables/loot/LootTableForest.js","webpack://knossonia/./src/ecs/components/IsEquipped.js","webpack://knossonia/./src/ecs/components/Equipment.js","webpack://knossonia/./src/data/EquipmentSlotType.js","webpack://knossonia/./src/ecs/components/EquipmentSlot.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/utils/SelectableList.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/utils/AStar.js","webpack://knossonia/./src/utils/diagonalDistance.js","webpack://knossonia/./src/utils/ManhattanDistance.js","webpack://knossonia/./src/utils/PriorityQueue.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/screens/screens/EquipmentScreen.js","webpack://knossonia/./src/core/screens/screens/ListSelectionScreen.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/generators/generators.js","webpack://knossonia/./src/level/generators/ForestCabinsGenerator.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/themes/TileTheme.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/level/themes/TileThemePopulator.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/themes/CabinTheme.js","webpack://knossonia/./src/level/schemes/UniformScheme.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/level/RoomData.js","webpack://knossonia/./node_modules/nanoid/index.prod.js","webpack://knossonia/./node_modules/nanoid/url-alphabet/index.js","webpack://knossonia/./src/level/TileScheme.js","webpack://knossonia/./src/level/generators/SectorGenerator.js","webpack://knossonia/./src/level/generators/ForestGenerator.js","webpack://knossonia/./src/level/generators/ForestStrongholdGenerator.js","webpack://knossonia/./src/level/schemes/DenseCastleScheme.js","webpack://knossonia/./src/level/generators/ForestTownGenerator.js","webpack://knossonia/./src/level/schemes/ScatteredScheme.js","webpack://knossonia/./src/level/generators/GeneratorUtils.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","mouse","MouseManager","clock","ClockManager","renderer","Renderer","camera","CameraManager","state","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","console","ConsoleManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","Date","now","boundLoop","loop","bind","requestAnimationFrame","dt","update","render","t","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","zoom","setSize","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","Math","ceil","clear","clearArea","xPx","yPx","trunc","Manager","cells","Grid","suppressOOBWarn","createElement","ctx","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","j","cellX","cellY","undefined","data","filter","c","cell","pixelX","pixelY","drawImage","defaultValueGenerator","_width","_height","idx","size","coord","value","isOutOfBounds","warn","get","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","key","_cache","hasOwnProperty","pixels","getImageData","cvs","putImageData","cache","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","slice","test","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","baseHues","push","match","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","camelCache","camelString","camelcaseSlow","pascalCache","constructor","component","enumerable","v","id","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","_definitions","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","_ecs","components","PrefabComponent","PrefabRegistry","_prefabs","nameOrClassOrPrefab","urlAlphabet","getAccessor","hasType","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","_entities","Entity","refs","_refs","Set","json","entities","list","entityData","createOrGetById","pascalString","d","any","none","hasAny","_filter","some","hasAll","every","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","IsDestroying","pass","LiquidContainer","destroyOnEmpty","isEmpty","add","quantity","isPourable","volume","spawn","SPWN_POOL_LIQUID","content","_checkDestroyOnEmpty","pos","interactor","position","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_GOBLIN_GRUNT","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","GoblinGrunt","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","colorDesc","onDrink","log","fireEvent","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","GoalType","goal","detectHostiles","handled","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","Dead","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","pickRandom","arr","floor","random","randomInt","min","max","wanderer","Door","isOpen","ch","blocker","shadowcaster","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","result","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","indexOf","splice","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","bresenhamLineExclusive","pop","corpse","corpseSpawnable","moniker","range","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","damage","shouldAppear","getMessage","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","Position","getPosition","setPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","nonHostile","factionMember","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","Wandering","Directions","Explorable","Explored","Health","Eyes","flat","neighbor","Particle","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","table","WeightedTable","pick","spawnable","rows","weight","sum","currentW","maxWeight","sort","reduce","cur","goblins","forest","IsEquipped","slot","unequip","equipmentSlot","slotKey","Equipment","slots","slotTypes","includes","slotType","header","onRenderRow","isSelected","onSelect","equip","isEquipped","isOwnedBy","EQ_SLOT_BODY","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EquipmentSlot","equipment","not","sorted","incrementTick","isPlayer","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","padEnd","str","hp","health","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","ListSelectionScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","getEntitiesAt","hostileEntities","areEntitiesHostile","melee","doorEntity","move","lootable","items","pushScreen","onGetRowName","item","replaceScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","SelectableList","setItems","selected","up","down","selectItem","ypos","textLen","_idx","_items","refreshList","isBack","interaction","left","top","xpos","NOOP","enable","disable","cursorColor","types","segment","color","getEntities","faction","relation","getEntityRelation","getDisplay","drawCursor","getNeighbors","defaultSettings","cost","allowDiagonals","computeAStar","settings","heuristic","diagonalDistance","manhattanDistance","open","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","success","path","costs","Infinity","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","createItem","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","selectSlot","defaultRowRender","cancel","Simple","repeat","_queue","_current","_repeat","Scheduler","EventQueue","getTime","getEventTime","remove","_time","_events","MinHeap","event","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","createPrefab","entityId","serialized","isTurn","meleeCommand","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","keys","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","tick","isEnabled","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","sector","loadSectorPositionData","x2","y2","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","_data","_idHash","entries","fov","FOV","isSquareVisible","isVisible","compute","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","Speed","Action","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","emitter","particleEmitter","isExpired","targetCount","setRelation","factionA","factionB","idA","idB","_relationKey","relations","entityA","entityB","memberA","memberB","getRelation","onWindowResize","innerWidth","renderedTileWidth","innerHeight","renderedTileHeight","resizeDisplay","topLeftWorldX","topLeftWorldY","worldX","worldY","sectorTxt","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","exits","connectionsNorth","connectionsWest","getExits","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","SectorGenerator","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","populateTile","trySpawn","TileThemePopulator","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileContainer","MapGenerator","digPercentage","getRooms","createRoom","getDoors","TileScheme","defaultType","getTile","RoomData","addRoom","cloneTo","setTileTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","c1","c2","c3","c4","bytes","crypto","getRandomValues","Uint8Array","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","populateRoom","setTheme","exitOffset","padding","castle","DenseCastleScheme","combineOther","curId","createNodeId","splitNodeVertical","node","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","intersects","msgs","isDestroying","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.faa83df5025afea9fc55.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.camera = new CameraManager(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        this.clock.update(dt);\n        this.actionSystem.update(dt);\n        this.hungerSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.meleeSystem.update(dt);\n        this.deathSystem.update(dt);\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.destroySystem.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    tileWidth = 16;\n    tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: 20,\n            height: 20,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height, zoom) {\n        this.display.setSize(width, height, zoom);\n    }\n\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n        this.ctx.globalCompositeOperation = 'destination-over';\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(0, 0, this.tileWidth * this.width, this.tileHeight * this.height);\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + (i * 2);\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = new Map();\n\nexport const camelString = (value) => {\n    if (!camelCache.has(value)) {\n        camelCache.set(value, camelcaseSlow(value));\n    }\n\n    return camelCache.get(value);\n};\n\nconst pascalCache = new Map();\n\nexport const pascalString = (value) => {\n    if (!pascalCache.has(value)) {\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\n    }\n\n    return pascalCache.get(value);\n};\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\n                entity\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import { camelString } from './util/string-util';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    entity = null;\n    ecs = null;\n    _props = {};\n    _isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this._props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this._props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.entity;\n\n            this.entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this._isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this._props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelString(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this._props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport { camelString } from '../util/string-util';\n\nexport default class ComponentRegistry {\n    _definitions = new Map();\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    register(component) {\n        this._definitions.set(component.name, component);\n        camelString(component.name); // prime camelcase cache\n    }\n\n    getAccessor(type) {\n        return camelString(type);\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this._definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this._ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    _prefabs = {};\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this._ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this._ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this._ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this._prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this._ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    _prevented = false;\n    _handled = false;\n\n    get prevented() {\n        return this._prevented;\n    }\n\n    get handled() {\n        return this._handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this._handled = true;\n        this._prevented = true;\n    }\n\n    prevent() {\n        this._prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    id = null;\n    components = {};\n    ecs = null;\n    _isDestroyed = false;\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.ecs = ecs;\n        this.id = id || ecs.generateId();\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this._isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { pascalString } from '../util/string-util';\nimport Entity from '../Entity';\n\nexport default class EntityRegistry {\n    _entities = new Map();\n    _ecs = null;\n    _refs = new Map();\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    get all() {\n        return this._entities.values();\n    }\n\n    register(entity) {\n        this._entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this._entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this._ecs, id);\n\n        this.register(entity);\n\n        this._ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this._entities.delete(entity.id);\n        this._ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this._refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this._refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this._refs.has(entityId)) {\n            this._refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this._refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this._refs.has(entityId)) {\n            this._refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities ? entities : this._entities;\n\n        list.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = pascalString(key);\n            const definition = this._ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    _ecs;\n    _filter;\n    _onEntityAddedCallbacks = [];\n    _onEntityRemovedCallbacks = [];\n    _cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this._ecs = ecs;\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this._filter.any.length\n            ? this._filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this._filter.all.every((c) => entity.has(c));\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this._onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this._cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this._cache.add(entity);\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this._cache.clear();\n\n        for (const entity of this._ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this._cache;\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    _ecs;\n    _queries = [];\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this._ecs, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this._queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this._queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity(id) {\n        return this.entities.create(id);\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize(entities) {\n        return {\n            entities: this.entities.serialize(entities),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        this.closeDoor();\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        this.openDoor();\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\nexport const SCREEN_LIST_SELECT = 8;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        const entity = this.entity;\n\n        this.owner.inventory.dropLoot(this.entity);\n\n        entity.fireEvent('dropped', {\n            interactor: evt.data.interactor,\n        });\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    if (lineValid && body) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < 0 && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            return `${getMonikerSubject(data.target)} takes ${\n                data.damage.value\n            } ${data.damage.type} damage from ${getMonikerIndirectObject(\n                data.source\n            )} and dies`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['*'],\n        });\n\n        evt.data.target.fireEvent('damage', {\n            source: this.entity,\n            damage,\n        });\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { Blocker } from './Blocker';\nimport { FactionMember } from './FactionMember';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        this.entity.fireEvent('energy-consumed', 750);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n} from '../../enums/ConsoleEvents';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.damage.value;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: this.entity,\n                source: evt.data.source,\n                damage: evt.data.damage,\n            });\n\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: this.entity,\n            source: evt.data.source,\n            damage: evt.data.damage,\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { FactionMember } from './FactionMember';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(FactionMember))\n            .find((neighbor) => {\n                return game.factions.areEntitiesHostile(this.entity, neighbor);\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_AMULET, SPWN_CLOTH_ARMOR, SPWN_STONE, SPWN_VIAL_BLOOD } from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(15, SPWN_CLOTH_ARMOR);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY]\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter((slot) => {\n            return this.slotTypes.includes(slot.slotType);\n        });\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Equip ${this.entity.moniker.display}`,\n            list: slots,\n            onRenderRow: (slot, x, y, isSelected) => {\n                let text = slot.name;\n\n                if (!slot.isEmpty) {\n                    text += ` [${slot.content.moniker.display}]`;\n                }\n\n                if (isSelected) {\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n                } else {\n                    game.renderer.drawText(x, y, `- ${text}`);\n                }\n            },\n            onSelect: (slot) => {\n                slot.unequip();\n                slot.equip(this.entity);\n                evt.handle();\n                game.screens.popScreen();\n            }\n        });\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        console.log(`unequip ${this.entity.moniker.display} from ${slotKey}`, slot);\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.isInventoried) {\n            if (!this.entity.isInventoried.isOwnedBy(evt.data.interactor)) {\n                return;\n            }\n        }\n\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { Actor, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import {\n    IsInventoried,\n    Explored,\n    Glyph,\n    Position,\n    IsVisible,\n    IsDestroying,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, IsVisible],\n            none: [IsInventoried, IsDestroying],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [IsInventoried, IsVisible, IsDestroying],\n        });\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        const explored = Array.from(this.#explored.get());\n\n        for (let i = 0; i < explored.length; i++) {\n            const renderable = explored[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                '#2c3538',\n                '#2c3538'\n            );\n        }\n\n        const renderables = Array.from(this.#query.get());\n\n        for (let i = 0; i < renderables.length; i++) {\n            const renderable = renderables[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            not: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_LIST_SELECT,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport ListSelectionScreen from './screens/ListSelectionScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    replaceScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_EQUIPMENT,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_LIST_SELECT,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const items = entities.filter((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n\n            return evt.data.interactions.length > 0;\n        });\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        if (items.length == 1) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: items[0],\n            });\n            return;\n        }\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Choose`,\n            list: items,\n            onGetRowName: (item) => item.moniker.display,\n            onSelect: (item) => {\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\n                    interactor: this.game.player.entity,\n                    interactable: item,\n                });\n            }\n        });\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(\n            1,\n            4,\n            `move       [q, w, e, a, d, z, x, c]`\n        );\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InventoryScreen extends Screen {\n    #accessible;\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n        this.list.setItems(this.#accessible.inventory.content);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interactable = this.list.selected;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down()\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        if (this.list.items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            const textLen = this.game.renderer.computeTextWidth(item.moniker.display);\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n\n            if (item.isEquipped) {\n                const slot = item.isEquipped.slot.name;\n\n                this.game.renderer.drawText(4 + textLen + 0.5, ypos, `[${slot}]`, '#2c3538');\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","export default class SelectableList {\n    _items = [];\n    _idx = 0;\n\n    get selected() {\n        return this._items[this._idx];\n    }\n\n    get items() {\n        return this._items;\n    }\n\n    get data() {\n        return this._items.map((item, idx) => ({\n            item,\n            idx,\n            isSelected: idx === this._idx,\n        }));\n    }\n\n    get isEmpty() {\n        return this._items.length <= 0;\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    constructor(items = [], idx = 0) {\n        this._idx = idx;\n        this.setItems(items);\n    }\n\n    setItems(items = []) {\n        this._items = items;\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\n    }\n\n    up() {\n        this._idx--;\n\n        if (this._idx < 0) {\n            this._idx = this._items.length - 1;\n        }\n    }\n\n    down() {\n        this._idx++;\n\n        if (this._idx >= this._items.length) {\n            this._idx = 0;\n        }\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 12;\n    #interactable;\n    #interactor;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.#width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.#height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.list.setItems([...evt.data.interactions, {\n            name: 'Back',\n            isBack: true,\n        }]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interaction = this.list.selected;\n\n        if (interaction.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.#interactable.fireEvent(interaction.evt, {\n            interactor: this.#interactor,\n        });\n\n        if (this.#interactable.isDestroyed) {\n            this.game.screens.popScreen();\n\n            return;\n        }\n\n        this.refreshList();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width + 1,\n            this.#height + 1\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const xpos = this.left + 2;\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const ypos = idx + this.top + 4;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, `→ ${item.name}`, 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\n            }\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { game } from '../../Game';\nimport { computeAStar } from '../../../utils/AStar';\nimport { Blocker, FactionMember } from '../../../ecs/components';\nimport { diagonalDistance } from '../../../utils/diagonalDistance';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        const target = this.game.cursor\n            .getEntities()\n            .filter((e) => e.has(FactionMember))\n            .pop();\n\n        const player = this.game.player.entity;\n\n        if (target) {\n            const faction = target.factionMember.faction;\n            const relation = this.game.factions.getEntityRelation(\n                player,\n                target\n            );\n\n            let disp = this.game.factions.getDisplay(relation);\n\n            this.game.renderer.drawTextCenter(\n                1,\n                `${faction.display} Faction [${disp}]`\n            );\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class EquipmentScreen extends Screen {\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessor = ctx.accessor;\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectSlot() {\n        const interactable = this.list.selected.content;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectSlot();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\n            'purple'\n        );\n\n        if (this.list.isEmpty) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const slot = item;\n            const ypos = idx + 5;\n            const selectedColor = 'yellow';\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, `→ ${slot.name}`, selectedColor);\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\n            }\n\n            if (slot.isEmpty) {\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\n            } else {\n                const content = slot.content;\n                this.game.renderer.draw(15, ypos,\n                    content.glyph.char,\n                    content.glyph.primary,\n                    content.glyph.secondary,\n                    content.glyph.background\n                );\n                this.game.renderer.drawText(16, ypos, ` ${content.moniker.display}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport Simple from 'rot-js/lib/scheduler/simple';\n\nconst NOOP = () => {};\n\nexport default class ListSelectionScreen extends Screen {\n    width = 16;\n    height = 12;\n    list = new SelectableList();\n    header = '';\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.list.setItems(ctx.list || []);\n        this.header = ctx.header || 'Select';\n        this.onSelect = ctx.onSelect || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onGetRowName = ctx.onGetRowName || NOOP;\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        this.onSelect(this.list.selected);\n    }\n\n    cancel() {\n        this.onCancel();\n        this.game.screens.popScreen();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.cancel();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    defaultRowRender(row, x, y, isSelected) {\n        const text = this.onGetRowName(row, x, y, isSelected);\n\n        if (isSelected) {\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n        } else {\n            this.game.renderer.drawText(x, y, `- ${text}`);\n        }\n    };\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.width + 1,\n            this.height + 1\n        );\n\n        this.game.renderer.drawTextCenter(this.top + 2, this.header);\n\n        for (let i = this.left; i < this.left + this.width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.height, '└');\n        this.game.renderer.draw(\n            this.left + this.width,\n            this.top + this.height,\n            '┘'\n        );\n\n        const xpos = this.left + 2;\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const ypos = idx + this.top + 4;\n\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\n        });\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.moveCommand.destroy();\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.meleeCommand.destroy();\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    IsDestroying,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n            not: [IsDestroying],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 12, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 120);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    get topLeftWorldX() {\n        return Math.floor(Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.game.map.width - this.width\n            )\n        ));\n    }\n\n    get topLeftWorldY() {\n        return Math.floor(Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.game.map.height - this.height\n            )\n        ));\n    }\n\n    computeSize() {\n        this.width = Math.floor(window.innerWidth / this.renderedTileWidth) - 2;\n        this.height = Math.floor(window.innerHeight / this.renderedTileHeight) - 2;\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const sector = this.game.world.sector;\n        let sectorTxt = '';\n\n        if (sector) {\n            sectorTxt = `(${sector.x}, ${sector.y})`;\n        }\n\n        const fps = Math.trunc(1000 / dt);\n        const display = `${sectorTxt} ${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.camera.width - textWidth;\n\n        this.game.renderer.drawText(\n            x,\n            this.game.camera.height - 1,\n            display,\n            '#172e2e'\n        );\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(4);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR)) {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n        });\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 2;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - 1 - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}