{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./node_modules/howler/dist/howler.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/utils/Grid.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./src/utils/ColorParser.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/util/string-util.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/IsDestroying.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/data/Spawnables.js","webpack://knossonia/./src/data/Spawner.js","webpack://knossonia/./src/data/spawnables/SpawnableVialHoney.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/data/spawnables/SpawnableVialBlood.js","webpack://knossonia/./src/data/spawnables/SpawnableVialWater.js","webpack://knossonia/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/utils/AStar.js","webpack://knossonia/./src/utils/diagonalDistance.js","webpack://knossonia/./src/utils/ManhattanDistance.js","webpack://knossonia/./src/utils/PriorityQueue.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/data/spawnables/SpawnablePineTree.js","webpack://knossonia/./src/utils/rand.js","webpack://knossonia/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://knossonia/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Armor.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/data/Abilities.js","webpack://knossonia/./src/data/abilities/ArmorAbility.js","webpack://knossonia/./src/data/Stats.js","webpack://knossonia/./src/data/abilities/Ability.js","webpack://knossonia/./src/data/abilities/SpeedAbility.js","webpack://knossonia/./src/data/abilities/ThrowingAbility.js","webpack://knossonia/./src/data/abilities/DodgeAbility.js","webpack://knossonia/./src/data/abilities/PenetrationAbility.js","webpack://knossonia/./src/data/abilities/AccuracyAbility.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/IsVisible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/enums/ConsoleEvents.js","webpack://knossonia/./src/data/DamageTypes.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/IsDead.js","webpack://knossonia/./src/ecs/components/FactionMember.js","webpack://knossonia/./src/enums/Factions.js","webpack://knossonia/./src/data/Faction.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/ecs/components/LootDropper.js","webpack://knossonia/./src/data/tables/LootSpawn.js","webpack://knossonia/./src/utils/WeightedTable.js","webpack://knossonia/./src/data/tables/loot/LootTableGoblin.js","webpack://knossonia/./src/data/tables/loot/LootTableForest.js","webpack://knossonia/./src/ecs/components/IsEquipped.js","webpack://knossonia/./src/ecs/components/Equipment.js","webpack://knossonia/./src/data/EquipmentSlotType.js","webpack://knossonia/./src/ecs/components/EquipmentSlot.js","webpack://knossonia/./src/ecs/components/Stats.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./src/ecs/components/Race.js","webpack://knossonia/./src/data/Races.js","webpack://knossonia/./src/data/RaceData.js","webpack://knossonia/./src/ecs/components/Weapon.js","webpack://knossonia/./src/data/WeaponTypes.js","webpack://knossonia/./src/data/WeaponFamilies.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/utils/SelectableList.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/screens/screens/EquipmentScreen.js","webpack://knossonia/./src/core/screens/screens/ListSelectionScreen.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./src/core/screens/screens/CharacterScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/./src/level/generators/generators.js","webpack://knossonia/./src/level/generators/ForestCabinsGenerator.js","webpack://knossonia/./src/level/LevelConnections.js","webpack://knossonia/./src/level/TileData.js","webpack://knossonia/./src/level/themes/TileTheme.js","webpack://knossonia/./src/level/themes/CastleTheme.js","webpack://knossonia/./src/level/themes/TileThemePopulator.js","webpack://knossonia/./src/level/themes/ForestTheme.js","webpack://knossonia/./src/level/themes/CabinTheme.js","webpack://knossonia/./src/level/schemes/UniformScheme.js","webpack://knossonia/./src/level/TileContainer.js","webpack://knossonia/./src/level/RoomData.js","webpack://knossonia/./node_modules/nanoid/index.prod.js","webpack://knossonia/./node_modules/nanoid/url-alphabet/index.js","webpack://knossonia/./src/level/TileScheme.js","webpack://knossonia/./src/level/generators/SectorGenerator.js","webpack://knossonia/./src/level/generators/ForestGenerator.js","webpack://knossonia/./src/level/generators/ForestStrongholdGenerator.js","webpack://knossonia/./src/level/schemes/DenseCastleScheme.js","webpack://knossonia/./src/level/generators/ForestTownGenerator.js","webpack://knossonia/./src/level/schemes/ScatteredScheme.js","webpack://knossonia/./src/level/generators/GeneratorUtils.js","webpack://knossonia/./src/core/ConsoleManager.js","webpack://knossonia/./src/systems/DestroySystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/compat get default export","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/global","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","Howl","src","loop","volume","play","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","HowlerGlobal","this","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","o","_autoplay","autoplay","_format","format","_html5","html5","_loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Game","engine","ECS","mouse","MouseManager","clock","ClockManager","renderer","Renderer","camera","CameraManager","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","ConsoleManager","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","boundLoop","requestAnimationFrame","dt","update","render","t","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","zoom","setSize","char","fg1","fg2","bg","tiles","getSprite","draw","text","font","charAt","computeTextWidth","drawText","clear","clearArea","xPx","yPx","trunc","Manager","cells","Grid","suppressOOBWarn","createElement","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","cellX","cellY","filter","c","cell","pixelX","pixelY","drawImage","defaultValueGenerator","_width","_height","idx","size","coord","value","isOutOfBounds","get","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","_cache","hasOwnProperty","pixels","getImageData","cvs","putImageData","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","base","isRGB","trim","baseHues","join","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Actor","none","IsDestroying","IsDead","entities","sorted","sort","actor","energy","entity","hasEnergy","incrementTick","addEnergy","tickDelta","isPlayer","fireEvent","System","reduceEnergy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","camelCache","camelString","camelcaseSlow","pascalCache","constructor","component","enumerable","v","getEntity","Proxy","Reflect","old","deleteProperty","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","_getType","_definitions","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","_ecs","components","PrefabComponent","PrefabRegistry","_prefabs","nameOrClassOrPrefab","urlAlphabet","getAccessor","hasType","nestedComponent","typeOrClass","attach","configurable","has","allowMultiple","isComponent","instance","v2","EntityEvent","_entities","Entity","refs","_refs","Set","json","list","entityData","createOrGetById","pascalString","d","any","hasAny","_filter","some","hasAll","every","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","pass","LiquidContainer","destroyOnEmpty","isEmpty","add","quantity","isPourable","spawn","SPWN_POOL_LIQUID","content","_checkDestroyOnEmpty","interactor","position","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_GOBLIN_GRUNT","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","SPWN_LEATHER_BOOTS","SPWN_SHORTSWORD","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","GoblinGrunt","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","LIQUID_OIL","colorDesc","onDrink","log","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","sword","equipmentSlot","handRight","equip","GoalType","goal","targets","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","isDead","isDestroyed","handled","targetPos","result","computeAStar","cost","blocker","diagonalDistance","segment","path","delta","moveGoal","MoveGoalType","getNeighbors","defaultSettings","allowDiagonals","settings","heuristic","manhattanDistance","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","costs","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","dx","dy","item","createItem","EatFoodGoalType","food","pickRandom","arr","floor","random","randomInt","wanderer","Door","isOpen","ch","shadowcaster","Blocker","Shadowcaster","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Armor","modifiers","moniker","mod","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","dropper","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","SCREEN_CHARACTER","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","range","getAbilityValue","ABILITY_THROWING","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","ABILITY_SPEED","ABILITY_ARMOR","ABILITY_DODGE","ABILITY_PENETRATION","ABILITY_ACCURACY","lookup","ArmorAbility","SpeedAbility","ThrowingAbility","DodgeAbility","PenetrationAbility","AccuracyAbility","getAbility","getAbilityName","compute","STAT_STRENGTH","getStatModifier","getModifierSum","Ability","STAT_FINESSE","STAT_ATHLETICISM","STAT_TRICKERY","getStatName","stat","getStatValue","stats","rollStat","baseStat","getModifiers","reduce","sum","cur","modifier","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","sx","sy","e2","bresenhamLineExclusive","corpse","corpseSpawnable","FragileGlass","CONSOLE_EVENT_SHATTER","shatter","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","CONSOLE_EVENT_MISS","CONSOLE_EVENT_BLOCK","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","attacker","defender","dodge","accuracy","shouldAppear","armor","penetration","dmgVerb","getDmgTypeVerb","damageType","dmg","damage","sourceItem","getMessage","DMG_TYPE_BLUDGEONING","DMG_TYPE_PIERCING","DMG_TYPE_SLASHING","verb","getDmgTypeName","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","Position","getPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Legs","targetX","targetY","targetTileEntities","nonHostile","factionMember","MoveCommand","DIR_Z","directions","shortName","fullName","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","Wandering","Directions","Explorable","Explored","Health","health","weaponName","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","Eyes","canSee","Particle","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","table","WeightedTable","pick","spawnable","rows","weight","currentW","maxWeight","goblins","forest","IsEquipped","slot","unequip","slotKey","Equipment","slots","slotTypes","includes","slotType","header","onRenderRow","isSelected","onSelect","isEquipped","isOwnedBy","EQ_SLOT_BODY","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EQ_SLOT_HAND","EquipmentSlot","equipment","isPrimary","selfPos","isAdjacent","isOffhand","Stats","mods","getStatModifiers","_sumMods","capitalize","modSum","strength","finesse","athleticism","trickery","getStatModifierSum","baseStrength","baseFinesse","baseAthleticism","baseTrickery","n","clamp","toUpperCase","substring","template","replacer","group1","group2","obj","replaced","first","Race","getRaceData","strengthMod","finesseMod","athleticismMod","trickeryMod","modStrength","modFinesse","modAthleticism","modTrickery","RACE_HUMAN","RACE_GOBLIN","RaceData","Weapon","getWeaponTypeName","weaponType","getWeaponTypeFamily","getWeaponTypeDmgType","dmgRoll","WPN_TYPE_WAR_HAMMER","WPN_TYPE_SLEDGE_HAMMER","WPN_TYPE_CLUB","WPN_TYPE_MACE","WPN_TYPE_HEAVY_AXE","WPN_TYPE_HATCHET","WPN_TYPE_LONGSWORD","WPN_TYPE_SHORTSWORD","WPN_TYPE_DAGGER","WPN_TYPE_STAFF","WPN_TYPE_HALBERD","WPN_TYPE_JAVELIN","family","WPN_FAMILY_HAMMER","WPN_FAMILY_AXE","WPN_FAMILY_BLADE","WPN_FAMILY_POLEARM","getWeaponType","WPN_FAMILY_ARCHERY","getWeaponFamilyName","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","toFixed","padEnd","hp","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","INPUT_CMD_CHARACTER","KEY_Y","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_T","KEY_U","KEY_V","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","ListSelectionScreen","CharacterScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","getEntitiesAt","hostileEntities","areEntitiesHostile","melee","doorEntity","move","lootable","items","pushScreen","onGetRowName","replaceScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","SelectableList","setItems","selected","up","down","selectItem","ypos","textLen","_idx","_items","refreshList","isBack","interaction","left","top","xpos","NOOP","enable","disable","cursorColor","types","color","getEntities","faction","relation","getEntityRelation","getDisplay","drawCursor","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","selectSlot","defaultRowRender","cancel","Simple","repeat","_current","_repeat","Scheduler","EventQueue","getTime","getEventTime","remove","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","healthMax","pad","modDir","createPrefab","entityId","serialized","isTurn","meleeCommand","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","isEnabled","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","sector","loadSectorPositionData","x2","y2","diameter","getEntitiesInRect","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","_data","_idHash","entries","fov","FOV","isSquareVisible","isVisible","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","Speed","Action","getSpeed","_defaultDuration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","emitter","particleEmitter","isExpired","targetCount","createParticle","setRelation","factionA","factionB","idA","idB","_relationKey","relations","entityA","entityB","memberA","memberB","getRelation","onWindowResize","innerWidth","renderedTileWidth","innerHeight","renderedTileHeight","resizeDisplay","topLeftWorldX","topLeftWorldY","worldX","worldY","padding","sectorTxt","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","exits","connectionsNorth","connectionsWest","getExits","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","SectorGenerator","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","populateTile","trySpawn","TileThemePopulator","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileContainer","MapGenerator","digPercentage","getRooms","createRoom","getDoors","TileScheme","defaultType","getTile","RoomData","addRoom","cloneTo","setTileTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","c1","c2","c3","c4","bytes","crypto","getRandomValues","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","populateRoom","setTheme","exitOffset","castle","DenseCastleScheme","combineOther","curId","createNodeId","splitNodeVertical","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","flat","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","intersects","msgs","isDestroying","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","getPrototypeOf","__proto__","mode","ns","getOwnPropertyNames","defineProperty","globalThis","Function","toStringTag"],"mappings":"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","file":"main.03ff9be7e01f70cf1bf5.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\nimport { Howl } from 'howler';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n\nvar sound = new Howl({\n    src: ['/resources/music/menu.wav'],\n    loop: true,\n    volume: 0.25,\n});\n\nsound.play();\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.camera = new CameraManager(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        this.clock.update(dt);\n        this.actionSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.meleeSystem.update(dt);\n        this.deathSystem.update(dt);\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.destroySystem.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    tileWidth = 16;\n    tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: 20,\n            height: 20,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height, zoom) {\n        this.display.setSize(width, height, zoom);\n    }\n\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n        this.ctx.globalCompositeOperation = 'destination-over';\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(0, 0, this.tileWidth * this.width, this.tileHeight * this.height);\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + (i * 2);\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Actor, IsDead, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            none: [IsDestroying, IsDead],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = new Map();\n\nexport const camelString = (value) => {\n    if (!camelCache.has(value)) {\n        camelCache.set(value, camelcaseSlow(value));\n    }\n\n    return camelCache.get(value);\n};\n\nconst pascalCache = new Map();\n\nexport const pascalString = (value) => {\n    if (!pascalCache.has(value)) {\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\n    }\n\n    return pascalCache.get(value);\n};\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\n                entity\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import { camelString } from './util/string-util';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    entity = null;\n    ecs = null;\n    _props = {};\n    _isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this._props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this._props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.entity;\n\n            this.entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this._isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this._props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelString(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this._props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport { camelString } from '../util/string-util';\n\nexport default class ComponentRegistry {\n    _definitions = new Map();\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    register(component) {\n        this._definitions.set(component.name, component);\n        camelString(component.name); // prime camelcase cache\n    }\n\n    getAccessor(type) {\n        return camelString(type);\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this._definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this._ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    _prefabs = {};\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this._ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this._ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this._ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this._prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this._ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    _prevented = false;\n    _handled = false;\n\n    get prevented() {\n        return this._prevented;\n    }\n\n    get handled() {\n        return this._handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this._handled = true;\n        this._prevented = true;\n    }\n\n    prevent() {\n        this._prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    id = null;\n    components = {};\n    ecs = null;\n    _isDestroyed = false;\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.ecs = ecs;\n        this.id = id || ecs.generateId();\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this._isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { pascalString } from '../util/string-util';\nimport Entity from '../Entity';\n\nexport default class EntityRegistry {\n    _entities = new Map();\n    _ecs = null;\n    _refs = new Map();\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    get all() {\n        return this._entities.values();\n    }\n\n    register(entity) {\n        this._entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this._entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this._ecs, id);\n\n        this.register(entity);\n\n        this._ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this._entities.delete(entity.id);\n        this._ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this._refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this._refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this._refs.has(entityId)) {\n            this._refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this._refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this._refs.has(entityId)) {\n            this._refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities ? entities : this._entities;\n\n        list.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = pascalString(key);\n            const definition = this._ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    _ecs;\n    _filter;\n    _onEntityAddedCallbacks = [];\n    _onEntityRemovedCallbacks = [];\n    _cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this._ecs = ecs;\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this._filter.any.length\n            ? this._filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this._filter.all.every((c) => entity.has(c));\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this._onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this._cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this._cache.add(entity);\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this._cache.clear();\n\n        for (const entity of this._ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this._cache;\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    _ecs;\n    _queries = [];\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this._ecs, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this._queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this._queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity(id) {\n        return this.entities.create(id);\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize(entities) {\n        return {\n            entities: this.entities.serialize(entities),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.data.interactor.fireEvent('energy-consumed', 400);\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n\n        evt.data.interactor.fireEvent('energy-consumed', 700);\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\nexport const SPWN_LEATHER_BOOTS = 'SPWN_LEATHER_BOOTS';\nexport const SPWN_SHORTSWORD = 'SPWN_SHORTSWORD';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_LEATHER_BOOTS: simplePrefab('Boots'),\n    SPWN_SHORTSWORD: simplePrefab('Shortsword'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\nexport const LIQUID_OIL = 4;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_SHORTSWORD } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    const sword = spawn(SPWN_SHORTSWORD);\n\n    goblin.equipmentSlot.handRight.equip(sword);\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const targets = new Set();\n\n        entity.fireEvent('try-detect-hostiles', {\n            targets,\n        });\n\n        if (targets.size > 0) {\n            const target = [...targets][0];\n\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { computeAStar } from '../../utils/AStar';\nimport { game } from '../../core/Game';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { MoveGoalType } from './MoveGoalType';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.isDead || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        // try melee\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        const start = entity.position.getPos();\n        const targetPos = goal.target.position.getPos();\n\n        // try pathing to target\n        const result = computeAStar({\n            start,\n            goal: targetPos,\n            cost: (a, b) => {\n                const entities = game.map.getEntitiesAt(b.x, b.y);\n\n                if (game.map.isOutOfbounds(b.x, b.y)) {\n                    return Infinity;\n                }\n\n                if (entities.some((e) => e.blocker)) {\n                    return Infinity;\n                }\n\n                return diagonalDistance(a, b);\n            }\n        });\n\n        if (result.success) {\n            const segment = result.path[1];\n            const delta = {\n                x: segment.x - start.x,\n                y: segment.y - start.y,\n            };\n            const moveGoal = MoveGoalType.createAsSubGoal(goal, {\n                data: delta\n            });\n\n            entity.brain.pushGoal(moveGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        entity.fireEvent('energy-consumed', 1000);\n\n        return FAILURE;\n    };\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return false;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n\n        return true;\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return false;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        if (this.closeDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        if (this.openDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\n\nexport class Armor extends Component {\n    static properties = {\n        value: 4,\n    };\n\n    onQueryEquippedAbilityModifierArmor(evt) {\n        evt.data.modifiers.push({\n            source: this.entity.moniker.name,\n            mod: this.value,\n        });\n    }\n}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        ob.fireEvent('dropped', {\n            dropper: this.entity,\n        });\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\nexport const SCREEN_LIST_SELECT = 8;\nexport const SCREEN_CHARACTER = 9;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport { ABILITY_THROWING, getAbilityValue } from '../../data/Abilities';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        const range = getAbilityValue(ABILITY_THROWING, evt.data.interactor);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.slice(0, range + 1).map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                evt.data.interactor.fireEvent('energy-consumed', 700);\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    const atMaxRange = idx === range;\n\n                    if (lineValid && (body || atMaxRange)) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < blockerIdx && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","import ArmorAbility from './abilities/ArmorAbility';\nimport SpeedAbility from './abilities/SpeedAbility';\nimport ThrowingAbility from './abilities/ThrowingAbility';\nimport DodgeAbility from './abilities/DodgeAbility';\nimport PenetrationAbility from './abilities/PenetrationAbility';\nimport AccuracyAbility from './abilities/AccuracyAbility';\n\nexport const ABILITY_SPEED = 'ABILITY_SPEED';\nexport const ABILITY_THROWING = 'ABILITY_THROWING';\nexport const ABILITY_ARMOR = 'ABILITY_ARMOR';\nexport const ABILITY_DODGE = 'ABILITY_DODGE';\nexport const ABILITY_PENETRATION = 'ABILITY_PENETRATION';\nexport const ABILITY_ACCURACY = 'ABILITY_ACCURACY';\n\nconst lookup = {\n    [ABILITY_ARMOR]: new ArmorAbility(),\n    [ABILITY_SPEED]: new SpeedAbility(),\n    [ABILITY_THROWING]: new ThrowingAbility(),\n    [ABILITY_DODGE]: new DodgeAbility(),\n    [ABILITY_PENETRATION]: new PenetrationAbility(),\n    [ABILITY_ACCURACY]: new AccuracyAbility(),\n};\n\nexport const getAbility = (key) => lookup[key];\nexport const getAbilityName = (key) => lookup[key].name;\nexport const getAbilityValue = (key, entity) => lookup[key].compute(entity);\n","import { ABILITY_ARMOR } from '../Abilities';\nimport { getStatModifier, STAT_STRENGTH } from '../Stats';\nimport Ability from './Ability';\n\nexport default class ArmorAbility extends Ability {\n    constructor() {\n        super(ABILITY_ARMOR, 'armor', STAT_STRENGTH);\n    }\n\n    compute(entity) {\n        const stat = getStatModifier(STAT_STRENGTH, entity);\n\n        return stat + this.getModifierSum(entity);\n    }\n}\n","import { randomInt } from '../utils/rand';\n\nexport const STAT_STRENGTH = 0;\nexport const STAT_FINESSE = 1;\nexport const STAT_ATHLETICISM = 2;\nexport const STAT_TRICKERY = 3;\n\nconst lookup = {\n    [STAT_STRENGTH]: {\n        name: 'strength',\n    },\n    [STAT_FINESSE]: {\n        name: 'finesse',\n    },\n    [STAT_ATHLETICISM]: {\n        name: 'athleticism',\n    },\n    [STAT_TRICKERY]: {\n        name: 'trickery',\n    },\n};\n\nexport const getStatName = (stat) => lookup[stat].name;\nexport const getStatValue = (stat, entity) => {\n    const name = lookup[stat].name;\n\n    return entity.stats[name]();\n};\nexport const getStatModifier = (stat, entity) => {\n    const value = getStatValue(stat, entity);\n\n    return Math.floor((value - 10) / 2);\n};\nexport const rollStat = (stat, entity) => {\n    return getStatModifier(stat, entity) + randomInt(1, 20);\n}\n","export default class Ability {\n    key = -1;\n    name = 'ability';\n    baseStat = null;\n\n    constructor(key, name, baseStat) {\n        this.key = key;\n        this.name = name;\n        this.baseStat = baseStat;\n    }\n\n    getModifiers(entity) {\n        const modifiers = [];\n\n        entity.fireEvent(`query-ability-modifier-${this.name}`, {\n            name: this.name,\n            modifiers,\n        });\n\n        return modifiers;\n    }\n\n    getModifierSum(entity) {\n        const modifiers = this.getModifiers(entity);\n\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    compute(entity) {\n        return 1;\n    }\n}\n","import { ABILITY_SPEED } from '../Abilities';\nimport Ability from './Ability';\n\nexport default class SpeedAbility extends Ability {\n    constructor() {\n        super(ABILITY_SPEED, 'speed');\n    }\n\n    compute(entity) {\n        return this.getModifierSum(entity);\n    }\n}\n","import { ABILITY_THROWING } from '../Abilities';\nimport { getStatValue, STAT_ATHLETICISM } from '../Stats';\nimport Ability from './Ability';\n\nexport default class ThrowingAbility extends Ability {\n    constructor() {\n        super(ABILITY_THROWING, 'throwing', STAT_ATHLETICISM);\n    }\n\n    compute(entity) {\n        const base = getStatValue(STAT_ATHLETICISM, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return Math.floor((base + modifier) / 2);\n    }\n}\n","import { ABILITY_DODGE } from '../Abilities';\nimport { getStatModifier, STAT_FINESSE } from '../Stats';\nimport Ability from './Ability';\n\nexport default class DodgeAbility extends Ability {\n    constructor() {\n        super(ABILITY_DODGE, 'dodge', STAT_FINESSE);\n    }\n\n    compute(entity) {\n        const stat = getStatModifier(STAT_FINESSE, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","import { ABILITY_PENETRATION } from '../Abilities';\nimport { getStatModifier, STAT_STRENGTH } from '../Stats';\nimport Ability from './Ability';\n\nexport default class PenetrationAbility extends Ability {\n    constructor() {\n        super(ABILITY_PENETRATION, 'dodge', STAT_STRENGTH);\n    }\n\n    compute(entity) {\n        const stat = getStatModifier(STAT_STRENGTH, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","import { ABILITY_ACCURACY } from '../Abilities';\nimport { getStatModifier, STAT_FINESSE } from '../Stats';\nimport Ability from './Ability';\n\nexport default class AccuracyAbility extends Ability {\n    constructor() {\n        super(ABILITY_ACCURACY, 'accuracy', STAT_FINESSE);\n    }\n\n    compute(entity) {\n        const stat = getStatModifier(STAT_FINESSE, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { getDmgTypeVerb } from '../data/DamageTypes';\nimport { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\nexport const CONSOLE_EVENT_MISS = 3;\nexport const CONSOLE_EVENT_BLOCK = 4;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_MISS]: {\n        message(data) {\n            const attacker = getMonikerIndirectObject(data.attacker);\n            const defender = getMonikerSubject(data.defender);\n\n            return `${defender} dodges an attack from ${attacker} (${data.dodge} > ${data.accuracy})`;\n        },\n        shouldAppear(data) {\n            return data.defender.has(IsPlayer) || data.attacker.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_BLOCK]: {\n        message(data) {\n            const attacker = getMonikerSubject(data.attacker);\n            const defender = getMonikerIndirectObject(data.defender);\n\n            return `${attacker} fails to penetrate ${defender}'s armor (${data.armor} > ${data.penetration})`;\n        },\n        shouldAppear(data) {\n            return data.defender.has(IsPlayer) || data.attacker.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n            const target = getMonikerIndirectObject(data.target);\n            const dmg = data.damage;\n            const item = data.sourceItem.toLowerCase();\n\n            return `${source} ${dmgVerb} ${target} with a ${item} for ${dmg} hp`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n            const target = getMonikerIndirectObject(data.target);\n\n            return `${source} ${dmgVerb} ${target} to death`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","export const DMG_TYPE_BLUDGEONING = 0;\nexport const DMG_TYPE_PIERCING = 1;\nexport const DMG_TYPE_SLASHING = 2;\n\nconst lookup = {\n    [DMG_TYPE_BLUDGEONING]: {\n        name: 'Bludgeoning',\n        verb: 'bludgeons',\n    },\n    [DMG_TYPE_PIERCING]: {\n        name: 'Piercing',\n        verb: 'pierces',\n    },\n    [DMG_TYPE_SLASHING]: {\n        name: 'Slashing',\n        verb: 'slashes',\n    },\n};\n\nexport const getDmgTypeName = (type) => lookup[type].name;\nexport const getDmgTypeVerb = (type) => lookup[type].verb;\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { ABILITY_SPEED, getAbilityValue } from '../../data/Abilities';\nimport { Blocker } from './Blocker';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.entity);\n        const cost = (1 / speed) * 1000;\n\n        this.entity.fireEvent('energy-consumed', cost);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { ABILITY_ARMOR, ABILITY_DODGE, getAbilityValue } from '../../data/Abilities';\nimport {\n    CONSOLE_EVENT_BLOCK,\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n    CONSOLE_EVENT_MISS,\n} from '../../enums/ConsoleEvents';\nimport { randomInt } from '../../utils/rand';\nimport { IsDead } from './IsDead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onAttacked(evt) {\n        const attacker = evt.data.attacker;\n        const defender = this.entity;\n\n        console.log(`Begin Attack (${attacker.moniker.display} → ${defender.moniker.display})`);\n\n        const accuracy = evt.data.accuracy;\n        const penetration = evt.data.penetration;\n        const damage = evt.data.damage;\n\n        const armor = getAbilityValue(ABILITY_ARMOR, defender) + randomInt(1, 20);\n        const dodge = getAbilityValue(ABILITY_DODGE, defender) + randomInt(1, 20);\n        const health = this.value;\n\n        console.log(`- Accuracy (${accuracy}) vs Dodge (${dodge})`);\n        console.log(`- Penetration (${penetration}) vs Armor (${armor})`);\n        console.log(`- Damage (${damage}) vs Health (${health})`);\n\n        if (dodge > accuracy) {\n            console.log(`- ${defender.moniker.display} DODGE!`)\n\n            game.console.event(CONSOLE_EVENT_MISS, {\n                defender,\n                attacker,\n                dodge,\n                accuracy,\n            });\n\n            return;\n        }\n\n        if (armor > penetration) {\n            console.log(`- ${defender.moniker.display} BLOCKS!`)\n\n            game.console.event(CONSOLE_EVENT_BLOCK, {\n                defender,\n                attacker,\n                armor,\n                penetration,\n            });\n\n            return;\n        }\n\n        console.log(`- HIT! ${damage}`);\n\n        console.log(`End Attack`);\n\n        this.value -= damage;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: defender,\n                source: attacker,\n                sourceItem: evt.data.weaponName,\n                damage,\n                damageType: evt.data.damageType,\n            });\n\n            this.value = 0;\n            this.entity.add(IsDead);\n        } else {\n            game.console.event(CONSOLE_EVENT_DAMAGE, {\n                target: defender,\n                source: attacker,\n                sourceItem: evt.data.weaponName,\n                damage,\n                damageType: evt.data.damageType,\n            });\n\n            const pos = this.entity.position.getPos();\n\n            game.particles.createParticle(pos.x, pos.y, {\n                lifetime: 140,\n                fg1s: ['#8d4c4f', '#730d14'],\n                glyphs: ['*'],\n            });\n        }\n\n        evt.handle();\n    }\n\n    onDamage(evt) {\n        this.value -= evt.data.damage.value;\n\n        if (this.value <= 0) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: this.entity,\n                source: evt.data.source,\n                sourceItem: evt.data.sourceItem,\n                damage: evt.data.damage,\n            });\n\n            this.value = 0;\n            this.entity.add(IsDead);\n        } else {\n            game.console.event(CONSOLE_EVENT_DAMAGE, {\n                target: this.entity,\n                source: evt.data.source,\n                sourceItem: evt.data.sourceItem,\n                damage: evt.data.damage,\n            });\n\n            const pos = this.entity.position.getPos();\n\n            game.particles.createParticle(pos.x, pos.y, {\n                lifetime: 140,\n                fg1s: ['#8d4c4f', '#730d14'],\n                glyphs: ['*'],\n            });\n        }\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDead extends Component {}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Eyes extends Component {\n    static properties = {\n        range: 5,\n    };\n\n    canSee(entity) {\n        const start = this.entity.position.getPos();\n        const end = entity.position.getPos();\n\n        const line = bresenhamLine(start.x, start.y, end.x, end.y);\n\n        if (line.length > this.range) {\n            return false;\n        }\n\n        return !line.some((segment) => {\n            return game.map\n                .getEntitiesAt(segment.x, segment.y)\n                .some((entity) => entity.has(Shadowcaster));\n        });\n    }\n\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        // get within square area\n        const targets = game.map\n            .getEntitiesInRange(position.x, position.y, this.range)\n            .filter((e) => {\n                if (!e.actor) {\n                    return false;\n                }\n                if (!game.factions.areEntitiesHostile(this.entity, e)) {\n                    return false;\n                }\n\n                return this.canSee(e);\n            })\n\n        if (targets.length > 0) {\n            targets.forEach((e) => {\n                evt.data.targets.add(e);\n            });\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_AMULET, SPWN_CLOTH_ARMOR, SPWN_SHORTSWORD, SPWN_STONE, SPWN_VIAL_BLOOD } from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(4, SPWN_CLOTH_ARMOR);\ngoblins.add(15, SPWN_SHORTSWORD);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY]\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter((slot) => {\n            return this.slotTypes.includes(slot.slotType);\n        });\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Equip ${this.entity.moniker.display}`,\n            list: slots,\n            onRenderRow: (slot, x, y, isSelected) => {\n                let text = slot.name;\n\n                if (!slot.isEmpty) {\n                    text += ` [${slot.content.moniker.display}]`;\n                }\n\n                if (isSelected) {\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n                } else {\n                    game.renderer.drawText(x, y, `- ${text}`);\n                }\n            },\n            onSelect: (slot) => {\n                slot.unequip();\n                slot.equip(this.entity);\n                evt.data.interactor.fireEvent('energy-consumed', 200);\n                evt.handle();\n                game.screens.popScreen();\n            }\n        });\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.isInventoried) {\n            if (!this.entity.isInventoried.isOwnedBy(evt.data.interactor)) {\n                return;\n            }\n        }\n\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\nexport const EQ_SLOT_HAND = 'EQ_SLOT_HAND';\n","import { Component } from 'geotic';\nimport { ABILITY_ACCURACY, getAbilityValue } from '../../data/Abilities';\nimport { DMG_TYPE_BLUDGEONING } from '../../data/DamageTypes';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { getStatModifier, rollStat, STAT_ATHLETICISM, STAT_STRENGTH } from '../../data/Stats';\nimport { pickRandom } from '../../utils/rand';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n        isPrimary: false,\n        isOffhand: false,\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n\n    onTryMelee(evt) {\n        if (!this.isPrimary) {\n            return;\n        }\n\n        const map = window.game.map;\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        if (this.isEmpty) {\n            evt.data.target.fireEvent('attacked', {\n                attacker: this.entity,\n                weaponName: pickRandom(['punch', 'kick']),\n                type: this.damageType,\n                damage: getStatModifier(STAT_ATHLETICISM, this.entity),\n                penetration: 4 + rollStat(STAT_STRENGTH, this.entity),\n                accuracy: getAbilityValue(ABILITY_ACCURACY, this.entity),\n                damageType: DMG_TYPE_BLUDGEONING,\n            });\n\n            this.entity.fireEvent('energy-consumed', 800);\n            evt.handle();\n            return;\n        }\n\n        this.content.fireEvent('try-use-melee', {\n            interactor: this.entity,\n            target: evt.data.target,\n        });\n\n        evt.handle();\n    }\n\n    onQueryAbilityModifierArmor(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        this.content.fireEvent(`query-equipped-ability-modifier-${evt.data.name}`, {\n            name: evt.data.name,\n            modifiers: evt.data.modifiers,\n        });\n    }\n}\n","import { Component } from 'geotic';\nimport { capitalize } from 'rot-js/lib/util';\nimport { getStatName, STAT_ATHLETICISM, STAT_FINESSE, STAT_STRENGTH, STAT_TRICKERY } from '../../data/Stats';\n\nexport class Stats extends Component {\n    static properties = {\n        baseStrength: 10,\n        baseFinesse: 10,\n        baseAthleticism: 10,\n        baseTrickery: 10,\n    };\n\n    _sumMods(modifiers) {\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    getStatModifiers(stat) {\n        const name = getStatName(stat);\n        const modifiers = [];\n\n        this.entity.fireEvent(`query-stat-modifier-${name}`, {\n            modifiers\n        });\n\n        return modifiers;\n    }\n\n    getStatModifierSum(stat) {\n        const mods = this.getStatModifiers(stat);\n\n        return this._sumMods(mods);\n    }\n\n    data(stat) {\n        const name = getStatName(stat);\n        const modifiers = this.getStatModifiers(stat);\n        const base = this[`base${capitalize(name)}`];\n        const modSum = this._sumMods(modifiers);\n        const sum = base + modSum;\n\n        return {\n            stat,\n            name,\n            modifiers,\n            base,\n            sum,\n            modSum,\n        };\n    }\n\n    all() {\n        return {\n            strength: this.data(STAT_STRENGTH),\n            finesse: this.data(STAT_FINESSE),\n            athleticism: this.data(STAT_ATHLETICISM),\n            trickery: this.data(STAT_TRICKERY),\n        };\n    }\n\n    strength() {\n        const mod = this.getStatModifierSum(STAT_STRENGTH);\n\n        return this.baseStrength + mod;\n    }\n\n    finesse() {\n        const mod = this.getStatModifierSum(STAT_FINESSE);\n\n        return this.baseFinesse + mod;\n    }\n\n    athleticism() {\n        const mod = this.getStatModifierSum(STAT_ATHLETICISM);\n\n        return this.baseAthleticism + mod;\n    }\n\n    trickery() {\n        const mod = this.getStatModifierSum(STAT_TRICKERY);\n\n        return this.baseTrickery + mod;\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { Component } from 'geotic';\nimport { getRaceData, RACE_HUMAN } from '../../data/Races';\n\nexport class Race extends Component {\n    static properties = {\n        key: RACE_HUMAN\n    };\n\n    data() {\n        return getRaceData(this.key);\n    }\n\n    get name() {\n        return this.data().name;\n    }\n\n    get speed() {\n        return this.data().speed;\n    }\n\n    get strengthMod() {\n        return this.data().modStrength;\n    }\n\n    get finesseMod() {\n        return this.data().modFinesse;\n    }\n\n    get athleticismMod() {\n        return this.data().modAthleticism;\n    }\n\n    get trickeryMod() {\n        return this.data().modTrickery;\n    }\n\n    onQueryStatModifierStrength(evt) {\n        const mod = this.strengthMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierFinesse(evt) {\n        const mod = this.finesseMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierAthleticism(evt) {\n        const mod = this.athleticismMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierTrickery(evt) {\n        const mod = this.trickeryMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryAbilityModifierSpeed(evt) {\n        evt.data.modifiers.push({\n            source: this.name,\n            mod: this.speed,\n        });\n    }\n};\n","import RaceData from './RaceData';\n\nexport const RACE_HUMAN = 'RACE_HUMAN';\nexport const RACE_GOBLIN = 'RACE_GOBLIN';\n\nconst lookup = {\n    [RACE_HUMAN]: new RaceData({\n        name: 'Human',\n        key: RACE_HUMAN,\n        speed: 1.2,\n        modStrength: 1,\n        modFinesse: 1,\n        modAthleticism: 1,\n        modTrickery: 1,\n    }),\n    [RACE_GOBLIN]: new RaceData({\n        name: 'Goblin',\n        key: RACE_GOBLIN,\n        speed: 1,\n        modStrength: -1,\n        modFinesse: 2,\n        modAthleticism: 1,\n        modTrickery: 2,\n    }),\n};\n\nexport const getRaceData = (name) => lookup[name];\n","export default class RaceData {\n    name = '';\n    speed = 1;\n    key = 1;\n    modStrength = 0;\n    modFinesse = 0;\n    modAthleticism = 0;\n    modTrickery = 0;\n\n    constructor(data) {\n        this.name = data.name || '';\n        this.speed = data.speed || 1;\n        this.key = data.key;\n\n        this.modStrength = data.modStrength || 0;\n        this.modFinesse = data.modFinesse || 0;\n        this.modAthleticism = data.modAthleticism || 0;\n        this.modTrickery = data.modTrickery || 0;\n    }\n}\n","import { Component } from 'geotic';\nimport { ABILITY_ACCURACY, ABILITY_PENETRATION, getAbilityValue } from '../../data/Abilities';\nimport { getStatModifier, rollStat, STAT_STRENGTH } from '../../data/Stats';\nimport { getWeaponTypeDmgType, getWeaponTypeFamily, getWeaponTypeName } from '../../data/WeaponTypes';\nimport { randomInt } from '../../utils/rand';\n\nexport class Weapon extends Component {\n    static properties = {\n        weaponType: 'WPN_TYPE_DAGGER',\n        dmgRoll: '',\n        penetration: 4\n    };\n\n    get name() {\n        return getWeaponTypeName(this.weaponType);\n    }\n\n    get family() {\n        return getWeaponTypeFamily(this.weaponType);\n    }\n\n    get damageType() {\n        return getWeaponTypeDmgType(this.weaponType);\n    }\n\n    onTryUseMelee(evt) {\n        evt.data.target.fireEvent('attacked', {\n            attacker: evt.data.interactor,\n            weaponName: this.name,\n            damageType: this.damageType,\n            damage: randomInt(1, 5) + 3,\n            penetration: rollStat(STAT_STRENGTH, evt.data.interactor) + this.penetration,\n            accuracy: getAbilityValue(ABILITY_ACCURACY, evt.data.interactor) + randomInt(1, 20)\n        });\n\n        evt.data.interactor.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { DMG_TYPE_BLUDGEONING, DMG_TYPE_PIERCING, DMG_TYPE_SLASHING } from './DamageTypes';\nimport { WPN_FAMILY_AXE, WPN_FAMILY_BLADE, WPN_FAMILY_HAMMER, WPN_FAMILY_POLEARM } from './WeaponFamilies';\n\n// hammer family\nexport const WPN_TYPE_WAR_HAMMER = 'WPN_TYPE_WAR_HAMMER';\nexport const WPN_TYPE_SLEDGE_HAMMER = 'WPN_TYPE_SLEDGE_HAMMER';\nexport const WPN_TYPE_CLUB = 'WPN_TYPE_CLUB';\nexport const WPN_TYPE_MACE = 'WPN_TYPE_MACE';\n// axe family\nexport const WPN_TYPE_HEAVY_AXE = 'WPN_TYPE_HEAVY_AXE';\nexport const WPN_TYPE_HATCHET = 'WPN_TYPE_HATCHET';\n// blade family\nexport const WPN_TYPE_LONGSWORD = 'WPN_TYPE_LONGSWORD';\nexport const WPN_TYPE_SHORTSWORD = 'WPN_TYPE_SHORTSWORD';\nexport const WPN_TYPE_DAGGER = 'WPN_TYPE_DAGGER';\n// polearm family\nexport const WPN_TYPE_STAFF = 'WPN_TYPE_STAFF';\nexport const WPN_TYPE_HALBERD = 'WPN_TYPE_HALBERD';\nexport const WPN_TYPE_JAVELIN = 'WPN_TYPE_JAVELIN';\n\nconst lookup = {\n    [WPN_TYPE_WAR_HAMMER]: {\n        name: 'War hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_WAR_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_SLEDGE_HAMMER]: {\n        name: 'Sledge hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_SLEDGE_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_CLUB]: {\n        name: 'Club',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_CLUB,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_MACE]: {\n        name: 'Mace',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_MACE,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HEAVY_AXE]: {\n        name: 'Heavy axe',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HEAVY_AXE,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_HATCHET]: {\n        name: 'Hatchet',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HATCHET,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_LONGSWORD]: {\n        name: 'Longsword',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_LONGSWORD,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_SHORTSWORD]: {\n        name: 'Shortsword',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_SHORTSWORD,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_DAGGER]: {\n        name: 'Dagger',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_DAGGER,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_STAFF]: {\n        name: 'Staff',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_STAFF,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HALBERD]: {\n        name: 'Halberd',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_HALBERD,\n        damageType: DMG_TYPE_PIERCING,\n    },\n    [WPN_TYPE_JAVELIN]: {\n        name: 'Javelin',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_JAVELIN,\n        damageType: DMG_TYPE_PIERCING,\n    },\n};\n\nexport const getWeaponType = (type) => lookup[type];\nexport const getWeaponTypeName = (type) => lookup[type].name;\nexport const getWeaponTypeFamily = (type) => lookup[type].family;\nexport const getWeaponTypeDmgType = (type) => lookup[type].damageType;\n","export const WPN_FAMILY_HAMMER = 'WPN_FAMILY_HAMMER';\nexport const WPN_FAMILY_AXE = 'WPN_FAMILY_AXE';\nexport const WPN_FAMILY_BLADE = 'WPN_FAMILY_BLADE';\nexport const WPN_FAMILY_ARCHERY = 'WPN_FAMILY_ARCHERY';\nexport const WPN_FAMILY_POLEARM = 'WPN_FAMILY_POLEARM';\n\nconst lookup = {\n    [WPN_FAMILY_HAMMER]: {\n        name: 'Hammer'\n    },\n    [WPN_FAMILY_AXE]: {\n        name: 'Axe'\n    },\n    [WPN_FAMILY_BLADE]: {\n        name: 'Blade'\n    },\n    [WPN_FAMILY_ARCHERY]: {\n        name: 'Archery'\n    },\n    [WPN_FAMILY_POLEARM]: {\n        name: 'Polearm'\n    },\n};\n\nexport const getWeaponFamilyName = (family) => lookup[family].name;\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import {\n    IsInventoried,\n    Explored,\n    Glyph,\n    Position,\n    IsVisible,\n    IsDestroying,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, IsVisible],\n            none: [IsInventoried, IsDestroying],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [IsInventoried, IsVisible, IsDestroying],\n        });\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        const explored = Array.from(this.#explored.get());\n\n        for (let i = 0; i < explored.length; i++) {\n            const renderable = explored[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                '#2c3538',\n                '#2c3538'\n            );\n        }\n\n        const renderables = Array.from(this.#query.get());\n\n        for (let i = 0; i < renderables.length; i++) {\n            const renderable = renderables[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn.toFixed(0)}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${hp.value}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n    KEY_Y,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_CHARACTER,            'character',              true, KEY_Y,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\nexport const INPUT_CMD_CHARACTER = 30;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_LIST_SELECT,\n    SCREEN_CHARACTER,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport ListSelectionScreen from './screens/ListSelectionScreen';\nimport CharacterScreen from './screens/CharacterScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\n            [SCREEN_CHARACTER]: new CharacterScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    replaceScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_CHARACTER,\n    SCREEN_LIST_SELECT,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const items = entities.filter((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n\n            return evt.data.interactions.length > 0;\n        });\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        if (items.length == 1) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: items[0],\n            });\n            return;\n        }\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Choose`,\n            list: items,\n            onGetRowName: (item) => item.moniker.display,\n            onSelect: (item) => {\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\n                    interactor: this.game.player.entity,\n                    interactable: item,\n                });\n            }\n        });\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CHARACTER) {\n            this.game.screens.pushScreen(SCREEN_CHARACTER, {\n                character: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(\n            1,\n            4,\n            `move       [q, w, e, a, d, z, x, c]`\n        );\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InventoryScreen extends Screen {\n    #accessible;\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n        this.list.setItems(this.#accessible.inventory.content);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interactable = this.list.selected;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down()\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        if (this.list.items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            const textLen = this.game.renderer.computeTextWidth(item.moniker.display);\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n\n            if (item.isEquipped) {\n                const slot = item.isEquipped.slot.name;\n\n                this.game.renderer.drawText(4 + textLen + 0.5, ypos, `[${slot}]`, '#2c3538');\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","export default class SelectableList {\n    _items = [];\n    _idx = 0;\n\n    get selected() {\n        return this._items[this._idx];\n    }\n\n    get items() {\n        return this._items;\n    }\n\n    get data() {\n        return this._items.map((item, idx) => ({\n            item,\n            idx,\n            isSelected: idx === this._idx,\n        }));\n    }\n\n    get isEmpty() {\n        return this._items.length <= 0;\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    constructor(items = [], idx = 0) {\n        this._idx = idx;\n        this.setItems(items);\n    }\n\n    setItems(items = []) {\n        this._items = items;\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\n    }\n\n    up() {\n        this._idx--;\n\n        if (this._idx < 0) {\n            this._idx = this._items.length - 1;\n        }\n    }\n\n    down() {\n        this._idx++;\n\n        if (this._idx >= this._items.length) {\n            this._idx = 0;\n        }\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 12;\n    #interactable;\n    #interactor;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.#width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.#height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.list.setItems([...evt.data.interactions, {\n            name: 'Back',\n            isBack: true,\n        }]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interaction = this.list.selected;\n\n        if (interaction.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.#interactable.fireEvent(interaction.evt, {\n            interactor: this.#interactor,\n        });\n\n        if (this.#interactable.isDestroyed) {\n            this.game.screens.popScreen();\n\n            return;\n        }\n\n        this.refreshList();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width + 1,\n            this.#height + 1\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const xpos = this.left + 2;\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const ypos = idx + this.top + 4;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, `→ ${item.name}`, 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\n            }\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { FactionMember } from '../../../ecs/components';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        const target = this.game.cursor\n            .getEntities()\n            .filter((e) => e.has(FactionMember))\n            .pop();\n\n        const player = this.game.player.entity;\n\n        if (target) {\n            const faction = target.factionMember.faction;\n            const relation = this.game.factions.getEntityRelation(\n                player,\n                target\n            );\n\n            let disp = this.game.factions.getDisplay(relation);\n\n            this.game.renderer.drawTextCenter(\n                1,\n                `${faction.display} Faction [${disp}]`\n            );\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class EquipmentScreen extends Screen {\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessor = ctx.accessor;\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectSlot() {\n        const interactable = this.list.selected.content;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectSlot();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\n            'purple'\n        );\n\n        if (this.list.isEmpty) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const slot = item;\n            const ypos = idx + 5;\n            const selectedColor = 'yellow';\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, `→ ${slot.name}`, selectedColor);\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\n            }\n\n            if (slot.isEmpty) {\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\n            } else {\n                const content = slot.content;\n                this.game.renderer.draw(15, ypos,\n                    content.glyph.char,\n                    content.glyph.primary,\n                    content.glyph.secondary,\n                    content.glyph.background\n                );\n                this.game.renderer.drawText(16, ypos, ` ${content.moniker.display}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport Simple from 'rot-js/lib/scheduler/simple';\n\nconst NOOP = () => {};\n\nexport default class ListSelectionScreen extends Screen {\n    width = 16;\n    height = 12;\n    list = new SelectableList();\n    header = '';\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.list.setItems(ctx.list || []);\n        this.header = ctx.header || 'Select';\n        this.onSelect = ctx.onSelect || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onGetRowName = ctx.onGetRowName || NOOP;\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        this.onSelect(this.list.selected);\n    }\n\n    cancel() {\n        this.onCancel();\n        this.game.screens.popScreen();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.cancel();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    defaultRowRender(row, x, y, isSelected) {\n        const text = this.onGetRowName(row, x, y, isSelected);\n\n        if (isSelected) {\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n        } else {\n            this.game.renderer.drawText(x, y, `- ${text}`);\n        }\n    };\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.width + 1,\n            this.height + 1\n        );\n\n        this.game.renderer.drawTextCenter(this.top + 2, this.header);\n\n        for (let i = this.left; i < this.left + this.width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.height, '└');\n        this.game.renderer.draw(\n            this.left + this.width,\n            this.top + this.height,\n            '┘'\n        );\n\n        const xpos = this.left + 2;\n\n        this.list.data.forEach(({item, idx, isSelected}) => {\n            const ypos = idx + this.top + 4;\n\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\n        });\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport { getStatValue } from '../../../data/Stats';\nimport { ABILITY_ACCURACY, ABILITY_ARMOR, ABILITY_DODGE, ABILITY_PENETRATION, ABILITY_SPEED, getAbilityValue } from '../../../data/Abilities';\n\nexport default class CharacterScreen extends Screen {\n    character;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.character = ctx.character;\n\n        const stats = this.character.stats.all();\n\n        this.list = new SelectableList(Object.values(stats));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down()\n        }\n\n        // if (cmd.type === INPUT_CMD_CONFIRM) {\n        //     this.selectItem();\n        // }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.character.moniker.display} Character ~`,\n            'orange'\n        );\n\n        const health = this.character.health.value;\n        const healthMax = this.character.health.max;\n\n        this.game.renderer.drawText(2, 5, 'health');\n        this.game.renderer.drawText(10, 5, `${health}/${healthMax}`);\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.character);\n\n        this.game.renderer.drawText(2, 6, 'speed');\n        this.game.renderer.drawText(10, 6, `${speed}`);\n\n        const armor = getAbilityValue(ABILITY_ARMOR, this.character);\n\n        this.game.renderer.drawText(2, 7, 'armor');\n        this.game.renderer.drawText(10, 7, `${armor}`);\n\n        const dodge = getAbilityValue(ABILITY_DODGE, this.character);\n\n        this.game.renderer.drawText(2, 8, 'dodge');\n        this.game.renderer.drawText(10, 8, `${dodge}`);\n\n        const penetration = getAbilityValue(ABILITY_PENETRATION, this.character);\n\n        this.game.renderer.drawText(2, 9, 'penetration');\n        this.game.renderer.drawText(10, 9, `${penetration}`);\n\n        const accuracy = getAbilityValue(ABILITY_ACCURACY, this.character);\n\n        this.game.renderer.drawText(2, 10, 'accuracy');\n        this.game.renderer.drawText(10, 10, `${accuracy}`);\n\n        let pad = 0;\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const stat = item;\n            const ypos = idx + 13 + pad;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, `→ ${stat.name}`, 'yellow');\n\n                const modDir = stat.modSum > 0 ? '+' : '-';\n\n                this.game.renderer.drawText(10, ypos, `${stat.sum} (${stat.base}${modDir}${Math.abs(stat.modSum)})`, 'yellow');\n\n                stat.modifiers.forEach((mod, i) => {\n                    if (mod.mod > 0) {\n                        this.game.renderer.drawText(3, ypos + i + 1, `+${mod.mod} (${mod.source})`, 'green');\n                    } else {\n                        this.game.renderer.drawText(3, ypos + i + 1, `-${Math.abs(mod.mod)} (${mod.source})`, 'red');\n                    }\n                });\n\n                pad += stat.modifiers.length;\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${stat.name}`);\n                this.game.renderer.drawText(10, ypos, `${stat.sum}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.moveCommand.destroy();\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.meleeCommand.destroy();\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getEntitiesInRect(x, y, width, height) {\n        const entities = [];\n\n        for (let i = x; i < x + width + 1; i++) {\n            for (let j = y; j < y + height + 1; j++) {\n                entities.push(...this.getEntitiesAt(i, j));\n            }\n        }\n\n        return entities;\n    }\n\n    getEntitiesInRange(x, y, range) {\n        const diameter = range * 2;\n\n        return this.getEntitiesInRect(\n            x - range,\n            y - range,\n            diameter,\n            diameter\n        );\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    isOutOfbounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    IsDestroying,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 12, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { IsDead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [IsDead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 120);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n    padding = 4;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    get topLeftWorldX() {\n        return Math.floor(Math.min(\n            Math.max(-this.padding, this.#focusX - this.width / 2),\n            Math.max(\n                (this.width - this.game.map.width) / -2,\n                this.padding + this.game.map.width - this.width\n            ))\n        );\n    }\n\n    get topLeftWorldY() {\n        return Math.floor(Math.min(\n            Math.max(-this.padding, this.#focusY - this.height / 2),\n            Math.max(\n                (this.height - this.game.map.height) / -2,\n                this.padding + this.game.map.height - this.height\n            ))\n        );\n    }\n\n    computeSize() {\n        this.width = Math.floor(window.innerWidth / this.renderedTileWidth) - 2;\n        this.height = Math.floor(window.innerHeight / this.renderedTileHeight) - 2;\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const sector = this.game.world.sector;\n        let sectorTxt = '';\n\n        if (sector) {\n            sectorTxt = `(${sector.x}, ${sector.y})`;\n        }\n\n        const fps = Math.trunc(1000 / dt);\n        const display = `${sectorTxt} ${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.camera.width - textWidth;\n\n        this.game.renderer.drawText(\n            x,\n            this.game.camera.height - 1,\n            display,\n            '#172e2e'\n        );\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            console.log('loading sector...', data);\n            this.game.ecs.deserialize(data);\n        } else {\n            console.log('generating sector...');\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(4);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR)) {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_LEATHER_BOOTS,\n    SPWN_SHORTSWORD,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_BOOTS));\n            chest.inventory.addLoot(spawn(SPWN_SHORTSWORD));\n        });\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 4;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}