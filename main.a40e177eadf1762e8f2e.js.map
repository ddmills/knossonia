{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Stackable.js","webpack://knossonia/./src/enums/Stackables.js","webpack://knossonia/./src/ecs/components/Throwable.js","webpack://knossonia/./src/enums/CursorSegments.js","webpack://knossonia/./src/utils/BresenhamLine.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/Visible.js","webpack://knossonia/./src/ecs/components/FragileGlass.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/screens/screens/CursorScreen.js","webpack://knossonia/./src/core/screens/screens/LoadSectorScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/./src/systems/FPSMonitoringSystem.js","webpack://knossonia/./src/core/WorldManager.js","webpack://knossonia/./src/data/WorldData.js","webpack://knossonia/./src/data/Sector.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","mouse","MouseManager","clock","ClockManager","camera","CameraManager","renderer","Renderer","state","GameStateManager","world","WorldManager","MapManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","Date","now","boundLoop","loop","bind","requestAnimationFrame","dt","update","t","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","clear","clearArea","xPx","yPx","Math","trunc","Manager","defaultFg","createElement","getContext","widthPx","heightPx","style","cssText","ctx","textBaseline","pixelX","pixelY","colorize","fillStyle","fillRect","clearRect","drawImage","color","tileImage","getElementById","fontImage","SpriteSheet","image","cp437","row","glyph","j","Sprite","spriteCountX","spriteCountY","isBlack","r","g","b","sheet","sourceX","sourceY","spriteWidth","spriteHeight","primaryCss","secondaryCss","primary","colorParse","values","secondary","key","alpha","pixels","getImageData","data","cvs","putImageData","cstr","m","space","parts","names","slice","test","size","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","value","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","get","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","constructor","component","enumerable","set","v","id","getEntity","console","Proxy","Reflect","old","deleteProperty","proxy","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","camelcase","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","hasOwnProperty","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","Entity","refs","Set","json","entities","list","entityData","createOrGetById","d","any","none","hasAny","c","hasAll","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","LiquidContainer","destroyOnEmpty","isEmpty","quantity","isPourable","volume","warn","createPrefab","liquidContainer","contents","position","setPos","_checkDestroyOnEmpty","pos","interactor","getPos","pour","handle","drinkLiquid","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","LIQUID_WATER","LIQUID_HONEY","colorDesc","onDrink","log","fireEvent","direction","glyphs","fg1s","speed","lifetime","Door","isOpen","ch","remove","Blocker","Shadowcaster","add","closeDoor","openDoor","stopProjectile","deflectProjectile","chOpen","chClosed","isAttached","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","content","result","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","getStackable","addOther","indexOf","idx","splice","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","dropLoot","amount","other","increment","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","trajectory","initiator","stopped","deflected","hit","projectile","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","blocker","Visible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","dx","abs","dy","sx","sy","err","e2","bresenhamLineExclusive","pop","corpse","moniker","range","FragileGlass","shatter","Brain","goals","peekGoal","isFinished","popGoal","currentGoal","takeAction","FAILURE","removeGoal","INVALID","goal","goalsToDestroy","isSelf","isSiblingGoal","originalIntent","SUCCESS","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","BoredGoalType","GoalType","detectHostiles","handled","killGoal","KillSomethingGoalType","brain","pushGoal","boredomGoal","Dead","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","random","Moniker","disp","door","Logger","Position","getPosition","setPosition","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","getEntitiesAt","some","nonHostile","Faction","areEntitiesHostile","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","IsPlayer","Wandering","floor","Directions","Explorable","Explored","Health","max","Eyes","getNeighborEntities","flat","neighbor","Particle","arr","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","sorted","sort","incrementTick","isPlayer","not","renderable","isInView","screen","worldToScreen","background","render","moveCommand","turn","subTurn","padEnd","str","ceil","hp","health","sector","sectorTxt","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","setScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","pushDomain","computeFOV","setFocus","popDomain","dir","directionDelta","playerPosition","targetPosition","hostileEntities","melee","doorEntity","move","lootable","item","pushScreen","interactable","onInteract","saveGame","loadGame","popScreen","onPickUpCommand","wait","onDirectionInput","onInteractDirection","updateAdventureSystems","Screen","isStarted","newGame","onConfirm","drawTextCenter","gameOver","items","pointerUp","pointerDown","selectItem","ypos","resetInteractions","interaction","top","left","xpos","isSelected","NOOP","enable","disable","cursorColor","types","segment","drawCursor","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","entityId","serialized","isTurn","turns","Engine","registerComponent","registerPrefab","destroyEntities","generateId","teardown","setup","prompt","deleteFile","filename","initiateTeardown","getSetupData","initiateSetup","getSaveGameData","localStorage","setItem","JSON","stringify","keys","file","startsWith","removeItem","positionData","getItem","parse","loadSavefileData","tick","isEnabled","getEntities","FastMap","onEntityAdded","onEntityRemoved","getRandomEmptyPosition","saveSectorPositionData","loadSectorPositionData","isOutOfBounds","x2","y2","enterSector","northSector","southSector","eastSector","westSector","onPlayerOutOfBounds","entries","coord","fov","FOV","isSquareVisible","compute","visibility","setVisible","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","min","getUniform","u","mean","stddev","gauss","sqrt","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_data","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","message","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","parsed","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","vis","meleeCommand","emitter","particleEmitter","isExpired","targetCount","factionA","factionB","entityA","entityB","isHostile","topLeftWorldX","topLeftWorldY","worldX","worldY","textWidth","WorldData","getSector","getStartingSector","exploredSectorIds","saveSectorEntityData","loadSectorEntityData","generate","Sector","getSectorByCoord","north","connectionsNorth","east","connectionsWest","west","south","generator","MapGenerator","connections","getConnections","blockers","isConnected","getRooms","getDoors","chest","stone","vial","wanderer","goblin","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","current","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.a40e177eadf1762e8f2e.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\r\nimport InputController from './input/InputController';\r\nimport HungerSystem from '../systems/HungerSystem';\r\nimport ActionSystem from '../systems/ActionSystem';\r\nimport RenderSystem from '../systems/RenderSystem';\r\nimport MovementSystem from '../systems/MovementSystem';\r\nimport UISystem from '../systems/UISystem';\r\nimport MouseManager from './input/MouseManager';\r\nimport CommandManager from './input/CommandManager';\r\nimport ScreenManager from './screens/ScreenManager';\r\nimport PlayerManager from './PlayerManager';\r\nimport ECS from '../ecs';\r\nimport GameStateManager from './GameStateManager';\r\nimport ClockManager from './ClockManager';\r\nimport CursorSystem from '../systems/CursorSystem';\r\nimport MapManager from './MapManager';\r\nimport FOVSystem from '../systems/FOVSystem';\r\nimport MeleeSystem from '../systems/MeleeSystem';\r\nimport DeathSystem from '../systems/DeathSystem';\r\nimport ParticleSystem from '../systems/ParticleSystem';\r\nimport FactionManager from './FactionManager';\r\nimport CameraManager from './CameraManager';\r\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\r\nimport { WorldManager } from './WorldManager';\r\n\r\nexport default class Game {\r\n    #lastUpdate;\r\n\r\n    get ecs() {\r\n        return this.engine.engine;\r\n    }\r\n\r\n    constructor() {\r\n        this.engine = new ECS(this);\r\n        this.mouse = new MouseManager(this);\r\n        this.clock = new ClockManager(this);\r\n        this.camera = new CameraManager(this);\r\n        this.renderer = new Renderer(this);\r\n        this.state = new GameStateManager(this);\r\n        this.world = new WorldManager(this);\r\n        this.map = new MapManager(this);\r\n        this.factions = new FactionManager(this);\r\n        this.player = new PlayerManager(this);\r\n        this.commands = new CommandManager(this);\r\n        this.screens = new ScreenManager(this);\r\n        this.input = new InputController(this);\r\n\r\n        this.hungerSystem = new HungerSystem(this);\r\n        this.actionSystem = new ActionSystem(this);\r\n        this.movementSystem = new MovementSystem(this);\r\n        this.meleeSystem = new MeleeSystem(this);\r\n        this.deathSystem = new DeathSystem(this);\r\n        this.FOVSystem = new FOVSystem(this);\r\n        this.renderSystem = new RenderSystem(this);\r\n        this.UISystem = new UISystem(this);\r\n        this.cursor = new CursorSystem(this);\r\n        this.particles = new ParticleSystem(this);\r\n        this.fps = new FPSMonitoringSystem(this);\r\n    }\r\n\r\n    start() {\r\n        this.#lastUpdate = Date.now();\r\n        this.boundLoop = this.loop.bind(this);\r\n        requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    updateAdventureSystems(dt) {\r\n        this.hungerSystem.update(dt);\r\n        this.actionSystem.update(dt);\r\n        this.movementSystem.update(dt);\r\n        this.meleeSystem.update(dt);\r\n        this.deathSystem.update(dt);\r\n        this.FOVSystem.update(dt);\r\n        this.renderSystem.update(dt);\r\n        this.particles.update(dt);\r\n        this.UISystem.update(dt);\r\n        this.map.update(dt);\r\n    }\r\n\r\n    loop(t) {\r\n        const now = Date.now();\r\n        const dt = now - this.#lastUpdate;\r\n\r\n        this.screens.update(dt);\r\n        this.fps.update(dt);\r\n\r\n        this.#lastUpdate = now;\r\n\r\n        requestAnimationFrame(this.boundLoop);\r\n    }\r\n}\r\n\r\nexport const game = new Game();\r\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    #tileWidth = 16;\n    #tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get width() {\n        return this.game.camera.width;\n    }\n\n    get height() {\n        return this.game.camera.height;\n    }\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: this.width,\n            height: this.height,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    draw(x, y, char, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText((this.width - len) / 2, y, text, fg1, fg2, bg);\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n}\n","export default class Manager {\r\n    #game;\r\n\r\n    get game() {\r\n        return this.#game;\r\n    }\r\n\r\n    constructor(game) {\r\n        this.#game = game;\r\n    }\r\n\r\n    onNewGame() {}\r\n    getSaveGameData() {}\r\n}\r\n","export default class Display {\n    #ctx;\n    #canvas;\n    #canvasDirty;\n    #width;\n    #height;\n    #tileWidth;\n    #tileHeight;\n    #defaultFg;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get canvas() {\n        return this.#canvas;\n    }\n\n    get ctx() {\n        return this.#ctx;\n    }\n\n    constructor({ width, height, tileWidth, tileHeight, defaultFg }) {\n        this.#width = width;\n        this.#height = height;\n        this.#tileWidth = tileWidth;\n        this.#tileHeight = tileHeight;\n        this.#defaultFg = defaultFg || '#fff';\n\n        this.#canvas = document.createElement('canvas');\n        this.#ctx = this.canvas.getContext('2d');\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.ctx.font = `${this.#tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        const pixelX = x * this.tileWidth;\n        const pixelY = y * this.tileHeight;\n\n        const img = sprite.colorize(fg1, fg2);\n\n        if (bg) {\n            this.ctx.fillStyle = bg;\n            this.ctx.fillRect(pixelX, pixelY, sprite.width, sprite.height);\n        } else {\n            this.ctx.clearRect(pixelX, pixelY, this.tileWidth, this.tileHeight);\n        }\n\n        this.ctx.drawImage(img, pixelX, pixelY);\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.clearRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n    }\n\n    fillTile(x, y, color) {\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n    }\n\n    clearTile(x, y) {\n        this.ctx.clearRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth,\n            this.tileHeight\n        );\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #image = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get image() {\n        return this.#image;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    get spriteWidth() {\n        return this.image.width / this.spriteCountX;\n    }\n\n    get spriteHeight() {\n        return this.image.height / this.spriteCountY;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.#image = image;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import colorParse from 'color-parse';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    #cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = colorParse(primaryCss).values;\n        const secondary = colorParse(secondaryCss).values;\n\n        const key = `${primary[0]},${primary[1]},${primary[2]},${primary.alpha}-${secondary[0]},${secondary[1]},${secondary[2]},${secondary.alpha}`;\n\n        if (key in this.#cache) {\n            const data = this.#cache[key];\n\n            return data;\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary.alpha;\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary.alpha;\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this.#cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\r\n                entity\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    #entity = null;\n    #ecs = null;\n    #props = {};\n    #isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get entity() {\n        return this.#entity;\n    }\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this.#props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.#ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this.#props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.#entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.#entity;\n\n            this.#entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this.#isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this.#props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelcase(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this.#props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    #id = null;\n    #components = {};\n    #ecs = null;\n    #isDestroyed = false;\n\n    get ecs() {\n        return this.#ecs;\n    }\n\n    get components() {\n        return this.#components;\n    }\n\n    get isDestroyed() {\n        return this.#isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.#ecs = ecs;\n        this.#id = id || ecs.generateId();\n        Object.defineProperty(this, 'id', {\n            value: this.#id,\n            enumerable: true,\n            writable: false,\n        });\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this.#isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import Entity from '../Entity';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class EntityRegistry {\r\n    #entities = new Map();\r\n    #ecs = null;\r\n    #refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this.#entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this.#entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this.#entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this.#ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this.#ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this.#entities.delete(entity.id);\r\n        this.#ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this.#refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this.#refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this.#refs.has(entityId)) {\r\n            this.#refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this.#refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this.#refs.has(entityId)) {\r\n            this.#refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities ? entities : this.#entities;\r\n\r\n        list.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = camelcase(key, { pascalCase: true });\r\n            const definition = this.#ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #onEntityAddedCallbacks = [];\n    #onEntityRemovedCallbacks = [];\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this.#onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this.#onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this.#cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this.#cache.add(entity);\n                this.#onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this.#cache.delete(entity);\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this.#cache.delete(entity);\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity(id) {\r\n        return this.entities.create(id);\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize(entities) {\r\n        return {\r\n            entities: this.entities.serialize(entities),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\r\n\r\nexport class LiquidContainer extends Component {\r\n    static properties = {\r\n        contents: LIQUID_BLOOD,\r\n        volume: 10,\r\n        maxVolume: 10,\r\n        overridePrimary: false,\r\n        overrideSecondary: false,\r\n        isPourable: false,\r\n        destroyOnEmpty: false,\r\n    };\r\n\r\n    get liquid() {\r\n        return !this.isEmpty && liquids[this.contents];\r\n    }\r\n\r\n    get isEmpty() {\r\n        return isNaN(this.contents) || this.volume <= 0;\r\n    }\r\n\r\n    get display() {\r\n        if (this.isEmpty) {\r\n            return `[empty] ${this.volume}/${this.maxVolume}`;\r\n        }\r\n\r\n        return `[${liquids[this.contents].name}] ${this.volume}/${\r\n            this.maxVolume\r\n        }`;\r\n    }\r\n\r\n    get primaryColorOverride() {\r\n        if (this.overridePrimary && this.liquid) {\r\n            return this.liquid.primary;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get secondaryColorOverride() {\r\n        if (this.overrideSecondary && this.liquid) {\r\n            return this.liquid.secondary;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    _checkDestroyOnEmpty() {\r\n        if (this.destroyOnEmpty && this.isEmpty) {\r\n            this.entity.destroy();\r\n        }\r\n    }\r\n\r\n    pour(x, y, quantity) {\r\n        if (!this.isPourable) {\r\n            console.warn('The container connot be poured.');\r\n            return;\r\n        }\r\n\r\n        if (this.volume <= 0) {\r\n            console.warn('The contianer is empty and cannot be poured.');\r\n            return;\r\n        }\r\n\r\n        if (isNaN(quantity) || quantity >= this.volume) {\r\n            quantity = this.volume;\r\n        }\r\n\r\n        this.volume -= quantity;\r\n\r\n        const pool = this.ecs.createPrefab('Pool', {\r\n            liquidContainer: {\r\n                contents: this.contents,\r\n                volume: quantity,\r\n            }\r\n        });\r\n        pool.position.setPos(x, y);\r\n        this._checkDestroyOnEmpty();\r\n    }\r\n\r\n    onTryPour(evt) {\r\n        if (this.isEmpty) {\r\n            console.warn('The container is empty.');\r\n            return;\r\n        }\r\n\r\n        const pos = evt.data.interactor.position.getPos();\r\n\r\n        this.pour(pos.x, pos.y, evt.data.volume);\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    onTryDrink(evt) {\r\n        if (this.isEmpty) {\r\n            console.warn('The container is empty.');\r\n            return;\r\n        }\r\n\r\n        drinkLiquid(evt.data.interactor, this.contents, this.volume);\r\n        this.volume = 0;\r\n        this._checkDestroyOnEmpty();\r\n        evt.handle();\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        if (this.isEmpty) {\r\n            return;\r\n        }\r\n\r\n        evt.data.interactions.push({\r\n            name: 'Drink',\r\n            evt: 'try-drink',\r\n        });\r\n\r\n        if (this.isPourable) {\r\n            evt.data.interactions.push({\r\n                name: 'Pour',\r\n                evt: 'try-pour',\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'blue',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'red',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]'\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.remove(Blocker);\n        this.entity.remove(Shadowcaster);\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        this.closeDoor();\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        this.openDoor();\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\r\nimport { IsInventoried } from './IsInventoried';\r\nimport { Stackable } from './Stackable';\r\n\r\nexport class Inventory extends Component {\r\n    static properties = {\r\n        content: '<EntityArray>',\r\n    };\r\n\r\n    onDestroyed() {\r\n        this.content.forEach((entity) => entity.destroy());\r\n    }\r\n\r\n    onQueryOwnership(evt) {\r\n        this.content.forEach((entity) => {\r\n            evt.data.result.add(entity);\r\n            entity.fireEvent('query-ownership', { result: evt.data.result });\r\n        });\r\n    }\r\n\r\n    getStackable(stackableIdentifier) {\r\n        return this.content.find((entity) => {\r\n            return entity.has(Stackable) && entity.stackable.identifier === stackableIdentifier;\r\n        });\r\n    }\r\n\r\n    addLoot(loot) {\r\n        if (loot.has(Stackable)) {\r\n            const existing = this.getStackable(loot.stackable.identifier);\r\n\r\n            if (existing) {\r\n                existing.stackable.addOther(loot);\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        loot.add(IsInventoried, {\r\n            owner: this.entity,\r\n        });\r\n\r\n        this.content.push(loot);\r\n    }\r\n\r\n    hasLoot(loot) {\r\n        const idx = this.content.indexOf(loot);\r\n\r\n        return idx >= 0;\r\n    }\r\n\r\n    removeLoot(loot, quantity) {\r\n        const isStackable = loot.has(Stackable);\r\n\r\n        if (isStackable && !isNaN(quantity)) {\r\n            loot.stackable.split(quantity);\r\n\r\n            return this.removeLoot(loot);\r\n        }\r\n\r\n        const idx = this.content.indexOf(loot);\r\n\r\n        if (idx >= 0) {\r\n            this.content.splice(idx, 1);\r\n            loot.remove(IsInventoried);\r\n        }\r\n\r\n        return loot;\r\n    }\r\n\r\n    dropLoot(loot, quantity) {\r\n        const ob = this.removeLoot(loot, quantity);\r\n        const pos = this.entity.position.getPos();\r\n\r\n        ob.position.setPos(pos.x, pos.y);\r\n\r\n        return ob;\r\n    }\r\n\r\n    onTryOpen(evt) {\r\n        game.screens.pushScreen(SCREEN_INVENTORY, {\r\n            accessible: this.entity,\r\n            accessor: evt.data.interactor,\r\n        });\r\n        evt.handle();\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        evt.data.interactions.push({\r\n            name: 'Open',\r\n            evt: 'try-open',\r\n        });\r\n    }\r\n}\r\n","export const SCREEN_MAIN_MENU = 0;\r\nexport const SCREEN_ADVENTURE = 1;\r\nexport const SCREEN_DEATH = 2;\r\nexport const SCREEN_INVENTORY = 3;\r\nexport const SCREEN_INTERACT_MODAL = 4;\r\nexport const SCREEN_CURSOR = 5;\r\nexport const SCREEN_LOAD_SECTOR = 6;\r\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\r\nimport { IsInventoried } from './IsInventoried';\r\n\r\nexport class Stackable extends Component {\r\n    static properties = {\r\n        identifier: STACKABLE_DEFAULT,\r\n        quantity: 1,\r\n    };\r\n\r\n    get display() {\r\n        return `x ${this.quantity}`;\r\n    }\r\n\r\n    increment(amount) {\r\n        this.quantity += amount;\r\n    }\r\n\r\n    addOther(other) {\r\n        this.increment(other.stackable.quantity);\r\n        other.stackable.quantity = 0;\r\n        other.destroy();\r\n    }\r\n\r\n    split(quantity) {\r\n        if (quantity >= this.quantity) {\r\n            quantity = this.quantity;\r\n            return this.entity;\r\n        }\r\n\r\n        const clone = game.engine.cloneEntity(this.entity);\r\n        clone.stackable.quantity -= quantity;;\r\n\r\n        this.quantity = quantity;\r\n\r\n        if (clone.has(IsInventoried)) {\r\n            // make sure inventory contents are still \"correct\"\r\n            clone.isInventoried.owner.inventory.content.push(clone);\r\n        }\r\n\r\n        return clone;\r\n    }\r\n}\r\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport { CURSOR_SEGMENT_INVALID, CURSOR_SEGMENT_INTEREST, CURSOR_SEGMENT_UNKNOWN, CURSOR_SEGMENT_NONE } from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { Visible } from './Visible';\n\nexport class Throwable extends Component {\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y,\n                );\n                const trajectory = line.map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y)\n                }));\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n                const result = line.map(({x, y}, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find((entity) => entity.has(Visible) && entity.has(Blocker));\n                    const body = entities.find((entity) => entity.has(Visible) && entity.has(Body));\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    if (lineValid && body) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid ? CURSOR_SEGMENT_INVALID : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < 0 && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            }\n        });\n    }\n}\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = (x0 < x1) ? 1 : -1;\n    const sy = (y0 < y1) ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while(true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if ((x0 === x1) && (y0 === y1)) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy; x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx; y0 += sy;\n        }\n    }\n\n    return result;\n}\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n}\n","import { Component } from 'geotic';\n\nexport class Body extends Component {\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const corpse = this.ecs.createPrefab('Corpse');\n        const pos = this.entity.position.getPos();\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n\n        corpse.position.setPos(pos.x, pos.y);\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Visible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        const shards = this.ecs.createPrefab('GlassShard', {\n            stackable: {\n                quantity: 3\n            }\n        });\n\n        shards.position.setPos(x, y);\n\n        if (this.entity.has(LiquidContainer)) {\n            this.entity.liquidContainer.pour(x, y);\n        }\n\n        this.entity.destroy();\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { Component } from 'geotic';\r\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\r\n\r\nexport class Brain extends Component {\r\n    static properties = {\r\n        goals: '<EntityArray>',\r\n    };\r\n\r\n    onDestroyed() {\r\n        this.goals.forEach((entity) => {\r\n            entity.destroy();\r\n        });\r\n    }\r\n\r\n    onTakeAction(evt) {\r\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\r\n            this.popGoal().entity.destroy();\r\n        }\r\n\r\n        const currentGoal = this.peekGoal();\r\n        const result = currentGoal.takeAction();\r\n\r\n        if (result === FAILURE) {\r\n            this.removeGoal(currentGoal);\r\n        } else if (result === INVALID) {\r\n            this.removeGoal(currentGoal);\r\n            this.entity.fireEvent('take-action');\r\n        }\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    removeGoal(goal) {\r\n        const goalsToDestroy = [];\r\n\r\n        this.goals = this.goals.filter((g) => {\r\n            const isSelf = Boolean(g.id === goal.entity.id);\r\n            const isSiblingGoal = Boolean(\r\n                g.goal.originalIntent &&\r\n                    g.goal.originalIntent.id === goal.originalIntent.id\r\n            );\r\n\r\n            if (isSelf || isSiblingGoal) {\r\n                goalsToDestroy.push(g.goal);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        goalsToDestroy.forEach((g) => g.entity.destroy());\r\n    }\r\n\r\n    pushGoal(goal) {\r\n        if (!(goal instanceof Component)) {\r\n            throw new Error('Pushing non-component goal!', goal);\r\n        }\r\n\r\n        goal.parent = this.entity;\r\n\r\n        return this.goals.push(goal.entity);\r\n    }\r\n\r\n    popGoal() {\r\n        return this.goals.pop().goal;\r\n    }\r\n\r\n    peekGoal() {\r\n        return this.goals[this.goals.length - 1].goal;\r\n    }\r\n}\r\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['-'],\n        });\n\n        evt.data.target.fireEvent('damage', damage);\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\r\nimport { Blocker } from './Blocker';\r\nimport { Faction } from './Faction';\r\n\r\nexport class Legs extends Component {\r\n    onTryMove(evt) {\r\n        const position = this.entity.position.getPos();\r\n        const targetX = position.x + evt.data.x;\r\n        const targetY = position.y + evt.data.y;\r\n\r\n        const targetTileEntities = window.game.map.getEntitiesAt(\r\n            targetX,\r\n            targetY\r\n        );\r\n\r\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\r\n            return;\r\n        }\r\n\r\n        const nonHostile = targetTileEntities.find((entity) => {\r\n            return (\r\n                entity.has(Faction) &&\r\n                !window.game.factions.areEntitiesHostile(entity, this.entity)\r\n            );\r\n        });\r\n\r\n        // swap locations\r\n        if (nonHostile) {\r\n            nonHostile.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        this.entity.fireEvent('energy-consumed', 750);\r\n        this.entity.position.setPos(targetX, targetY);\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class Faction extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\r\nimport { DIR_Z } from '../../enums/Directions';\r\n\r\nexport class MeleeCommand extends Component {\r\n    static properties = {\r\n        target: '<Entity>',\r\n    };\r\n}\r\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\r\nimport { Dead } from './Dead';\r\n\r\nexport class Health extends Component {\r\n    static properties = {\r\n        value: 10,\r\n        max: 10,\r\n    };\r\n\r\n    onDamage(evt) {\r\n        this.value -= evt.data.value;\r\n\r\n        if (this.value <= 0) {\r\n            this.value = 0;\r\n            this.entity.add(Dead);\r\n        }\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    onHeal(evt) {\r\n        this.value += evt.data.value;\r\n\r\n        if (this.value > this.max) {\r\n            this.value = this.max;\r\n        }\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {}\n","import { Component } from 'geotic';\nimport { Faction } from './Faction';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = window.game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = window.game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(Faction))\n            .find((neighbor) => {\n                return window.game.factions.areEntitiesHostile(\n                    this.entity,\n                    neighbor\n                );\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { Actor } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class ActionSystem extends System {\r\n    #query = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Actor],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        const entities = this.#query.get();\r\n        const sorted = Array.from(entities);\r\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\r\n\r\n        let entity = sorted[0];\r\n\r\n        if (entity && !entity.actor.hasEnergy) {\r\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\r\n\r\n            entities.forEach((entity) => {\r\n                entity.actor.addEnergy(this.game.clock.tickDelta);\r\n            });\r\n        }\r\n\r\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\r\n            entity.fireEvent('take-action');\r\n            entity = sorted.shift();\r\n        }\r\n    }\r\n}\r\n","import {\n    IsInventoried,\n    Explored,\n    Glyph,\n    Position,\n    Visible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, Visible],\n            not: [IsInventoried],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [Visible],\n        });\n    }\n\n    render() {\n        this.game.renderer.clear();\n\n        this.#explored.get().forEach((renderable) => {\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                '#283131',\n                '#283131'\n            );\n        });\n\n        this.#query.get().forEach((renderable) => {\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        });\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class UISystem extends System {\r\n    #query = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = this.game.ecs.createQuery({\r\n            all: [Moniker, Actor],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        const turn = this.game.clock.turn;\r\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\r\n\r\n        const str = `${turn}.${subTurn}`;\r\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\r\n\r\n        this.game.renderer.drawText(this.game.renderer.width - 1 - len, 1, str);\r\n\r\n        const hp = this.game.player.entity.health;\r\n\r\n        this.game.renderer.drawText(\r\n            1,\r\n            this.game.renderer.height - 2,\r\n            `${hp.value}/${hp.max}`,\r\n            '#ce5454'\r\n        );\r\n\r\n        const sector = this.game.world.sector;\r\n        const sectorTxt = `sector ${sector.id} (${sector.x}, ${sector.y})`;\r\n\r\n        this.game.renderer.drawText(0, 0, sectorTxt, '#172e2e');\r\n    }\r\n}\r\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\r\nimport commands from './commands';\r\nimport Manager from '../Manager';\r\n\r\nexport default class CommandManager extends Manager {\r\n    #commands = {};\r\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\r\n    #isEnabled = true;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        commands.forEach((cmd) => this.registerCommand(cmd));\r\n    }\r\n\r\n    disable() {\r\n        this.#isEnabled = false;\r\n    }\r\n\r\n    enable() {\r\n        this.#isEnabled = true;\r\n    }\r\n\r\n    onInputEvent(evt) {\r\n        const cmd = this.getCommandForInputEvent(evt);\r\n\r\n        if (cmd) {\r\n            this.game.screens.onInputCommand(cmd);\r\n        }\r\n    }\r\n\r\n    pushDomain(domain) {\r\n        this.#domainStack.push(domain);\r\n    }\r\n\r\n    popDomain(domain) {\r\n        const index = this.#domainStack.lastIndexOf(domain);\r\n\r\n        if (index > -1) {\r\n            this.#domainStack.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    getDomainCommands(domain) {\r\n        return this.#commands[domain] || [];\r\n    }\r\n\r\n    getCommandForInputEvent(evt) {\r\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\r\n            const domain = this.#domainStack[i];\r\n            const cmds = this.getDomainCommands(domain);\r\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\r\n\r\n            if (cmd) {\r\n                return cmd;\r\n            }\r\n        }\r\n    }\r\n\r\n    registerCommand(command) {\r\n        if (!this.#commands[command.domain]) {\r\n            this.#commands[command.domain] = [];\r\n        }\r\n\r\n        this.#commands[command.domain].push(command);\r\n    }\r\n}\r\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\r\n    INPUT_DOMAIN_MAIN_MENU,\r\n    INPUT_DOMAIN_DEFAULT,\r\n    INPUT_DOMAIN_ADVENTURE,\r\n} from './InputDomainType';\r\nimport InputCommand from './InputCommand';\r\nimport {\r\n    INPUT_CMD_WAIT,\r\n    INPUT_CMD_MOVE_NW,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_NE,\r\n    INPUT_CMD_MOVE_W,\r\n    INPUT_CMD_MOVE_E,\r\n    INPUT_CMD_MOVE_SW,\r\n    INPUT_CMD_MOVE_S,\r\n    INPUT_CMD_MOVE_SE,\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_SAVE,\r\n    INPUT_CMD_LOAD,\r\n    INPUT_CMD_LOOK,\r\n    INPUT_CMD_INTERACT,\r\n    INPUT_CMD_PICK_UP,\r\n    INPUT_CMD_INVENTORY,\r\n    INPUT_CMD_SELECT_NW,\r\n    INPUT_CMD_SELECT_N,\r\n    INPUT_CMD_SELECT_NE,\r\n    INPUT_CMD_SELECT_W,\r\n    INPUT_CMD_SELECT_E,\r\n    INPUT_CMD_SELECT_SW,\r\n    INPUT_CMD_SELECT_S,\r\n    INPUT_CMD_SELECT_SE,\r\n    INPUT_CMD_NEW_GAME,\r\n} from './InputCommandType';\r\nimport {\r\n    KEY_S,\r\n    KEY_Q,\r\n    KEY_W,\r\n    KEY_E,\r\n    KEY_A,\r\n    KEY_D,\r\n    KEY_Z,\r\n    KEY_X,\r\n    KEY_C,\r\n    KEY_ENTER,\r\n    KEY_ESCAPE,\r\n    KEY_UP,\r\n    KEY_LEFT,\r\n    KEY_RIGHT,\r\n    KEY_DOWN,\r\n    KEY_SPACE,\r\n    KEY_L,\r\n    KEY_I,\r\n    KEY_G,\r\n    KEY_J,\r\n    KEY_N,\r\n} from './KeyCodes';\r\n\r\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\r\n    new InputCommand({\r\n        domain,\r\n        type,\r\n        name,\r\n        isKeyboard,\r\n        key,\r\n        shift,\r\n        ctrl,\r\n        alt,\r\n        meta,\r\n    });\r\n\r\n// prettier-ignore\r\nexport default [\r\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\r\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\r\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\r\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\r\n\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\r\n\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\r\n\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\r\n];\r\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\r\nexport const INPUT_CMD_MOVE_N = 1;\r\nexport const INPUT_CMD_MOVE_NE = 2;\r\nexport const INPUT_CMD_MOVE_W = 3;\r\nexport const INPUT_CMD_MOVE_E = 4;\r\nexport const INPUT_CMD_MOVE_SW = 5;\r\nexport const INPUT_CMD_MOVE_S = 6;\r\nexport const INPUT_CMD_MOVE_SE = 7;\r\n\r\nexport const INPUT_CMD_WAIT = 8;\r\nexport const INPUT_CMD_CONFIRM = 9;\r\nexport const INPUT_CMD_CANCEL = 10;\r\nexport const INPUT_CMD_SAVE = 11;\r\nexport const INPUT_CMD_LOAD = 12;\r\nexport const INPUT_CMD_LOOK = 13;\r\n\r\n\r\nexport const INPUT_CMD_PICK_UP = 16;\r\nexport const INPUT_CMD_INTERACT = 17;\r\nexport const INPUT_CMD_INVENTORY = 19;\r\n\r\nexport const INPUT_CMD_SELECT_NW = 20;\r\nexport const INPUT_CMD_SELECT_N = 21;\r\nexport const INPUT_CMD_SELECT_NE = 22;\r\nexport const INPUT_CMD_SELECT_W = 23;\r\nexport const INPUT_CMD_SELECT_E = 24;\r\nexport const INPUT_CMD_SELECT_SW = 25;\r\nexport const INPUT_CMD_SELECT_S = 26;\r\nexport const INPUT_CMD_SELECT_SE = 27;\r\nexport const INPUT_CMD_NEW_GAME = 28;\r\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\r\n    SCREEN_MAIN_MENU,\r\n    SCREEN_ADVENTURE,\r\n    SCREEN_DEATH,\r\n    SCREEN_INVENTORY,\r\n    SCREEN_INTERACT_MODAL,\r\n    SCREEN_CURSOR,\r\n    SCREEN_LOAD_SECTOR,\r\n} from './ScreenType';\r\nimport AdventureScreen from './screens/AdventureScreen';\r\nimport MainMenuScreen from './screens/MainMenuScreen';\r\nimport DeathScreen from './screens/DeathScreen';\r\nimport Manager from '../Manager';\r\nimport InventoryScreen from './screens/InventoryScreen';\r\nimport InteractModalScreen from './screens/InteractModalScreen';\r\nimport CursorScreen from './screens/CursorScreen';\r\nimport LoadSectorScreen from './screens/LoadSectorScreen';\r\n\r\nexport default class ScreenManager extends Manager {\r\n    #screens = {};\r\n    #screenStack = [];\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#screens = {\r\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\r\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\r\n            [SCREEN_DEATH]: new DeathScreen(game),\r\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\r\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\r\n            [SCREEN_CURSOR]: new CursorScreen(game),\r\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\r\n        };\r\n        this.setScreen(SCREEN_MAIN_MENU);\r\n    }\r\n\r\n    get screenType() {\r\n        return this.#screenStack[this.#screenStack.length - 1].type;\r\n    }\r\n\r\n    get screenCtx() {\r\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\r\n    }\r\n\r\n    get screen() {\r\n        return this.#screens[this.screenType];\r\n    }\r\n\r\n    setScreen(screenType, ctx = {}) {\r\n        while (this.#screenStack.length > 0) {\r\n            this.screen.onLeave(ctx);\r\n            this.#screenStack.pop();\r\n        }\r\n\r\n        this.#screenStack.push({\r\n            type: screenType,\r\n            ctx,\r\n        });\r\n        this.screen.onEnter(this.screenCtx);\r\n    }\r\n\r\n    pushScreen(screenType, ctx = {}) {\r\n        this.screen.onLeave(ctx);\r\n        this.#screenStack.push({\r\n            type: screenType,\r\n            ctx,\r\n        });\r\n        this.screen.onEnter(this.screenCtx);\r\n    }\r\n\r\n    popScreen(ctx = {}) {\r\n        this.screen.onLeave(ctx);\r\n        this.#screenStack.pop();\r\n        this.screen.onEnter(this.screenCtx);\r\n    }\r\n\r\n    onInputCommand(cmd) {\r\n        this.screen.onInputCommand(cmd);\r\n    }\r\n\r\n    update(dt) {\r\n        this.screen.onUpdate(dt);\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_NE,\r\n    INPUT_CMD_MOVE_W,\r\n    INPUT_CMD_WAIT,\r\n    INPUT_CMD_MOVE_E,\r\n    INPUT_CMD_MOVE_SW,\r\n    INPUT_CMD_MOVE_S,\r\n    INPUT_CMD_MOVE_SE,\r\n    INPUT_CMD_MOVE_NW,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_SAVE,\r\n    INPUT_CMD_LOAD,\r\n    INPUT_CMD_LOOK,\r\n    INPUT_CMD_INTERACT,\r\n    INPUT_CMD_PICK_UP,\r\n    INPUT_CMD_INVENTORY,\r\n    INPUT_CMD_SELECT_NW,\r\n    INPUT_CMD_SELECT_N,\r\n    INPUT_CMD_SELECT_NE,\r\n    INPUT_CMD_SELECT_W,\r\n    INPUT_CMD_SELECT_E,\r\n    INPUT_CMD_SELECT_SW,\r\n    INPUT_CMD_SELECT_S,\r\n    INPUT_CMD_SELECT_SE,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\r\nimport {\r\n    DIR_N,\r\n    DIR_W,\r\n    DIR_E,\r\n    DIR_S,\r\n    DIR_NW,\r\n    DIR_SW,\r\n    DIR_SE,\r\n    DIR_NE,\r\n    delta as directionDelta,\r\n} from '../../../enums/Directions';\r\nimport {\r\n    SCREEN_CURSOR,\r\n    SCREEN_INTERACT_MODAL,\r\n    SCREEN_INVENTORY,\r\n    SCREEN_MAIN_MENU,\r\n} from '../ScreenType';\r\nimport { Door, Loot } from '../../../ecs/components';\r\n\r\nexport default class AdventureScreen extends Screen {\r\n    onEnter() {\r\n        this.game.renderer.clear();\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\r\n        this.game.FOVSystem.computeFOV();\r\n\r\n        const position = this.game.player.position;\r\n\r\n        this.game.camera.setFocus(position.x, position.y);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\r\n    }\r\n\r\n    onDirectionInput(dir) {\r\n        const delta = directionDelta(dir);\r\n        const playerPosition = this.game.player.position;\r\n        const targetPosition = {\r\n            x: playerPosition.x + delta.x,\r\n            y: playerPosition.y + delta.y,\r\n        };\r\n        const entities = this.game.map.getEntitiesAt(\r\n            targetPosition.x,\r\n            targetPosition.y\r\n        );\r\n\r\n        const hostileEntities = entities.filter((e) =>\r\n            this.game.factions.areEntitiesHostile(\r\n                e,\r\n                this.game.player.entity\r\n            )\r\n        );\r\n\r\n        if (hostileEntities.length > 0) {\r\n            this.game.player.melee(hostileEntities[0]);\r\n        } else {\r\n            const doorEntity = entities.find((e) => e.has(Door));\r\n\r\n            if (doorEntity && !doorEntity.door.isOpen) {\r\n                doorEntity.fireEvent('try-open-door', {\r\n                    interactor: this.game.player.entity,\r\n                });\r\n            } else {\r\n                this.game.player.move(dir);\r\n            }\r\n        }\r\n    }\r\n\r\n    onPickUpCommand() {\r\n        const position = this.game.player.position;\r\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\r\n\r\n        const lootable = entities.find((entity) => entity.has(Loot));\r\n\r\n        if (lootable) {\r\n            lootable.fireEvent('try-pick-up', {\r\n                interactor: this.game.player.entity,\r\n            });\r\n        } else {\r\n            console.log('there is nothing here to pick up.');\r\n        }\r\n    }\r\n\r\n    onInteract(x, y) {\r\n        const entities = this.game.map\r\n            .getEntitiesAt(x, y)\r\n            .filter((e) => !e.isPlayer);\r\n\r\n        const item = entities.find((entity) => {\r\n            const evt = entity.fireEvent('get-interactions', {\r\n                interactor: this.game.player.entity,\r\n                interactions: [],\r\n            });\r\n            return evt.data.interactions.length > 0;\r\n        });\r\n\r\n        if (item) {\r\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\r\n                interactor: this.game.player.entity,\r\n                interactable: item,\r\n            });\r\n        }\r\n    }\r\n\r\n    onInteractDirection(dir) {\r\n        const delta = directionDelta(dir);\r\n        const playerPosition = this.game.player.position;\r\n        const targetPosition = {\r\n            x: playerPosition.x + delta.x,\r\n            y: playerPosition.y + delta.y,\r\n        };\r\n\r\n        this.onInteract(targetPosition.x, targetPosition.y);\r\n    }\r\n\r\n    onInputCommand(cmd) {\r\n        if (cmd.type === INPUT_CMD_SAVE) {\r\n            this.game.state.saveGame();\r\n        }\r\n        if (cmd.type === INPUT_CMD_LOAD) {\r\n            this.game.state.loadGame();\r\n        }\r\n        if (cmd.type === INPUT_CMD_LOOK) {\r\n            game.screens.pushScreen(SCREEN_CURSOR, {\r\n                drawTags: true,\r\n                onResult: () => game.screens.popScreen(),\r\n                onCancel: () => game.screens.popScreen(),\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_PICK_UP) {\r\n            this.onPickUpCommand();\r\n        }\r\n        if (cmd.type === INPUT_CMD_INTERACT) {\r\n            const pos = this.game.player.position;\r\n\r\n            this.onInteract(pos.x, pos.y);\r\n        }\r\n        if (cmd.type === INPUT_CMD_INVENTORY) {\r\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\r\n                accessible: this.game.player.entity,\r\n                accessor: this.game.player.entity,\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\r\n        }\r\n        if (cmd.type === INPUT_CMD_WAIT) {\r\n            this.game.player.wait();\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\r\n            this.onDirectionInput(DIR_NW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.onDirectionInput(DIR_N);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\r\n            this.onDirectionInput(DIR_NE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_W) {\r\n            this.onDirectionInput(DIR_W);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_E) {\r\n            this.onDirectionInput(DIR_E);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\r\n            this.onDirectionInput(DIR_SW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.onDirectionInput(DIR_S);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\r\n            this.onDirectionInput(DIR_SE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\r\n            this.onInteractDirection(DIR_NW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_N) {\r\n            this.onInteractDirection(DIR_N);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\r\n            this.onInteractDirection(DIR_NE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_W) {\r\n            this.onInteractDirection(DIR_W);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_E) {\r\n            this.onInteractDirection(DIR_E);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\r\n            this.onInteractDirection(DIR_SW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_S) {\r\n            this.onInteractDirection(DIR_S);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\r\n            this.onInteractDirection(DIR_SE);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.game.updateAdventureSystems(dt);\r\n    }\r\n}\r\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_SAVE,\r\n    INPUT_CMD_LOAD,\r\n    INPUT_CMD_NEW_GAME,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_ADVENTURE } from '../ScreenType';\r\n\r\nexport default class MainMenuScreen extends Screen {\r\n    onEnter() {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onConfirm() {\r\n        if (this.game.state.isStarted) {\r\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\r\n        } else {\r\n            this.game.state.newGame();\r\n        }\r\n    }\r\n\r\n    onInputCommand(cmd) {\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.onConfirm();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_SAVE) {\r\n            this.game.state.saveGame();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_LOAD) {\r\n            this.game.state.loadGame();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\r\n            this.game.state.newGame();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.game.renderer.clear();\r\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\r\n\r\n        this.game.renderer.drawText(1, 4, `move       [w, a, d, x]`);\r\n        this.game.renderer.drawText(1, 5, `look       [l]`);\r\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\r\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\r\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\r\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\r\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\r\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\r\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\r\n\r\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\r\n\r\nexport default class DeathScreen extends Screen {\r\n    onEnter() {\r\n        this.game.state.gameOver();\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onInputCommand(cmd) {\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        const text = 'you have succumbed to the forest';\r\n\r\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\r\n    }\r\n}\r\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class InventoryScreen extends Screen {\n    #selectedIdx = 0;\n    #accessible;\n    #accessor;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n        const interactable = items[idx];\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n\n        if (items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        items.forEach((item, i) => {\n            const isSelected = i === idx;\n            const ypos = i + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 16;\n    #selectedIdx = 0;\n    #interactions = [];\n    #interactable;\n    #interactor;\n\n    get left() {\n        return (this.game.renderer.width - this.#width) / 2;\n    }\n\n    get top() {\n        return (this.game.renderer.height - this.#height) / 2;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.resetInteractions();\n    }\n\n    resetInteractions() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.#interactions = evt.data.interactions;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const idx = this.#selectedIdx % this.#interactions.length;\n        const interaction = this.#interactions[idx];\n\n        if (interaction) {\n            this.#interactable.fireEvent(interaction.evt, {\n                interactor: this.#interactor,\n            });\n\n            if (this.#interactable.isDestroyed) {\n                this.game.screens.popScreen();\n\n                return;\n            }\n\n            this.resetInteractions();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.clearArea(\n            this.top,\n            this.left,\n            this.#width,\n            this.#height\n        );\n\n        this.game.renderer.draw(\n            this.top + 2,\n            this.left + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const idx = this.#selectedIdx % this.#interactions.length;\n\n        if (this.#interactions.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        const xpos = this.left + 2;\n\n        this.#interactions.forEach((interaction, i) => {\n            const isSelected = i === idx;\n            const ypos = i + this.top + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, '-');\n            }\n\n            this.game.renderer.drawText(xpos + 1, ypos, interaction.name);\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE\n} from '../../../enums/Directions';\nimport { bresenhamLine, bresenhamLineExclusive } from '../../../utils/BresenhamLine';\nimport { CURSOR_SEGMENT_INTEREST, CURSOR_SEGMENT_NONE, getCursorSegmentTypeColor, getCursorSegmentTypeGlyph } from '../../../enums/CursorSegments';\nimport { game } from '../../Game';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y\n            }\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y,\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST)\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(segment.x, segment.y);\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\r\nimport Screen from './Screen';\r\n\r\nexport default class LoadSectorScreen extends Screen {\r\n    #prevousSector;\r\n    #nextSector;\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.disable();\r\n\r\n        this.#prevousSector = ctx.prevousSector;\r\n        this.#nextSector = ctx.nextSector\r\n\r\n        this.renderLoadingText();\r\n\r\n        if (ctx.prevousSector) {\r\n            const data = this.game.state.saveGame();\r\n\r\n            data.world.sectorId = ctx.nextSector.id;\r\n            data.map.playerPosition = ctx.entry;\r\n\r\n            this.game.state.loadGameData(data);\r\n\r\n            return;\r\n        }\r\n\r\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\r\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\r\n\r\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.enable();\r\n    }\r\n\r\n    renderLoadingText() {\r\n        this.game.renderer.clear();\r\n        if (this.#prevousSector) {\r\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\r\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\r\n        } else {\r\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\r\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.renderLoadingText();\r\n    }\r\n}\r\n","import Manager from './Manager';\r\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\r\n\r\nexport default class PlayerManager extends Manager {\r\n    #entityId = null;\r\n\r\n    get entity() {\r\n        return this.game.ecs.getEntity(this.#entityId);\r\n    }\r\n\r\n    get id() {\r\n        return this.#entityId;\r\n    }\r\n\r\n    get isTurn() {\r\n        return this.entity.actor.hasEnergy;\r\n    }\r\n\r\n    get position() {\r\n        return this.entity.position.getPos();\r\n    }\r\n\r\n    getSetupData() {\r\n        // TODO\r\n        // player.fireEvent('query-owned-entities', { ids });\r\n        // player.fireEvent('dereference-unowned-entities');\r\n        // serialize all \"owned\"\r\n        const entity = this.game.ecs.createPrefab('Player');\r\n        const entityId = entity.id;\r\n        const serialized = entity.serialize();\r\n\r\n        entity.destroy();\r\n\r\n        return {\r\n            entityId,\r\n            entity: serialized, // TODO inventory\r\n        };\r\n    }\r\n\r\n    setup(data) {\r\n        this.#entityId = data.entityId;\r\n        this.game.ecs.deserialize(data.entity);\r\n    }\r\n\r\n    getSaveGameData() {\r\n        const entityId = this.entity.id;\r\n\r\n        // gather all entities for player\r\n        const evt = this.entity.fireEvent('query-ownership', { result: new Set([this.entity]) });\r\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\r\n\r\n        console.log(serialized);\r\n\r\n        return {\r\n            entityId,\r\n            entity: serialized, // TODO inventory\r\n        };\r\n    }\r\n\r\n    teardown() {\r\n        if (this.entity) {\r\n            this.entity.destroy();\r\n        }\r\n        this.#entityId = null; // TODO does this need to destroy()?\r\n    }\r\n\r\n    move(direction) {\r\n        if (!this.isTurn) {\r\n            return;\r\n        }\r\n\r\n        if (this.entity.has(MoveCommand)) {\r\n            this.entity.remove(MoveCommand);\r\n        }\r\n\r\n        this.entity.add(MoveCommand, {\r\n            direction,\r\n        });\r\n    }\r\n\r\n    melee(target) {\r\n        if (!this.isTurn) {\r\n            return;\r\n        }\r\n\r\n        if (this.entity.has(MeleeCommand)) {\r\n            this.entity.remove(MeleeCommand);\r\n        }\r\n\r\n        this.entity.add(MeleeCommand, {\r\n            target,\r\n        });\r\n    }\r\n\r\n    wait(turns = 1) {\r\n        if (!this.isTurn) {\r\n            return;\r\n        }\r\n\r\n        this.entity.fireEvent('energy-consumed', turns * 1000);\r\n    }\r\n}\r\n","import { Engine } from 'geotic';\r\n\r\nimport * as components from './components';\r\nimport * as prefabs from './prefabs';\r\nimport Manager from '../core/Manager';\r\n\r\nexport default class ECS extends Manager {\r\n    #engine;\r\n\r\n    get engine() {\r\n        return this.#engine;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#engine = new Engine();\r\n\r\n        Object.values(components).forEach((component) => {\r\n            this.#engine.registerComponent(component);\r\n        });\r\n\r\n        Object.values(prefabs).forEach((prefab) => {\r\n            this.#engine.registerPrefab(prefab);\r\n        });\r\n    }\r\n\r\n    teardown() {\r\n        this.destroyEntities();\r\n    }\r\n\r\n    destroyEntities() {\r\n        for (let entity of this.#engine.entities.all) {\r\n            entity.destroy();\r\n        }\r\n    }\r\n\r\n    cloneEntity(entity) {\r\n        const data = entity.serialize();\r\n\r\n        data.id = this.engine.generateId();\r\n\r\n        this.engine.deserialize(data);\r\n\r\n        return this.engine.getEntity(data.id);\r\n    }\r\n}\r\n","import Manager from './Manager';\r\n\r\nexport default class GameStateManager extends Manager {\r\n    #isStarted = false;\r\n    #filename = 'test';\r\n\r\n    get filename() {\r\n        return this.#filename;\r\n    }\r\n\r\n    get isStarted() {\r\n        return this.#isStarted;\r\n    }\r\n\r\n    gameOver() {\r\n        this.#isStarted = false;\r\n    }\r\n\r\n    initiateTeardown() {\r\n        console.log('STATE - teardown');\r\n        this.#isStarted = false;\r\n\r\n        this.game.player.teardown();\r\n        this.game.map.teardown();\r\n        this.game.engine.teardown();\r\n        this.game.world.teardown();\r\n    }\r\n\r\n    initiateSetup(data) {\r\n        console.log('STATE - setup');\r\n        this.#isStarted = true;\r\n\r\n        this.game.clock.setup(data.clock);\r\n        this.game.player.setup(data.player);\r\n        this.game.world.setup(data.world);\r\n        this.game.map.setup(data.map);\r\n    }\r\n\r\n    newGame() {\r\n        this.#filename = prompt('Enter save name', 'test');\r\n        this.deleteFile(this.filename);\r\n        this.initiateTeardown();\r\n\r\n        const data = {\r\n            filename: this.filename,\r\n            clock: this.game.clock.getSetupData(),\r\n            player: this.game.player.getSetupData(),\r\n            world: this.game.world.getSetupData(),\r\n            map: this.game.map.getSetupData(),\r\n        };\r\n\r\n        this.initiateSetup(data);\r\n    }\r\n\r\n    saveGame() {\r\n        if (!this.isStarted) {\r\n            console.warn('cannot save game since it\\'s not started');\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            filename: this.filename,\r\n            clock: this.game.clock.getSaveGameData(),\r\n            map: this.game.map.getSaveGameData(),\r\n            player: this.game.player.getSaveGameData(),\r\n            world: this.game.world.getSaveGameData(),\r\n        };\r\n\r\n        console.log('save data', data);\r\n\r\n        localStorage.setItem(this.filename, JSON.stringify(data));\r\n\r\n        return data;\r\n    }\r\n\r\n    deleteFile(filename) {\r\n        const files = Object.keys(localStorage);\r\n\r\n        files.forEach((file) => {\r\n            if (file.startsWith(`${filename}-`)) {\r\n                localStorage.removeItem(file);\r\n            }\r\n        });\r\n    }\r\n\r\n    saveSectorPositionData(sectorId, positionData) {\r\n        localStorage.setItem(`${this.filename}-${sectorId}-positions`, JSON.stringify(positionData));\r\n    }\r\n\r\n    saveSectorEntityData(sectorId, entityData) {\r\n        localStorage.setItem(`${this.filename}-${sectorId}-entities`, JSON.stringify(entityData));\r\n    }\r\n\r\n    loadSectorEntityData(sectorId) {\r\n        const json = localStorage.getItem(`${this.filename}-${sectorId}-entities`);\r\n\r\n        return json && JSON.parse(json);\r\n    }\r\n\r\n    loadSectorPositionData(sectorId) {\r\n        const json = localStorage.getItem(`${this.filename}-${sectorId}-positions`);\r\n\r\n        return json && JSON.parse(json);\r\n    }\r\n\r\n    loadSavefileData(filename) {\r\n        const json = localStorage.getItem(filename);\r\n\r\n        return json && JSON.parse(json);\r\n    }\r\n\r\n    loadGame() {\r\n        const filename = prompt('Enter save filename to load', 'test');\r\n\r\n        const data = this.loadSavefileData(filename);\r\n\r\n        if (!data) {\r\n            console.warn(`save file ${filename} not found`);\r\n        }\r\n\r\n        this.#filename = filename;\r\n\r\n        console.log('Loading game', data);\r\n\r\n        this.initiateTeardown();\r\n        this.initiateSetup(data);\r\n    }\r\n\r\n    loadGameData(data) {\r\n        this.initiateTeardown();\r\n        this.initiateSetup(data);\r\n    }\r\n}\r\n","import Manager from './Manager';\r\n\r\nexport default class ClockManager extends Manager {\r\n    #tick = 0;\r\n    #tickDelta = 0;\r\n\r\n    get tick() {\r\n        return this.#tick;\r\n    }\r\n\r\n    get tickDelta() {\r\n        return this.#tickDelta;\r\n    }\r\n\r\n    get turn() {\r\n        return Math.floor(this.#tick / 1000);\r\n    }\r\n\r\n    get subTurn() {\r\n        return this.#tick - this.turn * 1000;\r\n    }\r\n\r\n    getSetupData() {\r\n        return {\r\n            tick: 0,\r\n            tickDelta: 0\r\n        };\r\n    }\r\n\r\n    getSaveGameData() {\r\n        return {\r\n            tick: this.tick,\r\n            tickDelta: this.tickDelta,\r\n        };\r\n    }\r\n\r\n    setup(data) {\r\n        this.#tick = data.tick;\r\n        this.#tickDelta = data.tickDelta\r\n    }\r\n\r\n    incrementTick(delta) {\r\n        this.#tickDelta = delta;\r\n        this.#tick += delta;\r\n    }\r\n}\r\n","import { Moniker, Visible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(Visible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\r\nimport FastMap from '../utils/FastMap';\r\nimport { IsInventoried, Position } from '../ecs/components';\r\n\r\nexport default class MapManager extends Manager {\r\n    #playerOutOfBounds = null;\r\n    #lookup;\r\n    #width = 24;\r\n    #height = 24;\r\n\r\n    get width() {\r\n        return this.#width;\r\n    }\r\n\r\n    get height() {\r\n        return this.#height;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [Position],\r\n        });\r\n\r\n        this.#lookup = new FastMap(this.width, this.height);\r\n\r\n        this.query.onEntityAdded((e) => {\r\n            this.#lookup.set(0, 0, e.id);\r\n        });\r\n\r\n        this.query.onEntityRemoved((e) => {\r\n            this.#lookup.remove(e.id);\r\n        });\r\n    }\r\n\r\n    getSetupData() {\r\n        return {};\r\n    }\r\n\r\n    teardown() {\r\n        this.#playerOutOfBounds = false;\r\n        this.#lookup.clear();\r\n    }\r\n\r\n    setup(data) {\r\n        if (data.playerPosition) {\r\n            this.game.player.entity.position.setPos(data.playerPosition.x, data.playerPosition.y);\r\n        } else {\r\n            const position = this.getRandomEmptyPosition();\r\n            this.game.player.entity.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        this.game.FOVSystem.computeFOV();\r\n    }\r\n\r\n    getSaveGameData() {\r\n        const data = this.#lookup.serialize();\r\n\r\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\r\n\r\n        return {\r\n            playerPosition: this.game.player.position,\r\n        };\r\n    }\r\n\r\n    onSectorLoaded(sector) {\r\n        this.#playerOutOfBounds = false;\r\n\r\n        const data = this.game.state.loadSectorPositionData(sector.id);\r\n\r\n        if (data) {\r\n            this.#lookup.deserialize(data);\r\n        }\r\n    }\r\n\r\n    getPosition(entityId) {\r\n        return this.#lookup.getPosition(entityId);\r\n    }\r\n\r\n    setPosition(x, y, entityId) {\r\n        if (this.#lookup.isOutOfBounds(x, y)) {\r\n            if (this.game.player.id === entityId) {\r\n                this.#playerOutOfBounds = { x, y };\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        this.#lookup.set(x, y, entityId);\r\n\r\n        if (entityId === this.game.player.id) {\r\n            this.game.camera.setFocus(x, y);\r\n        }\r\n    }\r\n\r\n    getEntitiesAt(x, y) {\r\n        return this.#lookup\r\n            .get(x, y)\r\n            .map((id) => this.game.ecs.getEntity(id))\r\n            .filter((e) => !e.has(IsInventoried));\r\n    }\r\n\r\n    isAdjacent(x1, y1, x2, y2) {\r\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\r\n    }\r\n\r\n    getNeighborEntities(x, y) {\r\n        return [\r\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\r\n            this.getEntitiesAt(x, y - 1), // TOP\r\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\r\n            this.getEntitiesAt(x - 1, y), // LEFT\r\n            this.getEntitiesAt(x + 1, y), // RIGHT\r\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\r\n            this.getEntitiesAt(x, y + 1), // BOTTOM\r\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\r\n        ];\r\n    }\r\n\r\n    getRandomEmptyPosition() {\r\n        let x, y;\r\n        do {\r\n            x = Math.trunc(Math.random() * this.width);\r\n            y = Math.trunc(Math.random() * this.height);\r\n        } while (this.getEntitiesAt(x, y).length > 0);\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    onPlayerOutOfBounds(x, y) {\r\n        if (y < 0) {\r\n            this.game.world.enterSector(this.game.world.sector.northSector, {\r\n                x,\r\n                y: this.height - 1\r\n            });\r\n        }\r\n        if (y >= this.height) {\r\n            this.game.world.enterSector(this.game.world.sector.southSector, {\r\n                x,\r\n                y: 0\r\n            });\r\n        }\r\n        if (x >= this.width) {\r\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\r\n                x: 0,\r\n                y,\r\n            });\r\n        }\r\n        if (x < 0) {\r\n            this.game.world.enterSector(this.game.world.sector.westSector, {\r\n                x: this.width - 1,\r\n                y,\r\n            });\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.#playerOutOfBounds) {\r\n            this.onPlayerOutOfBounds(this.#playerOutOfBounds.x, this.#playerOutOfBounds.y);\r\n        }\r\n    }\r\n}\r\n","export default class FastMap {\r\n    #width = 0;\r\n    #height = 0;\r\n    #data = [];\r\n    #idHash = new Map();\r\n\r\n    get width() {\r\n        return this.#width;\r\n    }\r\n\r\n    get height() {\r\n        return this.#height;\r\n    }\r\n\r\n    get size() {\r\n        return this.#width * this.#height;\r\n    }\r\n\r\n    constructor(width, height) {\r\n        this.#width = width;\r\n        this.#height = height;\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            this.#data[i] = new Set();\r\n        }\r\n    }\r\n\r\n    idx(x, y) {\r\n        return y * this.width + x;\r\n    }\r\n\r\n    coord(idx) {\r\n        return {\r\n            x: Math.trunc(idx % this.width),\r\n            y: Math.trunc(idx / this.width),\r\n        };\r\n    }\r\n\r\n    clear() {\r\n        this.#idHash.clear();\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            this.#data[i].clear();\r\n        }\r\n    }\r\n\r\n    serialize() {\r\n        const entries = this.#data.map((d) => Array.from(d));\r\n\r\n        return {\r\n            width: this.width,\r\n            height: this.height,\r\n            entries,\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        this.#width = data.width;\r\n        this.#height = data.height;\r\n        this.#idHash = new Map();\r\n\r\n        for (let i = 0; i < data.entries.length; i++) {\r\n            const coord = this.coord(i);\r\n            this.#data[i] = new Set(data.entries[i]);\r\n\r\n            data.entries[i].forEach((id) => {\r\n                this.#idHash.set(id, coord);\r\n            });\r\n        }\r\n    }\r\n\r\n    set(x, y, id) {\r\n        if (this.isOutOfBounds(x, y)) {\r\n            console.warn(\r\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\r\n            );\r\n            return;\r\n        }\r\n\r\n        const idx = this.idx(x, y);\r\n\r\n        this.remove(id);\r\n\r\n        this.#idHash.set(id, { x, y });\r\n        this.#data[idx].add(id);\r\n    }\r\n\r\n    get(x, y) {\r\n        if (this.isOutOfBounds(x, y)) {\r\n            return [];\r\n        }\r\n\r\n        return Array.from(this.#data[this.idx(x, y)]);\r\n    }\r\n\r\n    has(id) {\r\n        return this.#idHash.has(id);\r\n    }\r\n\r\n    getPosition(id) {\r\n        const pos = this.#idHash.get(id);\r\n\r\n        if (!pos) {\r\n            console.warn('Cannot get position', id);\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    remove(id) {\r\n        if (!this.has(id)) {\r\n            return;\r\n        }\r\n\r\n        const pos = this.getPosition(id);\r\n        const idx = this.idx(pos.x, pos.y);\r\n\r\n        this.#idHash.delete(id);\r\n        this.#data[idx].delete(id);\r\n    }\r\n\r\n    isOutOfBounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\r\n    }\r\n}\r\n","import { FOV } from 'rot-js';\nimport { Explorable, Explored, Shadowcaster, Visible } from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [Visible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(Visible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.remove(Visible));\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 4, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\r\nimport { Dead, IsPlayer } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class DeathSystem extends System {\r\n    #query = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Dead],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        this.#query.get().forEach((entity) => {\r\n            entity.fireEvent('death');\r\n\r\n            if (entity.has(IsPlayer)) {\r\n                this.game.screens.setScreen(SCREEN_DEATH);\r\n            } else {\r\n                entity.destroy();\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { game } from '../core/Game';\r\nimport { Particle, ParticleEmitter } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class ParticleSystem extends System {\r\n    #particleQuery = null;\r\n    #emitterQuery = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#emitterQuery = game.ecs.createQuery({\r\n            all: [ParticleEmitter],\r\n        });\r\n        this.#particleQuery = game.ecs.createQuery({\r\n            all: [Particle],\r\n        });\r\n    }\r\n\r\n    createParticle(x, y, properties = {}) {\r\n        const e = this.game.ecs.createEntity();\r\n\r\n        e.add(Particle, {\r\n            ...properties,\r\n            x,\r\n            y,\r\n        });\r\n    }\r\n\r\n    createEmitter(x, y, particleData = {}) {\r\n        const e = this.game.ecs.createEntity();\r\n\r\n        e.add(ParticleEmitter, {\r\n            x,\r\n            y,\r\n            particleData: {\r\n                direction: {\r\n                    x: 0,\r\n                    y: 1,\r\n                },\r\n                glyphs: ['░', '▒', '▓', '█'],\r\n                fg1s: ['cyan', 'blue'],\r\n                speed: 0.04,\r\n                lifetime: 600,\r\n                ...particleData,\r\n            },\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        this.#emitterQuery.get().forEach((entity) => {\r\n            const emitter = entity.particleEmitter;\r\n\r\n            emitter.age += dt;\r\n\r\n            if (emitter.isExpired) {\r\n                entity.destroy();\r\n            } else {\r\n                const total = (emitter.rate / 1000) * emitter.duration;\r\n                const targetCount = Math.trunc(emitter.percent * total);\r\n\r\n                for (let i = emitter.count; i < targetCount; i++) {\r\n                    emitter.createParticle();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.#particleQuery.get().forEach((entity) => {\r\n            const particle = entity.particle;\r\n\r\n            particle.age += dt;\r\n\r\n            if (particle.isExpired) {\r\n                entity.destroy();\r\n                return;\r\n            }\r\n\r\n            particle.x += particle.direction.x * particle.speed;\r\n            particle.y += particle.direction.y * particle.speed;\r\n\r\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\r\n                return;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(\r\n                particle.x,\r\n                particle.y\r\n            );\r\n\r\n            this.game.renderer.draw(\r\n                Math.round(screen.x),\r\n                Math.round(screen.y),\r\n                particle.glyph,\r\n                particle.fg1,\r\n                particle.fg2,\r\n                particle.bg\r\n            );\r\n        });\r\n    }\r\n}\r\n","import { Faction } from '../ecs/components';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const factionA = entityA.get(Faction);\n        const factionB = entityB.get(Faction);\n\n        if (factionA && factionB) {\n            return this.isHostile(factionA.name, factionB.name);\n        }\n\n        return false;\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 24;\n    height = 24;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    get topLeftWorldX() {\n        return Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            this.game.map.width - this.width\n        );\n    }\n\n    get topLeftWorldY() {\n        return Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            this.game.map.height - this.height\n        );\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class FPSMonitoringSystem extends System {\n    update(dt) {\n        const fps = Math.trunc(1000/dt);\n        const display = `${fps}`;\n\n        const textWidth = this.game.renderer.computeTextWidth(display);\n        const x = this.game.renderer.width - textWidth;\n\n        this.game.renderer.drawText(x, this.game.renderer.height - 1, display, '#172e2e');\n    }\n}\n","import WorldData from '../data/WorldData';\r\nimport { IsPlayer } from '../ecs/components';\r\nimport Manager from './Manager';\r\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\r\n\r\nexport class WorldManager extends Manager {\r\n    #data;\r\n    #sectorId;\r\n    #entry;\r\n\r\n    get sectorId() {\r\n        return this.#sectorId;\r\n    }\r\n\r\n    get sector() {\r\n        return this.#data.getSector(this.#sectorId);\r\n    }\r\n\r\n    get entry() {\r\n        return this.#entry;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.#data = new WorldData();\r\n    }\r\n\r\n    getSetupData() {\r\n        return {\r\n            sectorId: this.#data.getStartingSector().id,\r\n            exploredSectorIds: [],\r\n        };\r\n    }\r\n\r\n    getSaveGameData() {\r\n        // TODO only save sector data??\r\n        const data = Array.from(this.game.ecs.entities.all).filter((e) => !e.has(IsPlayer));\r\n        const serialized = this.game.ecs.serialize(data);\r\n\r\n        console.log('serialized map data', serialized);\r\n\r\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\r\n\r\n        // this.game.state.saveSectorEntityData(this.sector.id, this.game.ecs.serialize());\r\n\r\n        return {\r\n            sectorId: this.sector.id,\r\n            exploredSectorIds: []\r\n        };\r\n    }\r\n\r\n    setup(data) {\r\n        const sector = this.#data.getSector(data.sectorId);\r\n\r\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\r\n            nextSector: sector,\r\n            entry: data.position\r\n        });\r\n    }\r\n\r\n    teardown() {\r\n        // TODO: destroy all sector entities?\r\n        this.#sectorId = null;\r\n    }\r\n\r\n    onSectorLoaded(sector, entry) {\r\n        this.#sectorId = sector.id;\r\n\r\n        const data = this.game.state.loadSectorEntityData(sector.id);\r\n\r\n        if (data) {\r\n            console.log('loading sector...', data);\r\n            this.game.ecs.deserialize(data);\r\n        } else {\r\n            console.log('generating sector...');\r\n            sector.generate(this.game);\r\n        }\r\n    }\r\n\r\n    enterSector(sector, entry) {\r\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\r\n            prevousSector: this.sector,\r\n            nextSector: sector,\r\n            entry\r\n        });\r\n    }\r\n}\r\n","import { Sector } from './Sector';\r\nimport data from './world.json';\r\n\r\nexport default class WorldData {\r\n    #sectors = [];\r\n\r\n    get width() {\r\n        return data.width;\r\n    }\r\n\r\n    get height() {\r\n        return data.height;\r\n    }\r\n\r\n    idx(x, y) {\r\n        return y * this.width + x;\r\n    }\r\n\r\n    coord(idx) {\r\n        return {\r\n            x: Math.trunc(idx % this.width),\r\n            y: Math.trunc(idx / this.width),\r\n        };\r\n    }\r\n\r\n    constructor() {\r\n        this.#sectors = [];\r\n\r\n        for (let x = 0; x < data.width; x++) {\r\n            for (let y = 0; y < data.height; y++) {\r\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\r\n\r\n                this.#sectors[sector.id] = sector;\r\n            }\r\n        }\r\n    }\r\n\r\n    isOutOfBounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\r\n    }\r\n\r\n    getStartingSector() {\r\n        return this.getSector(0);\r\n    }\r\n\r\n    getSectorByCoord(x, y) {\r\n        return this.getSector(this.idx(x, y));\r\n    }\r\n\r\n    getSector(idx) {\r\n        const { x, y } = this.coord(idx);\r\n\r\n        if (this.isOutOfBounds(x, y)) {\r\n            return new Sector(this, x, y);\r\n        }\r\n\r\n        return this.#sectors[idx];\r\n    }\r\n}\r\n","import { Map as MapGenerator, RNG } from 'rot-js';\r\nimport { BoredGoalType } from '../ai/GoalTypes';\r\nimport { Blocker, Door } from '../ecs/components';\r\nimport { LIQUID_BLOOD, LIQUID_HONEY, LIQUID_WATER } from '../enums/LiquidTypes';\r\n\r\nexport class Sector {\r\n    #x = 0;\r\n    #y = 0;\r\n    connectionsNorth = [];\r\n    connectionsWest = [];\r\n\r\n    get x() {\r\n        return this.#x;\r\n    }\r\n\r\n    get y() {\r\n        return this.#y;\r\n    }\r\n\r\n    get id() {\r\n        return this.world.idx(this.x, this.y);\r\n    }\r\n\r\n    get northSector() {\r\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\r\n    }\r\n\r\n    get southSector() {\r\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\r\n    }\r\n\r\n    get eastSector() {\r\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\r\n    }\r\n\r\n    get westSector() {\r\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\r\n    }\r\n\r\n    constructor(world, x, y) {\r\n        this.world = world;\r\n        this.#x = x;\r\n        this.#y = y;\r\n    }\r\n\r\n    getConnections() {\r\n        return {\r\n            north: this.connectionsNorth,\r\n            east: this.eastSector.connectionsWest,\r\n            west: this.connectionsWest,\r\n            south: this.southSector.connectionsNorth,\r\n        }\r\n    }\r\n\r\n    generate(game) {\r\n        const generator = new MapGenerator.Uniform(game.map.width, game.map.height, {\r\n            timeLimit: 8000,\r\n            roomWidth: [2, 8],\r\n            roomHeight: [2, 8],\r\n            roomDugPercentage: 0.8,\r\n        });\r\n\r\n        generator.create((x, y, v) => {\r\n            if (v !== 1) {\r\n                return;\r\n            }\r\n\r\n            const type = Math.random() < 0.5 ? 'PineTree' : 'SmallPineTree';\r\n            const entity = game.ecs.createPrefab(type);\r\n\r\n            entity.position.setPos(x, y);\r\n        });\r\n\r\n        const connections = this.getConnections();\r\n\r\n        const northPaths = connections.north.map((north) => {\r\n            // dig south from top until hit empty\r\n            for (let i = 0; i < game.map.height; i++) {\r\n                const blockers = game.map.getEntitiesAt(12, i).filter((e) => e.has(Blocker));\r\n\r\n                if (blockers.length > 0) {\r\n                    blockers.forEach((b) => b.destroy());\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        if (northPaths.some((isConnected) => isConnected === false)) {\r\n            console.log('CONNECTION north FAILED! regenerate');\r\n        }\r\n\r\n        const southPaths = connections.south.map((south) => {\r\n            // dig north from bottom until hit empty\r\n            for (let i = game.map.height - 1; i > 0; i--) {\r\n                const blockers = game.map.getEntitiesAt(12, i).filter((e) => e.has(Blocker));\r\n\r\n                if (blockers.length > 0) {\r\n                    blockers.forEach((b) => b.destroy());\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        if (southPaths.some((isConnected) => isConnected === false)) {\r\n            console.log('CONNECTION south FAILED! regenerate');\r\n        }\r\n\r\n        const westPaths = connections.west.map((west) => {\r\n            // dig east from left until hit empty\r\n            for (let i = 0; i < game.map.width; i++) {\r\n                const blockers = game.map.getEntitiesAt(i, 12).filter((e) => e.has(Blocker));\r\n\r\n                if (blockers.length > 0) {\r\n                    blockers.forEach((b) => b.destroy());\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        if (westPaths.some((isConnected) => isConnected === false)) {\r\n            console.log('CONNECTION west FAILED! regenerate');\r\n        }\r\n\r\n        const eastPaths = connections.east.map((east) => {\r\n            // dig west from right until hit empty\r\n            for (let i = game.map.width - 1; i > 0; i--) {\r\n                const blockers = game.map.getEntitiesAt(i, 12).filter((e) => e.has(Blocker));\r\n\r\n                if (blockers.length > 0) {\r\n                    blockers.forEach((b) => b.destroy());\r\n                } else {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        if (eastPaths.some((isConnected) => isConnected === false)) {\r\n            console.log('CONNECTION east FAILED! regenerate');\r\n        }\r\n\r\n\r\n        var rooms = generator.getRooms();\r\n        for (var i = 0; i < rooms.length; i++) {\r\n            var room = rooms[i];\r\n\r\n            room.getDoors((x, y) => {\r\n                const hasDoor = game.map.getEntitiesAt(x, y).some((e) =>\r\n                    e.has(Door)\r\n                );\r\n\r\n                if (hasDoor) {\r\n                    return;\r\n                }\r\n\r\n                if (Math.random() > .25) {\r\n                    return;\r\n                }\r\n\r\n                const door = game.ecs.createPrefab('Door');\r\n                door.position.setPos(x, y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < 8; i++) {\r\n            const position = game.map.getRandomEmptyPosition();\r\n            const stone = game.ecs.createPrefab('Stone');\r\n\r\n            stone.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            const position = game.map.getRandomEmptyPosition();\r\n            const chest = game.ecs.createPrefab('Chest');\r\n\r\n            const stone = game.ecs.createPrefab('Stone');\r\n            const vial = game.ecs.createPrefab('Vial');\r\n            vial.liquidContainer.contents = LIQUID_HONEY;\r\n\r\n            chest.position.setPos(position.x, position.y);\r\n            chest.inventory.addLoot(vial);\r\n            chest.inventory.addLoot(stone);\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            const position = game.map.getRandomEmptyPosition();\r\n            const vial = game.ecs.createPrefab('Vial');\r\n\r\n            vial.liquidContainer.contents = LIQUID_BLOOD;\r\n            vial.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            const position = game.map.getRandomEmptyPosition();\r\n            const vial = game.ecs.createPrefab('Vial');\r\n\r\n            vial.liquidContainer.contents = LIQUID_WATER;\r\n            vial.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            const position = game.map.getRandomEmptyPosition();\r\n            const vial = game.ecs.createPrefab('Vial');\r\n\r\n            vial.liquidContainer.contents = LIQUID_HONEY;\r\n            vial.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        for (let i = 0; i < 6; i++) {\r\n            const position = game.map.getRandomEmptyPosition();\r\n            const wanderer = game.ecs.createPrefab('HumanWanderer');\r\n\r\n            wanderer.position.setPos(position.x, position.y);\r\n            wanderer.brain.pushGoal(BoredGoalType.create());\r\n        }\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            const position = game.map.getRandomEmptyPosition();\r\n            const goblin = game.ecs.createPrefab('Goblin');\r\n\r\n            goblin.position.setPos(position.x, position.y);\r\n            goblin.brain.pushGoal(BoredGoalType.create());\r\n        }\r\n    }\r\n\r\n    static parseData(world, data, x, y) {\r\n        const sector = new Sector(world, x, y);\r\n\r\n        sector.connectionsNorth = data.connectionsNorth;\r\n        sector.connectionsWest = data.connectionsWest;\r\n\r\n        return sector;\r\n    }\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}