{"version":3,"sources":["webpack://knossonia/./src/index.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/MapLayer.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Visible.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/core/ScreenCaptureManager.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["window","game","ecs","Game","this","engine","ECS","clock","ClockManager","renderer","Renderer","state","GameStateManager","mouse","MouseManager","map","MapManager","player","PlayerManager","screens","ScreenManager","commands","CommandManager","input","InputController","screenCapture","ScreenCaptureManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","newGame","requestAnimationFrame","loop","bind","t","update","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","document","body","appendChild","display","canvas","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","clear","xPx","yPx","Math","trunc","Manager","data","defaultFg","createElement","getContext","widthPx","heightPx","style","cssText","ctx","textBaseline","pixelX","pixelY","img","colorize","fillStyle","fillRect","clearRect","drawImage","color","tileImage","getElementById","fontImage","SpriteSheet","image","cp437","row","forEach","glyph","j","Sprite","spriteCountX","spriteCountY","isBlack","r","g","b","sheet","sourceX","sourceY","spriteWidth","spriteHeight","primaryCss","secondaryCss","primary","colorParse","values","secondary","key","alpha","pixels","getImageData","cvs","putImageData","cstr","m","space","parts","names","slice","test","size","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","value","join","toLowerCase","isNaN","Array","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","addEventListener","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","all","Eater","dt","tickDelta","get","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","constructor","component","enumerable","set","v","id","getEntity","console","Proxy","Reflect","old","deleteProperty","len","proxy","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","camelcase","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","hasOwnProperty","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","Entity","refs","Set","json","entityData","createOrGetById","d","any","none","hasAny","c","hasAll","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","entities","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","Brain","peekGoal","isFinished","popGoal","currentGoal","result","takeAction","FAILURE","removeGoal","INVALID","fireEvent","handle","goal","goalsToDestroy","goals","isSelf","isSiblingGoal","originalIntent","pop","SUCCESS","Goal","GoalEvaluator","complete","goalTypeMap","GoalTypes","goalType","getGoalType","warn","BoredGoalType","GoalType","brain","pushGoal","EatFoodGoalType","food","handled","SatisfyHungerGoalType","isHungry","MoveGoalType","random","Moniker","Logger","log","moniker","Position","getPosition","setPosition","pos","getPos","MapLayer","idx","content","mapEntity","Glyph","background","Arms","actor","hasEnergy","Blocker","Legs","position","targetX","targetY","getEntitiesAt","some","setPos","MoveCommand","direction","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","IsPlayer","Wandering","floor","Directions","Shadowcaster","Visible","amount","range","Explorable","Explored","Health","add","Dead","max","sorted","from","sort","incrementTick","isPlayer","Engine","registerComponent","registerPrefab","renderable","render","moveCommand","turn","subTurn","padEnd","hasMouse","drawText","str","ceil","computeTextWidth","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","splice","getDomainCommands","find","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_LOOK","INPUT_CMD_SCREEN_CAPTURE_START","KEY_F5","INPUT_CMD_SCREEN_CAPTURE_END","KEY_F6","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_M","KEY_N","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","SCREEN_MAIN_MENU","MainMenuScreen","SCREEN_ADVENTURE","AdventureScreen","screenType","screen","onLeave","onEnter","onUpdate","setScreen","pushDomain","computeFOV","popDomain","dir","isEnabled","move","directionDelta","playerPosition","targetPosition","targets","melee","saveGame","loadGame","toggle","disable","startCapture","endCapture","wait","onDirectionInput","Screen","getRandomEmptyPosition","createPrefab","isTurn","remove","turns","playerEntityId","onNewGame","onSaveGame","localStorage","setItem","JSON","stringify","parse","getItem","onLoadGame","tick","enable","getEntities","FastMap","onEntityAdded","onEntityRemoved","MapGenerator","timeLimit","roomWidth","roomHeight","roomDugPercentage","wanderer","goblin","lookup","entityId","getEntityIdsAt","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","min","getUniform","u","mean","stddev","gauss","sqrt","clone","indexOf","total","part","RNG","setState","getState","setSeed","Date","now","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_data","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","ch","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","fgs","bgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","message","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","parsed","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","dx","dy","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","arr","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","keys","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","item","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","count","FOV","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","visibility","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","startX","startY","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","start","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","abs","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","sx","sy","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","door","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","x0","y0","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","then","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","fov","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","compute","vis","entries","coord","isOutOfBounds","duration","isRecording","chunks","stream","captureStream","MediaRecorder","ondataavailable","onstop","exportVideo","Blob","stop","blob","vid","src","URL","createObjectURL","controls","download","href","textContent","isSquareVisible","setVisible","meleeCommand","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","mode","__esModule","ns","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.f34368a046f88fa98caf.js","sourcesContent":["import { game } from './core/Game';\n\nwindow.game = game;\nwindow.ecs = game.ecs;\n\ngame.start();\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport ScreenCaptureManager from './ScreenCaptureManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\n\nexport default class Game {\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS();\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.mouse = new MouseManager(this);\n        this.map = new MapManager(this);\n        this.player = new PlayerManager(this);\n        this.screens = new ScreenManager(this);\n        this.commands = new CommandManager(this);\n        this.input = new InputController(this);\n        this.screenCapture = new ScreenCaptureManager(this);\n\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n    }\n\n    start() {\n        this.state.newGame();\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    loop(t) {\n        const dt = 0;\n\n        this.hungerSystem.update(dt);\n        this.actionSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.meleeSystem.update(dt);\n        this.deathSystem.update(dt);\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.UISystem.update(dt);\n        this.screens.update(dt);\n        this.cursor.update(dt);\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    #tileWidth = 16;\n    #tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    width = 24;\n    height = 24;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets.forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: this.width,\n            height: this.height,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    draw(x, y, char, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    onSaveGame() {}\n    onLoadGame(data) {}\n}\n","export default class Display {\n    #ctx;\n    #canvas;\n    #canvasDirty;\n    #width;\n    #height;\n    #tileWidth;\n    #tileHeight;\n    #defaultFg;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get canvas() {\n        return this.#canvas;\n    }\n\n    get ctx() {\n        return this.#ctx;\n    }\n\n    constructor({ width, height, tileWidth, tileHeight, defaultFg }) {\n        this.#width = width;\n        this.#height = height;\n        this.#tileWidth = tileWidth;\n        this.#tileHeight = tileHeight;\n        this.#defaultFg = defaultFg || '#fff';\n\n        this.#canvas = document.createElement('canvas');\n        this.#ctx = this.canvas.getContext('2d');\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.ctx.font = `${this.#tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        const pixelX = x * this.tileWidth;\n        const pixelY = y * this.tileHeight;\n\n        const img = sprite.colorize(fg1, fg2);\n\n        if (bg) {\n            this.ctx.fillStyle = bg;\n            this.ctx.fillRect(pixelX, pixelY, sprite.width, sprite.height);\n        } else {\n            this.ctx.clearRect(pixelX, pixelY, this.tileWidth, this.tileHeight);\n        }\n\n        this.ctx.drawImage(img, pixelX, pixelY);\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    fillTile(x, y, color) {\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(x, y, this.tileWidth, this.#tileHeight);\n    }\n\n    clearTile(x, y) {\n        this.ctx.clearRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth,\n            this.tileHeight\n        );\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nconst tileImage = document.getElementById('spritesheet-tiles');\nconst fontImage = document.getElementById('spritesheet-font');\n\nexport default [\n    new SpriteSheet('tiles', tileImage),\n    new SpriteSheet('font', fontImage),\n];\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #image = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get image() {\n        return this.#image;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    get spriteWidth() {\n        return this.image.width / this.spriteCountX;\n    }\n\n    get spriteHeight() {\n        return this.image.height / this.spriteCountY;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.#image = image;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import colorParse from 'color-parse';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    #cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = colorParse(primaryCss).values;\n        const secondary = colorParse(secondaryCss).values;\n\n        const key = `${primary[0]},${primary[1]},${primary[2]},${primary.alpha}-${secondary[0]},${secondary[1]},${secondary[2]},${secondary.alpha}`;\n\n        if (key in this.#cache) {\n            const data = this.#cache[key];\n\n            return data;\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary.alpha;\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary.alpha;\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this.#cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\r\n    component;\r\n\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.component.ecs;\r\n    }\r\n\r\n    get descriptor() {\r\n        return {\r\n            enumerable: true,\r\n            get: () => this.get(),\r\n            set: (v) => this.set(v),\r\n        };\r\n    }\r\n\r\n    get() {\r\n        return undefined;\r\n    }\r\n\r\n    set(value) {}\r\n\r\n    serialize() {\r\n        return undefined;\r\n    }\r\n\r\n    onDestroyed() {}\r\n\r\n    cleanupReference(entity) {}\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class SimpleProperty extends Property {\r\n    value = null;\r\n\r\n    set(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    get() {\r\n        return this.value;\r\n    }\r\n\r\n    serialize() {\r\n        return this.value;\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityArrayProperty extends Property {\r\n    proxy = [];\r\n\r\n    constructor(component) {\r\n        super(component);\r\n        this.proxy = new Proxy([], {\r\n            get: (target, prop, receiver) => {\r\n                return Reflect.get(target, prop, receiver);\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                const old = Reflect.get(target, prop, receiver);\r\n\r\n                if (typeof value === 'string') {\r\n                    value = this.ecs.entities.get(value);\r\n                }\r\n\r\n                if (old && old != value) {\r\n                    this.ecs.entities.removeRef(value, this);\r\n                }\r\n\r\n                if (value && value.id) {\r\n                    this.ecs.entities.addRef(value.id, this);\r\n\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                return Reflect.set(target, prop, value, receiver);\r\n            },\r\n            deleteProperty: (target, prop) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.deleteProperty(target, prop);\r\n                }\r\n\r\n                const value = Reflect.get(target, prop);\r\n                this.ecs.entities.removeRef(value, this);\r\n\r\n                return Reflect.deleteProperty(target, prop);\r\n            },\r\n        });\r\n    }\r\n\r\n    set(values = []) {\r\n        const len = Math.max(values.length, this.proxy.length);\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            if (i in values) {\r\n                this.proxy[i] = values[i];\r\n            } else {\r\n                delete this.proxy[i];\r\n            }\r\n        }\r\n\r\n        this.proxy.length = values.length;\r\n    }\r\n\r\n    get() {\r\n        return this.proxy;\r\n    }\r\n\r\n    serialize() {\r\n        return this.proxy.map((ref) => ref.id);\r\n    }\r\n\r\n    onDestroyed() {\r\n        this.set([]);\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\r\n    }\r\n}\r\n","import Property from './Property';\r\nimport SimpleProperty from './SimpleProperty';\r\nimport EntityProperty from './EntityProperty';\r\nimport EntityArrayProperty from './EntityArrayProperty';\r\n\r\nexport default class PropertyStrategy {\r\n    static create(component, value) {\r\n        switch (value) {\r\n            case '<Entity>':\r\n                return new EntityProperty(component);\r\n            case '<EntityArray>':\r\n                return new EntityArrayProperty(component);\r\n            default:\r\n                return new SimpleProperty(component);\r\n        }\r\n    }\r\n}\r\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(this.type, this.serialize());\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class ComponentRegistry {\r\n    #nameCache = new Map();\r\n    #definitions = new Map();\r\n    #ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    register(component) {\r\n        this.#definitions.set(component.name, component);\r\n        this.#nameCache.set(component.name, camelcase(component.name));\r\n    }\r\n\r\n    getAccessor(type) {\r\n        if (this.#nameCache.has(type)) {\r\n            return this.#nameCache.get(type);\r\n        }\r\n\r\n        this.#nameCache.set(type, camelcase(type));\r\n    }\r\n\r\n    get(typeOrClassOrComponent) {\r\n        const type = this._getType(typeOrClassOrComponent);\r\n\r\n        if (!type) {\r\n            console.warn(\r\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return this.#definitions.get(type);\r\n    }\r\n\r\n    create(typeOrClass, properties = {}) {\r\n        const definition = this.get(typeOrClass);\r\n\r\n        if (definition) {\r\n            return new definition(this.#ecs, properties);\r\n        }\r\n\r\n        console.warn(\r\n            `Could not create component definition for ${typeOrClass} since it is not registered`\r\n        );\r\n    }\r\n\r\n    _getType(typeOrClassOrComponent) {\r\n        if (typeof typeOrClassOrComponent === 'string') {\r\n            return typeOrClassOrComponent;\r\n        }\r\n\r\n        if (typeOrClassOrComponent instanceof Component) {\r\n            return typeOrClassOrComponent.type;\r\n        }\r\n\r\n        if (typeOrClassOrComponent.prototype instanceof Component) {\r\n            return typeOrClassOrComponent.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    get type() {\r\n        return this.componentDef.type;\r\n    }\r\n\r\n    constructor(componentDef, properties = {}, overwrite = true) {\r\n        this.componentDef = componentDef;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\r\n            if (this.overwrite) {\r\n                entity.remove(this.componentDef);\r\n            } else {\r\n                console.log(\r\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.componentDef, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\r\n                        initialCompProps = initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][arrComps[accessor]]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][arrComps[accessor]];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport PrefabComponent from '../PrefabComponent';\r\nimport Prefab from '../Prefab';\r\n\r\nexport default class PrefabRegistry {\r\n    #prefabs = {};\r\n    #ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(this.#ecs, data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        for (const componentData of comps) {\r\n            if (\r\n                typeof componentData === 'string' ||\r\n                componentData.prototype instanceof Component\r\n            ) {\r\n                const def = this.#ecs.components.get(componentData);\r\n                if (def) {\r\n                    prefab.addComponent(new PrefabComponent(def));\r\n                }\r\n            } else if (typeof componentData === 'object') {\r\n                const type = componentData.type;\r\n                const def = this.#ecs.components.get(type);\r\n                if (def) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            def,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n                }\r\n            } else {\r\n                console.warn(\r\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n                );\r\n            }\r\n        }\r\n\r\n        this.register(prefab);\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(prefab) {\r\n        this.#prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(nameOrClassOrPrefab) {\r\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\r\n\r\n        return this.#prefabs[name];\r\n    }\r\n\r\n    create(nameOrClass, initialProps = {}) {\r\n        const prefab = this.get(nameOrClass);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = this.#ecs.createEntity();\r\n        prefab.applyToEntity(entity, initialProps);\r\n\r\n        return entity;\r\n    }\r\n\r\n    static _getName(nameOrClassOrPrefab) {\r\n        if (typeof nameOrClassOrPrefab === 'string') {\r\n            return nameOrClassOrPrefab;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\r\n    data = {};\r\n    #prevented = false;\r\n    #handled = false;\r\n\r\n    get prevented() {\r\n        return this.#prevented;\r\n    }\r\n\r\n    get handled() {\r\n        return this.#handled;\r\n    }\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this.#handled = true;\r\n        this.#prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this.#prevented = true;\r\n    }\r\n}\r\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        if (typeOrClass instanceof Component) {\r\n            if (typeOrClass.isAttached) {\r\n                console.warn(\r\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return this.attach(typeOrClass);\r\n        }\r\n\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class EntityRegistry {\r\n    #entities = new Map();\r\n    #ecs = null;\r\n    #refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this.#entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this.#entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this.#entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this.#ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this.#ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this.#entities.delete(entity.id);\r\n        this.#ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this.#refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this.#refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this.#refs.has(entityId)) {\r\n            this.#refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this.#refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this.#refs.has(entityId)) {\r\n            this.#refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize() {\r\n        const json = [];\r\n\r\n        this.#entities.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = camelcase(key, { pascalCase: true });\r\n            const definition = this.#ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\r\n\r\nexport default class Query {\r\n    #ecs;\r\n    #filter;\r\n    #onEntityAddedCallbacks = [];\r\n    #onEntityRemovedCallbacks = [];\r\n    #cache = new Set();\r\n\r\n    constructor(ecs, filter = {}) {\r\n        this.#ecs = ecs;\r\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\r\n        this.bustCache();\r\n    }\r\n\r\n    isMatch(entity) {\r\n        const hasAny = this.#filter.any.length\r\n            ? this.#filter.any.some((c) => entity.has(c))\r\n            : true;\r\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\r\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\r\n\r\n        return hasAny && hasAll && hasNone;\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this.#onEntityAddedCallbacks.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this.#onEntityRemovedCallbacks.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this.#cache.has(entity);\r\n    }\r\n\r\n    candidate(entity) {\r\n        const isTracking = this.has(entity);\r\n\r\n        if (this.isMatch(entity)) {\r\n            if (!isTracking) {\r\n                this.#cache.add(entity);\r\n                this.#onEntityAddedCallbacks.forEach((cb) => cb(entity));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this.#cache.delete(entity);\r\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _onEntityCreated(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentAdded(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentRemoved(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onEntityDestroyed(entity) {\r\n        if (this.has(entity)) {\r\n            this.#cache.delete(entity);\r\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n    }\r\n\r\n    bustCache() {\r\n        this.#cache.clear();\r\n\r\n        for (const entity of this.#ecs.entities.all) {\r\n            this.candidate(entity);\r\n        }\r\n\r\n        return this.#cache;\r\n    }\r\n\r\n    get() {\r\n        return this.#cache;\r\n    }\r\n}\r\n","import Query from '../Query';\r\n\r\nexport default class QueryRegistry {\r\n    #ecs;\r\n    #queries = [];\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    create(filters) {\r\n        const query = new Query(this.#ecs, filters);\r\n\r\n        this.#queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    onComponentAdded(entity) {\r\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\r\n    }\r\n\r\n    onComponentRemoved(entity) {\r\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\r\n    }\r\n\r\n    onEntityCreated(entity) {\r\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\r\n    }\r\n}\r\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity() {\r\n        return this.entities.create();\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize() {\r\n        return {\r\n            entities: this.entities.serialize(),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\nimport { SUCCESS, INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('boredom');\n\n        if (evt.data.goal) {\n            entity.brain.pushGoal(evt.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        entity.fireEvent('consume-energy', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker) ? this.entity.moniker.name : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class MapLayer extends Component {\n    static properties = {\n        mapEntity: '<Entity>',\n        name: '',\n        content: '<EntityArray>',\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    getByIndex(idx) {\n        return content[idx];\n    }\n\n    get(x, y) {}\n}\n","import { Component } from 'geotic';\n\nexport class Glyph extends Component {\n    static properties = {\n        primary: '#ddd',\n        secondary: '#666',\n        background: null,\n        char: '?',\n    };\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\nimport { Blocker } from './Blocker';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        evt.data.target.fireEvent('damage', damage);\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\nimport { Blocker } from './Blocker';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        if (!this.entity.has(Position)) {\n            return;\n        }\n\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.log('No energy??');\n            return;\n        }\n\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = window.game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        this.entity.position.setPos(targetX, targetY);\n        this.entity.fireEvent('energy-consumed', 750);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>'\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.25) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {};\n","import { Component } from 'geotic';\n\nexport class Visible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.value;\n\n        if (this.value <= 0) {\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {};\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import ecs from '../ecs';\nimport { Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (!entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    onNewGame() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    onSaveGame() {\n        return {\n            engine: this.#engine.serialize(),\n        };\n    }\n\n    onLoadGame(data) {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n\n        this.#engine.deserialize(data.engine);\n    }\n}\n","import { Explorable, Explored, Glyph, Position, Visible } from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, Visible],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [Visible]\n        });\n    }\n\n    render() {\n        this.game.renderer.clear();\n\n        this.#explored.get().forEach((renderable) => {\n            const pos = renderable.position.getPos();\n            this.game.renderer.draw(\n                pos.x,\n                pos.y,\n                renderable.glyph.char,\n                '#283131',\n                '#283131'\n            );\n        });\n\n        this.#query.get().forEach((renderable) => {\n            const pos = renderable.position.getPos();\n            this.game.renderer.draw(\n                pos.x,\n                pos.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        });\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const x = this.game.mouse.x;\n        const y = this.game.mouse.y;\n        const hasMouse = this.game.mouse.hasMouse;\n\n        this.game.renderer.drawText(1, 1, `Knossonia (${x}, ${y}) ${hasMouse}`);\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.renderer.width - 1 - len, 1, str);\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_SCREEN_CAPTURE_START,\n    INPUT_CMD_SCREEN_CAPTURE_END,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_F5,\n    KEY_F6,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_NW,              'move_nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_N,               'move_n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_N,               'move_n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_NE,              'move_ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_W,               'move_w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_W,               'move_w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_E,               'move_e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_E,               'move_e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_SW,              'move_sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_S,               'move_s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_S,               'move_s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_SE,              'move_se',                true, KEY_C,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_SCREEN_CAPTURE_START, 'start capture screen',   true, KEY_F5,       false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_SCREEN_CAPTURE_END,   'end capture screen',     true, KEY_F6,       false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\nexport const INPUT_CMD_SCREEN_CAPTURE_START = 14;\nexport const INPUT_CMD_SCREEN_CAPTURE_END = 15;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import { SCREEN_MAIN_MENU, SCREEN_ADVENTURE } from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport Manager from '../Manager';\n\nexport default class ScreenManager extends Manager {\n    #screenType = SCREEN_MAIN_MENU;\n    #screens = {};\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n        };\n    }\n\n    get screen() {\n        return this.#screens[this.#screenType];\n    }\n\n    setScreen(screenType) {\n        this.screen.onLeave();\n        this.#screenType = screenType;\n        this.screen.onEnter();\n        this.game.renderSystem.render();\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n\n    onLoadGame(data) {\n        this.setScreen(SCREEN_ADVENTURE);\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_SCREEN_CAPTURE_START,\n    INPUT_CMD_SCREEN_CAPTURE_END,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta\n} from '../../../enums/Directions';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        if (this.game.cursor.isEnabled) {\n            this.game.cursor.move(dir);\n        } else {\n            const delta = directionDelta(dir);\n            const playerPosition = this.game.player.position;\n            const targetPosition = {\n                x: playerPosition.x + delta.x,\n                y: playerPosition.y + delta.y,\n            };\n            const targets = this.game.map.getEntitiesAt(targetPosition.x, targetPosition.y);\n\n            if (targets.length > 0) {\n                this.game.player.melee(targets[0]);\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            this.game.cursor.toggle();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            if (this.game.cursor.isEnabled) {\n                this.game.cursor.disable();\n            } else {\n                this.game.screens.setScreen(SCREEN_MAIN_MENU);\n            }\n        }\n        if (cmd.type === INPUT_CMD_SCREEN_CAPTURE_START) {\n            this.game.screenCapture.startCapture();\n        }\n        if (cmd.type === INPUT_CMD_SCREEN_CAPTURE_END) {\n            this.game.screenCapture.endCapture();\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.state.newGame();\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`);\n        this.game.renderer.drawText(1, 3, `press enter to embark`);\n        this.game.renderer.drawText(1, 7, `move [w, a, d, x]`);\n        this.game.renderer.drawText(1, 8, `look [l]`);\n        this.game.renderer.drawText(1, 9, `save [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load [ctrl+l]`);\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    onNewGame() {\n        const position = this.game.map.getRandomEmptyPosition();\n        const player = this.game.ecs.createPrefab('Player');\n\n        player.position.setPos(position.x, position.y);\n\n        this.#entityId = player.id;\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.remove(MeleeCommand);\n        }\n\n        this.entity.add(MeleeCommand, {\n            target\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n\n    onSaveGame() {\n        return {\n            playerEntityId: this.#entityId,\n        };\n    }\n\n    onLoadGame(data) {\n        this.#entityId = data.playerEntityId;\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    newGame() {\n        console.log('NEW GAME');\n        this.game.clock.onNewGame();\n        this.game.engine.onNewGame();\n        this.game.map.onNewGame();\n        this.game.player.onNewGame();\n    }\n\n    saveGame() {\n        const data = {\n            ...this.game.clock.onSaveGame(),\n            ...this.game.player.onSaveGame(),\n            ...this.game.engine.onSaveGame(),\n            ...this.game.map.onSaveGame(),\n        };\n\n        console.log('SAVE GAME', data);\n        localStorage.setItem('save', JSON.stringify(data));\n    }\n\n    loadGame() {\n        const data = JSON.parse(localStorage.getItem('save'));\n\n        console.log('LOAD GAME', data);\n\n        this.game.clock.onLoadGame(data);\n        this.game.engine.onLoadGame(data);\n        this.game.map.onLoadGame(data);\n        this.game.player.onLoadGame(data);\n        this.game.screens.onLoadGame(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    onNewGame() {\n        this.#tick = 0;\n        this.#tickDelta = 0;\n    }\n\n    onLoadGame(data) {\n        this.#tick = data.clock.tick;\n        this.#tickDelta = data.clock.tickDelta;\n    }\n\n    onSaveGame() {\n        return {\n            clock: {\n                tick: this.tick,\n                tickDelta: this.tickDelta,\n            },\n        };\n    }\n}\n","import { Moniker, Visible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map.getEntitiesAt(this.x, this.y).filter((e) => e.has(Visible));\n    }\n\n    update(dt) {\n        if (!this.#isEnabled) {\n            return;\n        }\n\n        const entities = this.getEntities();\n\n        if (this.x < this.game.map.width / 2) {\n            entities\n                .filter((e) => e.has(Moniker))\n                .forEach((entity, i) => {\n                    const c = i === 0 ? '◄' : ' ';\n                    this.game.renderer.drawText(\n                        this.x + 1,\n                        this.y + i,\n                        `${c}█`,\n                        '#ddd'\n                    );\n                    this.game.renderer.drawText(\n                        this.x + 2,\n                        this.y + i,\n                        entity.moniker.name + ' ',\n                        '#111133',\n                        'white',\n                        '#ddd'\n                    );\n                });\n        } else {\n            entities\n                .filter((e) => e.has(Moniker))\n                .forEach((entity, i) => {\n                    const c = i === 0 ? '►' : ' ';\n                    this.game.renderer.drawText(\n                        this.x - 1,\n                        this.y + i,\n                        `█${c}`,\n                        '#ddd'\n                    );\n                    const len = this.game.renderer.computeTextWidth(entity.moniker.name);\n                    this.game.renderer.drawText(\n                        this.x - len - 1.5,\n                        this.y + i,\n                        ' ' + entity.moniker.name,\n                        '#111133',\n                        'white',\n                        '#ddd'\n                    );\n                });\n        }\n\n        this.game.renderer.draw(this.x, this.y, 'X', 'yellow');\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\r\nimport Manager from './Manager';\r\nimport FastMap from '../utils/FastMap';\r\nimport { BoredGoalType } from '../ai/GoalTypes';\r\nimport { Position } from '../ecs/components';\r\n\r\nexport default class MapManager extends Manager {\r\n    #lookup;\r\n    #width = 24;\r\n    #height = 24;\r\n\r\n    get width() {\r\n        return this.#width;\r\n    }\r\n\r\n    get height() {\r\n        return this.#height;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [Position],\r\n        });\r\n\r\n        this.#lookup = new FastMap(this.width, this.height);\r\n\r\n        this.query.onEntityAdded((e) => {\r\n            this.#lookup.set(0, 0, e.id);\r\n        });\r\n\r\n        this.query.onEntityRemoved((e) => {\r\n            this.#lookup.remove(e.id);\r\n        });\r\n    }\r\n\r\n    onNewGame() {\r\n        this.#lookup.clear();\r\n        const generator = new MapGenerator.Uniform(this.width, this.height, {\r\n            timeLimit: 8000,\r\n            roomWidth: [3, 6],\r\n            roomHeight: [3, 6],\r\n            roomDugPercentage: 0.8,\r\n        });\r\n\r\n        generator.create((x, y, v) => {\r\n            if (v !== 1) {\r\n                return;\r\n            }\r\n\r\n            const type = Math.random() < .5 ? 'PineTree' : 'SmallPineTree';\r\n            const entity = this.game.ecs.createPrefab(type);\r\n\r\n            entity.position.setPos(x, y);\r\n        });\r\n\r\n        for (let i = 0; i < 3; i++) {\r\n            const position = this.getRandomEmptyPosition();\r\n            const wanderer = this.game.ecs.createPrefab('HumanWanderer');\r\n\r\n            wanderer.position.setPos(position.x, position.y);\r\n            wanderer.brain.pushGoal(BoredGoalType.create());\r\n        }\r\n\r\n        for (let i = 0; i < 5; i++) {\r\n            const position = this.getRandomEmptyPosition();\r\n            const goblin = this.game.ecs.createPrefab('Goblin');\r\n\r\n            goblin.position.setPos(position.x, position.y);\r\n            goblin.brain.pushGoal(BoredGoalType.create());\r\n        }\r\n    }\r\n\r\n    onSaveGame() {\r\n        return {\r\n            map: {\r\n                lookup: this.#lookup.serialize()\r\n            }\r\n        };\r\n    }\r\n\r\n    onLoadGame(data) {\r\n        this.#lookup.deserialize(data.map.lookup);\r\n    }\r\n\r\n    getPosition(entityId) {\r\n        return this.#lookup.getPosition(entityId)\r\n    }\r\n\r\n    setPosition(x, y, entityId) {\r\n        this.#lookup.set(x, y, entityId);\r\n    }\r\n\r\n    getEntityIdsAt(x, y) {\r\n        return this.#lookup.get(x, y);\r\n    }\r\n\r\n    getEntitiesAt(x, y) {\r\n        return this.getEntityIdsAt(x, y).map((id) => this.game.ecs.getEntity(id));\r\n    }\r\n\r\n    getRandomEmptyPosition() {\r\n        let x, y;\r\n        do {\r\n            x = Math.trunc(Math.random() * this.width);\r\n            y = Math.trunc(Math.random() * this.height);\r\n        } while (this.getEntitiesAt(x, y).length > 0);\r\n\r\n        return { x, y };\r\n    }\r\n}\r\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","export default class FastMap {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #idHash = new Map();\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    constructor(width, height) {\n        this.#width = width;\n        this.#height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return (y * this.width) + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width)\n        };\n    }\n\n    clear() {\n        this.#idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this.#data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this.#width = data.width;\n        this.#height = data.height;\n        this.#idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this.#data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this.#idHash.set(id, coord)\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(`Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`);\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this.#idHash.set(id, { x, y });\n        this.#data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this.#data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this.#idHash.has(id);\n    }\n\n    getPosition(id) {\n        return this.#idHash.get(id);\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this.#idHash.delete(id);\n        this.#data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import Manager from './Manager';\n\nexport default class ScreenCaptureManager extends Manager {\n    #rec;\n    #isRecording = false;\n\n    get isRecording() {\n        return this.#isRecording;\n    }\n\n    startCapture(duration = null) {\n        if (this.isRecording) {\n            return;\n        }\n\n        this.#isRecording = true;\n\n        console.log('START CAPTURE');\n\n        const chunks = []; // here we will store our recorded media chunks (Blobs)\n        const stream = this.game.renderer.canvas.captureStream(); // grab our canvas MediaStream\n        this.#rec = new MediaRecorder(stream); // init the recorder\n        this.#rec.ondataavailable = (e) => chunks.push(e.data);\n        // only when the recorder stops, we construct a complete Blob from all the chunks\n        this.#rec.onstop = (e) =>\n            this.exportVideo(new Blob(chunks, { type: 'video/webm' }));\n\n        this.#rec.start();\n\n        if (duration) {\n            setTimeout(() => this.endCapture(), duration);\n        }\n    }\n\n    endCapture() {\n        if (!this.isRecording) {\n            return;\n        }\n\n        console.log('END CAPTURE');\n\n        this.#rec.stop();\n    }\n\n    exportVideo(blob) {\n        const vid = document.createElement('video');\n        vid.src = URL.createObjectURL(blob);\n        vid.controls = true;\n        document.body.appendChild(vid);\n        const a = document.createElement('a');\n        a.download = 'myvid.webm';\n        a.href = vid.src;\n        a.textContent = 'download the video';\n        document.body.appendChild(a);\n    }\n}\n","import { FOV } from 'rot-js';\nimport { Explorable, Explored, Shadowcaster, Visible } from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) => this.isSquareVisible(x, y));\n\n        this.query = this.game.ecs.createQuery({\n            all: [Visible]\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map\n            .getEntitiesAt(x, y)\n            .forEach((e) => {\n                e.add(Visible, {\n                    range,\n                    amount\n                });\n                if (e.has(Explorable) && !e.has(Explored)) {\n                    e.add(Explored);\n                }\n            });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.remove(Visible));\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 4, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { Dead, MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            console.log('ohh no! dead!', entity);\n\n            entity.destroy();\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tif(mode & 2 && typeof value == 'object' && value) {\n\t\tfor(const key in value) def[key] = () => value[key];\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}