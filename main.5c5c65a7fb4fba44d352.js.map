{"version":3,"sources":["webpack://knossonia/./src/index.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Map.js","webpack://knossonia/./src/ecs/components/MapLayer.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["game","Game","this","engine","ECS","clock","ClockManager","renderer","Renderer","state","GameStateManager","mouse","MouseManager","player","PlayerManager","screens","ScreenManager","commands","CommandManager","input","InputController","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","renderSystem","RenderSystem","UISystem","newGame","requestAnimationFrame","loop","bind","t","update","RotDisplay","width","height","fontSize","forceSquareRatio","bg","attach","document","body","appendChild","getContainer","x","y","char","fg","draw","string","drawText","clear","e","eventToPosition","Manager","Util","util","Color","color","Text","text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","max","Math","min","floor","getUniform","u","v","r","mean","stddev","gauss","sqrt","log","array","length","result","clone","slice","index","indexOf","getItem","push","splice","data","total","id","random","part","RNG","setState","getState","setSeed","Date","now","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","spacing","border","fontFamily","fontStyle","tileWidth","tileHeight","tileMap","tileSet","tileColorize","Display","options","_data","_dirty","_options","Object","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","ch","key","maxWidth","cx","cy","lines","tokens","token","shift","type","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","i","value","cc","charCodeAt","c","charAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","fillStyle","_fill","chars","concat","fillText","ceil","hexSizeWidth","hexSizeHeight","hexSize","oldFont","font","measureText","ratio","nodeSize","canvas","size","mod","a","b","ctx","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","createElement","getContext","cb","style","_updateSize","textAlign","textBaseline","fillRect","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","Backend","n","clamp","val","capitalize","toUpperCase","substring","format","template","args","map","replacer","match","group1","group2","obj","parts","split","name","method","toLowerCase","replaced","apply","first","replace","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","drawImage","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","bgs","tile","Error","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","message","preserveDrawingBuffer","complete","addEventListener","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","window","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","pos","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","forEach","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","trim","colorCache","parsed","Number","$","fromString","str","cached","CACHE","values","parseInt","add","color1","j","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","Array","s","g","h","l","d","hue2rgb","q","toRGB","clamped","join","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","dx","dy","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","arr","pop","nextIndex","breakIndex","lastIndexOf","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","keys","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","len","find","remove","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","filter","existNode","minimal","lessThan","parent","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","m","minNode","console","Simple","Speed","Action","item","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","get","undefined","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","R","callback","_lightPasses","A","B","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","v2","count","FOV","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","visibility","SHADOWS","neighborCount","_checkVisibility","index1","edge1","old","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","dir","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","startX","startY","row","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","Map","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","create","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","start","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","abs","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","sx","sy","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","from","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","sort","featureName","feature","createRandomAt","createPriorityWalls","deltas","delta","addDoors","addToList","L","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","hasOwnProperty","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","idx","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","directions","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","door","startPosition","endPosition","tempDist","xDir","yDir","move","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","x0","y0","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","prev","neighbor","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","Engine","scheduler","_scheduler","_lock","unlock","actor","next","lock","act","then","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_lights","_reflectivityCache","_fovCache","reset","fov","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","compute","vis","onKeydown","container","getDOMContainer","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","tileX","tileY","InputMouseEvent","button","offsetX","offsetY","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","ecs","createQuery","all","Eater","dt","tickDelta","entity","eater","hunger","System","components","component","registerComponent","prefabs","prefab","registerPrefab","entities","destroy","serialize","deserialize","camelCase","TypeError","pascalCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","module","constructor","enumerable","set","getEntity","Proxy","Reflect","isNaN","deleteProperty","proxy","ref","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","createComponent","handlerName","camelcase","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Component","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","overwrite","componentDef","initialProps","props","merge","arrComps","accessor","initialCompProps","registered","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","getAccessor","hasType","nestedComponent","typeOrClass","configurable","has","allowMultiple","isComponent","instance","EntityEvent","Entity","refs","Set","json","entityData","createOrGetById","any","none","hasAny","hasAll","hasNone","isMatch","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","nameOrClass","queries","deserializeEntity","Actor","reduceEnergy","addEnergy","energy","Brain","peekGoal","isFinished","popGoal","currentGoal","takeAction","FAILURE","removeGoal","INVALID","fireEvent","handle","goal","goalsToDestroy","goals","isSelf","isSiblingGoal","originalIntent","SUCCESS","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","warn","BoredGoalType","GoalType","brain","pushGoal","EatFoodGoalType","food","handled","SatisfyHungerGoalType","isHungry","MoveGoalType","Moniker","Logger","moniker","Position","MapLayer","mapEntity","content","Glyph","Legs","hasEnergy","position","MoveCommand","direction","DIR_Z","shortName","fullName","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","IsPlayer","Wandering","Directions","sorted","incrementTick","isPlayer","renderable","glyph","render","moveCommand","turn","subTurn","padEnd","hasMouse","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_M","KEY_N","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","SCREEN_MAIN_MENU","MainMenuScreen","SCREEN_ADVENTURE","AdventureScreen","screenType","screen","onLeave","onEnter","onUpdate","setScreen","pushDomain","popDomain","saveGame","loadGame","wait","Screen","createPrefab","isTurn","turns","playerEntityId","onNewGame","onSaveGame","localStorage","setItem","JSON","stringify","parse","onLoadGame","__webpack_module_cache__","__webpack_require__","moduleId","exports","__webpack_modules__","mode","__esModule","ns","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.5c5c65a7fb4fba44d352.js","sourcesContent":["import { game } from './core/Game';\n\ngame.start();\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\n\nexport default class Game {\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS();\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.mouse = new MouseManager(this);\n        this.player = new PlayerManager(this);\n        this.screens = new ScreenManager(this);\n        this.commands = new CommandManager(this);\n        this.input = new InputController(this);\n\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n    }\n\n    start() {\n        this.state.newGame();\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    loop(t) {\n        const dt = 0;\n\n        this.hungerSystem.update(dt);\n        this.actionSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.UISystem.update(dt);\n        this.screens.update(dt);\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n}\n\nexport const game = new Game();\n","import { Display as RotDisplay } from 'rot-js';\r\nimport Manager from '../Manager';\r\n\r\nexport default class Renderer extends Manager {\r\n    #rot = null;\r\n    #container = null;\r\n\r\n    width = 64;\r\n    height = 32;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        RotDisplay.Rect.cache = true; // what does this do?\r\n        this.#rot = new RotDisplay({\r\n            width: this.width,\r\n            height: this.height,\r\n            fontSize: 16,\r\n            forceSquareRatio: false,\r\n            bg: '#232323',\r\n        });\r\n        this.attach();\r\n    }\r\n\r\n    attach() {\r\n        this.#container = document.body.appendChild(this.#rot.getContainer());\r\n    }\r\n\r\n    draw(x, y, char, fg, bg) {\r\n        this.#rot.draw(x, y, char, fg, bg);\r\n    }\r\n\r\n    drawText(x, y, string) {\r\n        this.#rot.drawText(x, y, string);\r\n    }\r\n\r\n    clear() {\r\n        this.#rot.clear();\r\n    }\r\n\r\n    getDOMContainer() {\r\n        return this.#container;\r\n    }\r\n\r\n    eventToPosition(e) {\r\n        return this.#rot.eventToPosition(e);\r\n    }\r\n}\r\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    onSaveGame() {}\n    onLoadGame(data) {}\n}\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.getDOMContainer();\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const [tileX, tileY] = this.game.renderer.eventToPosition(e);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x: e.offsetX,\n            y: e.offsetY,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            tileX,\n            tileY,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const [tileX, tileY] = this.game.renderer.eventToPosition(e);\n\n        this.game.mouse.updatePosition(tileX, tileY);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import ecs from '../ecs';\nimport { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    onNewGame() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    onSaveGame() {\n        return {\n            engine: this.#engine.serialize(),\n        };\n    }\n\n    onLoadGame(data) {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n\n        this.#engine.deserialize(data.engine);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(\r\n            this.type,\r\n            this.serialize()\r\n        );\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][key]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][\r\n                            arrComps[accessor]\r\n                        ]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][\r\n                                arrComps[accessor]\r\n                            ];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","import { Component } from 'geotic';\nimport { SUCCESS, INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('boredom');\n\n        if (evt.data.goal) {\n            entity.brain.pushGoal(evt.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        entity.fireEvent('consume-energy', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker) ? this.entity.moniker.name : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    static properties = {\n        x: 0,\n        y: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { MapLayer } from './MapLayer';\n\nexport class Map extends Component {\n    static properties = {\n        name: '',\n        width: 32,\n        height: 32,\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return idx % this.width, idx / this.width;\n    }\n\n    getLayer(name) {\n        return this.entity.get(MapLayer, name);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class MapLayer extends Component {\n    static properties = {\n        mapEntity: '<Entity>',\n        name: '',\n        content: '<EntityArray>',\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    getByIndex(idx) {\n        return content[idx];\n    }\n\n    get(x, y) {}\n}\n","import { Component } from 'geotic';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg: '#fff',\n        bg: '',\n        char: '',\n    };\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        if (!this.entity.has(Position)) {\n            return;\n        }\n\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.log('NO ENERGY');\n            return;\n        }\n\n        this.entity.position.x += evt.data.x;\n        this.entity.position.y += evt.data.y;\n        this.entity.fireEvent('energy-consumed', 750);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() < 0.5) {\n            const direction = Math.floor(Math.random() * 9);\n            const delta = Directions.delta(direction);\n\n            evt.data.goal = MoveGoalType.create({\n                data: delta,\n            });\n            evt.handle();\n        }\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import ecs from '../ecs';\nimport { Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (!entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import { Glyph, Position } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class RenderSystem extends System {\r\n    #query = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Glyph, Position],\r\n        });\r\n    }\r\n\r\n    render() {\r\n        this.game.renderer.clear();\r\n\r\n        this.#query.get().forEach((renderable) => {\r\n            this.game.renderer.draw(\r\n                renderable.position.x,\r\n                renderable.position.y,\r\n                renderable.glyph.char,\r\n                renderable.glyph.fg,\r\n                renderable.glyph.bg\r\n            );\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.game.clock.tickDelta) {\r\n            return;\r\n        }\r\n\r\n        this.render();\r\n    }\r\n}\r\n","import { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('TryMove', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const x = this.game.mouse.x;\n        const y = this.game.mouse.y;\n        const hasMouse = this.game.mouse.hasMouse;\n\n        this.game.renderer.drawText(\n            1,\n            1,\n            `%c{cyan}Knossonia %c{white}(${x}, ${y}) ${hasMouse}`\n        );\n\n        this.game.renderer.drawText(\n            this.game.renderer.width - 6 - `${turn}`.length,\n            1,\n            `%c{cyan}${turn}%c{white}.%c{yellow}${subTurn}`\n        );\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                 NAME        KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,  'confirm',  true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,  'confirm2', true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,   'cancel',   true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SAVE,     'save',     true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_LOAD,     'load',     true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,     'wait',     true, KEY_S,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_NW,  'move_nw',  true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_N,   'move_n',   true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_N,   'move_n2',  true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_NE,  'move_ne',  true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_W,   'move_w',   true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_W,   'move_w2',  true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_E,   'move_e',   true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_E,   'move_e2',  true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_SW,  'move_sw',  true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_S,   'move_s',   true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_S,   'move_s2',  true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_MOVE_SE,  'move_se',  true, KEY_C,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import { SCREEN_MAIN_MENU, SCREEN_ADVENTURE } from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport Manager from '../Manager';\n\nexport default class ScreenManager extends Manager {\n    #screenType = SCREEN_MAIN_MENU;\n    #screens = {};\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n        };\n    }\n\n    get screen() {\n        return this.#screens[this.#screenType];\n    }\n\n    setScreen(screenType) {\n        this.screen.onLeave();\n        this.#screenType = screenType;\n        this.screen.onEnter();\n        this.game.renderSystem.render();\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n\n    onLoadGame(data) {\n        this.setScreen(SCREEN_ADVENTURE);\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.game.player.move(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.game.player.move(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.game.player.move(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.game.player.move(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.game.player.move(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.game.player.move(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.game.player.move(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.game.player.move(DIR_SE);\n        }\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.state.newGame();\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `%c{cyan}Knossonia`);\n        this.game.renderer.drawText(1, 3, `%c{white}press enter to embark`);\n        this.game.renderer.drawText(1, 7, `%c{white}move [%c{yellow}w, a, d, x%c{white}]`);\n        this.game.renderer.drawText(1, 8, `%c{white}save [%c{yellow}ctrl+s%c{white}]`);\n        this.game.renderer.drawText(1, 9, `%c{white}load [%c{yellow}ctrl+l%c{white}]`);\n    }\n}\n","import Manager from './Manager';\nimport { BoredGoalType } from '../ai/GoalTypes';\nimport { MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    onNewGame() {\n        const player = this.game.ecs.createPrefab('Player', {\n            position: {\n                x: 16,\n                y: 16,\n            },\n        });\n\n        this.#entityId = player.id;\n\n        for (let i = 0; i < 3; i++) {\n            const wanderer = this.game.ecs.createPrefab('HumanWanderer', {\n                moniker: {\n                    name: `Wanderer ${i}`,\n                },\n                position: {\n                    x: 21 + i,\n                    y: 8,\n                },\n            });\n\n            wanderer.brain.pushGoal(BoredGoalType.create());\n        }\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n\n    onSaveGame() {\n        return {\n            playerEntityId: this.#entityId,\n        };\n    }\n\n    onLoadGame(data) {\n        this.#entityId = data.playerEntityId;\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    newGame() {\n        console.log('NEW GAME');\n        this.game.clock.onNewGame();\n        this.game.engine.onNewGame();\n        this.game.player.onNewGame();\n    }\n\n    saveGame() {\n        const data = {\n            ...this.game.clock.onSaveGame(),\n            ...this.game.player.onSaveGame(),\n            ...this.game.engine.onSaveGame(),\n        };\n\n        console.log('SAVE GAME', data);\n        localStorage.setItem('save', JSON.stringify(data));\n    }\n\n    loadGame() {\n        const data = JSON.parse(localStorage.getItem('save'));\n\n        console.log('LOAD GAME', data);\n\n        this.game.clock.onLoadGame(data);\n        this.game.engine.onLoadGame(data);\n        this.game.player.onLoadGame(data);\n        this.game.screens.onLoadGame(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    onNewGame() {}\n\n    onLoadGame(data) {}\n\n    onSaveGame() {\n        return {};\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tif(mode & 2 && typeof value == 'object' && value) {\n\t\tfor(const key in value) def[key] = () => value[key];\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}