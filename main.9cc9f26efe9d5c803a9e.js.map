{"version":3,"sources":["webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/./src/index.js","webpack://knossonia/./src/utils/ImageLoader.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/RenderManager.js","webpack://knossonia/./src/core/Manager.js","webpack://knossonia/./src/core/rendering/Display.js","webpack://knossonia/./src/core/rendering/spritesheets.js","webpack://knossonia/./src/core/rendering/SpriteSheet.js","webpack://knossonia/./src/core/rendering/cp437.js","webpack://knossonia/./src/core/rendering/Sprite.js","webpack://knossonia/./node_modules/color-parse/index.mjs","webpack://knossonia/./node_modules/color-name/index.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/LiquidContainer.js","webpack://knossonia/./src/enums/LiquidTypes.js","webpack://knossonia/./src/ecs/components/Door.js","webpack://knossonia/./src/ecs/components/Blocker.js","webpack://knossonia/./src/ecs/components/Shadowcaster.js","webpack://knossonia/./src/ecs/components/Loot.js","webpack://knossonia/./src/ecs/components/Inventory.js","webpack://knossonia/./src/core/screens/ScreenType.js","webpack://knossonia/./src/ecs/components/IsInventoried.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Body.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/MapLayer.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Arms.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/Faction.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MeleeCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/ecs/components/Visible.js","webpack://knossonia/./src/ecs/components/Explorable.js","webpack://knossonia/./src/ecs/components/Explored.js","webpack://knossonia/./src/ecs/components/Health.js","webpack://knossonia/./src/ecs/components/Dead.js","webpack://knossonia/./src/ecs/components/Eyes.js","webpack://knossonia/./src/ecs/components/Particle.js","webpack://knossonia/./src/ecs/components/ParticleEmitter.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/./src/core/screens/ScreenManager.js","webpack://knossonia/./src/core/screens/screens/AdventureScreen.js","webpack://knossonia/./src/core/screens/screens/Screen.js","webpack://knossonia/./src/core/screens/screens/MainMenuScreen.js","webpack://knossonia/./src/core/screens/screens/DeathScreen.js","webpack://knossonia/./src/core/screens/screens/InventoryScreen.js","webpack://knossonia/./src/core/screens/screens/InteractModalScreen.js","webpack://knossonia/./src/core/PlayerManager.js","webpack://knossonia/./src/core/GameStateManager.js","webpack://knossonia/./src/core/ClockManager.js","webpack://knossonia/./src/systems/CursorSystem.js","webpack://knossonia/./src/core/MapManager.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/utils/FastMap.js","webpack://knossonia/./src/core/ScreenCaptureManager.js","webpack://knossonia/./src/systems/FOVSystem.js","webpack://knossonia/./src/systems/MeleeSystem.js","webpack://knossonia/./src/systems/DeathSystem.js","webpack://knossonia/./src/systems/ParticleSystem.js","webpack://knossonia/./src/core/FactionManager.js","webpack://knossonia/./src/core/CameraManager.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","game","require","window","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","Game","this","engine","ECS","clock","ClockManager","camera","CameraManager","renderer","Renderer","state","GameStateManager","mouse","MouseManager","MapManager","factions","FactionManager","player","PlayerManager","screens","ScreenManager","commands","CommandManager","input","InputController","screenCapture","ScreenCaptureManager","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","Date","now","newGame","requestAnimationFrame","loop","bind","t","dt","update","spritesheets","forEach","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","display","canvas","x","y","char","fg1","fg2","bg","sprite","tiles","getSprite","draw","text","length","i","font","charAt","len","computeTextWidth","drawText","clear","clearArea","xPx","yPx","Math","trunc","Manager","data","defaultFg","createElement","getContext","widthPx","heightPx","style","cssText","ctx","textBaseline","pixelX","pixelY","colorize","fillStyle","fillRect","clearRect","drawImage","color","tileImage","getElementById","fontImage","SpriteSheet","image","cp437","row","glyph","j","Sprite","spriteCountX","spriteCountY","isBlack","r","g","b","sheet","sourceX","sourceY","spriteWidth","spriteHeight","primaryCss","secondaryCss","primary","colorParse","values","secondary","key","alpha","pixels","getImageData","cvs","putImageData","cstr","m","space","parts","names","slice","test","size","base","parseInt","exec","isRGB","replace","trim","split","parseFloat","undefined","baseHues","push","match","value","join","toLowerCase","isNaN","isArray","Object","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","exports","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","e","evt","InputKeyboardEvent","keyCode","shift","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetX","offsetY","pxToTile","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","createQuery","Eater","tickDelta","get","entity","eater","hunger","System","Actor","reduceEnergy","addEnergy","energy","Component","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","constructor","component","enumerable","set","v","id","getEntity","console","Proxy","Reflect","old","deleteProperty","proxy","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","camelcase","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","prefab","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","hasOwnProperty","nestedComponent","typeOrClass","attach","create","configurable","has","allowMultiple","isComponent","instance","index","v2","EntityEvent","Entity","refs","Set","json","entityData","createOrGetById","d","any","none","hasAny","c","hasAll","hasNone","isTracking","isMatch","cb","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","entities","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","LiquidContainer","isEmpty","log","drinkLiquid","interactor","contents","volume","handle","interactions","liquids","maxVolume","overridePrimary","liquid","overrideSecondary","LIQUID_BLOOD","LIQUID_WATER","LIQUID_HONEY","colorDesc","onDrink","fireEvent","pos","position","getPos","direction","glyphs","fg1s","speed","lifetime","Door","pushScreen","SCREEN_INVENTORY","accessible","isOpen","ch","add","Blocker","Shadowcaster","remove","chOpen","chClosed","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","addLoot","owner","removeLoot","loot","content","indexOf","idx","splice","setPos","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","dropLoot","Brain","peekGoal","isFinished","popGoal","currentGoal","result","takeAction","FAILURE","removeGoal","INVALID","goal","goalsToDestroy","goals","isSelf","isSiblingGoal","originalIntent","pop","SUCCESS","Body","corpse","createPrefab","moniker","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","warn","BoredGoalType","GoalType","detectHostiles","handled","killGoal","KillSomethingGoalType","brain","pushGoal","boredomGoal","Dead","isDestroyed","EatFoodGoalType","food","SatisfyHungerGoalType","isHungry","MoveGoalType","random","Moniker","disp","liquidContainer","Logger","Position","getPosition","setPosition","MapLayer","mapEntity","Glyph","col","primaryColorOverride","secondaryColorOverride","Arms","actor","hasEnergy","targetPos","selfPos","isAdjacent","createParticle","Legs","targetX","targetY","targetTileEntities","getEntitiesAt","some","nonHostile","find","Faction","areEntitiesHostile","MoveCommand","DIR_Z","directions","shortName","fullName","delta","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","MeleeCommand","IsPlayer","Wandering","floor","Directions","Visible","amount","range","Explorable","Explored","Health","max","Eyes","getNeighborEntities","flat","neighbor","Particle","arr","chunks","percent","age","frame","fg2s","bgs","startX","startY","ParticleEmitter","particle","createEntity","particleData","count","duration","rate","sorted","sort","incrementTick","isPlayer","Engine","registerComponent","registerPrefab","not","renderable","isInView","screen","worldToScreen","background","render","moveCommand","turn","subTurn","padEnd","str","ceil","hp","health","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","getCommandForInputEvent","onInputCommand","domain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_LOOK","INPUT_CMD_SCREEN_CAPTURE_START","KEY_F5","INPUT_CMD_SCREEN_CAPTURE_END","KEY_F6","INPUT_CMD_PICKUP","KEY_G","INPUT_CMD_INTERACT","KEY_J","INPUT_CMD_INVENTORY","KEY_I","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_N","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","screenType","onLeave","onEnter","screenCtx","onUpdate","setScreen","pushDomain","computeFOV","setFocus","popDomain","dir","isEnabled","move","directionDelta","playerPosition","targetPosition","hostileEntities","melee","doorEntity","door","lootable","item","interactable","onInteract","saveGame","loadGame","toggle","onPickupCommand","disable","startCapture","endCapture","wait","onDirectionInput","onInteractDirection","Screen","drawTextCenter","items","popScreen","pointerUp","pointerDown","selectItem","ypos","resetInteractions","interaction","top","left","xpos","isSelected","getRandomEmptyPosition","isTurn","turns","playerEntityId","onNewGame","onSaveGame","localStorage","setItem","JSON","stringify","parse","getItem","onLoadGame","tick","enable","getEntities","FastMap","onEntityAdded","onEntityRemoved","generator","MapGenerator","timeLimit","roomWidth","roomHeight","roomDugPercentage","rooms","getRooms","getDoors","chest","vial","wanderer","goblin","lookup","entityId","x1","y1","x2","y2","abs","Util","util","Color","Text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","min","getUniform","u","mean","stddev","gauss","sqrt","clone","total","part","RNG","setState","getState","setSeed","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_data","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getContainer","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","eventToPosition","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","nodeSize","mod","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","_updateSize","textAlign","rect","getBoundingClientRect","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","group1","group2","obj","method","replaced","apply","first","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","fgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","message","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","parsed","Number","$","fromString","cached","CACHE","color1","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","dx","dy","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","keys","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","FOV","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","visibility","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","sx","sy","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","x0","y0","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","reset","fov","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","compute","vis","entries","coord","isOutOfBounds","isRecording","stream","captureStream","MediaRecorder","ondataavailable","onstop","exportVideo","Blob","stop","blob","vid","src","URL","createObjectURL","controls","download","href","textContent","isSquareVisible","setVisible","meleeCommand","emitter","particleEmitter","isExpired","targetCount","factionA","factionB","entityA","entityB","isHostile","topLeftWorldX","topLeftWorldY","worldX","worldY","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getPrototypeOf","__proto__","mode","__esModule","ns","current","getOwnPropertyNames","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.9cc9f26efe9d5c803a9e.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport ScreenCaptureManager from './ScreenCaptureManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS();\n        this.clock = new ClockManager(this);\n        this.camera = new CameraManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.mouse = new MouseManager(this);\n        this.map = new MapManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.screens = new ScreenManager(this);\n        this.commands = new CommandManager(this);\n        this.input = new InputController(this);\n        this.screenCapture = new ScreenCaptureManager(this);\n\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.state.newGame();\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    #tileWidth = 16;\n    #tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get width() {\n        return this.game.camera.width;\n    }\n\n    get height() {\n        return this.game.camera.height;\n    }\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: this.width,\n            height: this.height,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    draw(x, y, char, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d6d6d6', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText((this.width - len) / 2, y, text, fg1, fg2, bg);\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    onSaveGame() {}\n    onLoadGame(data) {}\n}\n","export default class Display {\n    #ctx;\n    #canvas;\n    #canvasDirty;\n    #width;\n    #height;\n    #tileWidth;\n    #tileHeight;\n    #defaultFg;\n\n    get tileWidth() {\n        return this.#tileWidth;\n    }\n\n    get tileHeight() {\n        return this.#tileHeight;\n    }\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get canvas() {\n        return this.#canvas;\n    }\n\n    get ctx() {\n        return this.#ctx;\n    }\n\n    constructor({ width, height, tileWidth, tileHeight, defaultFg }) {\n        this.#width = width;\n        this.#height = height;\n        this.#tileWidth = tileWidth;\n        this.#tileHeight = tileHeight;\n        this.#defaultFg = defaultFg || '#fff';\n\n        this.#canvas = document.createElement('canvas');\n        this.#ctx = this.canvas.getContext('2d');\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.ctx.font = `${this.#tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        const pixelX = x * this.tileWidth;\n        const pixelY = y * this.tileHeight;\n\n        const img = sprite.colorize(fg1, fg2);\n\n        if (bg) {\n            this.ctx.fillStyle = bg;\n            this.ctx.fillRect(pixelX, pixelY, sprite.width, sprite.height);\n        } else {\n            this.ctx.clearRect(pixelX, pixelY, this.tileWidth, this.tileHeight);\n        }\n\n        this.ctx.drawImage(img, pixelX, pixelY);\n    }\n\n    clear() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.clearRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n    }\n\n    fillTile(x, y, color) {\n        this.ctx.fillStyle = color;\n        this.ctx.fillRect(x, y, this.tileWidth, this.tileHeight);\n    }\n\n    clearTile(x, y) {\n        this.ctx.clearRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth,\n            this.tileHeight\n        );\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #image = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get image() {\n        return this.#image;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    get spriteWidth() {\n        return this.image.width / this.spriteCountX;\n    }\n\n    get spriteHeight() {\n        return this.image.height / this.spriteCountY;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.#image = image;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import colorParse from 'color-parse';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    #cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = colorParse(primaryCss).values;\n        const secondary = colorParse(secondaryCss).values;\n\n        const key = `${primary[0]},${primary[1]},${primary[2]},${primary.alpha}-${secondary[0]},${secondary[1]},${secondary[2]},${secondary.alpha}`;\n\n        if (key in this.#cache) {\n            const data = this.#cache[key];\n\n            return data;\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary.alpha;\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary.alpha;\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this.#cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\r\n    component;\r\n\r\n    constructor(component) {\r\n        this.component = component;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.component.ecs;\r\n    }\r\n\r\n    get descriptor() {\r\n        return {\r\n            enumerable: true,\r\n            get: () => this.get(),\r\n            set: (v) => this.set(v),\r\n        };\r\n    }\r\n\r\n    get() {\r\n        return undefined;\r\n    }\r\n\r\n    set(value) {}\r\n\r\n    serialize() {\r\n        return undefined;\r\n    }\r\n\r\n    onDestroyed() {}\r\n\r\n    cleanupReference(entity) {}\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class SimpleProperty extends Property {\r\n    value = null;\r\n\r\n    set(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    get() {\r\n        return this.value;\r\n    }\r\n\r\n    serialize() {\r\n        return this.value;\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityProperty extends Property {\r\n    id;\r\n\r\n    set(value) {\r\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n\r\n        if (value && value.id) {\r\n            this.ecs.entities.addRef(value.id, this);\r\n            this.id = value.id;\r\n            return;\r\n        }\r\n\r\n        if (typeof value === 'string') {\r\n            this.ecs.entities.addRef(value, this);\r\n            this.id = value;\r\n            return;\r\n        }\r\n\r\n        this.id = undefined;\r\n    }\r\n\r\n    get() {\r\n        return this.id && this.component.ecs.getEntity(this.id);\r\n    }\r\n\r\n    serialize() {\r\n        return this.id;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (this.id) {\r\n            this.ecs.entities.removeRef(this.id, this);\r\n        }\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        if (this.id === entity.id) {\r\n            this.id = undefined;\r\n        } else {\r\n            console.warn(\r\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\r\n            );\r\n        }\r\n    }\r\n}\r\n","import Property from './Property';\r\n\r\nexport default class EntityArrayProperty extends Property {\r\n    proxy = [];\r\n\r\n    constructor(component) {\r\n        super(component);\r\n        this.proxy = new Proxy([], {\r\n            get: (target, prop, receiver) => {\r\n                return Reflect.get(target, prop, receiver);\r\n            },\r\n            set: (target, prop, value, receiver) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                const old = Reflect.get(target, prop, receiver);\r\n\r\n                if (typeof value === 'string') {\r\n                    value = this.ecs.entities.get(value);\r\n                }\r\n\r\n                if (old && old != value) {\r\n                    this.ecs.entities.removeRef(value, this);\r\n                }\r\n\r\n                if (value && value.id) {\r\n                    this.ecs.entities.addRef(value.id, this);\r\n\r\n                    return Reflect.set(target, prop, value, receiver);\r\n                }\r\n\r\n                return Reflect.set(target, prop, value, receiver);\r\n            },\r\n            deleteProperty: (target, prop) => {\r\n                if (isNaN(prop)) {\r\n                    return Reflect.deleteProperty(target, prop);\r\n                }\r\n\r\n                const value = Reflect.get(target, prop);\r\n                this.ecs.entities.removeRef(value, this);\r\n\r\n                return Reflect.deleteProperty(target, prop);\r\n            },\r\n        });\r\n    }\r\n\r\n    set(values = []) {\r\n        const len = Math.max(values.length, this.proxy.length);\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            if (i in values) {\r\n                this.proxy[i] = values[i];\r\n            } else {\r\n                delete this.proxy[i];\r\n            }\r\n        }\r\n\r\n        this.proxy.length = values.length;\r\n    }\r\n\r\n    get() {\r\n        return this.proxy;\r\n    }\r\n\r\n    serialize() {\r\n        return this.proxy.map((ref) => ref.id);\r\n    }\r\n\r\n    onDestroyed() {\r\n        this.set([]);\r\n    }\r\n\r\n    cleanupReference(entity) {\r\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\r\n    }\r\n}\r\n","import Property from './Property';\r\nimport SimpleProperty from './SimpleProperty';\r\nimport EntityProperty from './EntityProperty';\r\nimport EntityArrayProperty from './EntityArrayProperty';\r\n\r\nexport default class PropertyStrategy {\r\n    static create(component, value) {\r\n        switch (value) {\r\n            case '<Entity>':\r\n                return new EntityProperty(component);\r\n            case '<EntityArray>':\r\n                return new EntityArrayProperty(component);\r\n            default:\r\n                return new SimpleProperty(component);\r\n        }\r\n    }\r\n}\r\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(this.type, this.serialize());\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class ComponentRegistry {\r\n    #nameCache = new Map();\r\n    #definitions = new Map();\r\n    #ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    register(component) {\r\n        this.#definitions.set(component.name, component);\r\n        this.#nameCache.set(component.name, camelcase(component.name));\r\n    }\r\n\r\n    getAccessor(type) {\r\n        if (this.#nameCache.has(type)) {\r\n            return this.#nameCache.get(type);\r\n        }\r\n\r\n        this.#nameCache.set(type, camelcase(type));\r\n    }\r\n\r\n    get(typeOrClassOrComponent) {\r\n        const type = this._getType(typeOrClassOrComponent);\r\n\r\n        if (!type) {\r\n            console.warn(\r\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\r\n            );\r\n            return null;\r\n        }\r\n\r\n        return this.#definitions.get(type);\r\n    }\r\n\r\n    create(typeOrClass, properties = {}) {\r\n        const definition = this.get(typeOrClass);\r\n\r\n        if (definition) {\r\n            return new definition(this.#ecs, properties);\r\n        }\r\n\r\n        console.warn(\r\n            `Could not create component definition for ${typeOrClass} since it is not registered`\r\n        );\r\n    }\r\n\r\n    _getType(typeOrClassOrComponent) {\r\n        if (typeof typeOrClassOrComponent === 'string') {\r\n            return typeOrClassOrComponent;\r\n        }\r\n\r\n        if (typeOrClassOrComponent instanceof Component) {\r\n            return typeOrClassOrComponent.type;\r\n        }\r\n\r\n        if (typeOrClassOrComponent.prototype instanceof Component) {\r\n            return typeOrClassOrComponent.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    get type() {\r\n        return this.componentDef.type;\r\n    }\r\n\r\n    constructor(componentDef, properties = {}, overwrite = true) {\r\n        this.componentDef = componentDef;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\r\n            if (this.overwrite) {\r\n                entity.remove(this.componentDef);\r\n            } else {\r\n                console.log(\r\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.componentDef, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\r\n                        initialCompProps = initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][arrComps[accessor]]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][arrComps[accessor]];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\r\nimport PrefabComponent from '../PrefabComponent';\r\nimport Prefab from '../Prefab';\r\n\r\nexport default class PrefabRegistry {\r\n    #prefabs = {};\r\n    #ecs = null;\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(this.#ecs, data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        for (const componentData of comps) {\r\n            if (\r\n                typeof componentData === 'string' ||\r\n                componentData.prototype instanceof Component\r\n            ) {\r\n                const def = this.#ecs.components.get(componentData);\r\n                if (def) {\r\n                    prefab.addComponent(new PrefabComponent(def));\r\n                }\r\n            } else if (typeof componentData === 'object') {\r\n                const type = componentData.type;\r\n                const def = this.#ecs.components.get(type);\r\n                if (def) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            def,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n                }\r\n            } else {\r\n                console.warn(\r\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n                );\r\n            }\r\n        }\r\n\r\n        this.register(prefab);\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(prefab) {\r\n        this.#prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(nameOrClassOrPrefab) {\r\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\r\n\r\n        return this.#prefabs[name];\r\n    }\r\n\r\n    create(nameOrClass, initialProps = {}) {\r\n        const prefab = this.get(nameOrClass);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = this.#ecs.createEntity();\r\n        prefab.applyToEntity(entity, initialProps);\r\n\r\n        return entity;\r\n    }\r\n\r\n    static _getName(nameOrClassOrPrefab) {\r\n        if (typeof nameOrClassOrPrefab === 'string') {\r\n            return nameOrClassOrPrefab;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\r\n            return nameOrClassOrPrefab.name;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\r\n    data = {};\r\n    #prevented = false;\r\n    #handled = false;\r\n\r\n    get prevented() {\r\n        return this.#prevented;\r\n    }\r\n\r\n    get handled() {\r\n        return this.#handled;\r\n    }\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this.#handled = true;\r\n        this.#prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this.#prevented = true;\r\n    }\r\n}\r\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        if (typeOrClass instanceof Component) {\r\n            if (typeOrClass.isAttached) {\r\n                console.warn(\r\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            return this.attach(typeOrClass);\r\n        }\r\n\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\r\nimport camelcase from 'camelcase';\r\n\r\nexport default class EntityRegistry {\r\n    #entities = new Map();\r\n    #ecs = null;\r\n    #refs = new Map();\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    get all() {\r\n        return this.#entities.values();\r\n    }\r\n\r\n    register(entity) {\r\n        this.#entities.set(entity.id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    get(id) {\r\n        return this.#entities.get(id);\r\n    }\r\n\r\n    createOrGetById(id) {\r\n        const entity = this.get(id);\r\n\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        return this.create(id);\r\n    }\r\n\r\n    create(id = undefined) {\r\n        const entity = new Entity(this.#ecs, id);\r\n\r\n        this.register(entity);\r\n\r\n        this.#ecs.queries.onEntityCreated(entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroy(entity) {\r\n        entity.destroy();\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.cleanupRefs(entity);\r\n        this.#entities.delete(entity.id);\r\n        this.#ecs.queries.onEntityDestroyed(entity);\r\n    }\r\n\r\n    cleanupRefs(entity) {\r\n        const refs = this.#refs.get(entity.id);\r\n\r\n        if (!refs) {\r\n            return;\r\n        }\r\n\r\n        for (const ref of refs) {\r\n            ref.cleanupReference(entity);\r\n        }\r\n\r\n        delete this.#refs[entity.id];\r\n    }\r\n\r\n    addRef(entityId, property) {\r\n        if (!this.#refs.has(entityId)) {\r\n            this.#refs.set(entityId, new Set([property]));\r\n            return;\r\n        }\r\n\r\n        this.#refs.get(entityId).add(property);\r\n    }\r\n\r\n    removeRef(entityId, property) {\r\n        if (this.#refs.has(entityId)) {\r\n            this.#refs.get(entityId).delete(property);\r\n        }\r\n    }\r\n\r\n    serialize() {\r\n        const json = [];\r\n\r\n        this.#entities.forEach((entity) => {\r\n            json.push(entity.serialize());\r\n        });\r\n\r\n        return json;\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this.createOrGetById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this.deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    deserializeEntity(data) {\r\n        const { id, ...componentData } = data;\r\n        const entity = this.createOrGetById(id);\r\n\r\n        Object.entries(componentData).forEach(([key, value]) => {\r\n            const type = camelcase(key, { pascalCase: true });\r\n            const definition = this.#ecs.components.get(type);\r\n\r\n            if (definition.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(definition, d);\r\n                });\r\n            } else {\r\n                entity.add(definition, value);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import merge from 'deepmerge';\r\n\r\nexport default class Query {\r\n    #ecs;\r\n    #filter;\r\n    #onEntityAddedCallbacks = [];\r\n    #onEntityRemovedCallbacks = [];\r\n    #cache = new Set();\r\n\r\n    constructor(ecs, filter = {}) {\r\n        this.#ecs = ecs;\r\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\r\n        this.bustCache();\r\n    }\r\n\r\n    isMatch(entity) {\r\n        const hasAny = this.#filter.any.length\r\n            ? this.#filter.any.some((c) => entity.has(c))\r\n            : true;\r\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\r\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\r\n\r\n        return hasAny && hasAll && hasNone;\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this.#onEntityAddedCallbacks.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this.#onEntityRemovedCallbacks.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this.#cache.has(entity);\r\n    }\r\n\r\n    candidate(entity) {\r\n        const isTracking = this.has(entity);\r\n\r\n        if (this.isMatch(entity)) {\r\n            if (!isTracking) {\r\n                this.#cache.add(entity);\r\n                this.#onEntityAddedCallbacks.forEach((cb) => cb(entity));\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this.#cache.delete(entity);\r\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    _onEntityCreated(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentAdded(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onComponentRemoved(entity) {\r\n        this.candidate(entity);\r\n    }\r\n\r\n    _onEntityDestroyed(entity) {\r\n        if (this.has(entity)) {\r\n            this.#cache.delete(entity);\r\n            this.#onEntityRemovedCallbacks.forEach((cb) => cb(entity));\r\n        }\r\n    }\r\n\r\n    bustCache() {\r\n        this.#cache.clear();\r\n\r\n        for (const entity of this.#ecs.entities.all) {\r\n            this.candidate(entity);\r\n        }\r\n\r\n        return this.#cache;\r\n    }\r\n\r\n    get() {\r\n        return this.#cache;\r\n    }\r\n}\r\n","import Query from '../Query';\r\n\r\nexport default class QueryRegistry {\r\n    #ecs;\r\n    #queries = [];\r\n\r\n    constructor(ecs) {\r\n        this.#ecs = ecs;\r\n    }\r\n\r\n    create(filters) {\r\n        const query = new Query(this.#ecs, filters);\r\n\r\n        this.#queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    onComponentAdded(entity) {\r\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\r\n    }\r\n\r\n    onComponentRemoved(entity) {\r\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\r\n    }\r\n\r\n    onEntityCreated(entity) {\r\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\r\n    }\r\n\r\n    onEntityDestroyed(entity) {\r\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\r\n    }\r\n}\r\n","import ComponentRegistry from './registries/ComponentRegistry';\r\nimport PrefabRegistry from './registries/PrefabRegistry';\r\nimport { nanoid } from 'nanoid/non-secure';\r\nimport EntityRegistry from './registries/EntityRegistry';\r\nimport QueryRegistry from './registries/QueryRegistry';\r\n\r\nexport default class Engine {\r\n    constructor() {\r\n        this.idGenerator = () => nanoid();\r\n        this.components = new ComponentRegistry(this);\r\n        this.prefabs = new PrefabRegistry(this);\r\n        this.entities = new EntityRegistry(this);\r\n        this.queries = new QueryRegistry(this);\r\n    }\r\n\r\n    generateId() {\r\n        return this.idGenerator();\r\n    }\r\n\r\n    createEntity() {\r\n        return this.entities.create();\r\n    }\r\n\r\n    createPrefab(nameOrClass, initialProps = {}) {\r\n        return this.prefabs.create(nameOrClass, initialProps);\r\n    }\r\n\r\n    destroyEntity(entity) {\r\n        return this.entities.destroy(entity);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this.prefabs.deserialize(data);\r\n    }\r\n\r\n    registerComponent(component) {\r\n        this.components.register(component);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this.entities.get(id);\r\n    }\r\n\r\n    createComponent(type, properties) {\r\n        return this.components.create(type, properties);\r\n    }\r\n\r\n    createQuery(filters) {\r\n        return this.queries.create(filters);\r\n    }\r\n\r\n    serialize() {\r\n        return {\r\n            entities: this.entities.serialize(),\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        if (data.id) {\r\n            return this.entities.deserializeEntity(data);\r\n        }\r\n\r\n        return this.entities.deserialize(data);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        contents: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.contents];\n    }\n\n    get isEmpty() {\n        return isNaN(this.contents) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.contents].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.log('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.contents, this.volume);\n        this.volume = 0;\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n    }\n}\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'blue',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'red',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: '\\'',\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    onTryOpen(evt) {\n        game.screens.pushScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.remove(Blocker);\n        this.entity.remove(Shadowcaster);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pickup',\n            });\n        }\n    }\n\n    onTryPickup(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    addLoot(loot) {\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.remove(IsInventoried);\n        }\n    }\n\n    dropLoot(loot) {\n        this.removeLoot(loot);\n\n        const pos = this.entity.position.getPos();\n\n        loot.position.setPos(pos.x, pos.y);\n    }\n\n    onTryOpen(evt) {\n        game.screens.pushScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\n","import { Component } from 'geotic';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { SUCCESS, INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\n\nexport class Body extends Component {\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const corpse = this.ecs.createPrefab('Corpse');\n        const pos = this.entity.position.getPos();\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n\n        corpse.position.setPos(pos.x, pos.y);\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const detectHostiles = entity.fireEvent('try-detect-hostiles');\n\n        if (detectHostiles.handled) {\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: detectHostiles.data.target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { Dead } from '../../ecs/components';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.has(Dead) || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class MapLayer extends Component {\n    static properties = {\n        mapEntity: '<Entity>',\n        name: '',\n        content: '<EntityArray>',\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    getByIndex(idx) {\n        return content[idx];\n    }\n\n    get(x, y) {}\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { Actor } from './Actor';\n\nexport class Arms extends Component {\n    onTryMelee(evt) {\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.warn('onTryMelee - No energy??');\n            return;\n        }\n\n        const damage = {\n            type: 'blunt',\n            value: 5,\n        };\n\n        const map = window.game.map;\n\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        window.game.particles.createParticle(targetPos.x, targetPos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['-'],\n        });\n\n        evt.data.target.fireEvent('damage', damage);\n\n        this.entity.fireEvent('energy-consumed', 800);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\nimport { Blocker } from './Blocker';\nimport { Faction } from './Faction';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        if (!this.entity.has(Position)) {\n            return;\n        }\n\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            console.log('No energy??');\n            return;\n        }\n\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = window.game.map.getEntitiesAt(\n            targetX,\n            targetY\n        );\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.has(Faction) &&\n                !window.game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        this.entity.position.setPos(targetX, targetY);\n        this.entity.fireEvent('energy-consumed', 750);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Faction extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Visible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { Dead } from './Dead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 10,\n        max: 10,\n    };\n\n    onDamage(evt) {\n        this.value -= evt.data.value;\n\n        console.log(\n            `ouch! ${this.entity.moniker.display} takes ${evt.data.value} damage.`\n        );\n\n        if (this.value <= 0) {\n            this.value = 0;\n            this.entity.add(Dead);\n        }\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Dead extends Component {}\n","import { Component } from 'geotic';\nimport { Faction } from './Faction';\n\nexport class Eyes extends Component {\n    onTryDetectHostiles(evt) {\n        const position = window.game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        const target = window.game.map\n            .getNeighborEntities(position.x, position.y)\n            .flat()\n            .filter((e) => e.has(Faction))\n            .find((neighbor) => {\n                return window.game.factions.areEntitiesHostile(\n                    this.entity,\n                    neighbor\n                );\n            });\n\n        if (target) {\n            evt.data.target = target;\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import ecs from '../ecs';\nimport { Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (!entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    onNewGame() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    onSaveGame() {\n        return {\n            engine: this.#engine.serialize(),\n        };\n    }\n\n    onLoadGame(data) {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n\n        this.#engine.deserialize(data.engine);\n    }\n}\n","import {\n    IsInventoried,\n    Explored,\n    Glyph,\n    Position,\n    Visible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, Visible],\n            not: [IsInventoried],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [Visible],\n        });\n    }\n\n    render() {\n        this.game.renderer.clear();\n\n        this.#explored.get().forEach((renderable) => {\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                '#283131',\n                '#283131'\n            );\n        });\n\n        this.#query.get().forEach((renderable) => {\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        });\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.renderer.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(\n            1,\n            this.game.renderer.height - 2,\n            `${hp.value}/${hp.max}`,\n            'red'\n        );\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_SCREEN_CAPTURE_START,\n    INPUT_CMD_SCREEN_CAPTURE_END,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICKUP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_F5,\n    KEY_F6,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_SCREEN_CAPTURE_START, 'start capture screen',   true, KEY_F5,       false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_SCREEN_CAPTURE_END,   'end capture screen',     true, KEY_F6,       false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICKUP,               'pickup',                 true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\nexport const INPUT_CMD_SCREEN_CAPTURE_START = 14;\nexport const INPUT_CMD_SCREEN_CAPTURE_END = 15;\nexport const INPUT_CMD_PICKUP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [\n        {\n            type: SCREEN_MAIN_MENU,\n            ctx: {},\n        },\n    ];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n        };\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n\n    onLoadGame(data) {\n        this.setScreen(SCREEN_ADVENTURE);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_SCREEN_CAPTURE_START,\n    INPUT_CMD_SCREEN_CAPTURE_END,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICKUP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        if (this.game.cursor.isEnabled) {\n            this.game.cursor.move(dir);\n        } else {\n            const delta = directionDelta(dir);\n            const playerPosition = this.game.player.position;\n            const targetPosition = {\n                x: playerPosition.x + delta.x,\n                y: playerPosition.y + delta.y,\n            };\n            const entities = this.game.map.getEntitiesAt(targetPosition.x, targetPosition.y)\n\n            const hostileEntities = entities.filter((e) =>\n                    this.game.factions.areEntitiesHostile(\n                        e,\n                        this.game.player.entity\n                    )\n                );\n\n            if (hostileEntities.length > 0) {\n                this.game.player.melee(hostileEntities[0]);\n            } else {\n                const doorEntity = entities.find((e) => e.has(Door));\n\n                if (doorEntity && !doorEntity.door.isOpen) {\n                    doorEntity.fireEvent('try-open-door', {\n                        interactor: this.game.player.entity,\n                    });\n                } else {\n                    this.game.player.move(dir);\n                }\n            }\n        }\n    }\n\n    onPickupCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pickup', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to interact with.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map.getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const item = entities.find((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n            return evt.data.interactions.length > 0;\n        });\n\n        if (item) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: item,\n            });\n        }\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            this.game.cursor.toggle();\n        }\n        if (cmd.type === INPUT_CMD_PICKUP) {\n            this.onPickupCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            if (this.game.cursor.isEnabled) {\n                this.game.cursor.disable();\n            } else {\n                this.game.screens.setScreen(SCREEN_MAIN_MENU);\n            }\n        }\n        if (cmd.type === INPUT_CMD_SCREEN_CAPTURE_START) {\n            this.game.screenCapture.startCapture();\n        }\n        if (cmd.type === INPUT_CMD_SCREEN_CAPTURE_END) {\n            this.game.screenCapture.endCapture();\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.hungerSystem.update(dt);\n        this.game.actionSystem.update(dt);\n        this.game.movementSystem.update(dt);\n        this.game.meleeSystem.update(dt);\n        this.game.deathSystem.update(dt);\n        this.game.FOVSystem.update(dt);\n        this.game.renderSystem.update(dt);\n        this.game.particles.update(dt);\n        this.game.UISystem.update(dt);\n        this.game.cursor.update(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.state.newGame();\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `Knossonia`, 'cyan');\n\n        this.game.renderer.drawText(1, 4, `move       [w, a, d, x]`);\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [j]`);\n        this.game.renderer.drawText(1, 7, `pickup     [g]`);\n        this.game.renderer.drawText(1, 8, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 9, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 10, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 11, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, 'red', 'red', 'black');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\n\nexport default class InventoryScreen extends Screen {\n    #selectedIdx = 0;\n    #accessible;\n    #accessor;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n        const interactable = items[idx];\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        const items = this.#accessible.inventory.content;\n        const idx = this.#selectedIdx % items.length;\n\n        if (items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        items.forEach((item, i) => {\n            const isSelected = i === idx;\n            const ypos = i + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.drawText(2, ypos, item.moniker.display);\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 16;\n    #selectedIdx = 0;\n    #interactions = [];\n    #interactable;\n    #interactor;\n\n    get left() {\n        return (this.game.renderer.width - this.#width) / 2;\n    }\n\n    get top() {\n        return (this.game.renderer.height - this.#height) / 2;\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#selectedIdx = 0;\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.resetInteractions();\n    }\n\n    resetInteractions() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.#interactions = evt.data.interactions;\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    pointerUp() {\n        Math.max(0, --this.#selectedIdx);\n    }\n\n    pointerDown() {\n        this.#selectedIdx++;\n    }\n\n    selectItem() {\n        const idx = this.#selectedIdx % this.#interactions.length;\n        const interaction = this.#interactions[idx];\n\n        if (interaction) {\n            this.#interactable.fireEvent(interaction.evt, {\n                interactor: this.#interactor,\n            });\n\n            this.resetInteractions();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.pointerUp();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.pointerDown();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.clearArea(\n            this.top,\n            this.left,\n            this.#width,\n            this.#height\n        );\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        const idx = this.#selectedIdx % this.#interactions.length;\n\n        if (this.#interactions.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        const xpos = this.left + 2;\n\n        this.#interactions.forEach((interaction, i) => {\n            const isSelected = i === idx;\n            const ypos = i + this.top + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(xpos, ypos, '>', 'yellow');\n            } else {\n                this.game.renderer.drawText(xpos, ypos, '-');\n            }\n\n            this.game.renderer.drawText(xpos + 1, ypos, interaction.name);\n        });\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    onNewGame() {\n        const position = this.game.map.getRandomEmptyPosition();\n        const player = this.game.ecs.createPrefab('Player');\n\n        player.position.setPos(position.x, position.y);\n\n        this.#entityId = player.id;\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.remove(MoveCommand);\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.remove(MeleeCommand);\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n\n    onSaveGame() {\n        return {\n            playerEntityId: this.#entityId,\n        };\n    }\n\n    onLoadGame(data) {\n        this.#entityId = data.playerEntityId;\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    newGame() {\n        console.log('NEW GAME');\n        this.game.clock.onNewGame();\n        this.game.engine.onNewGame();\n        this.game.map.onNewGame();\n        this.game.player.onNewGame();\n    }\n\n    saveGame() {\n        const data = {\n            ...this.game.clock.onSaveGame(),\n            ...this.game.player.onSaveGame(),\n            ...this.game.engine.onSaveGame(),\n            ...this.game.map.onSaveGame(),\n        };\n\n        console.log('SAVE GAME', data);\n        localStorage.setItem('save', JSON.stringify(data));\n    }\n\n    loadGame() {\n        const data = JSON.parse(localStorage.getItem('save'));\n\n        console.log('LOAD GAME', data);\n\n        this.game.clock.onLoadGame(data);\n        this.game.engine.onLoadGame(data);\n        this.game.map.onLoadGame(data);\n        this.game.player.onLoadGame(data);\n        this.game.screens.onLoadGame(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    onNewGame() {\n        this.#tick = 0;\n        this.#tickDelta = 0;\n    }\n\n    onLoadGame(data) {\n        this.#tick = data.clock.tick;\n        this.#tickDelta = data.clock.tickDelta;\n    }\n\n    onSaveGame() {\n        return {\n            clock: {\n                tick: this.tick,\n                tickDelta: this.tickDelta,\n            },\n        };\n    }\n}\n","import { Moniker, Visible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(Visible));\n    }\n\n    update(dt) {\n        if (!this.#isEnabled) {\n            return;\n        }\n\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', 'yellow');\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { BoredGoalType } from '../ai/GoalTypes';\nimport { Door, IsInventoried, Position } from '../ecs/components';\nimport { LIQUID_BLOOD, LIQUID_HONEY, LIQUID_WATER } from '../enums/LiquidTypes';\n\nexport default class MapManager extends Manager {\n    #lookup;\n    #width = 48;\n    #height = 48;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    onNewGame() {\n        this.#lookup.clear();\n        const generator = new MapGenerator.Uniform(this.width, this.height, {\n            timeLimit: 8000,\n            roomWidth: [2, 8],\n            roomHeight: [2, 8],\n            roomDugPercentage: 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v !== 1) {\n                return;\n            }\n\n            const type = Math.random() < 0.5 ? 'PineTree' : 'SmallPineTree';\n            const entity = this.game.ecs.createPrefab(type);\n\n            entity.position.setPos(x, y);\n        });\n\n        var rooms = generator.getRooms();\n        for (var i = 0; i < rooms.length; i++) {\n            var room = rooms[i];\n\n            room.getDoors((x, y) => {\n                const hasDoor = this.getEntitiesAt(x, y).some((e) => e.has(Door));\n\n                if (hasDoor) {\n                    return;\n                }\n\n                const door = this.game.ecs.createPrefab('Door');\n                door.position.setPos(x, y);\n            });\n        }\n\n        for (let i = 0; i < 3; i++) {\n            const position = this.getRandomEmptyPosition();\n            const chest = this.game.ecs.createPrefab('Chest');\n\n            const vial = this.game.ecs.createPrefab('Vial');\n            vial.liquidContainer.contents = LIQUID_HONEY;\n\n            chest.position.setPos(position.x, position.y);\n            chest.inventory.addLoot(vial);\n        }\n\n        for (let i = 0; i < 3; i++) {\n            const position = this.getRandomEmptyPosition();\n            const vial = this.game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_BLOOD;\n            vial.position.setPos(position.x, position.y);\n        }\n\n        for (let i = 0; i < 3; i++) {\n            const position = this.getRandomEmptyPosition();\n            const vial = this.game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_WATER;\n            vial.position.setPos(position.x, position.y);\n        }\n\n        for (let i = 0; i < 3; i++) {\n            const position = this.getRandomEmptyPosition();\n            const vial = this.game.ecs.createPrefab('Vial');\n\n            vial.liquidContainer.contents = LIQUID_HONEY;\n            vial.position.setPos(position.x, position.y);\n        }\n\n        for (let i = 0; i < 4; i++) {\n            const position = this.getRandomEmptyPosition();\n            const wanderer = this.game.ecs.createPrefab('HumanWanderer');\n\n            wanderer.position.setPos(position.x, position.y);\n            wanderer.brain.pushGoal(BoredGoalType.create());\n        }\n\n        for (let i = 0; i < 8; i++) {\n            const position = this.getRandomEmptyPosition();\n            const goblin = this.game.ecs.createPrefab('Goblin');\n\n            goblin.position.setPos(position.x, position.y);\n            goblin.brain.pushGoal(BoredGoalType.create());\n        }\n    }\n\n    onSaveGame() {\n        return {\n            map: {\n                lookup: this.#lookup.serialize(),\n            },\n        };\n    }\n\n    onLoadGame(data) {\n        this.#lookup.deserialize(data.map.lookup);\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","export default class FastMap {\n    #width = 0;\n    #height = 0;\n    #data = [];\n    #idHash = new Map();\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    get size() {\n        return this.#width * this.#height;\n    }\n\n    constructor(width, height) {\n        this.#width = width;\n        this.#height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this.#idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this.#data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this.#data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this.#width = data.width;\n        this.#height = data.height;\n        this.#idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this.#data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this.#idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this.#idHash.set(id, { x, y });\n        this.#data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this.#data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this.#idHash.has(id);\n    }\n\n    getPosition(id) {\n        return this.#idHash.get(id);\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this.#idHash.delete(id);\n        this.#data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import Manager from './Manager';\n\nexport default class ScreenCaptureManager extends Manager {\n    #rec;\n    #isRecording = false;\n\n    get isRecording() {\n        return this.#isRecording;\n    }\n\n    startCapture(duration = null) {\n        if (this.isRecording) {\n            return;\n        }\n\n        this.#isRecording = true;\n\n        console.log('START CAPTURE');\n\n        const chunks = []; // here we will store our recorded media chunks (Blobs)\n        const stream = this.game.renderer.canvas.captureStream(); // grab our canvas MediaStream\n        this.#rec = new MediaRecorder(stream); // init the recorder\n        this.#rec.ondataavailable = (e) => chunks.push(e.data);\n        // only when the recorder stops, we construct a complete Blob from all the chunks\n        this.#rec.onstop = (e) =>\n            this.exportVideo(new Blob(chunks, { type: 'video/webm' }));\n\n        this.#rec.start();\n\n        if (duration) {\n            setTimeout(() => this.endCapture(), duration);\n        }\n    }\n\n    endCapture() {\n        if (!this.isRecording) {\n            return;\n        }\n\n        console.log('END CAPTURE');\n\n        this.#rec.stop();\n    }\n\n    exportVideo(blob) {\n        const vid = document.createElement('video');\n        vid.src = URL.createObjectURL(blob);\n        vid.controls = true;\n        document.body.appendChild(vid);\n        const a = document.createElement('a');\n        a.download = 'myvid.webm';\n        a.href = vid.src;\n        a.textContent = 'download the video';\n        document.body.appendChild(a);\n    }\n}\n","import { FOV } from 'rot-js';\nimport { Explorable, Explored, Shadowcaster, Visible } from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [Visible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(Visible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.remove(Visible));\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 4, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { Dead, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Dead],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.destroy();\n            }\n        });\n    }\n}\n","import { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { Faction } from '../ecs/components';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const factionA = entityA.get(Faction);\n        const factionB = entityB.get(Faction);\n\n        if (factionA && factionB) {\n            return this.isHostile(factionA.name, factionB.name);\n        }\n\n        return false;\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 24;\n    height = 24;\n\n    #focusX = 0;\n    #focusY = 0;\n\n    get topLeftWorldX() {\n        return Math.min(\n            Math.max(0, this.#focusX - this.width / 2),\n            this.game.map.width - this.width\n        );\n    }\n\n    get topLeftWorldY() {\n        return Math.min(\n            Math.max(0, this.#focusY - this.height / 2),\n            this.game.map.height - this.height\n        );\n    }\n\n    setFocus(x, y) {\n        this.#focusX = x;\n        this.#focusY = y;\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}