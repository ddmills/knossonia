{"version":3,"sources":["webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/MapLayer.js","webpack://knossonia/./src/ecs/components/Map.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/./src/enums/keycodes.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./src/core/display.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/index.js"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","t","value","mode","this","__esModule","ns","Object","create","r","def","key","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","camelCase","input","options","Array","TypeError","pascalCase","x","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","preserveCamelCase","p1","m","constructor","component","set","v","id","ecs","getEntity","entity","console","Proxy","Reflect","isNaN","old","deleteProperty","values","len","Math","proxy","map","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","destroy","createComponent","handlerName","camelcase","evt","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Component","Map","type","_getType","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","data","prefab","Prefab","inherit","name","componentData","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","components","getAccessor","hasType","nestedComponent","typeOrClass","attach","configurable","has","allowMultiple","isComponent","instance","all","index","v2","EntityEvent","Entity","refs","Set","json","entityData","createOrGetById","any","none","hasAny","c","hasAll","hasNone","isMatch","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","entities","prefabs","nameOrClass","queries","serialize","deserializeEntity","deserialize","Actor","reduceEnergy","addEnergy","energy","Brain","peekGoal","isFinished","goal","popGoal","fireEvent","currentGoal","result","takeAction","cost","removeGoal","handle","goals","g","isSelf","isSiblingGoal","originalIntent","push","pop","length","GoalType","BoredGoalType","brain","pushGoal","EatFoodGoalType","complete","food","handled","SatisfyHungerGoalType","eater","isHungry","createAsSubGoal","goalTypeMap","GoalTypes","forEach","goalType","getGoalType","warn","Goal","Eater","random","hunger","Moniker","Logger","log","moniker","Position","y","MapLayer","idx","content","mapEntity","width","height","Glyph","fg","bg","char","Legs","actor","hasEnergy","position","directions","shortName","fullName","delta","MoveCommand","direction","IsPlayer","Engine","window","registerComponent","registerPrefab","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","max","min","floor","getUniform","u","mean","stddev","gauss","sqrt","clone","slice","indexOf","getItem","splice","total","part","state","RNG","setState","getState","setSeed","Date","now","Backend","_options","Canvas","_ctx","document","createElement","getContext","cb","requestAnimationFrame","canvas","opts","style","fontStyle","font","fontSize","fontFamily","_updateSize","textAlign","textBaseline","fillStyle","fillRect","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","mod","n","Hex","_spacingX","_spacingY","_hexSize","clearBefore","ch","px","transpose","reverse","_fill","chars","concat","fillText","ceil","availWidth","availHeight","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","spacing","nodeSize","size","cx","cy","a","b","border","ctx","beginPath","moveTo","lineTo","fill","xprop","yprop","charWidth","Rect","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","drawImage","boxWidth","boxHeight","widthFraction","forceSquareRatio","Tile","_colorCanvas","tileWidth","tileHeight","tileColorize","clearRect","fgs","bgs","tile","tileMap","context","globalCompositeOperation","tileSet","fromString","str","cached","CACHE","charAt","match","parseInt","split","TileGL","_uniforms","_gl","_initWebGL","e","alert","message","preserveDrawingBuffer","addEventListener","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","clear","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","pos","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","trim","colorCache","color","parsed","Number","Color","$","termcolor","rgb","DST_COLORS","Term","_offset","_cursor","_lastColor","setTimeout","avail","computeSize","process","stdout","write","dx","dy","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","tokenize","maxWidth","offset","replace","substring","tokens","Infinity","lineLength","lastTokenWithSpace","token","breakInsideToken","arr","join","nextIndex","breakIndex","lastIndexOf","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","BACKENDS","DEFAULT_OPTIONS","layout","Display","_data","_dirty","assign","setOptions","DEBUG","bind","_tick","_backend","schedule","what","colors","draw","ctor","getContainer","computeFontSize","touches","clientX","clientY","eventToPosition","text","lines","Text","shift","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","cch","_draw","RotDisplay","rot","body","appendChild","drawText","renderables","tick","deltaTick","eaters","commands","update","moveCommand","jim","bob","add","move","remove","keycodes","keyCode","dt","sorted","from","sort","isPlayer","ActionSystem","MovementSystem","display","renderable","glyph"],"mappings":"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UACA,aACA,SACA,aACA,QACA,UACA,YACA,MACA,OACA,OACA,KACA,QACA,OACA,SACA,QACA,UACA,cACA,SACA,SACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,QACA,YACA,YACA,SACA,eACA,gBACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,SACA,GACA,eACA,GACA,QACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,MACA,YACA,WACA,UACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,WACA,cACA,mBACA,qBACA,qBACA,kBACA,kBACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,cACA,eACA,OACA,SACA,UACA,YACA,aACA,aACA,cACA,WACA,OACA,OACA,eACA,qBACA,sBACA,QACA,GACA,GACA,GACA,GACA,cACA,cACA,YACA,GACA,GACA,YACA,SACA,QACA,QACA,SACA,QACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,eACA,aACA,gBACA,QACA,GACA,OACA,QACA,GACA,eACA,aACA,GACA,gBACA,GACA,GACA,gBACA,eACA,cACA,cACA,cACA,iBACA,gBACA,eACA,iBACA,eACA,eACA,eACA,kBACA,OACA,QACA,QACA,QACA,OACA,OACA,GACA,MACA,gBACA,I,uRC5PJ,IAAMgI,KAAO,wBAmIE,I,WAjIX,gB,8HAAc,WACV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","file":"main.737c806c43656bdf6b05.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tif(mode & 2 && typeof value == 'object' && value) {\n\t\tfor(const key in value) def[key] = () => value[key];\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(\r\n            this.type,\r\n            this.serialize()\r\n        );\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][key]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][\r\n                            arrComps[accessor]\r\n                        ]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][\r\n                                arrComps[accessor]\r\n                            ];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","import { Component } from 'geotic';\nimport { SUCCESS, INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            const goal = this.popGoal();\n            this.entity.fireEvent('log', `finished ${goal.name}`);\n\n            goal.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result == SUCCESS) {\n            this.entity.fireEvent('energy-consumed', currentGoal.cost);\n        } else if (result == FAILURE) {\n            this.entity.fireEvent('energy-consumed', currentGoal.cost);\n            this.removeGoal(currentGoal);\n        } else if (result == INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                g.destroy();\n\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    pushGoal(goal) {\n        goal.goal.parent = this.entity;\n        return this.goals.push(goal);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import ecs from '../../ecs';\nimport { FAILURE } from '../GoalActionResult';\n\nexport class GoalType {\n    static name = 'Unknown';\n    static cost = 0;\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                cost: this.cost,\n                ...properties,\n            },\n        });\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n    static cost = 1000;\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('boredom');\n\n        if (evt.data.goal) {\n            entity.brain.pushGoal(evt.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n    static cost = 100;\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('eat-food', {\n            food: 6000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    entity.fireEvent('log', `current goal: ${goal.name}`);\n\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        cost: 0,\n        complete: false,\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker) ? this.entity.moniker.name : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    static properties = {\n        x: 0,\n        y: 0,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class MapLayer extends Component {\n    static properties = {\n        mapEntity: '<Entity>',\n        name: '',\n        content: '<EntityArray>',\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    getByIndex(idx) {\n        return content[idx];\n    }\n\n    get(x, y) {}\n}\n","import { Component } from 'geotic';\nimport { MapLayer } from './MapLayer';\n\nexport class Map extends Component {\n    static properties = {\n        name: '',\n        width: 32,\n        height: 32,\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return idx % this.width, idx / this.width;\n    }\n\n    getLayer(name) {\n        return this.entity.get(MapLayer, name);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg: '#fff',\n        bg: '',\n        char: '',\n    };\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        if (!this.entity.has(Position)) {\n            return;\n        }\n\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            return;\n        }\n\n        this.entity.position.x += evt.data.x;\n        this.entity.position.y += evt.data.y;\n        this.entity.fireEvent('energy-consumed', 750);\n\n        evt.handle();\n    }\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const NW = 0;\nexport const N = 1;\nexport const NE = 2;\nexport const W = 3;\nexport const Z = 4;\nexport const E = 5;\nexport const SW = 6;\nexport const S = 7;\nexport const SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\nimport { Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: Z,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\n\nconst ecs = new Engine();\n\nwindow.ecs = ecs;\n\nObject.values(components).forEach((component) => {\n    ecs.registerComponent(component);\n});\n\nObject.values(prefabs).forEach((prefab) => {\n    ecs.registerPrefab(prefab);\n});\n\nexport default ecs;\n","export default [\n    '', // [0]\n    '', // [1]\n    '', // [2]\n    'cancel', // [3]\n    '', // [4]\n    '', // [5]\n    'help', // [6]\n    '', // [7]\n    'back_space', // [8]\n    'tab', // [9]\n    '', // [10]\n    '', // [11]\n    'clear', // [12]\n    'enter', // [13]\n    'enter_special', // [14]\n    '', // [15]\n    'shift', // [16]\n    'control', // [17]\n    'alt', // [18]\n    'pause', // [19]\n    'caps_lock', // [20]\n    'kana', // [21]\n    'eisu', // [22]\n    'junja', // [23]\n    'final', // [24]\n    'hanja', // [25]\n    '', // [26]\n    'escape', // [27]\n    'convert', // [28]\n    'nonconvert', // [29]\n    'accept', // [30]\n    'modechange', // [31]\n    'space', // [32]\n    'page_up', // [33]\n    'page_down', // [34]\n    'end', // [35]\n    'home', // [36]\n    'left', // [37]\n    'up', // [38]\n    'right', // [39]\n    'down', // [40]\n    'select', // [41]\n    'print', // [42]\n    'execute', // [43]\n    'printscreen', // [44]\n    'insert', // [45]\n    'delete', // [46]\n    '', // [47]\n    '0', // [48]\n    '1', // [49]\n    '2', // [50]\n    '3', // [51]\n    '4', // [52]\n    '5', // [53]\n    '6', // [54]\n    '7', // [55]\n    '8', // [56]\n    '9', // [57]\n    'colon', // [58]\n    'semicolon', // [59]\n    'less_than', // [60]\n    'equals', // [61]\n    'greater_than', // [62]\n    'question_mark', // [63]\n    'at', // [64]\n    'a', // [65]\n    'b', // [66]\n    'c', // [67]\n    'd', // [68]\n    'e', // [69]\n    'f', // [70]\n    'g', // [71]\n    'h', // [72]\n    'i', // [73]\n    'j', // [74]\n    'k', // [75]\n    'l', // [76]\n    'm', // [77]\n    'n', // [78]\n    'o', // [79]\n    'p', // [80]\n    'q', // [81]\n    'r', // [82]\n    's', // [83]\n    't', // [84]\n    'u', // [85]\n    'v', // [86]\n    'w', // [87]\n    'x', // [88]\n    'y', // [89]\n    'z', // [90]\n    'os_key', // [91] windows key (windows) or command key (mac)\n    '', // [92]\n    'context_menu', // [93]\n    '', // [94]\n    'sleep', // [95]\n    'numpad0', // [96]\n    'numpad1', // [97]\n    'numpad2', // [98]\n    'numpad3', // [99]\n    'numpad4', // [100]\n    'numpad5', // [101]\n    'numpad6', // [102]\n    'numpad7', // [103]\n    'numpad8', // [104]\n    'numpad9', // [105]\n    'multiply', // [106]\n    'add', // [107]\n    'separator', // [108]\n    'subtract', // [109]\n    'decimal', // [110]\n    'divide', // [111]\n    'f1', // [112]\n    'f2', // [113]\n    'f3', // [114]\n    'f4', // [115]\n    'f5', // [116]\n    'f6', // [117]\n    'f7', // [118]\n    'f8', // [119]\n    'f9', // [120]\n    'f10', // [121]\n    'f11', // [122]\n    'f12', // [123]\n    'f13', // [124]\n    'f14', // [125]\n    'f15', // [126]\n    'f16', // [127]\n    'f17', // [128]\n    'f18', // [129]\n    'f19', // [130]\n    'f20', // [131]\n    'f21', // [132]\n    'f22', // [133]\n    'f23', // [134]\n    'f24', // [135]\n    '', // [136]\n    '', // [137]\n    '', // [138]\n    '', // [139]\n    '', // [140]\n    '', // [141]\n    '', // [142]\n    '', // [143]\n    'num_lock', // [144]\n    'scroll_lock', // [145]\n    'win_oem_fj_jisho', // [146]\n    'win_oem_fj_masshou', // [147]\n    'win_oem_fj_touroku', // [148]\n    'win_oem_fj_loya', // [149]\n    'win_oem_fj_roya', // [150]\n    '', // [151]\n    '', // [152]\n    '', // [153]\n    '', // [154]\n    '', // [155]\n    '', // [156]\n    '', // [157]\n    '', // [158]\n    '', // [159]\n    'circumflex', // [160]\n    'exclamation', // [161]\n    'double_quote', // [162]\n    'hash', // [163]\n    'dollar', // [164]\n    'percent', // [165]\n    'ampersand', // [166]\n    'underscore', // [167]\n    'open_paren', // [168]\n    'close_paren', // [169]\n    'asterisk', // [170]\n    'plus', // [171]\n    'pipe', // [172]\n    'hyphen_minus', // [173]\n    'open_curly_bracket', // [174]\n    'close_curly_bracket', // [175]\n    'tilde', // [176]\n    '', // [177]\n    '', // [178]\n    '', // [179]\n    '', // [180]\n    'volume_mute', // [181]\n    'volume_down', // [182]\n    'volume_up', // [183]\n    '', // [184]\n    '', // [185]\n    'semicolon', // [186]\n    'equals', // [187]\n    'comma', // [188]\n    'minus', // [189]\n    'period', // [190]\n    'slash', // [191]\n    'back_quote', // [192]\n    '', // [193]\n    '', // [194]\n    '', // [195]\n    '', // [196]\n    '', // [197]\n    '', // [198]\n    '', // [199]\n    '', // [200]\n    '', // [201]\n    '', // [202]\n    '', // [203]\n    '', // [204]\n    '', // [205]\n    '', // [206]\n    '', // [207]\n    '', // [208]\n    '', // [209]\n    '', // [210]\n    '', // [211]\n    '', // [212]\n    '', // [213]\n    '', // [214]\n    '', // [215]\n    '', // [216]\n    '', // [217]\n    '', // [218]\n    'open_bracket', // [219]\n    'back_slash', // [220]\n    'close_bracket', // [221]\n    'quote', // [222]\n    '', // [223]\n    'meta', // [224]\n    'altgr', // [225]\n    '', // [226]\n    'win_ico_help', // [227]\n    'win_ico_00', // [228]\n    '', // [229]\n    'win_ico_clear', // [230]\n    '', // [231]\n    '', // [232]\n    'win_oem_reset', // [233]\n    'win_oem_jump', // [234]\n    'win_oem_pa1', // [235]\n    'win_oem_pa2', // [236]\n    'win_oem_pa3', // [237]\n    'win_oem_wsctrl', // [238]\n    'win_oem_cusel', // [239]\n    'win_oem_attn', // [240]\n    'win_oem_finish', // [241]\n    'win_oem_copy', // [242]\n    'win_oem_auto', // [243]\n    'win_oem_enlw', // [244]\n    'win_oem_backtab', // [245]\n    'attn', // [246]\n    'crsel', // [247]\n    'exsel', // [248]\n    'ereof', // [249]\n    'play', // [250]\n    'zoom', // [251]\n    '', // [252]\n    'pa1', // [253]\n    'win_oem_clear', // [254]\n    '', // [255]\n];\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","import { Display as RotDisplay } from 'rot-js';\n\nclass Display {\n    rot = null;\n\n    width = 64;\n    height = 32;\n\n    constructor() {\n        RotDisplay.Rect.cache = true;\n        this.rot = new RotDisplay({\n            width: this.width,\n            height: this.height,\n            fontSize: 18,\n            forceSquareRatio: false,\n            bg: '#1c171f',\n        });\n        this.attach();\n    }\n\n    attach() {\n        document.body.appendChild(this.rot.getContainer());\n    }\n\n    draw(x, y, char, fg, bg) {\n        this.rot.draw(x, y, char, fg, bg);\n    }\n\n    drawText(x, y, string, fg, bg) {\n        this.rot.drawText(x, y, string);\n    }\n\n    clear() {\n        this.rot.clear();\n    }\n}\n\nexport default new Display();\n","import ecs from '../ecs';\nimport display from '../core/display';\nimport { Glyph, Position } from '../ecs/components';\n\nconst renderables = ecs.createQuery({\n    all: [Glyph, Position],\n});\n\nexport const update = (tick) => {\n    display.clear();\n\n    renderables.get().forEach((renderable) => {\n        display.draw(\n            renderable.position.x,\n            renderable.position.y,\n            renderable.glyph.char,\n            renderable.glyph.fg,\n            renderable.glyph.bg\n        );\n    });\n};\n","import ecs from '../ecs';\nimport { Actor } from '../ecs/components';\n\nconst query = ecs.createQuery({\n    all: [Actor],\n});\n\nexport let tick = 0;\nexport let deltaTick = 0;\n\nexport const update = (dt) => {\n    const entities = query.get();\n    const sorted = Array.from(entities);\n    sorted.sort((a, b) => a.actor.energy < b.actor.energy ? 1 : -1);\n\n    const entity = sorted[0];\n    deltaTick = 0;\n\n    if (!entity.actor.hasEnergy) {\n        deltaTick = entity.actor.energy * -1;\n        tick -= entity.actor.energy;\n\n        entities.forEach((entity) => {\n            entity.actor.addEnergy(deltaTick);\n        });\n    }\n\n    if (entity.actor.hasEnergy) {\n        console.log('CURRENT TURN', entity.moniker.name);\n\n        if (!entity.isPlayer) {\n            entity.fireEvent('take-action');\n        }\n    }\n};\n","import ecs from '../ecs';\nimport { Eater } from '../ecs/components';\nimport { deltaTick } from './ActionSystem';\n\nconst eaters = ecs.createQuery({\n    all: [Eater],\n});\n\nexport const update = (dt) => {\n    if (deltaTick > 0) {\n        eaters.get().forEach((entity) => {\n            entity.eater.hunger -= deltaTick;\n        });\n    }\n};\n","import ecs from '../ecs';\nimport { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\n\nconst commands = ecs.createQuery({\n    all: [MoveCommand, Position],\n});\n\nexport const update = (tick) => {\n    commands.get().forEach((entity) => {\n        const delta = Directions.delta(entity.moveCommand.direction);\n\n        entity.fireEvent('TryMove', delta);\n\n        entity.moveCommand.destroy();\n    });\n};\n","import ecs from './ecs';\nimport keycodes from './enums/keycodes';\nimport * as RenderSystem from './systems/RenderSystem';\nimport * as HungerSystem from './systems/HungerSystem';\nimport * as ActionSystem from './systems/ActionSystem';\nimport * as MovementSystem from './systems/MovementSystem';\nimport { BoredGoalType } from './ai/GoalTypes';\nimport { N, W, Z, E, S, NW, SW, SE, NE } from './enums/Directions';\nimport display from './core/display';\nimport { Brain, MoveCommand } from './ecs/components';\n\nconst jim = ecs.createPrefab('Player', {\n    moniker: {\n        name: 'Jim',\n    },\n    position: {\n        x: 4,\n        y: 10,\n    },\n});\n\nconst bob = ecs.createPrefab('Human', {\n    moniker: {\n        name: 'Bobby',\n    },\n    position: {\n        x: 23,\n        y: 20,\n    },\n});\n\nbob.add(Brain);\nbob.brain.pushGoal(BoredGoalType.create());\n\nconst move = (entity, direction) => {\n    if (entity.has(MoveCommand)) {\n        entity.remove(MoveCommand);\n    }\n\n    entity.add(MoveCommand, {\n        direction,\n    });\n};\n\ndocument.addEventListener('keydown', (e) => {\n    if (keycodes[e.keyCode] === 'space') {\n        jim.fireEvent('energy-consumed', 1000);\n    }\n    if (keycodes[e.keyCode] === 'q') {\n        move(jim, NW);\n    }\n    if (keycodes[e.keyCode] === 'w') {\n        move(jim, N);\n    }\n    if (keycodes[e.keyCode] === 'e') {\n        move(jim, NE);\n    }\n    if (keycodes[e.keyCode] === 'a') {\n        move(jim, W);\n    }\n    if (keycodes[e.keyCode] === 's') {\n        move(jim, Z);\n    }\n    if (keycodes[e.keyCode] === 'd') {\n        move(jim, E);\n    }\n    if (keycodes[e.keyCode] === 'z') {\n        move(jim, SW);\n    }\n    if (keycodes[e.keyCode] === 'x') {\n        move(jim, S);\n    }\n    if (keycodes[e.keyCode] === 'c') {\n        move(jim, SE);\n    }\n});\n\nconst update = (dt) => {\n    HungerSystem.update(dt);\n    ActionSystem.update(dt);\n    MovementSystem.update(dt);\n    RenderSystem.update(dt);\n\n    display.drawText(1, 1, `%c{yellow}Knossonia`);\n\n    display.drawText(1, display.height - 3, `energy (jim) %c{yellow}${jim.actor.energy}`);\n    display.drawText(1, display.height - 2, `energy (bob) %c{yellow}${bob.actor.energy}`);\n    display.drawText(display.width - 1 - `${ActionSystem.tick}`.length, 1, `%c{pink}${ActionSystem.tick}`);\n\n    requestAnimationFrame(update);\n};\n\nrequestAnimationFrame(update);\n"],"sourceRoot":""}