https://ddmills.com/knossonia/

built with geotic - https://github.com/ddmills/geotic

- time
    - year
    - month
    - day
    - turn = 1000 tick
    - tick
        - each action has a cost
- space
    - world
        - region (non-contingous)
    - sector (each 'sector' belongs to a 'region')
        - theme (?)
        - "entrances" - defined by world NSEW (?)
            - defined by world map
            - along edge(s): NSEW
            - types: [open, path, road, tunnel (?)]
    - tile
        - layer
            - background
            - content
            - fx
            - ui
    - glyph (16)
        - foreground (^)
        - background (*)
        - black/white
- CognitiveState
    - Alert
    - Distracted
    - Daydreaming (?)
- Faction
    - dimensions
        - like
        - respect
        - affection
        - fear
    - leader = 1 person
        - unique name, strong
    - captains = n beings
        - unique name, strong
    - followers = n beings
- your intuition tells you...
- Interesting interactions
    - incapacitate/tie enemy up
    - interrogate enemy
    - brainwash enemy
    - actors can know "secrets"
        - "There is a hidden vault in area x,y in the northwest corner!"
        - "The password to the goblin hideout is 'clobber'!"
        - "Treasure map" with x,y coordinates. "you'll need a shovel!"
    - magically capture an entity into a box/container
        - release out when broken
- puzzles
    - sokoban style
    - flip switch, unlock door
    - kill enemy, get key, unlock door
    - sliding puzzle
    - logic grid puzzle quests
    - chest/door with three shapes
        - three matching shapes scattered in dungeon
        - chest can be smashed open (contents may be destroyed)

- mechanisms
    - pressure plate (add weight to activate)
    - switch (on/off, must be flicked')
    - moving block (push to move)
    - button (can throw stone to activate)
    - statues that can animate
    - hidden dart gun
    - line-of-sight (can X be seen?)
    - underground passageway
        - entrance covered by statue or moving block (?)
        - get to the other side of "pond"
    - treasure chest on a pressure plate
        - put something in the chest to trigger the plate
    - door requires matching key
    - "fire machine" - way to toggle fire
    - treasure maps
        - reveal a location and x/y to dig
    - timer
    - bomb

- items
    - {effect} {base} of {modifer}
    - Heavy Dagger of Vampirism

- todos
    - rendering layers
        - background (grass)
        - ground (corpses)
        - items (loot)
        - interactables (switches, chests)
        - beings (enemies, player)
    - ui glyphs/sheet
    - extract events names to enum
    - give interactions a priority
        - "Drink" should appear before "Drop"
    - "default" interaction (?)
    - map and camera
    - sectors
        - "world" must make note of data that is cross-sector
            - treasure map?
            - region puzzles
            - quests
        - serializing (saving) into chunk into 'game state' object
            - must be able to differentiate between chunk data and entity data (??)
        - Sector Generator
            - getRooms()
            - flavor based on sector type
        - Moving to another sector (AKA saving current sector)
            - take `Player` entity out, serialize them
            - throw persuing enemies into Limbo (?) state
                - limbo actors enter new sector when necessary (?)
                - or always keep neighbor sectors loaded in memory (?)
            - serialize all remaining entity data
                - perhaps add a 'DoNotSave' component for entities we don't care about?
            - serialize map positional data
            - serialize last-visited tick (?) - useful to repopulate if revisiting
            - pull save game from storage
            - update/add all given sector data to save file under key (idx based)
            - load(or generate) next sector
            - populate player entity into sector
            - start game on adventure screen
        - simply "saving" the game:
            - serialize/store player entity
            - serialize all current sector data as 'currentSector'

- interesting
    - chiro = hand
    - nex = death

# inspo
- https://github.com/Bozar/cursedSouls
- https://github.com/munificent/hauberk
- https://www.reddit.com/r/roguelikedev/comments/66graa/tileset_inquiry/
- https://www.reddit.com/r/roguelikedev/comments/1dmbxr/art_scrollosprites/
- https://robey.lag.net/2020/02/09/bizcat-bitmap-font.html
- https://int10h.org/oldschool-pc-fonts
- https://www.gridsagegames.com/blog/category/dev-series-fonts/
- https://kenney.nl/assets/bit-pack
- https://github.com/rsaarelm/sodna/blob/master/codepage_437.txt
- https://github.com/spite/ccapture.js
- http://www.zincland.com/7drl/kobold/
- https://secrethideout.itch.io/rogue-dungeon-tileset-16x16
- https://iknowkingrabbit.itch.io/mas-darkest-pack
- https://www.youtube.com/watch?v=LKCRim02opc
- https://cesium.com/docs/tutorials/particle-systems/
- https://tekeli.li/onomastikon/
- https://www.youtube.com/watch?v=F69-t33e8tk

- particles requirements
    - ability to configure speed
    - block game input
    - change colors over time
    - change glyphs over time
- particle effect
    - name
    - systems array
        - system
        - delay
        - position
- particle system
    - lifetime (ms)
        - min
        - max
    - speed (tiles-per-second)
        - min
        - max
    - color - changes from a-to-z over the lifetime
        - fg1 [a, b, c, ..., z] - primary
        - fg2 [a, b, c, ..., z] - secondary
        - bg [a, b, c, ..., z] - background
    - glyph - changes from a-to-z over the lifetime
        - [a, b, c, ..., z]
    - emission-rate (particles-per-second)
    - duration (ms)
    - loop (boolean)
