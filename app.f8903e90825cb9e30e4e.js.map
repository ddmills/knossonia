{"version":3,"sources":["webpack://sleepy/webpack/runtime/create fake namespace object","webpack://sleepy/./src/index.js","webpack://sleepy/./src/utils/ImageLoader.js","webpack://sleepy/./node_modules/howler/dist/howler.js","webpack://sleepy/./src/core/Game.js","webpack://sleepy/./src/core/rendering/RenderManager.js","webpack://sleepy/./src/core/Manager.js","webpack://sleepy/./src/core/rendering/Display.js","webpack://sleepy/./src/utils/Grid.js","webpack://sleepy/./src/core/rendering/spritesheets.js","webpack://sleepy/./src/core/rendering/SpriteSheet.js","webpack://sleepy/./src/core/rendering/cp437.js","webpack://sleepy/./src/core/rendering/Sprite.js","webpack://sleepy/./src/utils/ColorParser.js","webpack://sleepy/./node_modules/color-parse/index.mjs","webpack://sleepy/./node_modules/color-name/index.js","webpack://sleepy/./src/utils/ColorUtil.js","webpack://sleepy/./src/core/input/InputController.js","webpack://sleepy/./src/core/input/events/InputKeyboardEvent.js","webpack://sleepy/./src/core/input/events/InputEvent.js","webpack://sleepy/./src/core/input/events/InputMouseEvent.js","webpack://sleepy/./src/systems/ActionSystem.js","webpack://sleepy/./src/core/screens/ScreenType.js","webpack://sleepy/./src/ecs/components/Actor.js","webpack://sleepy/../node_modules/camelcase/index.js","webpack://sleepy/../src/util/string-util.js","webpack://sleepy/../src/ComponentRegistry.js","webpack://sleepy/../node_modules/deepmerge/dist/cjs.js","webpack://sleepy/../src/PrefabComponent.js","webpack://sleepy/../src/Prefab.js","webpack://sleepy/../src/PrefabRegistry.js","webpack://sleepy/../src/Component.js","webpack://sleepy/../src/EntityEvent.js","webpack://sleepy/../src/util/bit-util.js","webpack://sleepy/../src/Entity.js","webpack://sleepy/../src/Query.js","webpack://sleepy/../src/World.js","webpack://sleepy/../src/Engine.js","webpack://sleepy/./src/ecs/components/IsDestroying.js","webpack://sleepy/./src/ecs/components/LiquidContainer.js","webpack://sleepy/./src/data/Spawnables.js","webpack://sleepy/./src/data/Spawner.js","webpack://sleepy/./src/data/spawnables/SpawnableVialHoney.js","webpack://sleepy/./src/enums/LiquidTypes.js","webpack://sleepy/./src/data/spawnables/SpawnableVialBlood.js","webpack://sleepy/./src/data/spawnables/SpawnableVialWater.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://sleepy/./src/ai/GoalTypes/BoredGoalType.js","webpack://sleepy/./src/ai/GoalTypes/GoalType.js","webpack://sleepy/./src/ai/GoalActionResult.js","webpack://sleepy/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://sleepy/./src/utils/AStar.js","webpack://sleepy/./src/utils/diagonalDistance.js","webpack://sleepy/./src/utils/ManhattanDistance.js","webpack://sleepy/./src/utils/PriorityQueue.js","webpack://sleepy/./src/ai/GoalTypes/MoveGoalType.js","webpack://sleepy/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinBruiser.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinStargazer.js","webpack://sleepy/./src/data/spawnables/SpawnablePineTree.js","webpack://sleepy/./src/utils/rand.js","webpack://sleepy/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://sleepy/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://sleepy/./src/data/spawnables/SpawnableGrass.js","webpack://sleepy/./src/data/spawnables/SpawnableDeadGrass.js","webpack://sleepy/./src/data/spawnables/SpawnableSand.js","webpack://sleepy/./src/data/spawnables/SpawnableCliff.js","webpack://sleepy/./src/data/spawnables/SpawnableSnake.js","webpack://sleepy/./src/data/spawnables/SpawnableBear.js","webpack://sleepy/./src/ecs/components/Door.js","webpack://sleepy/./src/ecs/components/Blocker.js","webpack://sleepy/./src/ecs/components/Shadowcaster.js","webpack://sleepy/./src/ecs/components/Loot.js","webpack://sleepy/./src/ecs/components/Inventory.js","webpack://sleepy/./src/utils/ecs-refs.js","webpack://sleepy/./src/ecs/components/IsInventoried.js","webpack://sleepy/./src/ecs/components/Stackable.js","webpack://sleepy/./src/enums/Stackables.js","webpack://sleepy/./src/ecs/components/Throwable.js","webpack://sleepy/./src/data/Skills.js","webpack://sleepy/./src/data/skills/ArmorSkill.js","webpack://sleepy/./src/data/skills/Skill.js","webpack://sleepy/./src/data/Stats.js","webpack://sleepy/./src/data/skills/SpeedSkill.js","webpack://sleepy/./src/data/skills/ThrowingSkill.js","webpack://sleepy/./src/data/skills/DodgeSkill.js","webpack://sleepy/./src/data/skills/BrawlingSkill.js","webpack://sleepy/./src/data/skills/AxeSkill.js","webpack://sleepy/./src/data/skills/BladeSkill.js","webpack://sleepy/./src/data/skills/CudgelSkill.js","webpack://sleepy/./src/data/skills/HealthSkill.js","webpack://sleepy/./src/data/Attack.js","webpack://sleepy/./src/data/DamageTypes.js","webpack://sleepy/./src/utils/BresenhamLine.js","webpack://sleepy/./src/utils/cursor/SimpleLineRenderer.js","webpack://sleepy/./src/ecs/components/FragileGlass.js","webpack://sleepy/./src/enums/ConsoleEvents.js","webpack://sleepy/./src/ecs/components/Brain.js","webpack://sleepy/./src/ecs/components/Body.js","webpack://sleepy/./src/ecs/components/Goal.js","webpack://sleepy/./src/ai/GoalEvaluator.js","webpack://sleepy/./src/ecs/components/Moniker.js","webpack://sleepy/./src/ecs/components/Logger.js","webpack://sleepy/./src/ecs/components/Position.js","webpack://sleepy/./src/ecs/components/Glyph.js","webpack://sleepy/./src/ecs/components/Motor.js","webpack://sleepy/./src/ecs/components/IsPlayer.js","webpack://sleepy/./src/ecs/components/Wandering.js","webpack://sleepy/./src/enums/Directions.js","webpack://sleepy/./src/ecs/components/IsVisible.js","webpack://sleepy/./src/ecs/components/Explorable.js","webpack://sleepy/./src/ecs/components/Explored.js","webpack://sleepy/./src/ecs/components/Health.js","webpack://sleepy/./src/ecs/components/IsDead.js","webpack://sleepy/./src/ecs/components/FactionMember.js","webpack://sleepy/./src/enums/Factions.js","webpack://sleepy/./src/data/Faction.js","webpack://sleepy/./src/ecs/components/Eyes.js","webpack://sleepy/./src/ecs/components/Particle.js","webpack://sleepy/./src/ecs/components/ParticleEmitter.js","webpack://sleepy/./src/ecs/components/LootDropper.js","webpack://sleepy/./src/data/tables/LootSpawn.js","webpack://sleepy/./src/utils/WeightedTable.js","webpack://sleepy/./src/data/tables/loot/LootTableGoblin.js","webpack://sleepy/./src/data/tables/loot/LootTableForest.js","webpack://sleepy/./src/data/tables/loot/LootTableBruiser.js","webpack://sleepy/./src/ecs/components/IsEquipped.js","webpack://sleepy/./src/ecs/components/Equipment.js","webpack://sleepy/./src/data/EquipmentSlotType.js","webpack://sleepy/./src/ecs/components/EquipmentSlot.js","webpack://sleepy/./src/data/WeaponTypes.js","webpack://sleepy/./src/data/WeaponFamilies.js","webpack://sleepy/./src/data/weapons/WpnTypeBattleAxe.js","webpack://sleepy/./src/data/weapons/WeaponType.js","webpack://sleepy/./src/data/weapons/WpnTypeFangs.js","webpack://sleepy/./src/data/weapons/WpnTypeClaw.js","webpack://sleepy/./src/data/weapons/WpnTypeGreatsword.js","webpack://sleepy/./src/data/weapons/WpnTypeMace.js","webpack://sleepy/./src/data/Statuses.js","webpack://sleepy/./src/data/statuses/StatusBleeding.js","webpack://sleepy/./src/enums/StatusTypes.js","webpack://sleepy/./src/data/statuses/Status.js","webpack://sleepy/./src/data/statuses/StatusRegeneration.js","webpack://sleepy/./src/data/statuses/StatusStunned.js","webpack://sleepy/./src/data/weapons/WpnTypeShortsword.js","webpack://sleepy/./src/data/weapons/WpnTypeUnarmed.js","webpack://sleepy/./src/ecs/components/Stats.js","webpack://sleepy/./node_modules/rot-js/lib/util.js","webpack://sleepy/./src/ecs/components/Race.js","webpack://sleepy/./src/data/Races.js","webpack://sleepy/./src/data/RaceData.js","webpack://sleepy/./src/ecs/components/Weapon.js","webpack://sleepy/./src/ecs/components/Status.js","webpack://sleepy/./src/ecs/components/Ground.js","webpack://sleepy/./src/ecs/components/IsIncapacitated.js","webpack://sleepy/./src/ecs/components/SharpTrap.js","webpack://sleepy/./src/ecs/components/EquippedSkillMod.js","webpack://sleepy/./src/ecs/components/Combustible.js","webpack://sleepy/./src/ecs/components/Fire.js","webpack://sleepy/./src/ecs/components/ThermalCapacity.js","webpack://sleepy/./src/ecs/components/Abilities.js","webpack://sleepy/./src/ecs/components/AbilityStatus.js","webpack://sleepy/./src/data/Abilities.js","webpack://sleepy/./src/data/abilities/prayers/PrayerOfProtectionAbility.js","webpack://sleepy/./src/enums/AbilityTypes.js","webpack://sleepy/./src/data/abilities/SimpleChannelAbility.js","webpack://sleepy/./src/data/abilities/Ability.js","webpack://sleepy/./src/data/abilities/spells/BlinkAbility.js","webpack://sleepy/./src/utils/cursor/SimpleCursorRenderer.js","webpack://sleepy/./src/data/abilities/spells/CrimsonWellAbility.js","webpack://sleepy/./src/data/abilities/SimpleDurationAbility.js","webpack://sleepy/./src/data/abilities/stances/RageAbility.js","webpack://sleepy/./src/data/abilities/SimpleToggledAbility.js","webpack://sleepy/./src/data/abilities/stances/SprintAbility.js","webpack://sleepy/./src/data/abilities/stunts/JumpAbility.js","webpack://sleepy/./src/ecs/components/BitmaskGlyph.js","webpack://sleepy/./src/data/bitmasks.js","webpack://sleepy/./src/ecs/components/Level.js","webpack://sleepy/./src/ecs/components/Skills.js","webpack://sleepy/./src/ecs/components/Compressable.js","webpack://sleepy/./src/ecs/components/Mass.js","webpack://sleepy/./src/ecs/components/HealthShard.js","webpack://sleepy/./src/ecs/components/HealthShardDropper.js","webpack://sleepy/./src/ecs/components/HealthShardConsumer.js","webpack://sleepy/./src/systems/System.js","webpack://sleepy/./src/systems/RenderSystem.js","webpack://sleepy/./src/systems/UISystem.js","webpack://sleepy/./src/core/input/MouseManager.js","webpack://sleepy/./src/core/input/CommandManager.js","webpack://sleepy/./src/core/input/InputDomainType.js","webpack://sleepy/./src/core/input/commands.js","webpack://sleepy/./src/core/input/InputCommand.js","webpack://sleepy/./src/core/input/InputCommandType.js","webpack://sleepy/./src/core/input/KeyCodes.js","webpack://sleepy/./src/core/screens/ScreenManager.js","webpack://sleepy/./src/core/screens/screens/AdventureScreen.js","webpack://sleepy/./src/core/screens/screens/Screen.js","webpack://sleepy/./src/core/screens/screens/MainMenuScreen.js","webpack://sleepy/./src/enums/UIGlyphs.js","webpack://sleepy/./src/utils/UIWindowUtil.js","webpack://sleepy/./src/core/screens/screens/DeathScreen.js","webpack://sleepy/./src/core/screens/screens/InventoryScreen.js","webpack://sleepy/./src/utils/SelectableList.js","webpack://sleepy/./src/core/screens/screens/InteractModalScreen.js","webpack://sleepy/./src/core/screens/screens/CursorScreen.js","webpack://sleepy/./src/utils/UITags.js","webpack://sleepy/./src/core/screens/screens/LoadAreaScreen.js","webpack://sleepy/./src/core/screens/screens/EquipmentScreen.js","webpack://sleepy/./src/core/screens/screens/ListSelectionScreen.js","webpack://sleepy/./src/core/screens/screens/CharacterScreen.js","webpack://sleepy/./src/utils/StringUtil.js","webpack://sleepy/./src/core/screens/screens/AbilityScreen.js","webpack://sleepy/./src/core/screens/screens/ConfirmationScreen.js","webpack://sleepy/./src/core/screens/screens/WaitScreen.js","webpack://sleepy/./src/core/screens/screens/ChannelScreen.js","webpack://sleepy/./src/core/PlayerManager.js","webpack://sleepy/./src/ecs/index.js","webpack://sleepy/./src/core/GameStateManager.js","webpack://sleepy/./src/core/ClockManager.js","webpack://sleepy/./src/core/MapManager.js","webpack://sleepy/./src/utils/FastMap.js","webpack://sleepy/./src/systems/FOVSystem.js","webpack://sleepy/./node_modules/rot-js/lib/index.js","webpack://sleepy/./node_modules/rot-js/lib/rng.js","webpack://sleepy/./node_modules/rot-js/lib/display/display.js","webpack://sleepy/./node_modules/rot-js/lib/display/hex.js","webpack://sleepy/./node_modules/rot-js/lib/display/canvas.js","webpack://sleepy/./node_modules/rot-js/lib/display/backend.js","webpack://sleepy/./node_modules/rot-js/lib/display/rect.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile-gl.js","webpack://sleepy/./node_modules/rot-js/lib/color.js","webpack://sleepy/./node_modules/rot-js/lib/display/term.js","webpack://sleepy/./node_modules/rot-js/lib/text.js","webpack://sleepy/./node_modules/rot-js/lib/constants.js","webpack://sleepy/./node_modules/rot-js/lib/stringgenerator.js","webpack://sleepy/./node_modules/rot-js/lib/eventqueue.js","webpack://sleepy/./node_modules/rot-js/lib/MinHeap.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/index.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/simple.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/speed.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/action.js","webpack://sleepy/./node_modules/rot-js/lib/fov/index.js","webpack://sleepy/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/fov.js","webpack://sleepy/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/map/index.js","webpack://sleepy/./node_modules/rot-js/lib/map/arena.js","webpack://sleepy/./node_modules/rot-js/lib/map/map.js","webpack://sleepy/./node_modules/rot-js/lib/map/uniform.js","webpack://sleepy/./node_modules/rot-js/lib/map/dungeon.js","webpack://sleepy/./node_modules/rot-js/lib/map/features.js","webpack://sleepy/./node_modules/rot-js/lib/map/cellular.js","webpack://sleepy/./node_modules/rot-js/lib/map/digger.js","webpack://sleepy/./node_modules/rot-js/lib/map/ellermaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/iceymaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/rogue.js","webpack://sleepy/./node_modules/rot-js/lib/noise/index.js","webpack://sleepy/./node_modules/rot-js/lib/noise/simplex.js","webpack://sleepy/./node_modules/rot-js/lib/noise/noise.js","webpack://sleepy/./node_modules/rot-js/lib/path/index.js","webpack://sleepy/./node_modules/rot-js/lib/path/dijkstra.js","webpack://sleepy/./node_modules/rot-js/lib/path/path.js","webpack://sleepy/./node_modules/rot-js/lib/path/astar.js","webpack://sleepy/./node_modules/rot-js/lib/engine.js","webpack://sleepy/./node_modules/rot-js/lib/lighting.js","webpack://sleepy/./src/systems/DeathSystem.js","webpack://sleepy/./src/systems/ParticleSystem.js","webpack://sleepy/./src/core/FactionManager.js","webpack://sleepy/./src/core/CameraManager.js","webpack://sleepy/./src/systems/FPSMonitoringSystem.js","webpack://sleepy/./src/core/WorldManager.js","webpack://sleepy/./src/data/WorldData.js","webpack://sleepy/./src/data/Area.js","webpack://sleepy/./src/level/generators/generators.js","webpack://sleepy/./src/level/generators/ForestCabinsGenerator.js","webpack://sleepy/./src/level/LevelConnections.js","webpack://sleepy/./src/level/TileData.js","webpack://sleepy/./src/level/themes/TileTheme.js","webpack://sleepy/./src/level/themes/CastleTheme.js","webpack://sleepy/./src/level/themes/TileThemePopulator.js","webpack://sleepy/./src/level/themes/ForestTheme.js","webpack://sleepy/./src/level/themes/CanyonTheme.js","webpack://sleepy/./src/level/themes/CabinTheme.js","webpack://sleepy/./src/level/themes/DesertTheme.js","webpack://sleepy/./src/level/schemes/UniformScheme.js","webpack://sleepy/./src/level/TileContainer.js","webpack://sleepy/./src/level/RoomData.js","webpack://sleepy/./node_modules/nanoid/index.prod.js","webpack://sleepy/./node_modules/nanoid/url-alphabet/index.js","webpack://sleepy/./src/level/TileScheme.js","webpack://sleepy/./src/level/generators/AreaGenerator.js","webpack://sleepy/./src/level/generators/ForestGenerator.js","webpack://sleepy/./src/level/generators/ForestStrongholdGenerator.js","webpack://sleepy/./src/level/schemes/DenseCastleScheme.js","webpack://sleepy/./src/level/generators/ForestTownGenerator.js","webpack://sleepy/./src/level/schemes/ScatteredScheme.js","webpack://sleepy/./src/level/generators/GeneratorUtils.js","webpack://sleepy/./src/level/generators/CanyonGenerator.js","webpack://sleepy/./src/level/generators/DesertGenerator.js","webpack://sleepy/./src/level/schemes/SquareScheme.js","webpack://sleepy/./src/core/ConsoleManager.js","webpack://sleepy/./src/systems/DestroySystem.js","webpack://sleepy/./src/core/MusicManager.js","webpack://sleepy/./src/systems/StatusSystem.js","webpack://sleepy/./src/systems/LiquidSystem.js","webpack://sleepy/./src/systems/TrapSystem.js","webpack://sleepy/./src/systems/FireSystem.js","webpack://sleepy/./src/systems/TemperatureSystem.js","webpack://sleepy/./src/utils/ArrayUtil.js","webpack://sleepy/./src/utils/LerpUtil.js","webpack://sleepy/./src/utils/MemoryGrid.js","webpack://sleepy/./src/systems/AbilitySystem.js","webpack://sleepy/./src/systems/HealthShardSystem.js","webpack://sleepy/./src/systems/CompressionSystem.js","webpack://sleepy/./src/core/BitmaskManager.js","webpack://sleepy/./src/core/ChunkManager.js","webpack://sleepy/./src/data/Chunk.js","webpack://sleepy/./src/level/ChunkGenerator.js","webpack://sleepy/./node_modules/simplex-noise/simplex-noise.js","webpack://sleepy/webpack/bootstrap","webpack://sleepy/webpack/runtime/compat get default export","webpack://sleepy/webpack/runtime/define property getters","webpack://sleepy/webpack/runtime/global","webpack://sleepy/webpack/runtime/hasOwnProperty shorthand","webpack://sleepy/webpack/runtime/make namespace object","webpack://sleepy/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","require","window","game","ecs","start","Howler","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","HowlerGlobal","this","init","prototype","self","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","play","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Game","engine","world","constructor","ECS","music","MusicManager","mouse","MouseManager","clock","ClockManager","renderer","Renderer","GameStateManager","WorldManager","chunks","ChunkManager","MapManager","camera","CameraManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","ConsoleManager","bitmasks","BitmaskManager","actionSystem","ActionSystem","deathSystem","DeathSystem","statusSystem","StatusSystem","FOVSystem","renderSystem","RenderSystem","UISystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","liquidSystem","LiquidSystem","trapSystem","TrapSystem","fireSystem","FireSystem","temperature","TemperatureSystem","abilities","AbilitySystem","compression","CompressionSystem","healthShardSystem","HealthShardSystem","boundLoop","requestAnimationFrame","updateAdventureSystems","dt","update","playerTurn","updatePlayerSystems","render","t","Manager","display","canvas","super","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","resizeDisplay","zoom","setSize","draw","char","fg1","fg2","bg","tiles","getSprite","drawUI","ui","computeTextWidth","text","computeTextWidthTile","drawTextWrapping","drawText","left","right","lastSpace","nextLeft","substr","charAt","trimLeft","font","drawTextCenter","clear","clearArea","pxToTile","xPx","yPx","trunc","onNewGame","getSaveGameData","cells","Grid","suppressOOBWarn","createElement","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","cellX","cellY","filter","c","cell","pixelX","pixelY","drawImage","_width","_height","defaultValueGenerator","idx","coord","size","setAll","value","isOutOfBounds","serialize","entries","deserialize","get","getNeighbors","tileImage","getElementById","fontImage","uiImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","_cache","hasOwnProperty","pixels","getImageData","r","g","b","a","isBlack","isWhite","cvs","putImageData","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","base","isRGB","trim","baseHues","join","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","opacity","orange","yellow","purple","module","HSLToRGB","lerpHSL","deg","lerp","sat","light","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","System","createQuery","Actor","none","IsDestroying","IsDead","entities","sorted","sort","actor","energy","entity","hasEnergy","incrementTick","addEnergy","tickDelta","isIncapacitated","fireEvent","isPlayer","pushScreen","SCREEN_WAIT","time","getNextAction","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INVENTORY","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_AREA","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","SCREEN_CHARACTER","SCREEN_ABILITIES","SCREEN_CONFIRM","SCREEN_CHANNEL","Component","onEnergyConsumed","reduceEnergy","onTick","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","_","p1","camelCache","camelString","result","camelcaseSlow","ComponentRegistry","register","clazz","BigInt","_map","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","property","mergeObject","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","PrefabComponent","properties","overwrite","applyToEntity","initialProps","comp","props","merge","Prefab","addComponent","prefabComponent","prefabProps","arrComps","component","ckey","initialCompProps","PrefabRegistry","registered","prefab","inherit","ref","comps","componentData","_engine","_components","_prefabs","destroy","_onDestroyed","_onEvent","_onAttached","ob","onAttached","onDestroyed","onEvent","EntityEvent","is","handle","prevent","ONE","subtractBit","bit","addBit","bitIntersection","n1","n2","serializeComponent","serializeComponentKeyed","ser","Entity","_candidacy","add","attachComponentKeyed","attachComponentArray","attachComponent","has","remove","keyProp","removeComponentKeyed","removeComponentArray","removeComponent","v","components","arr","Query","filters","Set","any","onEntityAdded","onEntityRemoved","matches","bits","_any","candidate","isTracking","cb","refresh","World","Map","createId","getEntity","_entities","getEntities","createEntity","destroyEntity","destroyEntities","query","createPrefab","json","list","entityData","_createOrGetEntityById","_deserializeEntity","def","d","_candidate","q","_destroyed","delete","Engine","registerComponent","registerPrefab","createWorld","destroyWorld","pass","LiquidContainer","isEmpty","liquids","content","maxVolume","overridePrimary","liquid","overrideSecondary","_checkDestroyOnEmpty","destroyOnEmpty","isDestroying","pour","quantity","isPourable","spawn","SPWN_POOL_LIQUID","combineFrom","other","sum","onTryPour","interactor","position","getPos","onTryDrink","drinkLiquid","onGetInteractions","interactions","LIQUID_BLOOD","isFreeFlowing","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_TWIG","SPWN_ASH","SPWN_GOBLIN_GRUNT","SPWN_GOBLIN_BRUISER","SPWN_GOBLIN_STARGAZER","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_CLIFF","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_HEALTH_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","SPWN_LEATHER_BOOTS","SPWN_SHORTSWORD","SPWN_GREATSWORD","SPWN_BATTLE_AXE","SPWN_HATCHET","SPWN_MACE","SPWN_WOOD_CLUB","SPWN_GROUND_SAND","SPWN_GROUND_GRASS","SPWN_GROUND_GRASS_DEAD","SPWN_GROUND_STONE","SPWN_HEAVY_PLATE_ARMOR","SPWN_LEATHER_ARMOR","SPWN_CLOTH_HOOD","SPWN_WIZARD_CAP","SPWN_HELM","SPWN_SNAKE","SPWN_BEAR","SPWN_DESERT_REED","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","Grass","DeadGrass","Sand","GoblinGrunt","GoblinBruiser","GoblinStargazer","HumanWanderer","Snake","Bear","PineTree","PoolLiquid","Cliff","spawnForChunk","chunk","chunkId","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","LIQUID_OIL","colorDesc","onDrink","log","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","sword","equipmentSlot","handRight","equip","GoalType","goal","targets","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","isDead","isDestroyed","targetPos","computeAStar","cost","diagonalDistance","some","blocker","sharpTrap","path","segment","delta","moveGoal","MoveGoalType","allowDiagonals","neighbors","defaultSettings","settings","heuristic","manhattanDistance","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","costs","put","currentKey","current","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","dx","dy","peek","item","createItem","handled","EatFoodGoalType","food","bruiser","club","pickRandom","floor","random","randomInt","randomBool","randomWeightedBool","weight","wanderer","grass","ch","color","sand","cliff","snake","bear","Door","isOpen","chOpen","chClosed","openDoor","shadowcaster","closeDoor","Blocker","Shadowcaster","onTryCloseDoor","onTryOpenDoor","onProjectileHit","stopProjectile","deflectProjectile","isAttached","onCompressed","removeOnCompression","Loot","take","newOwner","isInventoried","isOwnedBy","owner","inventory","removeLoot","addLoot","IsInventoried","Inventory","hasLoot","onEquipped","onTryPickUp","onTryTake","getEntityArrayRef","onQueryOwnership","getStackable","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","addOther","ownerId","contentIds","dropLoot","dropper","onTryOpen","accessible","accessor","isOpenable","getEntityRef","idProp","setEntityRef","String","idArrayProp","newIds","targetEntity","onTryDrop","onThrown","increment","amount","clone","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_ASH","STACKABLE_GLASS_SHARD","Throwable","throw","trajectory","initiator","stopped","deflected","hit","projectile","getStat","STAT_STRENGTH","damage","die","modifier","attack","Attack","attacker","defender","weaponName","moniker","damageType","ignoreDodge","onTryThrow","range","getSkillValue","SKILL_THROWING","simpleLineRenderer","onResult","cursor","bresenhamLine","onCancel","DMG_TYPE_BLUDGEONING","SKILL_SPEED","SKILL_HEALTH","SKILL_ARMOR","SKILL_DODGE","SKILL_BRAWLING","SKILL_AXE","SKILL_BLADE","SKILL_CUDGEL","lookup","ArmorSkill","HealthSkill","SpeedSkill","ThrowingSkill","DodgeSkill","BrawlingSkill","AxeSkill","BladeSkill","CudgelSkill","getSkill","getSkillName","compute","getSkillsByStat","stat","baseStat","getSkillEquippedMod","modifiers","skill","getAllSkillEquippedMods","reduce","mods","getAllSkillEquippedModSums","mod","getArmorBlockPercent","getArmorBlockPercentDisplay","prcnt","Skill","getModifiers","getModifierSum","cur","STAT_FINESSE","STAT_ATHLETICISM","STAT_TRICKERY","STAT_FAITH","abbreviation","getStatName","getStatAbbreviation","stats","rollStat","statCheck","getSpeedPercent","getSpeedPercentDisplay","getDodgePercent","unscaled","DMG_TYPE_PIERCING","DMG_TYPE_SLASHING","DMG_TYPE_NECROTIC","verb","getDmgTypeName","getDmgTypeVerb","x0","y0","x1","y1","sx","sy","e2","bresenhamLineExclusive","line","truthy","isValid","opts","screen","FragileGlass","shatter","CONSOLE_EVENT_SHATTER","onCollideGround","onCollide","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","CONSOLE_EVENT_MISS","CONSOLE_EVENT_BLOCK","CONSOLE_EVENT_TRAP_SHARP","CONSOLE_EVENT_LEVEL","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","mapping","message","level","shouldAppear","isVisible","dodgePrcnt","dmgVerb","dmg","blocked","blockText","trap","getMessage","Brain","goals","onTakeAction","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","goalIds","goalId","isSelf","Boolean","isSiblingGoal","Body","onDeath","corpse","corpseSpawnable","Goal","GoalEvaluator","originalIntentId","parentId","targetId","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","onLog","Position","equals","Glyph","col","primaryColorOverride","secondaryColorOverride","Motor","onTryMove","targetX","targetY","targetTileEntities","nonHostile","factionMember","IsPlayer","Wandering","onBoredom","directionDelta","directions","shortName","fullName","adjacent","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_Z","DIR_E","DIR_SW","DIR_S","DIR_SE","allDirections","getAdjacentDeltas","directionFromDelta","dir","IsVisible","Explorable","Explored","Health","onSpawned","applyDamage","onAttacked","dodge","isDodged","isKilled","armor","armorPrcnt","enemy","onHeal","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_BEAR","FACTION_SERPENT","Faction","villager","serpent","Eyes","canSee","onTryDetectHostiles","Particle","age","frame","percent","fg2s","bgs","startX","startY","ParticleEmitter","createParticle","particle","particleData","count","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","TBL_LOOT_BRUISER","LootTableBruiser","getTable","tableKey","pickLoot","tableKeys","WeightedTable","pick","spawnable","rows","currentW","chance","maxWeight","table","goblins","forest","IsEquipped","slotKey","onDropped","slot","unequip","Equipment","onTryEquip","slots","slotTypes","includes","slotType","header","icon","leadText","onRenderRow","isSelected","onSelect","onTryUnequip","isEquipped","EQ_SLOT_BODY","EQ_SLOT_HEAD","EQ_SLOT_FACE","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EQ_SLOT_HAND","EQ_SLOT_TAIL","EquipmentSlot","equipment","doMeleeAttack","defaultWpnType","getWeaponType","doOffhandAttack","offhandAttack","onTryMelee","selfPos","isPrimary","onQuerySkillMod","contentId","WPN_TYPE_WAR_HAMMER","WPN_TYPE_SLEDGE_HAMMER","WPN_TYPE_CLUB","WPN_TYPE_MACE","WPN_TYPE_HEAVY_AXE","WPN_TYPE_BATTLE_AXE","WPN_TYPE_GREATSWORD","WPN_TYPE_SHORTSWORD","WPN_TYPE_DAGGER","WPN_TYPE_STAFF","WPN_TYPE_HALBERD","WPN_TYPE_JAVELIN","WPN_TYPE_UNARMED","WPN_TYPE_FANGS","WPN_TYPE_CLAW","WpnTypeUnarmed","WpnTypeFangs","WpnTypeClaw","family","WPN_FAMILY_HAMMER","WPN_FAMILY_AXE","WpnTypeBattleAxe","WpnTypeGreatsword","WpnTypeShortsword","WpnTypeMace","WPN_FAMILY_BLADE","WPN_FAMILY_POLEARM","getWeaponTypeName","getWeaponTypeFamily","getWeaponTypeDmgType","WPN_FAMILY_ARCHERY","WPN_FAMILY_UNARMED","WPN_FAMILY_CUDGEL","getWeaponFamilyName","WeaponType","_createAttack","weapon","roll","attacks","secondAttack","weaponDamageText","user","getShortDescription","fam","getAttacks","_getNeighborAttacks","attackerPos","defenderPos","deltaX","deltaY","flat","hostile","_tryAttackDefender","addStatus","STATUS_STUNNED","STATUS_BLEEDING","STATUS_REGENERATION","StatusBleeding","StatusStunned","StatusRegeneration","getStatus","Status","STATUS_TYPE_CONDITION","isDot","getDmgPerTurn","potency","getPipCount","ticks","remainingLifetime","health","STATUS_TYPE_BOON","IsIncapacitated","isCompleted","brawling","Stats","_sumMods","getStatModifiers","getStatModifierSum","capitalize","modSum","strength","finesse","athleticism","trickery","faith","baseStrength","baseFinesse","baseAthleticism","baseTrickery","baseFaith","n","clamp","toUpperCase","substring","template","group1","group2","obj","replaced","first","Race","getRaceData","getModifier","onQueryStatMod","RACE_HUMAN","RACE_GOBLIN","RACE_SNAKE","RACE_BEAR","RaceData","Weapon","weaponType","onTryUseMelee","onTryUseMeleeOffhand","Ground","SharpTrap","challenge","EquippedSkillMod","onQuerySkillModEquipped","Combustible","fire","fuel","getTemperature","setTemperature","getDieOutChance","getSparkChance","getCatchChance","intensity","onSpark","isOnFire","Fire","flashPoint","onTryIgnite","spawnableRemains","burnRate","extinguish","onTryExtinguish","ThermalCapacity","Abilities","onQueryAbilities","known","AbilityStatus","getAbility","isCoolingDown","cooldownDuration","currentCooldownDuration","currentDuration","currentChannelDuration","channelDuration","ability","isToggleable","isToggledOn","startCooldown","isComplete","skillMods","statMods","ABILITY_SPRINT","ABILITY_RAGE","ABILITY_CRIMSON_WELL","ABILITY_BLINK","ABILITY_JUMP","ABILITY_PRAYER_PROTECTION","SprintAbility","RageAbility","CrimsonWellAbility","BlinkAbility","JumpAbility","PrayerOfProtectionAbility","getAbilityStatus","abilityStatus","getStance","isStance","getChanneling","isChanneled","isChanneling","SimpleChannelAbility","ABILITY_TYPE_PRAYER","getCooldownDuration","getChannelDuration","getArmorModifier","getDescription","getSkillMods","onChannelComplete","createEmitter","ABILITY_TYPE_STANCE","ABILITY_TYPE_SHOUT","ABILITY_TYPE_STUNT","ABILITY_TYPE_SPELL","getAbilityTypeName","Ability","getDuration","execute","getStatMods","initiate","onConfirm","toggleOn","toggleOff","channel","cancelChannel","isCooldownComplete","getDisplayText","cd","remainingCooldownDuration","toFixed","isEnabled","simpleCursorRenderer","visible","prevPos","nextPos","SimpleDurationAbility","performLifeteal","enemyPos","SimpleToggledAbility","computeStrengthMod","computeSpeedMod","getJumpDistance","distance","word","BitmaskGlyph","BITMASK_WALL","updateGlyph","getMaskGlyph","mask","Level","levelUp","skillPoints","addXP","xp","nextLevelReq","onEnemyKilled","levelFactor","Skills","Compressable","compressedCh","massRequirement","isCompressed","Mass","HealthShard","SHARD_VAL_LARGE","SHARD_VAL_MEDIUM","SHARD_VAL_SMALL","HealthShardDropper","lvlDiff","emptyCells","shardCount","shardPos","shardValue","healthShard","HealthShardConsumer","modeLookup","background","explored","worldX","worldY","temp","rgb","sqrt","temperatureGradient","renderTile","screenToWorld","isInView","getEntitiesAt","renderableZ","renderable","mode","beingsQuery","renderNearbyCreatures","beings","glyphOffset","relation","getEntityRelation","getAttitudeGlyph","statusOffset","dotLevel","statusType","barWidth","healthWidth","middle","primaryHP","secondaryHp","showTicks","turn","subTurn","padEnd","chunkCoordinate","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","_inputStack","getNextCommand","getCommandForInputEvent","pushDomain","domain","_domainStack","popDomain","lastIndexOf","getDomainCommands","_commands","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_O","INPUT_CMD_CHARACTER","KEY_P","INPUT_CMD_ABILITIES","KEY_T","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_R","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadAreaScreen","EquipmentScreen","ListSelectionScreen","CharacterScreen","AbilityScreen","ConfirmationScreen","WaitScreen","ChannelScreen","setScreen","screenType","onLeave","onEnter","screenCtx","replaceScreen","popScreen","onUpdate","Screen","computeFOV","setFocus","onDirectionInput","playerPosition","targetPosition","hostileEntities","areEntitiesHostile","melee","doorEntity","move","onPickUpCommand","lootable","onInteract","items","interactable","onInteractDirection","handleInput","saveGame","loadGame","drawTags","drawFaction","drawTemperature","wait","isStarted","newGame","inputCommand","UI_GLYPH_BORDER_TERM_L","UI_BORDER_FG1","UI_BORDER_FG2","UI_GLYPH_BORDER_TERM_R","UI_GLYPH_BORDER_T","UI_GLYPH_BORDER_TL","UI_GLYPH_BORDER_TR","UI_GLYPH_BORDER_L","UI_GLYPH_BORDER_R","UI_GLYPH_BORDER_BL","UI_GLYPH_BORDER_B","UI_GLYPH_BORDER_BR","drawUIBox","drawUIWindow","title","titleText","titleWidth","titleOffset","iconWidth","gameOver","SelectableList","setItems","selectItem","selected","up","down","ypos","textLen","_items","_idx","refreshList","isBack","interaction","top","listPadding","xpos","weaponDmg","hasMod","NOOP","getOpts","worldToScreen","faction","getDisplay","tmpC","tmpF","prevousArea","nextArea","renderLoadingText","areaId","entry","loadGameData","onAreaLoaded","prevText","nextText","selectSlot","onGetRowName","defaultRowRender","cancel","yOffset","skills","back","renderSkills","posY","selector","nextLevelReqXp","healthMax","skillPointColor","modDir","PADDING_RIGHT","PADDING_HEIGHT","stance","xOffset","description","textW","confirmText","cancelText","onSelection","toggleSelection","option","confirm","bottom","textWidth","curTime","renderChanneling","center","maxLength","fract","getSetupData","entityId","serialized","setup","owned","teardown","actionQueue","turns","idGenerator","prefabs","cloneEntity","stringify","JSON","parse","initiateTeardown","initiateSetup","prompt","filename","deleteFile","localStorage","setItem","file","startsWith","removeItem","saveChunkPositionData","loadChunkPositionData","getItem","saveChunkEntityData","loadChunkEntityData","saveAreaPositionData","positionData","saveAreaTemperatureData","temperatureData","saveAreaEntityData","loadAreaEntityData","loadAreaPositionData","loadAreaTemperatureData","loadSavefileData","prevTurn","curTurn","chunkCountX","chunkWidth","chunkCountY","chunkHeight","getRandomEmptyPosition","area","getPosition","includeGround","isAdjacent","x2","y2","getEntitiesInRect","getEntitiesInRange","diameter","getNeighborEntities","isOutOfbounds","onPlayerOutOfBounds","enterArea","northArea","southArea","eastArea","westArea","FastMap","_data","getValues","_idHash","fov","FOV","isSquareVisible","setVisible","explorable","bitmaskGlyph","refreshMaskAndNeighbors","visibility","Util","util","Color","Text","FRAC","RNG","_seed","_s0","_s1","_s2","_c","getSeed","setSeed","seed","getUniform","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","getPercentage","shuffle","getWeightedValue","total","part","getState","setState","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getOptions","getContainer","computeSize","availWidth","availHeight","computeFontSize","computeTileSize","eventToPosition","touches","clientX","clientY","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","cch","_draw","clearBefore","Canvas","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","_normalizedEventToPosition","nodeSize","beginPath","moveTo","lineTo","fill","_updateSize","charWidth","xprop","yprop","Backend","textAlign","rect","getBoundingClientRect","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","multiply_","interpolate","color2","factor","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","randomize","hue2rgb","toRGB","clamped","toHex","toString","padStart","termcolor","DST_COLORS","_offset","_cursor","_lastColor","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","getTime","getEventTime","heap","timestamp","lessThan","loc","updateUp","updateDown","last","parentNode","leftChildNode","rightChildNode","existNode","swap","minNode","numbers","validnumbers","minimal","leftChild","rightChild","debugPrint","Simple","Speed","Action","Scheduler","repeat","_current","_repeat","getTimeOf","getSpeed","_defaultDuration","setDuration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","v2","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","old","index2","edge2","visibleLength","P","P1","P2","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_fillMap","Dungeon","roomWidth","roomHeight","roomDugPercentage","timeLimit","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","getCenter","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","getRooms","getCorridors","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","addDoors","isWallCallback","debug","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","nx","ny","ok","firstCornerBad","secondCornerBad","createPriorityWalls","priorityWallCallback","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","local","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","deltas","addToList","removeFromList","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","_drawCorridor","startPosition","endPosition","tempDist","xDir","yDir","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","Simplex","F2","G2","Noise","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","t0","grad","t2","Dijkstra","AStar","Path","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","setFOV","_fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","_updateFOV","fovKey","formFactor","key1","vis","emitterData","emitter","particleEmitter","isExpired","targetCount","setRelation","getFactionById","isHostile","factionA","factionB","_relationKey","idA","idB","relations","getRelation","entityA","entityB","memberA","memberB","onWindowResize","topLeftWorldX","topLeftWorldY","clampX","innerWidth","renderedTileWidth","clampY","innerHeight","renderedTileHeight","padding","_focusX","_focusY","setZoom","setPadding","getScreenRect","fpsElement","getElementsByClassName","frames","frameCount","innerText","getArea","WorldData","getStartingArea","exploredAreaIds","Area","getAreaByCoord","getExits","exits","connectionsNorth","connectionsWest","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","CanyonGenerator","DesertGenerator","AreaGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","TILE_THEME_CANYON","TILE_THEME_DESERT","ForestTheme","CastleTheme","CabinTheme","CanyonTheme","DesertTheme","getThemePopulator","TileThemePopulator","populateTile","trySpawn","ground","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileScheme","TileContainer","MapGenerator","digPercentage","createRoom","defaultType","getTile","setTileTheme","getTileType","addRoom","RoomData","combineOther","cloneTo","setTheme","relativeExits","endWidth","endHeight","borders","interior","nanoid","addRelativeExit","containsPoint","intersects","c1","c2","c3","c4","bytes","crypto","getRandomValues","customRandom","alphabet","getRandom","LN2","step","customAlphabet","byte","urlAlphabet","exitOffset","castle","DenseCastleScheme","curId","createNodeId","splitNodeVertical","cut","leftId","rightId","isLeaf","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","minCount","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","populateRoom","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","SquareScheme","messages","msgs","consoleHeight","removeEntity","Track","intro","isPlaying","host","pathname","track","tracks","currentTrack","rv","sharpTrapQuery","turnDelta","trapEntity","combustible","sparkChance","dieChance","isOutOfFuel","grid","MemoryGrid","getAmbientTemperature","ambient","getAmbientCapacity","capacity","getCapacity","hasCap","hasFire","cap","thermalCapacity","sumArray","avgArray","f0","f1","lerp2","copyToPrevious","shards","shardEntity","shard","healthShardConsumer","healValue","compressables","compressableEntity","compressable","mass","getMaskNeighbors","refreshMask","sumMask","refreshAll","Chunk","localCoordinate","getChunkById","chunkPos","getChunk","chunkX","chunkY","isLoaded","saved","generateChunk","simplex","SimplexNoise","nzX","nzY","noise2D","G3","F4","G4","randomOrSeed","s0","s1","s2","mash","masher","alea","buildPermutationTable","perm","permMod12","aux","grad3","grad4","gi0","gi1","gi2","noise3D","zin","n3","k1","i2","j2","k2","z0","z1","z2","x3","y3","z3","kk","t3","gi3","noise4D","n4","l1","l2","i3","j3","k3","l3","w0","rankx","ranky","rankz","rankw","w1","w2","w3","x4","y4","z4","w4","ll","t4","gi4","_buildPermutationTable","define","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","getPrototypeOf","__proto__","ns","getOwnPropertyNames","definition","defineProperty","enumerable","globalThis","Function","prop","toStringTag"],"mappings":"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","file":"app.f8903e90825cb9e30e4e.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\r\nimport { Howler } from 'howler';\r\n\r\nloadImages().then(() => {\r\n    const { game } = require('./core/Game');\r\n\r\n    window.game = game;\r\n    window.ecs = game.ecs;\r\n\r\n    game.start();\r\n});\r\n\r\nHowler.volume(0);\r\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import Renderer from './rendering/RenderManager';\r\nimport InputController from './input/InputController';\r\nimport ActionSystem from '../systems/ActionSystem';\r\nimport RenderSystem from '../systems/RenderSystem';\r\nimport UISystem from '../systems/UISystem';\r\nimport MouseManager from './input/MouseManager';\r\nimport CommandManager from './input/CommandManager';\r\nimport ScreenManager from './screens/ScreenManager';\r\nimport PlayerManager from './PlayerManager';\r\nimport ECS from '../ecs';\r\nimport GameStateManager from './GameStateManager';\r\nimport ClockManager from './ClockManager';\r\nimport MapManager from './MapManager';\r\nimport FOVSystem from '../systems/FOVSystem';\r\nimport DeathSystem from '../systems/DeathSystem';\r\nimport ParticleSystem from '../systems/ParticleSystem';\r\nimport FactionManager from './FactionManager';\r\nimport CameraManager from './CameraManager';\r\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\r\nimport { WorldManager } from './WorldManager';\r\nimport ConsoleManager from './ConsoleManager';\r\nimport DestroySystem from '../systems/DestroySystem';\r\nimport MusicManager from './MusicManager';\r\nimport StatusSystem from '../systems/StatusSystem';\r\nimport LiquidSystem from '../systems/LiquidSystem';\r\nimport TrapSystem from '../systems/TrapSystem';\r\nimport FireSystem from '../systems/FireSystem';\r\nimport TemperatureSystem from '../systems/TemperatureSystem';\r\nimport AbilitySystem from '../systems/AbilitySystem';\r\nimport HealthShardSystem from '../systems/HealthShardSystem';\r\nimport CompressionSystem from '../systems/CompressionSystem';\r\nimport BitmaskManager from './BitmaskManager';\r\nimport ChunkManager from './ChunkManager';\r\n\r\nexport default class Game {\r\n    #lastUpdate;\r\n\r\n    get ecs() {\r\n        return this.engine.world;\r\n    }\r\n\r\n    constructor() {\r\n        this.engine = new ECS(this);\r\n        this.music = new MusicManager(this);\r\n        this.mouse = new MouseManager(this);\r\n        this.clock = new ClockManager(this);\r\n        this.renderer = new Renderer(this);\r\n        this.state = new GameStateManager(this);\r\n        this.world = new WorldManager(this);\r\n        this.chunks = new ChunkManager(this);\r\n        this.map = new MapManager(this);\r\n        this.camera = new CameraManager(this);\r\n        this.factions = new FactionManager(this);\r\n        this.player = new PlayerManager(this);\r\n        this.commands = new CommandManager(this);\r\n        this.screens = new ScreenManager(this);\r\n        this.input = new InputController(this);\r\n        this.console = new ConsoleManager(this);\r\n        this.bitmasks = new BitmaskManager(this);\r\n\r\n        this.actionSystem = new ActionSystem(this);\r\n        this.deathSystem = new DeathSystem(this);\r\n        this.statusSystem = new StatusSystem(this);\r\n        this.FOVSystem = new FOVSystem(this);\r\n        this.renderSystem = new RenderSystem(this);\r\n        this.UISystem = new UISystem(this);\r\n        this.particles = new ParticleSystem(this);\r\n        this.fps = new FPSMonitoringSystem(this);\r\n        this.destroySystem = new DestroySystem(this);\r\n        this.liquidSystem = new LiquidSystem(this);\r\n        this.trapSystem = new TrapSystem(this);\r\n        this.fireSystem = new FireSystem(this);\r\n        this.temperature = new TemperatureSystem(this);\r\n        this.abilities = new AbilitySystem(this);\r\n        this.compression = new CompressionSystem(this);\r\n        this.healthShardSystem = new HealthShardSystem(this);\r\n    }\r\n\r\n    start() {\r\n        this.#lastUpdate = Date.now();\r\n        this.boundLoop = this.loop.bind(this);\r\n        requestAnimationFrame(this.loop.bind(this));\r\n    }\r\n\r\n    updateAdventureSystems(dt) {\r\n        for (let i = 0; i < 20; i++) {\r\n            this.clock.update(dt);\r\n\r\n            const playerTurn = this.actionSystem.update(dt);\r\n\r\n            this.compression.update(dt);\r\n            this.healthShardSystem.update(dt);\r\n            this.liquidSystem.update(dt);\r\n            this.trapSystem.update(dt);\r\n            this.fireSystem.update(dt);\r\n            this.temperature.update(dt);\r\n            this.statusSystem.update(dt);\r\n            this.abilities.update(dt);\r\n            this.deathSystem.update(dt);\r\n            this.destroySystem.update(dt);\r\n            this.chunks.update(dt);\r\n\r\n            if (playerTurn) {\r\n                this.updatePlayerSystems(dt);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePlayerSystems(dt) {\r\n        this.FOVSystem.update(dt);\r\n        this.renderSystem.update(dt);\r\n        this.particles.update(dt);\r\n        this.UISystem.update(dt);\r\n        this.map.update(dt);\r\n        this.console.render(dt);\r\n    }\r\n\r\n    loop(t) {\r\n        const now = Date.now();\r\n        const dt = now - this.#lastUpdate;\r\n\r\n        this.screens.update(dt);\r\n        this.fps.update(dt);\r\n        this.renderer.render();\r\n\r\n        this.#lastUpdate = now;\r\n\r\n        requestAnimationFrame(this.boundLoop);\r\n    }\r\n}\r\n\r\nexport const game = new Game();\r\n","import Manager from '../Manager';\r\nimport Display from './Display';\r\nimport spritesheets from './spritesheets';\r\n\r\nexport default class Renderer extends Manager {\r\n    tileWidth = 16;\r\n    tileHeight = 16;\r\n    #spritesheets = {};\r\n    #display = null;\r\n\r\n    get display() {\r\n        return this.#display;\r\n    }\r\n\r\n    get canvas() {\r\n        return this.display.canvas;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        spritesheets().forEach((spritesheet) => {\r\n            this.#spritesheets[spritesheet.name] = spritesheet;\r\n        });\r\n\r\n        this.#display = new Display({\r\n            width: 20,\r\n            height: 20,\r\n            tileWidth: this.tileWidth,\r\n            tileHeight: this.tileHeight,\r\n        });\r\n\r\n        document.body.appendChild(this.display.canvas);\r\n    }\r\n\r\n    resizeDisplay(width, height, zoom) {\r\n        this.display.setSize(width, height, zoom);\r\n    }\r\n\r\n    draw(x, y, char, fg1 = '#adb8bc', fg2 = '#333', bg) {\r\n        const sprite = this.#spritesheets.tiles.getSprite(char);\r\n\r\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\r\n    }\r\n\r\n    drawUI(x, y, char, fg1 = '#adb8bc', fg2 = '#333', bg) {\r\n        const sprite = this.#spritesheets.ui.getSprite(char);\r\n\r\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\r\n    }\r\n\r\n    computeTextWidth(text) {\r\n        return text.length * 0.5;\r\n    }\r\n\r\n    computeTextWidthTile(text) {\r\n        return Math.ceil(this.computeTextWidth(text));\r\n    }\r\n\r\n    drawTextWrapping(x, y, width, text, fg1, fg2, bg) {\r\n        if (this.computeTextWidthTile(text) < width) {\r\n            return this.drawText(x, y, text, fg1, fg2, bg);\r\n        }\r\n\r\n        let left;\r\n        let right;\r\n        let lastSpace = -1;\r\n\r\n        for (let i = 0; i < text.length; i++) {\r\n            const nextLeft = text.substr(0, i);\r\n\r\n            if (this.computeTextWidthTile(nextLeft) >= width) {\r\n                break;\r\n            }\r\n\r\n            if (text.charAt(i) === ' ') {\r\n                left = nextLeft;\r\n                right = text.substr(i, text.length - left.length).trimLeft();\r\n                lastSpace = i;\r\n            }\r\n        }\r\n\r\n        if (lastSpace >= 0) {\r\n            this.drawText(x, y, left, fg1, fg2, bg);\r\n            this.drawTextWrapping(x, y + 1, width, right, fg1, fg2, bg);\r\n        }\r\n    }\r\n\r\n    drawText(x, y, text, fg1 = '#adb8bc', fg2 = '#333', bg) {\r\n        for (let i = 0; i < text.length; i++) {\r\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\r\n\r\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\r\n        }\r\n    }\r\n\r\n    drawTextCenter(y, text, fg1 = '#adb8bc', fg2 = '#333', bg) {\r\n        const len = this.computeTextWidth(text);\r\n\r\n        this.drawText(\r\n            Math.ceil((this.game.camera.width - len) / 2),\r\n            y,\r\n            text,\r\n            fg1,\r\n            fg2,\r\n            bg\r\n        );\r\n    }\r\n\r\n    clear() {\r\n        this.display.clear();\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        this.display.clearArea(x, y, width, height);\r\n    }\r\n\r\n    pxToTile(xPx, yPx) {\r\n        const x = Math.trunc(xPx / this.tileWidth);\r\n        const y = Math.trunc(yPx / this.tileHeight);\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    render() {\r\n        this.display.render();\r\n    }\r\n}\r\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\r\n\r\nexport default class Display {\r\n    ctx;\r\n    canvas;\r\n    width;\r\n    height;\r\n    zoom = 1;\r\n    tileWidth;\r\n    tileHeight;\r\n    cells;\r\n    clearColor = '#1f1e1d';\r\n\r\n    constructor({ width, height, tileWidth, tileHeight }) {\r\n        this.tileWidth = tileWidth;\r\n        this.tileHeight = tileHeight;\r\n\r\n        this.cells = new Grid(width * 2, height, () => null);\r\n        this.cells.suppressOOBWarn = true;\r\n\r\n        this.canvas = document.createElement('canvas');\r\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\r\n        this.ctx.globalCompositeOperation = 'destination-over';\r\n\r\n        this.ctx.font = `${this.tileHeight}px monospace`;\r\n        this.ctx.textBaseline = 'top';\r\n\r\n        this.setSize(width, height);\r\n    }\r\n\r\n    setSize(width, height, zoom) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.zoom = zoom;\r\n\r\n        const widthPx = this.tileWidth * this.width;\r\n        const heightPx = this.tileHeight * this.height;\r\n\r\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\r\n        this.canvas.width = widthPx;\r\n        this.canvas.height = heightPx;\r\n\r\n        this.cells.clearAndResize(width * 2, height);\r\n    }\r\n\r\n    draw(x, y, sprite, fg1, fg2, bg) {\r\n        this.cells.set(x * 2, y, {\r\n            img: sprite.colorize(fg1, fg2),\r\n            width: sprite.width,\r\n            height: sprite.height,\r\n            bg,\r\n            x,\r\n            y,\r\n        });\r\n    }\r\n\r\n    clear() {\r\n        this.ctx.fillStyle = this.clearColor;\r\n        this.ctx.fillRect(\r\n            0,\r\n            0,\r\n            this.tileWidth * this.width,\r\n            this.tileHeight * this.height\r\n        );\r\n        this.cells.clear();\r\n    }\r\n\r\n    clearArea(x, y, width, height) {\r\n        this.ctx.fillStyle = this.clearColor;\r\n        this.ctx.fillRect(\r\n            x * this.tileWidth,\r\n            y * this.tileHeight,\r\n            this.tileWidth * width,\r\n            this.tileHeight * height\r\n        );\r\n\r\n        const offsetX = x * 2;\r\n\r\n        for (let i = 0; i < width; i++) {\r\n            for (let j = 0; j < height; j++) {\r\n                const cellX = offsetX + i * 2;\r\n                const cellY = y + j;\r\n\r\n                this.cells.set(cellX, cellY, undefined);\r\n                this.cells.set(cellX + 1, cellY, undefined);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.cells.data\r\n            .filter((c) => c)\r\n            .forEach((cell) => {\r\n                const pixelX = cell.x * this.tileWidth;\r\n                const pixelY = cell.y * this.tileHeight;\r\n\r\n                if (cell.bg) {\r\n                    this.ctx.fillStyle = cell.bg;\r\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\r\n                }\r\n\r\n                if (cell.img) {\r\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\r\n                }\r\n            });\r\n    }\r\n}\r\n","export default class Grid {\r\n    _width = 0;\r\n    _height = 0;\r\n    data = [];\r\n    suppressOOBWarn = false;\r\n    defaultValueGenerator = () => null;\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get size() {\r\n        return this._width * this._height;\r\n    }\r\n\r\n    constructor(width, height, defaultValueGenerator = () => null) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this.defaultValueGenerator = defaultValueGenerator;\r\n\r\n        this.clear();\r\n    }\r\n\r\n    idx(x, y) {\r\n        return y * this._width + x;\r\n    }\r\n\r\n    coord(idx) {\r\n        return {\r\n            x: Math.trunc(idx % this._width),\r\n            y: Math.trunc(idx / this._width),\r\n        };\r\n    }\r\n\r\n    clear() {\r\n        this.data = [];\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            const { x, y } = this.coord(i);\r\n\r\n            this.data[i] = this.defaultValueGenerator(x, y, this.idx(x, y));\r\n        }\r\n    }\r\n\r\n    setAll(value) {\r\n        this.data = [];\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            this.data[i] = value;\r\n        }\r\n    }\r\n\r\n    set(x, y, value) {\r\n        if (this.isOutOfBounds(x, y)) {\r\n            if (!this.suppressOOBWarn) {\r\n                console.warn(\r\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\r\n                );\r\n            }\r\n            return;\r\n        }\r\n\r\n        const idx = this.idx(x, y);\r\n\r\n        this.data[idx] = value;\r\n    }\r\n\r\n    serialize() {\r\n        const entries = [...this.data];\r\n\r\n        return {\r\n            width: this.width,\r\n            height: this.height,\r\n            entries,\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        this._width = data.width;\r\n        this._height = data.height;\r\n        this.data = data.entries;\r\n    }\r\n\r\n    get(x, y) {\r\n        if (this.isOutOfBounds(x, y)) {\r\n            return this.defaultValueGenerator();\r\n        }\r\n\r\n        return this.data[this.idx(x, y)];\r\n    }\r\n\r\n    isOutOfBounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\r\n    }\r\n\r\n    getNeighbors(x, y) {\r\n        return [\r\n            this.get(x - 1, y - 1), // TOP LEFT\r\n            this.get(x, y - 1), // TOP\r\n            this.get(x + 1, y - 1), // TOP RIGHT\r\n            this.get(x - 1, y), // LEFT\r\n            this.get(x + 1, y), // RIGHT\r\n            this.get(x - 1, y + 1), // BOTTOM LEFT\r\n            this.get(x, y + 1), // BOTTOM\r\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\r\n        ];\r\n    }\r\n\r\n    clearAndResize(width, height) {\r\n        this._width = width;\r\n        this._height = height;\r\n        this.clear();\r\n    }\r\n}\r\n","import SpriteSheet from './SpriteSheet';\r\n\r\nexport default () => {\r\n    const tileImage = document.getElementById('spritesheet-tiles');\r\n    const fontImage = document.getElementById('spritesheet-font');\r\n    const uiImage = document.getElementById('spritesheet-ui');\r\n\r\n    return [\r\n        new SpriteSheet('tiles', tileImage),\r\n        new SpriteSheet('font', fontImage),\r\n        new SpriteSheet('ui', uiImage),\r\n    ];\r\n};\r\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\r\nimport { isBlack, isWhite } from '../../utils/ColorUtil';\r\n\r\nexport default class Sprite {\r\n    #ctx = null;\r\n    #glyph = null;\r\n    #sheet = null;\r\n    #x = null;\r\n    #y = null;\r\n    _cache = {};\r\n\r\n    get glyph() {\r\n        return this.#glyph;\r\n    }\r\n\r\n    get x() {\r\n        return this.#x;\r\n    }\r\n\r\n    get y() {\r\n        return this.#y;\r\n    }\r\n\r\n    get sheet() {\r\n        return this.#sheet;\r\n    }\r\n\r\n    get image() {\r\n        return this.sheet.image;\r\n    }\r\n\r\n    get sourceX() {\r\n        return this.sheet.spriteWidth * this.x;\r\n    }\r\n\r\n    get sourceY() {\r\n        return this.sheet.spriteHeight * this.y;\r\n    }\r\n\r\n    get width() {\r\n        return this.sheet.spriteWidth;\r\n    }\r\n\r\n    get height() {\r\n        return this.sheet.spriteHeight;\r\n    }\r\n\r\n    constructor(glyph, sheet, x, y) {\r\n        this.#glyph = glyph;\r\n        this.#sheet = sheet;\r\n        this.#x = x;\r\n        this.#y = y;\r\n\r\n        const canvas = document.createElement('canvas');\r\n\r\n        canvas.width = this.width;\r\n        canvas.height = this.height;\r\n\r\n        this.#ctx = canvas.getContext('2d');\r\n\r\n        this.#ctx.drawImage(\r\n            this.sheet.image,\r\n            this.sourceX,\r\n            this.sourceY,\r\n            this.width,\r\n            this.height,\r\n            0,\r\n            0,\r\n            this.width,\r\n            this.height\r\n        );\r\n    }\r\n\r\n    colorize(primaryCss, secondaryCss) {\r\n        const primary = parseColor(primaryCss);\r\n        const secondary = parseColor(secondaryCss);\r\n\r\n        const key = `${primary.key}-${secondary.key}`;\r\n\r\n        if (this._cache.hasOwnProperty(key)) {\r\n            return this._cache[key];\r\n        }\r\n\r\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\r\n\r\n        for (let i = 0; i < pixels.data.length; i += 4) {\r\n            const r = pixels.data[i + 0];\r\n            const g = pixels.data[i + 1];\r\n            const b = pixels.data[i + 2];\r\n            const a = pixels.data[i + 3];\r\n\r\n            if (isBlack(r, g, b)) {\r\n                pixels.data[i] = primary[0];\r\n                pixels.data[i + 1] = primary[1];\r\n                pixels.data[i + 2] = primary[2];\r\n                pixels.data[i + 3] = a;\r\n            } else if (isWhite(r, g, b)) {\r\n                pixels.data[i] = secondary[0];\r\n                pixels.data[i + 1] = secondary[1];\r\n                pixels.data[i + 2] = secondary[2];\r\n                pixels.data[i + 3] = a;\r\n            }\r\n        }\r\n\r\n        const cvs = document.createElement('canvas');\r\n\r\n        cvs.width = this.width;\r\n        cvs.height = this.height;\r\n\r\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\r\n\r\n        this._cache[key] = cvs;\r\n\r\n        return cvs;\r\n    }\r\n}\r\n","import colorParse from 'color-parse';\r\n\r\nconst cache = {};\r\n\r\nexport const parseColor = (colorStr) => {\r\n    if (!cache.hasOwnProperty(colorStr)) {\r\n        const parsed = colorParse(colorStr).values;\r\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\r\n\r\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\r\n\r\n        cache[colorStr] = data;\r\n    }\r\n\r\n    return cache[colorStr];\r\n};\r\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","export const HSLToRGB = (h, s, l) => {\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    let c = (1 - Math.abs(2 * l - 1)) * s;\r\n    let x = c * (1 - Math.abs(((h / 60) % 2) - 1));\r\n    let m = l - c / 2;\r\n    let r = 0;\r\n    let g = 0;\r\n    let b = 0;\r\n\r\n    if (0 <= h && h < 60) {\r\n        r = c;\r\n        g = x;\r\n        b = 0;\r\n    } else if (60 <= h && h < 120) {\r\n        r = x;\r\n        g = c;\r\n        b = 0;\r\n    } else if (120 <= h && h < 180) {\r\n        r = 0;\r\n        g = c;\r\n        b = x;\r\n    } else if (180 <= h && h < 240) {\r\n        r = 0;\r\n        g = x;\r\n        b = c;\r\n    } else if (240 <= h && h < 300) {\r\n        r = x;\r\n        g = 0;\r\n        b = c;\r\n    } else if (300 <= h && h < 360) {\r\n        r = c;\r\n        g = 0;\r\n        b = x;\r\n    }\r\n\r\n    return [\r\n        Math.round((r + m) * 255),\r\n        Math.round((g + m) * 255),\r\n        Math.round((b + m) * 255),\r\n    ];\r\n};\r\n\r\nexport const lerpHSL = (a, b, t) => {\r\n    const deg = Math.trunc(lerp(a[0], b[0], t));\r\n    const sat = Math.trunc(lerp(a[1], b[1], t));\r\n    const light = Math.trunc(lerp(a[2], b[2], t));\r\n\r\n    return HSLToRGB(deg, sat, light);\r\n};\r\n\r\nexport const isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\r\nexport const isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { SCREEN_WAIT } from '../core/screens/ScreenType';\r\nimport { Actor, IsDead, IsDestroying } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class ActionSystem extends System {\r\n    #query = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.#query = game.ecs.createQuery({\r\n            all: [Actor],\r\n            none: [IsDestroying, IsDead],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        const entities = this.#query.get();\r\n        const sorted = Array.from(entities);\r\n\r\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\r\n\r\n        let entity = sorted[0];\r\n\r\n        if (entity && !entity.actor.hasEnergy) {\r\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\r\n\r\n            entities.forEach((e) => {\r\n                e.actor.addEnergy(this.game.clock.tickDelta);\r\n            });\r\n        }\r\n\r\n        while (entity && entity.actor.hasEnergy) {\r\n            if (entity.isIncapacitated) {\r\n                entity.fireEvent('energy-consumed', 100);\r\n                if (entity.isPlayer) {\r\n                    this.game.screens.pushScreen(SCREEN_WAIT, {\r\n                        time: 50,\r\n                    });\r\n                    return true;\r\n                }\r\n                continue;\r\n            }\r\n\r\n            if (entity.isPlayer) {\r\n                const action = this.game.player.getNextAction();\r\n\r\n                if (action) {\r\n                    action();\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            entity.fireEvent('take-action');\r\n            entity = sorted.shift();\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","export const SCREEN_MAIN_MENU = 0;\r\nexport const SCREEN_ADVENTURE = 1;\r\nexport const SCREEN_DEATH = 2;\r\nexport const SCREEN_INVENTORY = 3;\r\nexport const SCREEN_INTERACT_MODAL = 4;\r\nexport const SCREEN_CURSOR = 5;\r\nexport const SCREEN_LOAD_AREA = 6;\r\nexport const SCREEN_EQUIPMENT = 7;\r\nexport const SCREEN_LIST_SELECT = 8;\r\nexport const SCREEN_CHARACTER = 9;\r\nexport const SCREEN_ABILITIES = 10;\r\nexport const SCREEN_CONFIRM = 11;\r\nexport const SCREEN_WAIT = 12;\r\nexport const SCREEN_CHANNEL = 13;\r\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\r\n\r\nconst camelCache = {};\r\n\r\nexport const camelString = (value) => {\r\n    const result = camelCache[value];\r\n\r\n    if (!result) {\r\n        camelCache[value] = camelcaseSlow(value);\r\n\r\n        return camelCache[value];\r\n    }\r\n\r\n    return result;\r\n};\r\n","import { camelString } from './util/string-util';\r\n\r\nexport class ComponentRegistry {\r\n    _cbit = 0;\r\n    _map = {};\r\n\r\n    register(clazz) {\r\n        const key = camelString(clazz.name);\r\n\r\n        clazz.prototype._ckey = key;\r\n        clazz.prototype._cbit = BigInt(++this._cbit);\r\n\r\n        this._map[key] = clazz;\r\n    }\r\n\r\n    get(key) {\r\n        return this._map[key];\r\n    }\r\n}\r\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\r\n\r\nexport default class PrefabComponent {\r\n    constructor(clazz, properties = {}, overwrite = true) {\r\n        this.clazz = clazz;\r\n        this.properties = properties;\r\n        this.overwrite = overwrite;\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        if (!this.clazz.allowMultiple && entity.has(this.clazz)) {\r\n            if (!this.overwrite) {\r\n                return;\r\n            }\r\n\r\n            const comp = entity[this.clazz.prototype._ckey];\r\n\r\n            entity.remove(comp);\r\n        }\r\n\r\n        const props = merge(this.properties, initialProps);\r\n\r\n        entity.add(this.clazz, props);\r\n    }\r\n}\r\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, prefabProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, prefabProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component) => {\r\n            const clazz = component.clazz;\r\n            const ckey = clazz.prototype._ckey;\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (clazz.allowMultiple) {\r\n                if (clazz.keyProperty) {\r\n                    const key = component.properties[clazz.keyProperty];\r\n\r\n                    if (prefabProps[ckey] && prefabProps[ckey][key]) {\r\n                        initialCompProps = prefabProps[ckey][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[ckey]) {\r\n                        arrComps[ckey] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        prefabProps[ckey] &&\r\n                        prefabProps[ckey][arrComps[ckey]]\r\n                    ) {\r\n                        initialCompProps = prefabProps[ckey][arrComps[ckey]];\r\n                    }\r\n\r\n                    arrComps[ckey]++;\r\n                }\r\n            } else {\r\n                initialCompProps = prefabProps[ckey];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import PrefabComponent from './PrefabComponent';\r\nimport Prefab from './Prefab';\r\nimport { camelString } from './util/string-util';\r\n\r\nexport class PrefabRegistry {\r\n    _prefabs = {};\r\n    _engine = null;\r\n\r\n    constructor(engine) {\r\n        this._engine = engine;\r\n    }\r\n\r\n    deserialize(data) {\r\n        const registered = this.get(data.name);\r\n\r\n        if (registered) {\r\n            return registered;\r\n        }\r\n\r\n        const prefab = new Prefab(data.name);\r\n\r\n        let inherit;\r\n\r\n        if (Array.isArray(data.inherit)) {\r\n            inherit = data.inherit;\r\n        } else if (typeof data.inherit === 'string') {\r\n            inherit = [data.inherit];\r\n        } else {\r\n            inherit = [];\r\n        }\r\n\r\n        prefab.inherit = inherit.map((parent) => {\r\n            const ref = this.get(parent);\r\n\r\n            if (!ref) {\r\n                console.warn(\r\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\r\n                );\r\n                return parent;\r\n            }\r\n\r\n            return ref;\r\n        });\r\n\r\n        const comps = data.components || [];\r\n\r\n        comps.forEach((componentData) => {\r\n            if (typeof componentData === 'string') {\r\n                const ckey = camelString(componentData);\r\n                const clazz = this._engine._components.get(ckey);\r\n\r\n                if (clazz) {\r\n                    prefab.addComponent(new PrefabComponent(clazz));\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (typeof componentData === 'object') {\r\n                const ckey = camelString(componentData.type);\r\n                const clazz = this._engine._components.get(ckey);\r\n\r\n                if (clazz) {\r\n                    prefab.addComponent(\r\n                        new PrefabComponent(\r\n                            clazz,\r\n                            componentData.properties,\r\n                            componentData.overwrite\r\n                        )\r\n                    );\r\n\r\n                    return;\r\n                }\r\n            }\r\n\r\n            console.warn(\r\n                `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\r\n            );\r\n        });\r\n\r\n        return prefab;\r\n    }\r\n\r\n    register(data) {\r\n        const prefab = this.deserialize(data);\r\n\r\n        this._prefabs[prefab.name] = prefab;\r\n    }\r\n\r\n    get(name) {\r\n        return this._prefabs[name];\r\n    }\r\n\r\n    create(world, name, properties = {}) {\r\n        const prefab = this.get(name);\r\n\r\n        if (!prefab) {\r\n            console.warn(\r\n                `Could not instantiate prefab \"${name}\" since it is not registered`\r\n            );\r\n\r\n            return;\r\n        }\r\n\r\n        const entity = world.createEntity();\r\n\r\n        entity._qeligible = false;\r\n\r\n        prefab.applyToEntity(entity, properties);\r\n\r\n        entity._qeligible = true;\r\n        entity._candidacy();\r\n\r\n        return entity;\r\n    }\r\n}\r\n","export class Component {\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    get world() {\r\n        return this.entity.world;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    constructor(properties = {}) {\r\n        Object.assign(this, this.constructor.properties, properties);\r\n    }\r\n\r\n    destroy() {\r\n        this.entity.remove(this);\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.onDestroyed();\r\n        delete this.entity;\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        if (typeof this[evt.handlerName] === 'function') {\r\n            this[evt.handlerName](evt);\r\n        }\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.entity = entity;\r\n        this.onAttached(entity);\r\n    }\r\n\r\n    serialize() {\r\n        const ob = {};\r\n\r\n        for (const key in this.constructor.properties) {\r\n            ob[key] = this[key];\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    onAttached(entity) {}\r\n    onDestroyed() {}\r\n    onEvent(evt) {}\r\n}\r\n","import { camelString } from './util/string-util';\r\n\r\nexport class EntityEvent {\r\n    data = {};\r\n    prevented = false;\r\n    handled = false;\r\n\r\n    constructor(name, data = {}) {\r\n        this.name = name;\r\n        this.data = data;\r\n        this.handlerName = camelString(`on ${this.name}`);\r\n    }\r\n\r\n    is(name) {\r\n        return this.name === name;\r\n    }\r\n\r\n    handle() {\r\n        this.handled = true;\r\n        this.prevented = true;\r\n    }\r\n\r\n    prevent() {\r\n        this.prevented = true;\r\n    }\r\n}\r\n","const ONE = 1n;\r\n\r\nexport const subtractBit = (num, bit) => {\r\n    return num & ~(1n << bit);\r\n};\r\n\r\nexport const addBit = (num, bit) => {\r\n    return num | (ONE << bit);\r\n};\r\n\r\nexport const hasBit = (num, bit) => {\r\n    return (num >> bit) % 2n !== 0n;\r\n};\r\n\r\nexport const bitIntersection = (n1, n2) => {\r\n    return n1 & n2;\r\n};\r\n","import { Component } from './Component';\r\nimport { EntityEvent } from './EntityEvent';\r\nimport { addBit, hasBit, subtractBit } from './util/bit-util';\r\n\r\nconst attachComponent = (entity, component) => {\r\n    const key = component._ckey;\r\n\r\n    entity[key] = component;\r\n    entity.components[key] = component;\r\n};\r\n\r\nconst attachComponentKeyed = (entity, component) => {\r\n    const key = component._ckey;\r\n\r\n    if (!entity.components[key]) {\r\n        entity[key] = {};\r\n        entity.components[key] = {};\r\n    }\r\n\r\n    entity[key][component[component.keyProperty]] = component;\r\n    entity.components[key][component[component.keyProperty]] = component;\r\n};\r\n\r\nconst attachComponentArray = (entity, component) => {\r\n    const key = component._ckey;\r\n\r\n    if (!entity.components[key]) {\r\n        entity[key] = [];\r\n        entity.components[key] = [];\r\n    }\r\n\r\n    entity[key].push(component);\r\n    entity.components[key].push(component);\r\n};\r\n\r\nconst removeComponent = (entity, component) => {\r\n    const key = component._ckey;\r\n\r\n    delete entity[key];\r\n    delete entity.components[key];\r\n\r\n    entity._cbits = subtractBit(entity._cbits, component._cbit);\r\n    entity._candidacy();\r\n};\r\n\r\nconst removeComponentKeyed = (entity, component) => {\r\n    const key = component._ckey;\r\n    const keyProp = component[component.keyProperty];\r\n\r\n    delete entity[key][keyProp];\r\n    delete entity.components[key][keyProp];\r\n\r\n    if (Object.keys(entity[key]).length <= 0) {\r\n        delete entity[key];\r\n        delete entity.components[key];\r\n        entity._cbits = subtractBit(entity._cbits, component._cbit);\r\n        entity._candidacy();\r\n    }\r\n};\r\n\r\nconst removeComponentArray = (entity, component) => {\r\n    const key = component._ckey;\r\n    const idx = entity[key].indexOf(component);\r\n\r\n    entity[key].splice(idx, 1);\r\n    entity.components[key].splice(idx, 1);\r\n\r\n    if (entity[key].length <= 0) {\r\n        delete entity[key];\r\n        delete entity.components[key];\r\n        entity._cbits = subtractBit(entity._cbits, component._cbit);\r\n        entity._candidacy()\r\n    }\r\n};\r\n\r\nconst serializeComponent = (component) => {\r\n    return component.serialize();\r\n};\r\n\r\nconst serializeComponentArray = (arr) => {\r\n    return arr.map(serializeComponent);\r\n};\r\n\r\nconst serializeComponentKeyed = (ob) => {\r\n    const ser = {};\r\n\r\n    for (const k in ob) {\r\n        ser[k] = serializeComponent(ob[k]);\r\n    }\r\n\r\n    return ser;\r\n};\r\n\r\nexport class Entity {\r\n    _cbits = 0n;\r\n    _qeligible = true;\r\n\r\n    constructor(world, id) {\r\n        this.world = world;\r\n        this.id = id;\r\n        this.components = {};\r\n        this.isDestroyed = false;\r\n    }\r\n\r\n    _candidacy() {\r\n        if (this._qeligible) {\r\n            this.world._candidate(this);\r\n        }\r\n    }\r\n\r\n    add(clazz, properties) {\r\n        const component = new clazz(properties);\r\n\r\n        if (component.keyProperty) {\r\n            attachComponentKeyed(this, component);\r\n        } else if (component.allowMultiple) {\r\n            attachComponentArray(this, component);\r\n        } else {\r\n            attachComponent(this, component);\r\n        }\r\n\r\n        this._cbits = addBit(this._cbits, component._cbit);\r\n        component._onAttached(this);\r\n\r\n        this._candidacy();\r\n    }\r\n\r\n    has(clazz) {\r\n        return hasBit(this._cbits, clazz.prototype._cbit);\r\n    }\r\n\r\n    remove(component) {\r\n        if (component.keyProperty) {\r\n            removeComponentKeyed(this, component);\r\n        } else if (component.allowMultiple) {\r\n            removeComponentArray(this, component);\r\n        } else {\r\n            removeComponent(this, component);\r\n        }\r\n\r\n        component._onDestroyed();\r\n    }\r\n\r\n    destroy() {\r\n        for (const k in this.components) {\r\n            const v = this.components[k];\r\n\r\n            if (v instanceof Component) {\r\n                this._cbits = subtractBit(this._cbits, v._cbit);\r\n                v._onDestroyed();\r\n            } else if (v instanceof Array) {\r\n                for (const component of v) {\r\n                    this._cbits = subtractBit(this._cbits, component._cbit);\r\n                    component._onDestroyed();\r\n                }\r\n            } else {\r\n                for (const component of Object.values(v)) {\r\n                    this._cbits = subtractBit(this._cbits, component._cbit);\r\n                    component._onDestroyed();\r\n                }\r\n            }\r\n\r\n            delete this[k];\r\n            delete this.components[k];\r\n        }\r\n\r\n        this._candidacy();\r\n        this.world._destroyed(this.id);\r\n        this.components = {};\r\n        this.isDestroyed = true;\r\n    }\r\n\r\n    serialize() {\r\n        const components = {};\r\n\r\n        for (const k in this.components) {\r\n            const v = this.components[k];\r\n\r\n            if (v instanceof Component) {\r\n                components[k] = serializeComponent(v);\r\n            } else if (v instanceof Array) {\r\n                components[k] = serializeComponentArray(v);\r\n            } else {\r\n                components[k] = serializeComponentKeyed(v);\r\n            }\r\n        }\r\n\r\n        return {\r\n            id: this.id,\r\n            ...components,\r\n        };\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const key in this.components) {\r\n            const v = this.components[key];\r\n\r\n            if (v instanceof Component) {\r\n                v._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else if (v instanceof Array) {\r\n                for (let i = 0; i < v.length; i++) {\r\n                    v[i]._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            } else {\r\n                for (const component of Object.values(v)) {\r\n                    component._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import { addBit, bitIntersection } from './util/bit-util';\r\n\r\nexport class Query {\r\n    _cache = new Set();\r\n    _onAddListeners = [];\r\n    _onRemoveListeners = [];\r\n\r\n    constructor(world, filters) {\r\n        this._world = world;\r\n\r\n        const any = filters.any || [];\r\n        const all = filters.all || [];\r\n        const none = filters.none || [];\r\n\r\n        this._any = any.reduce((s, c) => {\r\n            return addBit(s, c.prototype._cbit);\r\n        }, 0n);\r\n\r\n        this._all = all.reduce((s, c) => {\r\n            return addBit(s, c.prototype._cbit);\r\n        }, 0n);\r\n\r\n        this._none = none.reduce((s, c) => {\r\n            return addBit(s, c.prototype._cbit);\r\n        }, 0n);\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    onEntityAdded(fn) {\r\n        this._onAddListeners.push(fn);\r\n    }\r\n\r\n    onEntityRemoved(fn) {\r\n        this._onRemoveListeners.push(fn);\r\n    }\r\n\r\n    has(entity) {\r\n        return this._cache.has(entity);\r\n    }\r\n\r\n    matches(entity) {\r\n        const bits = entity._cbits;\r\n\r\n        const any = this._any === 0n || bitIntersection(bits, this._any) > 0;\r\n        const all = bitIntersection(bits, this._all) === this._all;\r\n        const none = bitIntersection(bits, this._none) === 0n;\r\n\r\n        return any && all && none;\r\n    }\r\n\r\n    candidate(entity) {\r\n        const isTracking = this.has(entity);\r\n\r\n        if (!this.isTracking && !entity.isDestroyed && this.matches(entity)) {\r\n            this._cache.add(entity);\r\n            this._onAddListeners.forEach((cb) => cb(entity));\r\n\r\n            return true;\r\n        }\r\n\r\n        if (isTracking) {\r\n            this._cache.delete(entity);\r\n            this._onRemoveListeners.forEach((cb) => cb(entity));\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    refresh() {\r\n        this._cache.clear();\r\n        this._world._entities.forEach((entity) => {\r\n            this.candidate(entity);\r\n        });\r\n    }\r\n\r\n    get() {\r\n        return Array.from(this._cache);\r\n    }\r\n}\r\n","import { Entity } from './Entity';\r\nimport { Query } from './Query';\r\nimport { camelString } from './util/string-util';\r\n\r\nexport class World {\r\n    _id = 0;\r\n    _queries = [];\r\n    _entities = new Map();\r\n\r\n    constructor(engine) {\r\n        this.engine = engine;\r\n    }\r\n\r\n    createId() {\r\n        return ++this._id + Math.random().toString(36).substr(2, 9);\r\n    }\r\n\r\n    getEntity(id) {\r\n        return this._entities.get(id);\r\n    }\r\n\r\n    getEntities() {\r\n        return this._entities.values();\r\n    }\r\n\r\n    createEntity(id = this.createId()) {\r\n        const entity = new Entity(this, id);\r\n\r\n        this._entities.set(id, entity);\r\n\r\n        return entity;\r\n    }\r\n\r\n    destroyEntity(id) {\r\n        const entity = this.getEntity(id);\r\n\r\n        if (entity) {\r\n            entity.destroy();\r\n        }\r\n    }\r\n\r\n    destroyEntities() {\r\n        this._entities.forEach((entity) => {\r\n            entity.destroy();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this.destroyEntities();\r\n        this._id = 0;\r\n        this._queries = [];\r\n        this._entities = new Map();\r\n    }\r\n\r\n    createQuery(filters) {\r\n        const query = new Query(this, filters);\r\n\r\n        this._queries.push(query);\r\n\r\n        return query;\r\n    }\r\n\r\n    createPrefab(name, properties = {}) {\r\n        return this.engine._prefabs.create(this, name, properties);\r\n    }\r\n\r\n    serialize(entities) {\r\n        const json = [];\r\n        const list = entities || this._entities;\r\n\r\n        list.forEach((e) => {\r\n            json.push(e.serialize());\r\n        });\r\n\r\n        return {\r\n            entities: json,\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        for (const entityData of data.entities) {\r\n            this._createOrGetEntityById(entityData.id);\r\n        }\r\n\r\n        for (const entityData of data.entities) {\r\n            this._deserializeEntity(entityData);\r\n        }\r\n    }\r\n\r\n    _createOrGetEntityById(id) {\r\n        return this.getEntity(id) || this.createEntity(id);\r\n    }\r\n\r\n    _deserializeEntity(data) {\r\n        const { id, ...components } = data;\r\n        const entity = this._createOrGetEntityById(id);\r\n        entity._qeligible = false;\r\n\r\n        Object.entries(components).forEach(([key, value]) => {\r\n            const type = camelString(key);\r\n            const def = this.engine._components.get(type);\r\n\r\n            if (def.allowMultiple) {\r\n                Object.values(value).forEach((d) => {\r\n                    entity.add(def, d);\r\n                });\r\n            } else {\r\n                entity.add(def, value);\r\n            }\r\n        });\r\n\r\n        entity._qeligible = true;\r\n        entity._candidacy();\r\n    }\r\n\r\n    _candidate(entity) {\r\n        this._queries.forEach((q) => q.candidate(entity));\r\n    }\r\n\r\n    _destroyed(id) {\r\n        return this._entities.delete(id);\r\n    }\r\n}\r\n","import { ComponentRegistry } from './ComponentRegistry';\r\nimport { PrefabRegistry } from './PrefabRegistry';\r\nimport { World } from './World';\r\n\r\nexport class Engine {\r\n    _components = new ComponentRegistry();\r\n    _prefabs = new PrefabRegistry(this);\r\n\r\n    registerComponent(clazz) {\r\n        this._components.register(clazz);\r\n    }\r\n\r\n    registerPrefab(data) {\r\n        this._prefabs.register(data);\r\n    }\r\n\r\n    createWorld() {\r\n        return new World(this);\r\n    }\r\n\r\n    destroyWorld(world) {\r\n        world.destroy();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\r\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\r\nimport { IsDestroying } from './IsDestroying';\r\n\r\nexport class LiquidContainer extends Component {\r\n    static properties = {\r\n        content: LIQUID_BLOOD,\r\n        volume: 10,\r\n        maxVolume: 10,\r\n        overridePrimary: false,\r\n        overrideSecondary: false,\r\n        isPourable: false,\r\n        destroyOnEmpty: false,\r\n        isFreeFlowing: false,\r\n    };\r\n\r\n    get liquid() {\r\n        return !this.isEmpty && liquids[this.content];\r\n    }\r\n\r\n    get isEmpty() {\r\n        return isNaN(this.content) || this.volume <= 0;\r\n    }\r\n\r\n    get display() {\r\n        if (this.isEmpty) {\r\n            return `[empty] ${this.volume}/${this.maxVolume}`;\r\n        }\r\n\r\n        return `[${liquids[this.content].name}] ${this.volume}/${\r\n            this.maxVolume\r\n        }`;\r\n    }\r\n\r\n    get primaryColorOverride() {\r\n        if (this.overridePrimary && this.liquid) {\r\n            return this.liquid.primary;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    get secondaryColorOverride() {\r\n        if (this.overrideSecondary && this.liquid) {\r\n            return this.liquid.secondary;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    _checkDestroyOnEmpty() {\r\n        if (this.destroyOnEmpty && this.isEmpty && !this.entity.isDestroying) {\r\n            this.entity.add(IsDestroying);\r\n        }\r\n    }\r\n\r\n    pour(x, y, quantity) {\r\n        if (!this.isPourable) {\r\n            console.warn('The container connot be poured.');\r\n            return false;\r\n        }\r\n\r\n        if (this.volume <= 0) {\r\n            console.warn('The contianer is empty and cannot be poured.');\r\n            return false;\r\n        }\r\n\r\n        if (isNaN(quantity) || quantity >= this.volume) {\r\n            quantity = this.volume;\r\n        }\r\n\r\n        this.volume -= quantity;\r\n\r\n        spawn(SPWN_POOL_LIQUID, x, y, {\r\n            content: this.content,\r\n            volume: quantity,\r\n        });\r\n\r\n        this._checkDestroyOnEmpty();\r\n\r\n        return true;\r\n    }\r\n\r\n    combineFrom(other) {\r\n        if (this.content !== other.content) {\r\n            console.warn('Cannot combine different liquid types');\r\n\r\n            return false;\r\n        }\r\n\r\n        const sum = this.volume + other.volume;\r\n\r\n        if (sum > this.maxVolume) {\r\n            console.warn(\r\n                'Container is not large enought to combine both liquids'\r\n            );\r\n            this.volume = this.maxVolume;\r\n\r\n            other.volume -= sum - this.maxVolume;\r\n        } else {\r\n            this.volume += other.volume;\r\n\r\n            other.volume -= other.volume;\r\n        }\r\n\r\n        other._checkDestroyOnEmpty();\r\n\r\n        return true;\r\n    }\r\n\r\n    onTryPour(evt) {\r\n        if (this.isEmpty) {\r\n            console.warn('The container is empty.');\r\n            return;\r\n        }\r\n\r\n        const pos = evt.data.interactor.position.getPos();\r\n\r\n        this.pour(pos.x, pos.y, evt.data.volume);\r\n\r\n        evt.data.interactor.fireEvent('energy-consumed', 400);\r\n        evt.handle();\r\n    }\r\n\r\n    onTryDrink(evt) {\r\n        if (this.isEmpty) {\r\n            console.warn('The container is empty.');\r\n            return;\r\n        }\r\n\r\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\r\n        this.volume = 0;\r\n        this._checkDestroyOnEmpty();\r\n\r\n        evt.data.interactor.fireEvent('energy-consumed', 700);\r\n        evt.handle();\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        if (this.isEmpty) {\r\n            return;\r\n        }\r\n\r\n        evt.data.interactions.push({\r\n            name: 'Drink',\r\n            evt: 'try-drink',\r\n        });\r\n\r\n        if (this.isPourable) {\r\n            evt.data.interactions.push({\r\n                name: 'Pour',\r\n                evt: 'try-pour',\r\n            });\r\n        }\r\n    }\r\n}\r\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\r\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\r\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\r\nexport const SPWN_STONE = 'SPWN_STONE';\r\nexport const SPWN_TWIG = 'SPWN_TWIG';\r\nexport const SPWN_ASH = 'SPWN_ASH';\r\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\r\nexport const SPWN_GOBLIN_BRUISER = 'SPWN_GOBLIN_BRUISER';\r\nexport const SPWN_GOBLIN_STARGAZER = 'SPWN_GOBLIN_STARGAZER';\r\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\r\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\r\nexport const SPWN_CLIFF = 'SPWN_CLIFF';\r\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\r\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\r\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\r\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\r\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\r\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\r\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\r\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\r\nexport const SPWN_HEALTH_SHARD = 'SPWN_HEALTH_SHARD';\r\nexport const SPWN_AMULET = 'SPWN_AMULET';\r\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\r\nexport const SPWN_LEATHER_BOOTS = 'SPWN_LEATHER_BOOTS';\r\nexport const SPWN_SHORTSWORD = 'SPWN_SHORTSWORD';\r\nexport const SPWN_GREATSWORD = 'SPWN_GREATSWORD';\r\nexport const SPWN_BATTLE_AXE = 'SPWN_BATTLE_AXE';\r\nexport const SPWN_HATCHET = 'SPWN_HATCHET';\r\nexport const SPWN_MACE = 'SPWN_MACE';\r\nexport const SPWN_WOOD_CLUB = 'SPWN_WOOD_CLUB';\r\nexport const SPWN_GROUND_SAND = 'SPWN_GROUND_SAND';\r\nexport const SPWN_GROUND_GRASS = 'SPWN_GROUND_GRASS';\r\nexport const SPWN_GROUND_GRASS_DEAD = 'SPWN_GROUND_GRASS_DEAD';\r\nexport const SPWN_GROUND_STONE = 'SPWN_GROUND_STONE';\r\nexport const SPWN_HEAVY_PLATE_ARMOR = 'SPWN_HEAVY_PLATE_ARMOR';\r\nexport const SPWN_LEATHER_ARMOR = 'SPWN_LEATHER_ARMOR';\r\nexport const SPWN_CLOTH_HOOD = 'SPWN_CLOTH_HOOD';\r\nexport const SPWN_WIZARD_CAP = 'SPWN_WIZARD_CAP';\r\nexport const SPWN_HELM = 'SPWN_HELM';\r\nexport const SPWN_SNAKE = 'SPWN_SNAKE';\r\nexport const SPWN_BEAR = 'SPWN_BEAR';\r\nexport const SPWN_DESERT_REED = 'SPWN_DESERT_REED';\r\n","import { game } from '../core/Game';\r\n\r\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\r\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\r\nimport * as VialWater from './spawnables/SpawnableVialWater';\r\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\r\nimport * as GoblinBruiser from './spawnables/SpawnableGoblinBruiser';\r\nimport * as GoblinStargazer from './spawnables/SpawnableGoblinStargazer';\r\nimport * as PineTree from './spawnables/SpawnablePineTree';\r\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\r\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\r\nimport * as Grass from './spawnables/SpawnableGrass';\r\nimport * as DeadGrass from './spawnables/SpawnableDeadGrass';\r\nimport * as Sand from './spawnables/SpawnableSand';\r\nimport * as Cliff from './spawnables/SpawnableCliff';\r\nimport * as Snake from './spawnables/SpawnableSnake';\r\nimport * as Bear from './spawnables/SpawnableBear';\r\n\r\nconst simplePrefab = (prefabName) => (data) =>\r\n    game.ecs.createPrefab(prefabName, data);\r\n\r\nconst spawnables = {\r\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\r\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\r\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\r\n    SPWN_STONE: simplePrefab('Stone'),\r\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\r\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\r\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\r\n    SPWN_STONE_WALL: simplePrefab('Wall'),\r\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\r\n    SPWN_CORPSE: simplePrefab('Corpse'),\r\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\r\n    SPWN_HEALTH_SHARD: simplePrefab('HealthShard'),\r\n    SPWN_AMULET: simplePrefab('Amulet'),\r\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\r\n    SPWN_HEAVY_PLATE_ARMOR: simplePrefab('PlateArmor'),\r\n    SPWN_LEATHER_ARMOR: simplePrefab('LeatherArmor'),\r\n    SPWN_LEATHER_BOOTS: simplePrefab('Boots'),\r\n    SPWN_SHORTSWORD: simplePrefab('Shortsword'),\r\n    SPWN_GREATSWORD: simplePrefab('Greatsword'),\r\n    SPWN_BATTLE_AXE: simplePrefab('BattleAxe'),\r\n    SPWN_HATCHET: simplePrefab('Hatchet'),\r\n    SPWN_MACE: simplePrefab('Mace'),\r\n    SPWN_WOOD_CLUB: simplePrefab('WoodClub'),\r\n    SPWN_GROUND_GRASS: Grass.createSpawnable,\r\n    SPWN_GROUND_GRASS_DEAD: DeadGrass.createSpawnable,\r\n    SPWN_GROUND_SAND: Sand.createSpawnable,\r\n    SPWN_GROUND_STONE: simplePrefab('StoneGround'),\r\n    SPWN_CLOTH_HOOD: simplePrefab('ClothHood'),\r\n    SPWN_WIZARD_CAP: simplePrefab('WizardCap'),\r\n    SPWN_HELM: simplePrefab('Helm'),\r\n    SPWN_TWIG: simplePrefab('Twig'),\r\n    SPWN_ASH: simplePrefab('Ash'),\r\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\r\n    SPWN_GOBLIN_BRUISER: GoblinBruiser.createSpawnable,\r\n    SPWN_GOBLIN_STARGAZER: GoblinStargazer.createSpawnable,\r\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\r\n    SPWN_SNAKE: Snake.createSpawnable,\r\n    SPWN_BEAR: Bear.createSpawnable,\r\n    SPWN_PINE_TREE: PineTree.createSpawnable,\r\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\r\n    SPWN_CLIFF: Cliff.createSpawnable,\r\n    SPWN_DESERT_REED: simplePrefab('DesertReed'),\r\n};\r\n\r\nexport const spawnForChunk = (key, x, y, data = {}, chunk) => {\r\n    const entity = spawnables[key](data, x, y);\r\n\r\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\r\n        entity.position.chunkId = chunk.id;\r\n        chunk.setPosition(x, y, entity.id);\r\n    }\r\n\r\n    entity.fireEvent('spawned');\r\n\r\n    return entity;\r\n}\r\n\r\nexport const spawn = (key, x, y, data = {}) => {\r\n    const entity = spawnables[key](data, x, y);\r\n\r\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\r\n        entity.position.setPos(x, y);\r\n    }\r\n\r\n    entity.fireEvent('spawned');\r\n\r\n    return entity;\r\n};\r\n","import { game } from '../../core/Game';\r\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\r\n\r\nexport const createSpawnable = () => {\r\n    const vial = game.ecs.createPrefab('Vial');\r\n\r\n    vial.liquidContainer.content = LIQUID_HONEY;\r\n\r\n    return vial;\r\n};\r\n","import { game } from '../core/Game';\r\n\r\nexport const LIQUID_WATER = 0;\r\nexport const LIQUID_BLOOD = 1;\r\nexport const LIQUID_HONEY = 3;\r\nexport const LIQUID_OIL = 4;\r\n\r\nexport const liquids = {\r\n    [LIQUID_WATER]: {\r\n        name: 'water',\r\n        colorDesc: 'watery',\r\n        primary: '#66a3dc',\r\n        secondary: '#8bb9d5',\r\n        onDrink: (entity) => {\r\n            console.log('Mmm. earth juice. yummy');\r\n        },\r\n    },\r\n    [LIQUID_BLOOD]: {\r\n        name: 'blood',\r\n        colorDesc: 'bloody',\r\n        primary: '#ce2a36',\r\n        secondary: '#e0c1c2',\r\n        onDrink: (entity, volume) => {\r\n            console.log('blood. this would make a good syrup');\r\n            entity.fireEvent('heal', {\r\n                value: volume * 1,\r\n            });\r\n        },\r\n    },\r\n    [LIQUID_HONEY]: {\r\n        name: 'honey',\r\n        colorDesc: 'gooey golden',\r\n        primary: '#d6aa3a',\r\n        secondary: '#f4d260',\r\n        onDrink: (entity, volume) => {\r\n            const pos = entity.position.getPos();\r\n\r\n            game.particles.createEmitter(\r\n                pos.x,\r\n                pos.y - 1,\r\n                {\r\n                    rate: 2,\r\n                },\r\n                {\r\n                    direction: {\r\n                        x: 0,\r\n                        y: -1,\r\n                    },\r\n                    glyphs: ['.', '○'],\r\n                    fg1s: ['#d6aa3a'],\r\n                    speed: 0.02,\r\n                    lifetime: 500,\r\n                }\r\n            );\r\n\r\n            entity.fireEvent('heal', {\r\n                value: volume * 2,\r\n            });\r\n        },\r\n    },\r\n};\r\n\r\nexport const drinkLiquid = (entity, type, volume) => {\r\n    liquids[type].onDrink(entity, volume);\r\n};\r\n","import { game } from '../../core/Game';\r\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\r\n\r\nexport const createSpawnable = () => {\r\n    const vial = game.ecs.createPrefab('Vial');\r\n\r\n    vial.liquidContainer.content = LIQUID_BLOOD;\r\n\r\n    return vial;\r\n};\r\n","import { game } from '../../core/Game';\r\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\r\n\r\nexport const createSpawnable = () => {\r\n    const vial = game.ecs.createPrefab('Vial');\r\n\r\n    vial.liquidContainer.content = LIQUID_WATER;\r\n\r\n    return vial;\r\n};\r\n","import { BoredGoalType } from '../../ai/GoalTypes';\r\nimport { game } from '../../core/Game';\r\nimport { SPWN_SHORTSWORD } from '../Spawnables';\r\nimport { spawn } from '../Spawner';\r\n\r\nexport const createSpawnable = () => {\r\n    const goblin = game.ecs.createPrefab('Goblin');\r\n\r\n    goblin.brain.pushGoal(BoredGoalType.create());\r\n\r\n    const sword = spawn(SPWN_SHORTSWORD);\r\n\r\n    goblin.equipmentSlot.handRight.equip(sword);\r\n\r\n    return goblin;\r\n};\r\n","import { GoalType } from './GoalType';\r\nimport { SUCCESS } from '../GoalActionResult';\r\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\r\n\r\nexport class BoredGoalType extends GoalType {\r\n    static name = 'Bored';\r\n\r\n    static isFinished = (entity, goal) => {\r\n        return false;\r\n    };\r\n\r\n    static takeAction = (entity, goal) => {\r\n        // do i detect any hostiles?\r\n        const targets = new Set();\r\n\r\n        entity.fireEvent('try-detect-hostiles', {\r\n            targets,\r\n        });\r\n\r\n        if (targets.size > 0) {\r\n            const target = [...targets][0];\r\n\r\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\r\n                target: target.id,\r\n            });\r\n\r\n            entity.brain.pushGoal(killGoal);\r\n\r\n            entity.fireEvent('take-action');\r\n\r\n            return SUCCESS;\r\n        }\r\n\r\n        // is there anything i want to do since i'm bored?\r\n        const boredomGoal = entity.fireEvent('boredom');\r\n\r\n        if (boredomGoal.data.goal) {\r\n            entity.brain.pushGoal(boredomGoal.data.goal);\r\n            entity.fireEvent('take-action');\r\n\r\n            return SUCCESS;\r\n        }\r\n\r\n        // nothing to do, just idle\r\n        entity.fireEvent('energy-consumed', 1000);\r\n\r\n        return SUCCESS;\r\n    };\r\n}\r\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\r\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\r\nimport { computeAStar } from '../../utils/AStar';\r\nimport { game } from '../../core/Game';\r\nimport { diagonalDistance } from '../../utils/diagonalDistance';\r\nimport { MoveGoalType } from './MoveGoalType';\r\n\r\nexport class KillSomethingGoalType extends GoalType {\r\n    static name = 'KillSomething';\r\n\r\n    static isFinished = (entity, goal) => {\r\n        return !goal.target || goal.target.isDead || goal.target.isDestroyed;\r\n    };\r\n\r\n    static takeAction = (entity, goal) => {\r\n        // try melee\r\n        let evt = entity.fireEvent('try-melee', {\r\n            target: goal.target,\r\n        });\r\n\r\n        if (evt.data.success) {\r\n            return SUCCESS;\r\n        }\r\n\r\n        const start = entity.position.getPos();\r\n        const targetPos = goal.target.position.getPos();\r\n\r\n        // try pathing to target\r\n        const result = computeAStar({\r\n            start,\r\n            goal: targetPos,\r\n            cost: (a, b) => {\r\n                if (game.map.isOutOfbounds(b.x, b.y)) {\r\n                    return Infinity;\r\n                }\r\n\r\n                if (b.x === targetPos.x && b.y === targetPos.y) {\r\n                    return diagonalDistance(a, b);\r\n                }\r\n\r\n                const entities = game.map.getEntitiesAt(b.x, b.y);\r\n\r\n                if (entities.some((e) => e.blocker)) {\r\n                    return Infinity;\r\n                }\r\n\r\n                if (\r\n                    entities.some(\r\n                        (e) =>\r\n                            e.id !== entity.id && e.body && !e.isIncapacitated\r\n                    )\r\n                ) {\r\n                    return Infinity;\r\n                }\r\n\r\n                if (entities.some((e) => e.sharpTrap)) {\r\n                    return 8;\r\n                }\r\n\r\n                return diagonalDistance(a, b);\r\n            },\r\n        });\r\n\r\n        if (result.success && result.cost < 55 && result.path.length > 0) {\r\n            const segment = result.path[1];\r\n            const delta = {\r\n                x: segment.x - start.x,\r\n                y: segment.y - start.y,\r\n            };\r\n            const moveGoal = MoveGoalType.createAsSubGoal(goal, {\r\n                data: delta,\r\n            });\r\n\r\n            entity.brain.pushGoal(moveGoal);\r\n\r\n            entity.fireEvent('take-action');\r\n\r\n            return SUCCESS;\r\n        }\r\n\r\n        // try defense\r\n        // try ranged\r\n        // try items\r\n        // try movement\r\n        // fail to intent\r\n\r\n        entity.fireEvent('energy-consumed', 1000);\r\n\r\n        return FAILURE;\r\n    };\r\n}\r\n","import { diagonalDistance } from './diagonalDistance';\r\nimport { manhattanDistance } from './ManhattanDistance';\r\nimport PriorityQueue from './PriorityQueue';\r\n\r\nconst getNeighbors = (x, y, allowDiagonals = true) => {\r\n    const neighbors = [\r\n        {\r\n            x: x,\r\n            y: y - 1,\r\n        },\r\n        {\r\n            x: x - 1,\r\n            y: y,\r\n        },\r\n        {\r\n            x: x + 1,\r\n            y: y,\r\n        },\r\n        {\r\n            x: x,\r\n            y: y + 1,\r\n        },\r\n    ];\r\n\r\n    if (allowDiagonals) {\r\n        neighbors.push(\r\n            {\r\n                x: x - 1,\r\n                y: y - 1,\r\n            },\r\n            {\r\n                x: x + 1,\r\n                y: y - 1,\r\n            },\r\n            {\r\n                x: x - 1,\r\n                y: y + 1,\r\n            },\r\n            {\r\n                x: x + 1,\r\n                y: y + 1,\r\n            }\r\n        );\r\n    }\r\n\r\n    return neighbors;\r\n};\r\n\r\nconst key = (pos) => `${pos.x},${pos.y}`;\r\n\r\nconst defaultSettings = {\r\n    start: {},\r\n    goal: {},\r\n    cost: () => {},\r\n    allowDiagonals: true,\r\n};\r\n\r\nexport const computeAStar = (settings = defaultSettings) => {\r\n    const heuristic = settings.allowDiagonals\r\n        ? diagonalDistance\r\n        : manhattanDistance;\r\n    const start = settings.start;\r\n    const goal = settings.goal;\r\n    const cost = settings.cost;\r\n\r\n    const open = new PriorityQueue();\r\n    const cameFrom = {};\r\n    const costSoFar = {};\r\n    const startKey = key(start);\r\n    const goalKey = key(goal);\r\n\r\n    const result = {\r\n        success: false,\r\n        path: [],\r\n        costs: [],\r\n        cost: Infinity,\r\n        start,\r\n        goal,\r\n    };\r\n\r\n    if (cost(start, goal) === Infinity) {\r\n        return result;\r\n    }\r\n\r\n    open.put(\r\n        {\r\n            key: startKey,\r\n            pos: start,\r\n        },\r\n        0\r\n    );\r\n\r\n    costSoFar[startKey] = 0;\r\n\r\n    while (!open.isEmpty()) {\r\n        const { key: currentKey, pos: current } = open.pop();\r\n\r\n        if (currentKey === goalKey) {\r\n            result.success = true;\r\n            break;\r\n        }\r\n\r\n        const neighbors = getNeighbors(\r\n            current.x,\r\n            current.y,\r\n            settings.allowDiagonals\r\n        );\r\n\r\n        for (let next of neighbors) {\r\n            const nextKey = key(next);\r\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\r\n\r\n            if (graphCost === Infinity) {\r\n                continue;\r\n            }\r\n\r\n            const newCost = costSoFar[currentKey] + graphCost;\r\n\r\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\r\n                costSoFar[nextKey] = newCost;\r\n\r\n                const priority = newCost + heuristic(next, goal);\r\n\r\n                open.put(\r\n                    {\r\n                        key: nextKey,\r\n                        pos: next,\r\n                    },\r\n                    priority\r\n                );\r\n\r\n                cameFrom[nextKey] = current;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!result.success) {\r\n        return result;\r\n    }\r\n\r\n    result.path = [goal];\r\n    result.cost = costSoFar[goalKey];\r\n    result.costs = [costSoFar[goalKey]];\r\n\r\n    let previous = cameFrom[key(goal)];\r\n\r\n    while (previous) {\r\n        const previousKey = key(previous);\r\n\r\n        result.path.unshift(previous);\r\n        result.costs.unshift(costSoFar[previousKey]);\r\n\r\n        previous = cameFrom[previousKey];\r\n    }\r\n\r\n    return result;\r\n};\r\n","export const diagonalDistance = (a, b) => {\r\n    const dx = Math.abs(a.x - b.x);\r\n    const dy = Math.abs(a.y - b.y);\r\n\r\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\r\n};\r\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { BoredGoalType } from '../../ai/GoalTypes';\r\nimport { game } from '../../core/Game';\r\nimport { SPWN_WOOD_CLUB } from '../Spawnables';\r\nimport { spawn } from '../Spawner';\r\n\r\nexport const createSpawnable = () => {\r\n    const bruiser = game.ecs.createPrefab('GoblinBruiser');\r\n\r\n    bruiser.brain.pushGoal(BoredGoalType.create());\r\n\r\n    const club = spawn(SPWN_WOOD_CLUB);\r\n\r\n    bruiser.equipmentSlot.handRight.equip(club);\r\n\r\n    return bruiser;\r\n};\r\n","import { BoredGoalType } from '../../ai/GoalTypes';\r\nimport { game } from '../../core/Game';\r\nimport { SPWN_WOOD_CLUB } from '../Spawnables';\r\nimport { spawn } from '../Spawner';\r\n\r\nexport const createSpawnable = () => {\r\n    const bruiser = game.ecs.createPrefab('GoblinStargazer');\r\n\r\n    bruiser.brain.pushGoal(BoredGoalType.create());\r\n\r\n    // const club = spawn(SPWN_WOOD_CLUB);\r\n\r\n    // bruiser.equipmentSlot.handRight.equip(club);\r\n\r\n    return bruiser;\r\n};\r\n","import { game } from '../../core/Game';\r\nimport { pickRandom } from '../../utils/rand';\r\n\r\nexport const createSpawnable = () => {\r\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\r\n    const tree = game.ecs.createPrefab(type);\r\n\r\n    return tree;\r\n};\r\n","export const pickRandom = (arr) => {\r\n    return arr[Math.floor(Math.random() * arr.length)];\r\n};\r\n\r\nexport const randomInt = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nexport const randomBool = () => {\r\n    return pickRandom([true, false]);\r\n};\r\n\r\nexport const randomWeightedBool = (weight = 0.5) => {\r\n    return Math.random() <= weight;\r\n};\r\n","import { BoredGoalType } from '../../ai/GoalTypes';\r\nimport { game } from '../../core/Game';\r\n\r\nexport const createSpawnable = () => {\r\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\r\n\r\n    wanderer.brain.pushGoal(BoredGoalType.create());\r\n\r\n    return wanderer;\r\n};\r\n","import { game } from '../../core/Game';\r\n\r\nexport const createSpawnable = (data) => {\r\n    return game.ecs.createPrefab('Pool', {\r\n        liquidContainer: {\r\n            content: data.content,\r\n            volume: data.volume,\r\n        },\r\n    });\r\n};\r\n","import { game } from '../../core/Game';\r\nimport { pickRandom } from '../../utils/rand';\r\n\r\nexport const createSpawnable = () => {\r\n    const grass = game.ecs.createPrefab('Grass');\r\n    const ch = pickRandom(['≡', '±', '≥', '≤']);\r\n\r\n    grass.glyph.ch = ch;\r\n\r\n    return grass;\r\n};\r\n","import { pickRandom } from '../../utils/rand';\r\nimport * as Grass from './SpawnableGrass';\r\n\r\nexport const createSpawnable = () => {\r\n    const grass = Grass.createSpawnable();\r\n    const color = pickRandom([\r\n        '#65553b',\r\n        '#826b40',\r\n        '#757632',\r\n        '#8c6d32',\r\n        '#718427',\r\n    ]);\r\n\r\n    grass.glyph.fg1 = color;\r\n\r\n    return grass;\r\n};\r\n","import { pickRandom } from '../../utils/rand';\r\n\r\nexport const createSpawnable = () => {\r\n    const sand = game.ecs.createPrefab('Sand');\r\n    const ch = pickRandom(['τ', 'Φ', 'Θ', 'Ω']);\r\n\r\n    sand.glyph.ch = ch;\r\n\r\n    return sand;\r\n};\r\n","import { game } from '../../core/Game';\r\nimport { pickRandom } from '../../utils/rand';\r\n\r\nexport const createSpawnable = () => {\r\n    const cliff = game.ecs.createPrefab('Cliff');\r\n    const ch = pickRandom(['π', 'Σ', 'σ', 'µ']);\r\n\r\n    cliff.glyph.ch = ch;\r\n\r\n    return cliff;\r\n};\r\n","import { BoredGoalType } from '../../ai/GoalTypes';\r\nimport { game } from '../../core/Game';\r\n\r\nexport const createSpawnable = () => {\r\n    const snake = game.ecs.createPrefab('Snake');\r\n\r\n    snake.brain.pushGoal(BoredGoalType.create());\r\n\r\n    return snake;\r\n};\r\n","import { BoredGoalType } from '../../ai/GoalTypes';\r\nimport { game } from '../../core/Game';\r\n\r\nexport const createSpawnable = () => {\r\n    const bear = game.ecs.createPrefab('Bear');\r\n\r\n    bear.brain.pushGoal(BoredGoalType.create());\r\n\r\n    return bear;\r\n};\r\n","import { Component } from 'geotic';\r\nimport { Blocker } from './Blocker';\r\nimport { Shadowcaster } from './Shadowcaster';\r\n\r\nexport class Door extends Component {\r\n    static properties = {\r\n        isOpen: false,\r\n        chOpen: \"'\",\r\n        chClosed: '+',\r\n    };\r\n\r\n    get ch() {\r\n        return this.isOpen ? this.chOpen : this.chClosed;\r\n    }\r\n\r\n    get display() {\r\n        return this.isOpen ? '[open]' : '[closed]';\r\n    }\r\n\r\n    openDoor() {\r\n        if (this.isOpen) {\r\n            return false;\r\n        }\r\n\r\n        this.isOpen = true;\r\n\r\n        const glyph = this.entity.glyph;\r\n\r\n        if (glyph) {\r\n            glyph.ch = this.ch;\r\n        }\r\n\r\n        this.entity.blocker.destroy();\r\n        this.entity.shadowcaster.destroy();\r\n\r\n        return true;\r\n    }\r\n\r\n    closeDoor() {\r\n        if (!this.isOpen) {\r\n            return false;\r\n        }\r\n        // todo: check if entity blocking door\r\n\r\n        this.isOpen = false;\r\n\r\n        const glyph = this.entity.glyph;\r\n\r\n        if (glyph) {\r\n            glyph.ch = this.ch;\r\n        }\r\n\r\n        this.entity.add(Blocker);\r\n        this.entity.add(Shadowcaster);\r\n\r\n        return true;\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        if (this.isOpen) {\r\n            evt.data.interactions.push({\r\n                name: 'Close door',\r\n                evt: 'try-close-door',\r\n            });\r\n        } else {\r\n            evt.data.interactions.push({\r\n                name: 'Open door',\r\n                evt: 'try-open-door',\r\n            });\r\n        }\r\n    }\r\n\r\n    onTryCloseDoor(evt) {\r\n        if (this.closeDoor()) {\r\n            evt.data.interactor.fireEvent('energy-consumed', 800);\r\n        }\r\n        evt.handle();\r\n    }\r\n\r\n    onTryOpenDoor(evt) {\r\n        if (this.openDoor()) {\r\n            evt.data.interactor.fireEvent('energy-consumed', 800);\r\n        }\r\n        evt.handle();\r\n    }\r\n\r\n    onProjectileHit(evt) {\r\n        if (!this.isOpen) {\r\n            evt.data.stopProjectile = true;\r\n            evt.data.deflectProjectile = false;\r\n        }\r\n\r\n        this.openDoor();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\r\n\r\nexport class Shadowcaster extends Component {\r\n    static properties = {\r\n        removeOnCompression: false\r\n    };\r\n\r\n    onCompressed() {\r\n        if (this.removeOnCompression) {\r\n            this.destroy();\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { Inventory } from './Inventory';\r\nimport { IsInventoried } from './IsInventoried';\r\n\r\nexport class Loot extends Component {\r\n    take(newOwner) {\r\n        if (this.entity.isInventoried) {\r\n            if (this.entity.isInventoried.isOwnedBy(newOwner)) {\r\n                return true;\r\n            }\r\n\r\n            const owner = this.entity.isInventoried.owner;\r\n\r\n            owner.inventory.removeLoot(this.entity);\r\n        }\r\n\r\n        newOwner.inventory.addLoot(this.entity);\r\n\r\n        return true;\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        const interactor = evt.data.interactor;\r\n        const isInventoried = this.entity.has(IsInventoried);\r\n\r\n        if (!interactor.has(Inventory)) {\r\n            return;\r\n        }\r\n\r\n        if (isInventoried) {\r\n            if (interactor.inventory.hasLoot(this.entity)) {\r\n                evt.data.interactions.push({\r\n                    name: 'Drop',\r\n                    evt: 'try-drop',\r\n                });\r\n            } else {\r\n                evt.data.interactions.push({\r\n                    name: 'Take',\r\n                    evt: 'try-take',\r\n                });\r\n            }\r\n        } else {\r\n            evt.data.interactions.push({\r\n                name: 'Pickup',\r\n                evt: 'try-pick-up',\r\n            });\r\n        }\r\n    }\r\n\r\n    onEquipped(evt) {\r\n        if (!evt.data.interactor.has(Inventory)) {\r\n            return;\r\n        }\r\n\r\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\r\n            return;\r\n        }\r\n\r\n        evt.data.interactor.inventory.addLoot(this.entity);\r\n    }\r\n\r\n    onTryPickUp(evt) {\r\n        this.take(evt.data.interactor);\r\n\r\n        evt.data.interactor.fireEvent('energy-consumed', 100);\r\n        evt.handle();\r\n    }\r\n\r\n    onTryTake(evt) {\r\n        this.take(evt.data.interactor);\r\n\r\n        evt.data.interactor.fireEvent('energy-consumed', 100);\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\r\nimport { getEntityArrayRef } from '../../utils/ecs-refs';\r\nimport { IsInventoried } from './IsInventoried';\r\nimport { Stackable } from './Stackable';\r\n\r\nexport class Inventory extends Component {\r\n    static properties = {\r\n        contentIds: [],\r\n        isOpenable: true,\r\n    };\r\n\r\n    get content() {\r\n        return getEntityArrayRef(this, 'contentIds');\r\n    }\r\n\r\n    onDestroyed() {\r\n        this.content.forEach((entity) => entity.destroy());\r\n    }\r\n\r\n    onQueryOwnership(evt) {\r\n        this.content.forEach((entity) => {\r\n            evt.data.result.add(entity);\r\n            entity.fireEvent('query-ownership', { result: evt.data.result });\r\n        });\r\n    }\r\n\r\n    getStackable(stackableIdentifier) {\r\n        return this.content.find((entity) => {\r\n            return (\r\n                entity.has(Stackable) &&\r\n                entity.stackable.identifier === stackableIdentifier\r\n            );\r\n        });\r\n    }\r\n\r\n    addLoot(loot) {\r\n        if (loot.has(Stackable)) {\r\n            const existing = this.getStackable(loot.stackable.identifier);\r\n\r\n            if (existing) {\r\n                existing.stackable.addOther(loot);\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        loot.add(IsInventoried, {\r\n            ownerId: this.entity.id,\r\n        });\r\n\r\n        this.contentIds.push(loot.id);\r\n    }\r\n\r\n    hasLoot(loot) {\r\n        const idx = this.contentIds.indexOf(loot.id);\r\n\r\n        return idx >= 0;\r\n    }\r\n\r\n    removeLoot(loot, quantity) {\r\n        const isStackable = loot.has(Stackable);\r\n\r\n        if (isStackable && !isNaN(quantity)) {\r\n            loot.stackable.split(quantity);\r\n\r\n            return this.removeLoot(loot);\r\n        }\r\n\r\n        const idx = this.contentIds.indexOf(loot.id);\r\n\r\n        if (idx >= 0) {\r\n            this.contentIds.splice(idx, 1);\r\n            loot.isInventoried.destroy();\r\n        }\r\n\r\n        return loot;\r\n    }\r\n\r\n    dropLoot(loot, quantity) {\r\n        const ob = this.removeLoot(loot, quantity);\r\n        const pos = this.entity.position.getPos();\r\n\r\n        ob.position.setPos(pos.x, pos.y);\r\n\r\n        ob.fireEvent('dropped', {\r\n            dropper: this.entity,\r\n        });\r\n\r\n        return ob;\r\n    }\r\n\r\n    onTryOpen(evt) {\r\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\r\n            accessible: this.entity,\r\n            accessor: evt.data.interactor,\r\n        });\r\n        evt.handle();\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        if (this.isOpenable) {\r\n            evt.data.interactions.push({\r\n                name: 'Open',\r\n                evt: 'try-open',\r\n            });\r\n        }\r\n    }\r\n}\r\n","export const getEntityRef = (entity, idProp) => {\n    const id = entity[idProp];\n\n    if (!id) {\n        return;\n    }\n\n    const targetEntity = entity.world.getEntity(id);\n\n    if (!targetEntity) {\n        entity[idProp] = undefined;\n    }\n\n    return;\n}\n\nexport const setEntityRef = (entity, idProp, value) => {\n    let id = value;\n\n    if (!(value instanceof String)) {\n        id = value.id;\n    }\n\n    entity[idProp] = id;\n}\n\nexport const getEntityArrayRef = (entity, idArrayProp) => {\n    const ids = entity[idArrayProp];\n    const newIds = [];\n    const entities = [];\n\n    for (const id of ids) {\n        const targetEntity = entity.world.getEntity(id);\n\n        if (!targetEntity) {\n            entity[idProp] = undefined;\n        } else {\n            newIds.push(id);\n            entities.push(targetEntity);\n        }\n    }\n\n    entity[idArrayProp] = newIds;\n\n    return entities;\n}\n","import { Component } from 'geotic';\r\nimport { Stackable } from './Stackable';\r\n\r\nexport class IsInventoried extends Component {\r\n    static properties = {\r\n        ownerId: 0,\r\n    };\r\n\r\n    get owner() {\r\n        return getEntityRef(this, 'ownerId');\r\n    }\r\n\r\n    set owner(value) {\r\n        setEntityRef(this, 'ownerId', value);\r\n    }\r\n\r\n    isOwnedBy(entity) {\r\n        return this.owner && this.owner.id === entity.id;\r\n    }\r\n\r\n    onQueryOwnership(evt) {\r\n        evt.data.result.add(this.entity);\r\n    }\r\n\r\n    onTryDrop(evt) {\r\n        this.owner.inventory.dropLoot(this.entity);\r\n\r\n        evt.data.interactor.fireEvent('energy-consumed', 200);\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    onThrown(evt) {\r\n        const isStackable = this.entity.has(Stackable);\r\n        const quantity = isStackable ? 1 : null;\r\n\r\n        this.owner.inventory.removeLoot(this.entity, quantity);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\r\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\r\nexport const STACKABLE_ASH = 'STACKABLE_ASH';\r\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\r\nimport { SKILL_THROWING, getSkillValue } from '../../data/Skills';\r\nimport Attack from '../../data/Attack';\r\nimport { DMG_TYPE_BLUDGEONING } from '../../data/DamageTypes';\r\nimport { getStat, STAT_STRENGTH } from '../../data/Stats';\r\nimport { bresenhamLine } from '../../utils/BresenhamLine';\r\nimport { randomInt } from '../../utils/rand';\r\nimport { Inventory } from './Inventory';\r\nimport { simpleLineRenderer } from '../../utils/cursor/SimpleLineRenderer';\r\n\r\nexport class Throwable extends Component {\r\n    static properties = {\r\n        die: 4,\r\n        modifier: 0,\r\n        cost: 500,\r\n        damageType: DMG_TYPE_BLUDGEONING,\r\n    };\r\n\r\n    onGetInteractions(evt) {\r\n        if (!evt.data.interactor.has(Inventory)) {\r\n            return;\r\n        }\r\n\r\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\r\n            return;\r\n        }\r\n\r\n        evt.data.interactions.push({\r\n            name: 'Throw',\r\n            evt: 'try-throw',\r\n        });\r\n    }\r\n\r\n    throw(trajectory, initiator) {\r\n        this.entity.fireEvent('thrown', {\r\n            initiator,\r\n            trajectory,\r\n        });\r\n\r\n        for (let i = 0; i < trajectory.length; i++) {\r\n            if (i == 0) {\r\n                continue;\r\n            }\r\n\r\n            const position = trajectory[i];\r\n            const entities = position.entities;\r\n\r\n            let stopped = false;\r\n            let deflected = false;\r\n\r\n            const hit = entities.find((entity) => {\r\n                const evt = entity.fireEvent('projectile-hit', {\r\n                    initiator,\r\n                    trajectory,\r\n                    projectile: this.entity,\r\n                });\r\n\r\n                stopped = evt.data.stopProjectile;\r\n                deflected = evt.data.deflectProjectile;\r\n\r\n                return stopped || deflected;\r\n            });\r\n\r\n            if (hit) {\r\n                if (deflected) {\r\n                    const prev = trajectory[i - 1];\r\n\r\n                    this.entity.position.setPos(prev.x, prev.y);\r\n                    this.entity.fireEvent('collide-ground', {\r\n                        initiator,\r\n                        x: prev.x,\r\n                        y: prev.y,\r\n                    });\r\n                } else {\r\n                    this.entity.position.setPos(position.x, position.y);\r\n                    this.entity.fireEvent('collide', {\r\n                        initiator,\r\n                        hit,\r\n                        x: position.x,\r\n                        y: position.y,\r\n                    });\r\n\r\n                    const str = getStat(STAT_STRENGTH, initiator);\r\n                    const die = randomInt(1, this.die);\r\n                    const damage = die + str + this.modifier;\r\n                    const attack = new Attack({\r\n                        attacker: initiator,\r\n                        defender: hit,\r\n                        weaponName: this.entity.moniker.display,\r\n                        damage,\r\n                        damageType: this.damageType,\r\n                        ignoreDodge: true,\r\n                    });\r\n\r\n                    hit.fireEvent('attacked', { attack });\r\n                }\r\n\r\n                break;\r\n            } else if (i === trajectory.length - 1) {\r\n                this.entity.position.setPos(position.x, position.y);\r\n                this.entity.fireEvent('collide-ground', {\r\n                    initiator,\r\n                    x: position.x,\r\n                    y: position.y,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    onTryThrow(evt) {\r\n        const range = getSkillValue(SKILL_THROWING, evt.data.interactor) + 3;\r\n\r\n        game.screens.pushScreen(SCREEN_CURSOR, {\r\n            renderer: simpleLineRenderer(),\r\n            start: evt.data.interactor.position.getPos(),\r\n            onResult: (cursor) => {\r\n                game.screens.setScreen(SCREEN_ADVENTURE);\r\n\r\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\r\n\r\n                const line = bresenhamLine(\r\n                    cursor.start.x,\r\n                    cursor.start.y,\r\n                    cursor.position.x,\r\n                    cursor.position.y\r\n                );\r\n                const trajectory = line.slice(0, range + 1).map((pos) => ({\r\n                    x: pos.x,\r\n                    y: pos.y,\r\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\r\n                }));\r\n\r\n                evt.data.interactor.fireEvent('energy-consumed', this.cost);\r\n\r\n                this.throw(trajectory, evt.data.interactor);\r\n            },\r\n            onCancel: () => {\r\n                game.screens.popScreen();\r\n            },\r\n        });\r\n    }\r\n}\r\n","import ArmorSkill from './skills/ArmorSkill';\r\nimport SpeedSkill from './skills/SpeedSkill';\r\nimport ThrowingSkill from './skills/ThrowingSkill';\r\nimport DodgeSkill from './skills/DodgeSkill';\r\nimport BrawlingSkill from './skills/BrawlingSkill';\r\nimport AxeSkill from './skills/AxeSkill';\r\nimport BladeSkill from './skills/BladeSkill';\r\nimport CudgelSkill from './skills/CudgelSkill';\r\nimport HealthSkill from './skills/HealthSkill';\r\n\r\nexport const SKILL_SPEED = 'SKILL_SPEED';\r\nexport const SKILL_HEALTH = 'SKILL_HEALTH';\r\nexport const SKILL_THROWING = 'SKILL_THROWING';\r\nexport const SKILL_ARMOR = 'SKILL_ARMOR';\r\nexport const SKILL_DODGE = 'SKILL_DODGE';\r\nexport const SKILL_BRAWLING = 'SKILL_BRAWLING';\r\nexport const SKILL_AXE = 'SKILL_AXE';\r\nexport const SKILL_BLADE = 'SKILL_BLADE';\r\nexport const SKILL_CUDGEL = 'SKILL_CUDGEL';\r\n\r\nconst lookup = {\r\n    SKILL_ARMOR: new ArmorSkill(),\r\n    SKILL_HEALTH: new HealthSkill(),\r\n    SKILL_SPEED: new SpeedSkill(),\r\n    SKILL_THROWING: new ThrowingSkill(),\r\n    SKILL_DODGE: new DodgeSkill(),\r\n    SKILL_BRAWLING: new BrawlingSkill(),\r\n    SKILL_AXE: new AxeSkill(),\r\n    SKILL_BLADE: new BladeSkill(),\r\n    SKILL_CUDGEL: new CudgelSkill(),\r\n};\r\n\r\nexport const getSkill = (key) => lookup[key];\r\nexport const getSkillName = (key) => lookup[key].name;\r\nexport const getSkillValue = (key, entity) => lookup[key].compute(entity);\r\nexport const getSkillsByStat = (stat) =>\r\n    Object.values(lookup).filter((s) => s.baseStat === stat);\r\nexport const getSkillEquippedMod = (key, entity) => {\r\n    const modifiers = [];\r\n\r\n    entity.fireEvent(`query-skill-mod-equipped`, {\r\n        skill: key,\r\n        modifiers,\r\n    });\r\n\r\n    return modifiers;\r\n};\r\nexport const getAllSkillEquippedMods = (entity) => {\r\n    return Object.keys(lookup).reduce(\r\n        (mods, skill) => ({\r\n            ...mods,\r\n            [skill]: getSkillEquippedMod(skill, entity),\r\n        }),\r\n        {}\r\n    );\r\n};\r\nexport const getAllSkillEquippedModSums = (entity) => {\r\n    const mods = getAllSkillEquippedMods(entity);\r\n\r\n    return Object.keys(mods).reduce(\r\n        (all, skill) => ({\r\n            ...all,\r\n            [skill]: mods[skill].reduce((sum, mod) => sum + mod.mod, 0),\r\n        }),\r\n        {}\r\n    );\r\n};\r\n","import { SKILL_ARMOR } from '../Skills';\r\nimport Skill from './Skill';\r\n\r\nexport const getArmorBlockPercent = (skill = 0) => {\r\n    const base = 10;\r\n\r\n    return 1 - base / (skill + base);\r\n};\r\n\r\nexport const getArmorBlockPercentDisplay = (skill = 0) => {\r\n    const prcnt = getArmorBlockPercent(skill);\r\n\r\n    return Math.floor(prcnt * 100);\r\n};\r\n\r\nexport default class ArmorSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_ARMOR, 'armor');\r\n    }\r\n}\r\n","import { getStat } from '../Stats';\r\n\r\nexport default class Skill {\r\n    key = -1;\r\n    name = 'skill';\r\n    baseStat = null;\r\n\r\n    constructor(key, name, baseStat) {\r\n        this.key = key;\r\n        this.name = name;\r\n        this.baseStat = baseStat;\r\n    }\r\n\r\n    getModifiers(entity) {\r\n        const evt = entity.fireEvent(`query-skill-mod`, {\r\n            name: this.name,\r\n            skill: this.key,\r\n            modifiers: [],\r\n        });\r\n\r\n        return evt.data.modifiers;\r\n    }\r\n\r\n    getModifierSum(entity) {\r\n        const modifiers = this.getModifiers(entity);\r\n\r\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\r\n    }\r\n\r\n    compute(entity) {\r\n        const stat = this.baseStat ? getStat(this.baseStat, entity) : 0;\r\n        const modifier = this.getModifierSum(entity);\r\n\r\n        return stat + modifier;\r\n    }\r\n}\r\n","import { randomInt } from '../utils/rand';\r\n\r\nexport const STAT_STRENGTH = 'STAT_STRENGTH';\r\nexport const STAT_FINESSE = 'STAT_FINESSE';\r\nexport const STAT_ATHLETICISM = 'STAT_ATHLETICISM';\r\nexport const STAT_TRICKERY = 'STAT_TRICKERY';\r\nexport const STAT_FAITH = 'STAT_FAITH';\r\n\r\nconst lookup = {\r\n    [STAT_STRENGTH]: {\r\n        name: 'strength',\r\n        abbreviation: 'STR',\r\n    },\r\n    [STAT_FINESSE]: {\r\n        name: 'finesse',\r\n        abbreviation: 'FIN',\r\n    },\r\n    [STAT_ATHLETICISM]: {\r\n        name: 'athleticism',\r\n        abbreviation: 'ATH',\r\n    },\r\n    [STAT_TRICKERY]: {\r\n        name: 'trickery',\r\n        abbreviation: 'TRK',\r\n    },\r\n    [STAT_FAITH]: {\r\n        name: 'faith',\r\n        abbreviation: 'FTH',\r\n    },\r\n};\r\n\r\nexport const getStatName = (stat) => lookup[stat].name;\r\nexport const getStatAbbreviation = (stat) => lookup[stat].abbreviation;\r\nexport const getStat = (stat, entity) => {\r\n    const name = lookup[stat].name;\r\n\r\n    return entity.stats[name]();\r\n};\r\nexport const rollStat = (stat, entity) => {\r\n    return randomInt(1, 20) + getStat(stat, entity);\r\n};\r\nexport const statCheck = (stat, entity, target) => {\r\n    return rollStat(stat, entity) >= target;\r\n};\r\n","import { SKILL_SPEED } from '../Skills';\r\nimport { STAT_ATHLETICISM } from '../Stats';\r\nimport Skill from './Skill';\r\n\r\nexport const getSpeedPercent = (skill = 0) => {\r\n    const base = 5;\r\n    const cost = base / (base + skill);\r\n\r\n    return cost;\r\n};\r\n\r\nexport const getSpeedPercentDisplay = (skill = 0) => {\r\n    const prcnt = getSpeedPercent(skill);\r\n\r\n    return Math.floor(prcnt * 100);\r\n};\r\n\r\nexport default class SpeedSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_SPEED, 'speed', STAT_ATHLETICISM);\r\n    }\r\n}\r\n","import { SKILL_THROWING } from '../Skills';\r\nimport { getStat, STAT_ATHLETICISM } from '../Stats';\r\nimport Skill from './Skill';\r\n\r\nexport default class ThrowingSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_THROWING, 'throwing', STAT_ATHLETICISM);\r\n    }\r\n\r\n    compute(entity) {\r\n        const base = getStat(STAT_ATHLETICISM, entity);\r\n        const modifier = this.getModifierSum(entity);\r\n\r\n        return Math.max(0, base + modifier);\r\n    }\r\n}\r\n","import { SKILL_DODGE } from '../Skills';\r\nimport { STAT_FINESSE } from '../Stats';\r\nimport Skill from './Skill';\r\n\r\nexport const getDodgePercent = (skill = 0) => {\r\n    const base = 5;\r\n    const unscaled = 1 - base / (skill + base);\r\n\r\n    return Math.floor(unscaled * 100);\r\n};\r\n\r\nexport default class DodgeSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_DODGE, 'dodge', STAT_FINESSE);\r\n    }\r\n}\r\n","import { SKILL_BRAWLING } from '../Skills';\r\nimport { STAT_STRENGTH } from '../Stats';\r\nimport Skill from './Skill';\r\n\r\nexport default class BrawlingSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_BRAWLING, 'brawling', STAT_STRENGTH);\r\n    }\r\n}\r\n","import { SKILL_AXE } from '../Skills';\r\nimport { STAT_STRENGTH } from '../Stats';\r\nimport Skill from './Skill';\r\n\r\nexport default class AxeSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_AXE, 'axes', STAT_STRENGTH);\r\n    }\r\n}\r\n","import { SKILL_BLADE } from '../Skills';\r\nimport { STAT_STRENGTH } from '../Stats';\r\nimport Skill from './Skill';\r\n\r\nexport default class BladeSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_BLADE, 'blades', STAT_STRENGTH);\r\n    }\r\n}\r\n","import { SKILL_CUDGEL } from '../Skills';\r\nimport { STAT_STRENGTH } from '../Stats';\r\nimport Skill from './Skill';\r\n\r\nexport default class CudgelSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_CUDGEL, 'cudgels', STAT_STRENGTH);\r\n    }\r\n}\r\n","import { SKILL_HEALTH } from '../Skills';\r\nimport { STAT_ATHLETICISM } from '../Stats';\r\nimport Skill from './Skill';\r\n\r\nexport default class HealthSkill extends Skill {\r\n    constructor() {\r\n        super(SKILL_HEALTH, 'health', STAT_ATHLETICISM);\r\n    }\r\n}\r\n","export default class Attack {\r\n    constructor(data) {\r\n        this.attacker = data.attacker;\r\n        this.defender = data.defender;\r\n        this.weaponName = data.weaponName;\r\n        this.damage = data.damage;\r\n        this.damageType = data.damageType;\r\n        this.ignoreDodge = data.ignoreDodge;\r\n    }\r\n}\r\n","export const DMG_TYPE_BLUDGEONING = 'DMG_TYPE_BLUDGEONING';\r\nexport const DMG_TYPE_PIERCING = 'DMG_TYPE_PIERCING';\r\nexport const DMG_TYPE_SLASHING = 'DMG_TYPE_SLASHING';\r\nexport const DMG_TYPE_NECROTIC = 'DMG_TYPE_NECROTIC';\r\n\r\nconst lookup = {\r\n    [DMG_TYPE_BLUDGEONING]: {\r\n        name: 'Bludgeoning',\r\n        verb: 'bludgeons',\r\n    },\r\n    [DMG_TYPE_PIERCING]: {\r\n        name: 'Piercing',\r\n        verb: 'pierces',\r\n    },\r\n    [DMG_TYPE_SLASHING]: {\r\n        name: 'Slashing',\r\n        verb: 'slashes',\r\n    },\r\n    [DMG_TYPE_NECROTIC]: {\r\n        name: 'Necrotic',\r\n        verb: 'saps',\r\n    },\r\n};\r\n\r\nexport const getDmgTypeName = (type) => lookup[type].name;\r\nexport const getDmgTypeVerb = (type) => lookup[type].verb;\r\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { game } from '../../core/Game';\r\n\r\nconst truthy = () => true;\r\n\r\nexport const simpleLineRenderer = (options = {}) => {\r\n    const isValid = options.isValid || truthy;\r\n\r\n    return {\r\n        isValid,\r\n        render: (opts) => {\r\n            opts.line.forEach(({ x, y }, idx) => {\r\n                if (idx === 0) {\r\n                    return;\r\n                }\r\n\r\n                const color = isValid(\r\n                    {\r\n                        ...opts,\r\n                        x,\r\n                        y,\r\n                    },\r\n                    idx\r\n                )\r\n                    ? 'blue'\r\n                    : 'red';\r\n                const screen = game.camera.worldToScreen(x, y);\r\n\r\n                game.renderer.draw(screen.x, screen.y, '•', color);\r\n            });\r\n        },\r\n    };\r\n};\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\r\nimport { IsDestroying } from './IsDestroying';\r\nimport { LiquidContainer } from './LiquidContainer';\r\n\r\nexport class FragileGlass extends Component {\r\n    shatter(x, y) {\r\n        spawn(SPWN_GLASS_SHARD, x, y, {\r\n            stackable: {\r\n                quantity: 3,\r\n            },\r\n        });\r\n\r\n        if (this.entity.has(LiquidContainer)) {\r\n            if (this.entity.liquidContainer.pour(x, y)) {\r\n                game.console.event(CONSOLE_EVENT_SHATTER, {\r\n                    target: this.entity,\r\n                    liquid: this.entity.liquidContainer.content,\r\n                });\r\n            }\r\n        } else {\r\n            game.console.event(CONSOLE_EVENT_SHATTER, {\r\n                target: this.entity,\r\n            });\r\n        }\r\n\r\n        this.entity.add(IsDestroying);\r\n    }\r\n\r\n    onCollideGround(evt) {\r\n        this.shatter(evt.data.x, evt.data.y);\r\n    }\r\n\r\n    onCollide(evt) {\r\n        this.shatter(evt.data.x, evt.data.y);\r\n    }\r\n}\r\n","import { getDmgTypeVerb } from '../data/DamageTypes';\r\nimport { IsPlayer, Moniker, IsVisible } from '../ecs/components';\r\nimport { liquids } from './LiquidTypes';\r\n\r\nexport const CONSOLE_EVENT_DAMAGE = 0;\r\nexport const CONSOLE_EVENT_DEAD = 1;\r\nexport const CONSOLE_EVENT_SHATTER = 2;\r\nexport const CONSOLE_EVENT_MISS = 3;\r\nexport const CONSOLE_EVENT_BLOCK = 4;\r\nexport const CONSOLE_EVENT_TRAP_SHARP = 5;\r\nexport const CONSOLE_EVENT_LEVEL = 6;\r\n\r\nconst getMonikerSubject = (entity) => {\r\n    if (entity.has(Moniker)) {\r\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\r\n    }\r\n\r\n    return `The thing`;\r\n};\r\n\r\nconst getMonikerIndirectObject = (entity) => {\r\n    if (entity.isPlayer) {\r\n        return 'you';\r\n    }\r\n\r\n    if (entity.has(Moniker)) {\r\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\r\n    }\r\n};\r\n\r\nconst mapping = {\r\n    [CONSOLE_EVENT_LEVEL]: {\r\n        message(data) {\r\n            const entity = getMonikerSubject(data.entity);\r\n\r\n            return `${entity} gained a level (${data.level})!`;\r\n        },\r\n        shouldAppear(data) {\r\n            return data.entity.isPlayer || data.entity.isVisible;\r\n        },\r\n    },\r\n    [CONSOLE_EVENT_MISS]: {\r\n        message(data) {\r\n            const attacker = getMonikerIndirectObject(data.attacker);\r\n            const defender = getMonikerSubject(data.defender);\r\n\r\n            return `${defender} dodged an attack from ${attacker} (${data.dodgePrcnt}%)`;\r\n        },\r\n        shouldAppear(data) {\r\n            return data.defender.isPlayer || data.attacker.isVisible;\r\n        },\r\n    },\r\n    [CONSOLE_EVENT_DAMAGE]: {\r\n        message(data) {\r\n            const source = getMonikerSubject(data.source);\r\n            const target = getMonikerIndirectObject(data.target);\r\n            const dmgVerb = getDmgTypeVerb(data.damageType);\r\n            const dmg = data.damage;\r\n            const blocked = data.blocked;\r\n\r\n            const blockText =\r\n                blocked > 0 ? `. (${blocked} damage was blocked)` : '';\r\n\r\n            return `${source} ${dmgVerb} ${target} for ${dmg} hp${blockText}`;\r\n        },\r\n        shouldAppear(data) {\r\n            return data.target.isPlayer || data.target.isVisible;\r\n        },\r\n    },\r\n    [CONSOLE_EVENT_DEAD]: {\r\n        message(data) {\r\n            const source = getMonikerSubject(data.source);\r\n            const target = getMonikerIndirectObject(data.target);\r\n            const dmgVerb = getDmgTypeVerb(data.damageType);\r\n\r\n            return `${source} ${dmgVerb} ${target} to death`;\r\n        },\r\n        shouldAppear(data) {\r\n            return data.target.isPlayer || data.target.isVisible;\r\n        },\r\n    },\r\n    [CONSOLE_EVENT_SHATTER]: {\r\n        message(data) {\r\n            if (isNaN(data.liquid)) {\r\n                return `${getMonikerSubject(data.target)} shatters!`;\r\n            } else {\r\n                return `${getMonikerSubject(\r\n                    data.target\r\n                )} shatters and spills its ${\r\n                    liquids[data.liquid].colorDesc\r\n                } content!`;\r\n            }\r\n        },\r\n        shouldAppear(data) {\r\n            return data.target.isVisible;\r\n        },\r\n    },\r\n    [CONSOLE_EVENT_TRAP_SHARP]: {\r\n        message(data) {\r\n            return `${getMonikerSubject(\r\n                data.entity\r\n            )} cuts themselves on ${getMonikerIndirectObject(\r\n                data.trap\r\n            )} and begins bleeding`;\r\n        },\r\n        shouldAppear(data) {\r\n            return data.trap.isVisible;\r\n        },\r\n    },\r\n};\r\n\r\nexport const getMessage = (evt, data) => {\r\n    return mapping[evt].message(data);\r\n};\r\n\r\nexport const shouldAppear = (evt, data) => {\r\n    return mapping[evt].shouldAppear(data);\r\n};\r\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goalIds: [],\n    };\n\n    get goals() {\n        return getEntityArrayRef(this, 'goalIds');\n    }\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goalIds = this.goalIds.filter((goalId) => {\n            const goal = this.world.getEntity(goalId);\n\n            if (!goal) {\n                return false;\n            }\n\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goalIds.push(goal.entity.id);\n    }\n\n    popGoal() {\n        const goal = this.goals.pop().goal;\n        this.goalIds.pop();\n\n        return goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\r\nimport { SPWN_CORPSE } from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\n\r\nexport class Body extends Component {\r\n    static properties = {\r\n        corpseSpawnable: SPWN_CORPSE,\r\n    };\r\n\r\n    onDeath(evt) {\r\n        if (!this.entity.has('Position')) {\r\n            return;\r\n        }\r\n\r\n        const pos = this.entity.position.getPos();\r\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\r\n\r\n        if (this.entity.has('Moniker')) {\r\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\r\n        }\r\n    }\r\n\r\n    onProjectileHit(evt) {\r\n        evt.data.stopProjectile = true;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntentId: 0,\n        parentId: 0,\n        targetId: 0,\n        complete: false,\n        data: {},\n    };\n\n    get originalIntent() {\n        return getEntityRef(this, 'originalIntentId');\n    }\n\n    set originalIntent(value) {\n        setEntityRef(this, 'originalIntentId', value);\n    }\n\n    get parent() {\n        return getEntityRef(this, 'parentId');\n    }\n\n    set parent(value) {\n        setEntityRef(this, 'parentId', value);\n    }\n\n    get target() {\n        return getEntityRef(this, 'targetId');\n    }\n\n    set target(value) {\n        setEntityRef(this, 'targetId', value);\n    }\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\n\r\nexport class Position extends Component {\r\n    static properties = {\r\n        chunkId: 0,\r\n    };\r\n\r\n    getPos() {\r\n        return game.map.getPosition(this.entity.id, this.chunkId);\r\n    }\r\n\r\n    setPos(x, y) {\r\n        return game.map.setPosition(x, y, this.entity.id, this.chunkId);\r\n    }\r\n\r\n    equals(x, y) {\r\n        const pos = this.getPos();\r\n\r\n        return pos.x === x && pos.y === y;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { LiquidContainer } from './LiquidContainer';\r\n\r\nexport class Glyph extends Component {\r\n    static properties = {\r\n        fg1: '#ddd',\r\n        fg2: '#666',\r\n        bg: null,\r\n        ch: '?',\r\n        z: 1000,\r\n    };\r\n\r\n    get primary() {\r\n        if (this.entity.has(LiquidContainer)) {\r\n            const col = this.entity.liquidContainer.primaryColorOverride;\r\n\r\n            if (col) {\r\n                return col;\r\n            }\r\n        }\r\n\r\n        return this.fg1;\r\n    }\r\n\r\n    get secondary() {\r\n        if (this.entity.has(LiquidContainer)) {\r\n            const col = this.entity.liquidContainer.secondaryColorOverride;\r\n\r\n            if (col) {\r\n                return col;\r\n            }\r\n        }\r\n\r\n        return this.fg2;\r\n    }\r\n\r\n    get background() {\r\n        return this.bg;\r\n    }\r\n\r\n    get char() {\r\n        return this.ch;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SKILL_SPEED, getSkillValue } from '../../data/Skills';\r\nimport { Blocker } from './Blocker';\r\n\r\nexport class Motor extends Component {\r\n    onTryMove(evt) {\r\n        const position = this.entity.position.getPos();\r\n        const targetX = position.x + evt.data.x;\r\n        const targetY = position.y + evt.data.y;\r\n\r\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\r\n\r\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\r\n            return;\r\n        }\r\n\r\n        const nonHostile = targetTileEntities.find((entity) => {\r\n            return (\r\n                entity.factionMember &&\r\n                !game.factions.areEntitiesHostile(entity, this.entity)\r\n            );\r\n        });\r\n\r\n        // swap locations\r\n        if (nonHostile) {\r\n            nonHostile.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        const speed = getSkillValue(SKILL_SPEED, this.entity);\r\n        const cost = (20 / (20 + speed)) * 1000;\r\n\r\n        this.entity.fireEvent('energy-consumed', cost);\r\n        this.entity.position.setPos(targetX, targetY);\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\r\nimport { MoveGoalType } from '../../ai/GoalTypes';\r\nimport { directionDelta } from '../../enums/Directions';\r\n\r\nexport class Wandering extends Component {\r\n    onBoredom(evt) {\r\n        if (Math.random() > 0.5) {\r\n            return;\r\n        }\r\n\r\n        const direction = Math.floor(Math.random() * 9);\r\n        const delta = directionDelta(direction);\r\n\r\n        evt.data.goal = MoveGoalType.create({\r\n            data: delta,\r\n        });\r\n        evt.handle();\r\n    }\r\n}\r\n","const directions = [\r\n    {\r\n        key: 0,\r\n        shortName: 'NW',\r\n        fullName: 'Northwest',\r\n        delta: {\r\n            x: -1,\r\n            y: -1,\r\n        },\r\n    },\r\n    {\r\n        key: 1,\r\n        shortName: 'N',\r\n        fullName: 'North',\r\n        delta: {\r\n            x: 0,\r\n            y: -1,\r\n        },\r\n    },\r\n    {\r\n        key: 2,\r\n        shortName: 'NE',\r\n        fullName: 'Northeast',\r\n        delta: {\r\n            x: 1,\r\n            y: -1,\r\n        },\r\n    },\r\n    {\r\n        key: 3,\r\n        shortName: 'W',\r\n        fullName: 'West',\r\n        delta: {\r\n            x: -1,\r\n            y: 0,\r\n        },\r\n    },\r\n    {\r\n        key: 4,\r\n        shortName: 'Z',\r\n        fullName: 'Here',\r\n        delta: {\r\n            x: 0,\r\n            y: 0,\r\n        },\r\n        adjacent: [],\r\n    },\r\n    {\r\n        key: 5,\r\n        shortName: 'E',\r\n        fullName: 'East',\r\n        delta: {\r\n            x: 1,\r\n            y: 0,\r\n        },\r\n    },\r\n    {\r\n        key: 6,\r\n        shortName: 'SW',\r\n        fullName: 'Southwest',\r\n        delta: {\r\n            x: -1,\r\n            y: 1,\r\n        },\r\n    },\r\n    {\r\n        key: 7,\r\n        shortName: 'S',\r\n        fullName: 'South',\r\n        delta: {\r\n            x: 0,\r\n            y: 1,\r\n        },\r\n    },\r\n    {\r\n        key: 8,\r\n        shortName: 'SE',\r\n        fullName: 'Southeast',\r\n        delta: {\r\n            x: 1,\r\n            y: 1,\r\n        },\r\n    },\r\n];\r\n\r\nexport const DIR_NW = 0;\r\nexport const DIR_N = 1;\r\nexport const DIR_NE = 2;\r\nexport const DIR_W = 3;\r\nexport const DIR_Z = 4;\r\nexport const DIR_E = 5;\r\nexport const DIR_SW = 6;\r\nexport const DIR_S = 7;\r\nexport const DIR_SE = 8;\r\n\r\ndirections[DIR_NW].adjacent = [DIR_N, DIR_W];\r\ndirections[DIR_N].adjacent = [DIR_NW, DIR_NE];\r\ndirections[DIR_NE].adjacent = [DIR_N, DIR_E];\r\ndirections[DIR_W].adjacent = [DIR_NW, DIR_SW];\r\ndirections[DIR_E].adjacent = [DIR_NE, DIR_SE];\r\ndirections[DIR_SW].adjacent = [DIR_W, DIR_S];\r\ndirections[DIR_S].adjacent = [DIR_SW, DIR_SE];\r\ndirections[DIR_SE].adjacent = [DIR_S, DIR_E];\r\n\r\nexport const allDirections = () => [\r\n    DIR_NW,\r\n    DIR_N,\r\n    DIR_NE,\r\n    DIR_W,\r\n    DIR_E,\r\n    DIR_SW,\r\n    DIR_S,\r\n    DIR_SE,\r\n];\r\n\r\nexport const shortName = (direction) => directions[direction].shortName;\r\n\r\nexport const fullName = (direction) => directions[direction].fullName;\r\n\r\nexport const directionDelta = (direction) => directions[direction].delta;\r\n\r\nexport const adjacent = (direction) => directions[direction].adjacent;\r\n\r\nexport const getAdjacentDeltas = (direction) =>\r\n    adjacent(direction).map(directionDelta);\r\n\r\nexport const directionFromDelta = (x, y) => {\r\n    return Object.values(directions).find((dir) => {\r\n        return dir.delta.x === x && dir.delta.y === y;\r\n    });\r\n};\r\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport {\r\n    SKILL_ARMOR,\r\n    SKILL_DODGE,\r\n    getSkillValue,\r\n    SKILL_HEALTH,\r\n} from '../../data/Skills';\r\nimport { getArmorBlockPercent } from '../../data/skills/ArmorSkill';\r\nimport { getDodgePercent } from '../../data/skills/DodgeSkill';\r\nimport {\r\n    CONSOLE_EVENT_DAMAGE,\r\n    CONSOLE_EVENT_DEAD,\r\n    CONSOLE_EVENT_MISS,\r\n} from '../../enums/ConsoleEvents';\r\nimport { randomInt } from '../../utils/rand';\r\nimport { IsDead } from './IsDead';\r\n\r\nexport class Health extends Component {\r\n    static properties = {\r\n        value: 20,\r\n    };\r\n\r\n    get max() {\r\n        const level = this.entity.level.level;\r\n        const skill = getSkillValue(SKILL_HEALTH, this.entity);\r\n\r\n        return 32 + level * 8 + skill * 4;\r\n    }\r\n\r\n    onSpawned() {\r\n        this.value = this.max;\r\n    }\r\n\r\n    applyDamage(damage) {\r\n        this.value -= damage;\r\n\r\n        if (this.value <= 0) {\r\n            this.value = 0;\r\n            this.entity.add(IsDead);\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onAttacked(evt) {\r\n        const attack = evt.data.attack;\r\n        const attacker = attack.attacker;\r\n        const defender = attack.defender;\r\n        const dodge = getSkillValue(SKILL_DODGE, defender);\r\n        const dodgePrcnt = getDodgePercent(dodge);\r\n\r\n        if (!attack.ignoreDodge && randomInt(1, 100) <= dodgePrcnt) {\r\n            game.console.event(CONSOLE_EVENT_MISS, {\r\n                defender,\r\n                attacker,\r\n                dodgePrcnt,\r\n            });\r\n\r\n            evt.data.damage = 0;\r\n            evt.data.isDodged = true;\r\n            evt.data.isKilled = false;\r\n            evt.handle();\r\n\r\n            return;\r\n        }\r\n\r\n        evt.data.isDodged = false;\r\n\r\n        const armor = getSkillValue(SKILL_ARMOR, defender);\r\n        const armorPrcnt = getArmorBlockPercent(armor);\r\n        const blocked = Math.floor(attack.damage * armorPrcnt);\r\n        const damage = Math.max(0, attack.damage - blocked);\r\n        evt.data.damage = damage;\r\n\r\n        const isKilled = this.applyDamage(damage);\r\n        evt.data.isKilled = isKilled;\r\n\r\n        if (isKilled) {\r\n            game.console.event(CONSOLE_EVENT_DEAD, {\r\n                target: defender,\r\n                source: attacker,\r\n                damage,\r\n                damageType: attack.damageType,\r\n            });\r\n\r\n            attacker.fireEvent('enemy-killed', {\r\n                enemy: defender,\r\n            });\r\n\r\n            evt.handle();\r\n\r\n            return;\r\n        }\r\n\r\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\r\n            target: defender,\r\n            source: attacker,\r\n            damage,\r\n            damageType: attack.damageType,\r\n            blocked,\r\n        });\r\n\r\n        const pos = this.entity.position.getPos();\r\n\r\n        game.particles.createParticle(pos.x, pos.y, {\r\n            lifetime: 140,\r\n            fg1s: ['#8d4c4f', '#730d14'],\r\n            glyphs: ['*'],\r\n        });\r\n\r\n        evt.handle();\r\n    }\r\n\r\n    onHeal(evt) {\r\n        this.value += evt.data.value;\r\n\r\n        if (this.value > this.max) {\r\n            this.value = this.max;\r\n        }\r\n\r\n        evt.handle();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class IsDead extends Component {}\r\n","import { Component } from 'geotic';\r\nimport { getFactionByName } from '../../enums/Factions';\r\n\r\nexport class FactionMember extends Component {\r\n    static properties = {\r\n        name: 'Neutral',\r\n    };\r\n\r\n    get faction() {\r\n        return getFactionByName(this.name);\r\n    }\r\n}\r\n","import Faction from '../data/Faction';\r\n\r\nexport const FACTION_PLAYER = 0;\r\nexport const FACTION_VILLAGER = 1;\r\nexport const FACTION_GOBLIN = 2;\r\nexport const FACTION_BEAR = 3;\r\nexport const FACTION_SERPENT = 4;\r\n\r\nexport const factions = {\r\n    player: new Faction({\r\n        id: FACTION_PLAYER,\r\n        name: 'player',\r\n        display: 'Player',\r\n    }),\r\n    villager: new Faction({\r\n        id: FACTION_VILLAGER,\r\n        name: 'villager',\r\n        display: 'Villager',\r\n    }),\r\n    goblin: new Faction({\r\n        id: FACTION_GOBLIN,\r\n        name: 'goblin',\r\n        display: 'Goblin',\r\n    }),\r\n    serpent: new Faction({\r\n        id: FACTION_SERPENT,\r\n        name: 'serpent',\r\n        display: 'Serpent',\r\n    }),\r\n    bear: new Faction({\r\n        id: FACTION_BEAR,\r\n        name: 'bear',\r\n        display: 'Bear',\r\n    }),\r\n};\r\n\r\nexport const getFactionByName = (name) => factions[name];\r\n","export default class Faction {\r\n    id = 0;\r\n    name = 'faction';\r\n    display = 'Faction';\r\n\r\n    constructor(properties) {\r\n        this.id = properties.id;\r\n        this.name = properties.name;\r\n        this.display = properties.display;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { bresenhamLine } from '../../utils/BresenhamLine';\r\nimport { Shadowcaster } from './Shadowcaster';\r\n\r\nexport class Eyes extends Component {\r\n    static properties = {\r\n        range: 5,\r\n    };\r\n\r\n    canSee(entity) {\r\n        const start = this.entity.position.getPos();\r\n        const end = entity.position.getPos();\r\n\r\n        const line = bresenhamLine(start.x, start.y, end.x, end.y);\r\n\r\n        if (line.length > this.range) {\r\n            return false;\r\n        }\r\n\r\n        return !line.some((segment) => {\r\n            return game.map\r\n                .getEntitiesAt(segment.x, segment.y)\r\n                .some((entity) => entity.has(Shadowcaster));\r\n        });\r\n    }\r\n\r\n    onTryDetectHostiles(evt) {\r\n        const position = game.map.getPosition(this.entity.id);\r\n\r\n        if (!position) {\r\n            return;\r\n        }\r\n\r\n        // get within square area\r\n        const targets = game.map\r\n            .getEntitiesInRange(position.x, position.y, this.range)\r\n            .filter((e) => {\r\n                if (!e.actor) {\r\n                    return false;\r\n                }\r\n                if (e.isDead) {\r\n                    return false;\r\n                }\r\n                if (!game.factions.areEntitiesHostile(this.entity, e)) {\r\n                    return false;\r\n                }\r\n\r\n                return this.canSee(e);\r\n            });\r\n\r\n        if (targets.length > 0) {\r\n            targets.forEach((e) => {\r\n                evt.data.targets.add(e);\r\n            });\r\n            evt.handle();\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\r\nimport { Particle } from './Particle';\r\n\r\nexport class ParticleEmitter extends Component {\r\n    static properties = {\r\n        particleData: {},\r\n        duration: 800,\r\n        rate: 2,\r\n        age: 0,\r\n        x: 0,\r\n        y: 0,\r\n        count: 0,\r\n    };\r\n\r\n    get isExpired() {\r\n        return this.age >= this.duration;\r\n    }\r\n\r\n    get percent() {\r\n        return this.age / this.duration;\r\n    }\r\n\r\n    createParticle() {\r\n        const particle = this.ecs.createEntity();\r\n\r\n        particle.add(Particle, {\r\n            ...this.particleData,\r\n            x: this.x,\r\n            y: this.y,\r\n        });\r\n\r\n        this.count += 1;\r\n\r\n        return particle;\r\n    }\r\n\r\n    frame(arr = []) {\r\n        const len = arr.length;\r\n        const chunks = 1 / len;\r\n\r\n        return Math.trunc(this.percent / chunks);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { spawnLoot } from '../../data/tables/LootSpawn';\r\n\r\nexport class LootDropper extends Component {\r\n    static properties = {\r\n        tables: [],\r\n    };\r\n\r\n    onDeath(evt) {\r\n        const pos = this.entity.position.getPos();\r\n\r\n        spawnLoot(this.tables, pos.x, pos.y);\r\n    }\r\n}\r\n","import WeightedTable from '../../utils/WeightedTable';\r\nimport { spawn } from '../Spawner';\r\nimport LootTableGoblin from './loot/LootTableGoblin';\r\nimport LootTableForest from './loot/LootTableForest';\r\nimport LootTableBruiser from './loot/LootTableBruiser';\r\n\r\nconst tables = {\r\n    TBL_LOOT_GOBLIN: LootTableGoblin,\r\n    TBL_LOOT_FOREST: LootTableForest,\r\n    TBL_LOOT_BRUISER: LootTableBruiser,\r\n};\r\n\r\nexport const getTable = (tableKey) => tables[tableKey];\r\n\r\nexport const pickLoot = (tableKeys = []) => {\r\n    const tables = tableKeys.map(getTable);\r\n    const table = WeightedTable.combine(tables);\r\n\r\n    return table.pick();\r\n};\r\n\r\nexport const spawnLoot = (tableKeys = [], x, y) => {\r\n    const spawnable = pickLoot(tableKeys);\r\n\r\n    return spawn(spawnable, x, y);\r\n};\r\n","import { randomInt } from './rand';\r\n\r\nexport default class WeightedTable {\r\n    rows = [];\r\n\r\n    get sum() {\r\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\r\n    }\r\n\r\n    pick() {\r\n        const r = randomInt(0, this.sum);\r\n\r\n        let currentW = 0;\r\n        const row = this.rows.find((row) => {\r\n            currentW += row.weight;\r\n\r\n            return currentW >= r;\r\n        });\r\n\r\n        if (row) {\r\n            return row.value;\r\n        }\r\n    }\r\n\r\n    chance(value) {\r\n        const row = this.get(value);\r\n\r\n        if (!row) {\r\n            return 0;\r\n        }\r\n\r\n        return row.weight / this.sum;\r\n    }\r\n\r\n    get(value) {\r\n        return this.rows.find((row) => row.value === value);\r\n    }\r\n\r\n    add(weight, value) {\r\n        const existing = this.get(value);\r\n\r\n        if (!existing) {\r\n            this.rows.push({\r\n                weight,\r\n                value,\r\n            });\r\n        } else {\r\n            // take maximum weight\r\n            const maxWeight = Math.max(existing.weight, weight);\r\n\r\n            existing.weight = maxWeight;\r\n        }\r\n\r\n        this.rows.sort((a, b) => a.weight - b.weight);\r\n    }\r\n\r\n    static combine(tables = []) {\r\n        const table = new WeightedTable();\r\n\r\n        tables.forEach((other) => {\r\n            other.rows.forEach((row) => table.add(row.weight, row.value));\r\n        });\r\n\r\n        return table;\r\n    }\r\n}\r\n","import WeightedTable from '../../../utils/WeightedTable';\r\nimport {\r\n    SPWN_AMULET,\r\n    SPWN_CLOTH_ARMOR,\r\n    SPWN_SHORTSWORD,\r\n    SPWN_STONE,\r\n    SPWN_VIAL_HONEY,\r\n} from '../../Spawnables';\r\n\r\nconst goblins = new WeightedTable();\r\n\r\ngoblins.add(3, SPWN_STONE);\r\ngoblins.add(2, SPWN_VIAL_HONEY);\r\ngoblins.add(5, SPWN_AMULET);\r\ngoblins.add(4, SPWN_CLOTH_ARMOR);\r\ngoblins.add(6, SPWN_SHORTSWORD);\r\n\r\nexport default goblins;\r\n","import WeightedTable from '../../../utils/WeightedTable';\r\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\r\n\r\nconst forest = new WeightedTable();\r\n\r\nforest.add(3, SPWN_STONE);\r\nforest.add(2, SPWN_VIAL_HONEY);\r\n\r\nexport default forest;\r\n","import WeightedTable from '../../../utils/WeightedTable';\r\nimport { SPWN_VIAL_HONEY, SPWN_WOOD_CLUB } from '../../Spawnables';\r\n\r\nconst bruiser = new WeightedTable();\r\n\r\nbruiser.add(10, SPWN_WOOD_CLUB);\r\nbruiser.add(5, SPWN_VIAL_HONEY);\r\n\r\nexport default bruiser;\r\n","import { Component } from 'geotic';\r\n\r\nexport class IsEquipped extends Component {\r\n    static properties = {\r\n        slotKey: '',\r\n        ownerId: 0,\r\n    };\r\n\r\n    get owner() {\r\n        return getEntityRef(this, 'ownerId');\r\n    }\r\n\r\n    set owner(value) {\r\n        setEntityRef(this, 'ownerId', value);\r\n    }\r\n\r\n    get slot() {\r\n        return this.owner.equipmentSlot[this.slotKey];\r\n    }\r\n\r\n    onDropped(evt) {\r\n        this.slot.unequip();\r\n    }\r\n\r\n    onThrown(evt) {\r\n        this.slot.unequip();\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\r\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\r\nimport { IsEquipped } from './IsEquipped';\r\n\r\nexport class Equipment extends Component {\r\n    static properties = {\r\n        slotTypes: [EQ_SLOT_BODY],\r\n    };\r\n\r\n    onTryEquip(evt) {\r\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter(\r\n            (slot) => {\r\n                return this.slotTypes.includes(slot.slotType);\r\n            }\r\n        );\r\n\r\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\r\n            header: this.entity.moniker.display,\r\n            icon: this.entity.glyph,\r\n            leadText: 'Select a slot',\r\n            list: slots,\r\n            onRenderRow: (slot, x, y, isSelected) => {\r\n                let text = slot.name;\r\n\r\n                if (!slot.isEmpty) {\r\n                    text += ` [${slot.content.moniker.display}]`;\r\n                }\r\n\r\n                if (isSelected) {\r\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\r\n                } else {\r\n                    game.renderer.drawText(x, y, `- ${text}`);\r\n                }\r\n            },\r\n            onSelect: (slot) => {\r\n                slot.unequip();\r\n                slot.equip(this.entity);\r\n                evt.data.interactor.fireEvent('energy-consumed', 200);\r\n                evt.handle();\r\n                game.screens.popScreen();\r\n            },\r\n        });\r\n    }\r\n\r\n    onTryUnequip(evt) {\r\n        const slotKey = this.entity.isEquipped.slotKey;\r\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\r\n\r\n        if (slot) {\r\n            slot.content = null;\r\n        }\r\n\r\n        evt.data.interactor.fireEvent('energy-consumed', 200);\r\n\r\n        this.entity.isEquipped.destroy();\r\n        evt.handle();\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        if (this.entity.has(IsEquipped)) {\r\n            evt.data.interactions.push({\r\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\r\n                evt: 'try-unequip',\r\n            });\r\n        } else {\r\n            evt.data.interactions.push({\r\n                name: 'Equip',\r\n                evt: 'try-equip',\r\n            });\r\n        }\r\n    }\r\n}\r\n","export const EQ_SLOT_HEAD = 'EQ_SLOT_HEAD';\r\nexport const EQ_SLOT_FACE = 'EQ_SLOT_FACE';\r\nexport const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\r\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\r\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\r\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\r\nexport const EQ_SLOT_HAND = 'EQ_SLOT_HAND';\r\nexport const EQ_SLOT_TAIL = 'EQ_SLOT_TAIL';\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\r\nimport { getWeaponType } from '../../data/WeaponTypes';\r\nimport { getEntityRef, setEntityRef } from '../../utils/ecs-refs';\r\nimport { IsEquipped } from './IsEquipped';\r\n\r\nexport class EquipmentSlot extends Component {\r\n    static allowMultiple = true;\r\n    static keyProperty = 'key';\r\n    static properties = {\r\n        name: 'Body',\r\n        key: 'body',\r\n        slotType: EQ_SLOT_BODY,\r\n        contentId: 0,\r\n        isPrimary: false,\r\n        defaultWpnType: null,\r\n    };\r\n\r\n    get content() {\r\n        return getEntityRef(this, 'contentId');\r\n    }\r\n\r\n    set content(value) {\r\n        setEntityRef(this, 'contentId', value);\r\n    }\r\n\r\n    get isEmpty() {\r\n        return !this.content;\r\n    }\r\n\r\n    onDestroyed() {\r\n        if (!this.isEmpty) {\r\n            this.content.destroy();\r\n        }\r\n    }\r\n\r\n    unequip() {\r\n        if (this.isEmpty) {\r\n            return false;\r\n        }\r\n\r\n        const content = this.content;\r\n\r\n        this.content = null;\r\n\r\n        content.isEquipped.destroy();\r\n        content.fireEvent('unequipped', {\r\n            interactor: this.entity,\r\n        });\r\n    }\r\n\r\n    equip(equipment) {\r\n        equipment.loot.take(this.entity);\r\n\r\n        equipment.add(IsEquipped, {\r\n            slotKey: this.key,\r\n            owner: this.entity,\r\n        });\r\n\r\n        this.content = equipment;\r\n\r\n        equipment.fireEvent('equipped', {\r\n            interactor: this.entity,\r\n        });\r\n    }\r\n\r\n    doMeleeAttack(target) {\r\n        if (this.isEmpty) {\r\n            if (this.defaultWpnType) {\r\n                const weaponType = getWeaponType(this.defaultWpnType);\r\n\r\n                weaponType.attack(this.entity, target);\r\n\r\n                this.entity.fireEvent('energy-consumed', 600);\r\n\r\n                return true;\r\n            }\r\n        } else {\r\n            const itemMelee = this.content.fireEvent('try-use-melee', {\r\n                interactor: this.entity,\r\n                target,\r\n            });\r\n\r\n            return itemMelee.data.success;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    doOffhandAttack(target) {\r\n        if (this.isEmpty) {\r\n            if (this.defaultWpnType) {\r\n                const weaponType = getWeaponType(this.defaultWpnType);\r\n\r\n                weaponType.offhandAttack(this.entity, target);\r\n\r\n                return true;\r\n            }\r\n        } else {\r\n            const itemMelee = this.content.fireEvent('try-use-melee-offhand', {\r\n                interactor: this.entity,\r\n                target,\r\n            });\r\n\r\n            return itemMelee.data.success;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onTryMelee(evt) {\r\n        const targetPos = evt.data.target.position.getPos();\r\n        const selfPos = this.entity.position.getPos();\r\n        const isAdjacent = game.map.isAdjacent(\r\n            selfPos.x,\r\n            selfPos.y,\r\n            targetPos.x,\r\n            targetPos.y\r\n        );\r\n\r\n        if (!isAdjacent) {\r\n            return;\r\n        }\r\n\r\n        if (this.isPrimary) {\r\n            if (this.doMeleeAttack(evt.data.target)) {\r\n                evt.data.success = true;\r\n            }\r\n        } else {\r\n            this.doOffhandAttack(evt.data.target);\r\n        }\r\n    }\r\n\r\n    onQuerySkillMod(evt) {\r\n        if (this.isEmpty) {\r\n            return;\r\n        }\r\n\r\n        this.content.fireEvent(`query-skill-mod-equipped`, {\r\n            skill: evt.data.skill,\r\n            modifiers: evt.data.modifiers,\r\n        });\r\n    }\r\n}\r\n","import {\r\n    DMG_TYPE_BLUDGEONING,\r\n    DMG_TYPE_PIERCING,\r\n    DMG_TYPE_SLASHING,\r\n} from './DamageTypes';\r\nimport {\r\n    WPN_FAMILY_AXE,\r\n    WPN_FAMILY_BLADE,\r\n    WPN_FAMILY_HAMMER,\r\n    WPN_FAMILY_POLEARM,\r\n} from './WeaponFamilies';\r\nimport WpnTypeBattleAxe from './weapons/WpnTypeBattleAxe';\r\nimport WpnTypeFangs from './weapons/WpnTypeFangs';\r\nimport WpnTypeClaw from './weapons/WpnTypeClaw';\r\nimport WpnTypeGreatsword from './weapons/WpnTypeGreatsword';\r\nimport WpnTypeMace from './weapons/WpnTypeMace';\r\nimport WpnTypeShortsword from './weapons/WpnTypeShortsword';\r\nimport WpnTypeUnarmed from './weapons/WpnTypeUnarmed';\r\n\r\n// hammer family\r\nexport const WPN_TYPE_WAR_HAMMER = 'WPN_TYPE_WAR_HAMMER';\r\nexport const WPN_TYPE_SLEDGE_HAMMER = 'WPN_TYPE_SLEDGE_HAMMER';\r\n// cudgel family\r\nexport const WPN_TYPE_CLUB = 'WPN_TYPE_CLUB';\r\nexport const WPN_TYPE_MACE = 'WPN_TYPE_MACE';\r\n// axe family\r\nexport const WPN_TYPE_HEAVY_AXE = 'WPN_TYPE_HEAVY_AXE';\r\nexport const WPN_TYPE_BATTLE_AXE = 'WPN_TYPE_BATTLE_AXE';\r\n// blade family\r\nexport const WPN_TYPE_GREATSWORD = 'WPN_TYPE_GREATSWORD';\r\nexport const WPN_TYPE_SHORTSWORD = 'WPN_TYPE_SHORTSWORD';\r\nexport const WPN_TYPE_DAGGER = 'WPN_TYPE_DAGGER';\r\n// polearm family\r\nexport const WPN_TYPE_STAFF = 'WPN_TYPE_STAFF';\r\nexport const WPN_TYPE_HALBERD = 'WPN_TYPE_HALBERD';\r\nexport const WPN_TYPE_JAVELIN = 'WPN_TYPE_JAVELIN';\r\n// unarmed family\r\nexport const WPN_TYPE_UNARMED = 'WPN_TYPE_UNARMED';\r\nexport const WPN_TYPE_FANGS = 'WPN_TYPE_FANGS';\r\nexport const WPN_TYPE_CLAW = 'WPN_TYPE_CLAW';\r\n\r\nconst lookup = {\r\n    [WPN_TYPE_UNARMED]: new WpnTypeUnarmed(),\r\n    [WPN_TYPE_FANGS]: new WpnTypeFangs(),\r\n    [WPN_TYPE_CLAW]: new WpnTypeClaw(),\r\n    [WPN_TYPE_WAR_HAMMER]: {\r\n        name: 'War hammer',\r\n        family: WPN_FAMILY_HAMMER,\r\n        key: WPN_TYPE_WAR_HAMMER,\r\n        damageType: DMG_TYPE_BLUDGEONING,\r\n    },\r\n    [WPN_TYPE_SLEDGE_HAMMER]: {\r\n        name: 'Sledge hammer',\r\n        family: WPN_FAMILY_HAMMER,\r\n        key: WPN_TYPE_SLEDGE_HAMMER,\r\n        damageType: DMG_TYPE_BLUDGEONING,\r\n    },\r\n    [WPN_TYPE_CLUB]: {\r\n        name: 'Club',\r\n        family: WPN_FAMILY_HAMMER,\r\n        key: WPN_TYPE_CLUB,\r\n        damageType: DMG_TYPE_BLUDGEONING,\r\n    },\r\n    [WPN_TYPE_MACE]: {\r\n        name: 'Mace',\r\n        family: WPN_FAMILY_HAMMER,\r\n        key: WPN_TYPE_MACE,\r\n        damageType: DMG_TYPE_BLUDGEONING,\r\n    },\r\n    [WPN_TYPE_HEAVY_AXE]: {\r\n        name: 'Heavy axe',\r\n        family: WPN_FAMILY_AXE,\r\n        key: WPN_TYPE_HEAVY_AXE,\r\n        damageType: DMG_TYPE_SLASHING,\r\n    },\r\n    [WPN_TYPE_BATTLE_AXE]: new WpnTypeBattleAxe(),\r\n    [WPN_TYPE_GREATSWORD]: new WpnTypeGreatsword(),\r\n    [WPN_TYPE_SHORTSWORD]: new WpnTypeShortsword(),\r\n    [WPN_TYPE_MACE]: new WpnTypeMace(),\r\n    [WPN_TYPE_DAGGER]: {\r\n        name: 'Dagger',\r\n        family: WPN_FAMILY_BLADE,\r\n        key: WPN_TYPE_DAGGER,\r\n        damageType: DMG_TYPE_SLASHING,\r\n    },\r\n    [WPN_TYPE_STAFF]: {\r\n        name: 'Staff',\r\n        family: WPN_FAMILY_POLEARM,\r\n        key: WPN_TYPE_STAFF,\r\n        damageType: DMG_TYPE_BLUDGEONING,\r\n    },\r\n    [WPN_TYPE_HALBERD]: {\r\n        name: 'Halberd',\r\n        family: WPN_FAMILY_POLEARM,\r\n        key: WPN_TYPE_HALBERD,\r\n        damageType: DMG_TYPE_PIERCING,\r\n    },\r\n    [WPN_TYPE_JAVELIN]: {\r\n        name: 'Javelin',\r\n        family: WPN_FAMILY_POLEARM,\r\n        key: WPN_TYPE_JAVELIN,\r\n        damageType: DMG_TYPE_PIERCING,\r\n    },\r\n};\r\n\r\nexport const getWeaponType = (type) => lookup[type];\r\nexport const getWeaponTypeName = (type) => lookup[type].name;\r\nexport const getWeaponTypeFamily = (type) => lookup[type].family;\r\nexport const getWeaponTypeDmgType = (type) => lookup[type].damageType;\r\n","export const WPN_FAMILY_HAMMER = 'WPN_FAMILY_HAMMER';\r\nexport const WPN_FAMILY_AXE = 'WPN_FAMILY_AXE';\r\nexport const WPN_FAMILY_BLADE = 'WPN_FAMILY_BLADE';\r\nexport const WPN_FAMILY_ARCHERY = 'WPN_FAMILY_ARCHERY';\r\nexport const WPN_FAMILY_POLEARM = 'WPN_FAMILY_POLEARM';\r\nexport const WPN_FAMILY_UNARMED = 'WPN_FAMILY_UNARMED';\r\nexport const WPN_FAMILY_CUDGEL = 'WPN_FAMILY_CUDGEL';\r\n\r\nconst lookup = {\r\n    [WPN_FAMILY_HAMMER]: {\r\n        name: 'Hammer',\r\n    },\r\n    [WPN_FAMILY_AXE]: {\r\n        name: 'Axe',\r\n    },\r\n    [WPN_FAMILY_BLADE]: {\r\n        name: 'Blade',\r\n    },\r\n    [WPN_FAMILY_ARCHERY]: {\r\n        name: 'Archery',\r\n    },\r\n    [WPN_FAMILY_POLEARM]: {\r\n        name: 'Polearm',\r\n    },\r\n    [WPN_FAMILY_UNARMED]: {\r\n        name: 'Unarmed',\r\n    },\r\n    [WPN_FAMILY_CUDGEL]: {\r\n        name: 'Cudgel',\r\n    },\r\n};\r\n\r\nexport const getWeaponFamilyName = (family) => lookup[family].name;\r\n","import { randomBool } from '../../utils/rand';\r\nimport Attack from '../Attack';\r\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\r\nimport { getSkillValue, SKILL_AXE } from '../Skills';\r\nimport { WPN_FAMILY_AXE } from '../WeaponFamilies';\r\nimport { WPN_TYPE_BATTLE_AXE } from '../WeaponTypes';\r\nimport WeaponType from './WeaponType';\r\n\r\nexport default class WpnTypeBattleAxe extends WeaponType {\r\n    constructor() {\r\n        super({\r\n            key: WPN_TYPE_BATTLE_AXE,\r\n            name: 'Battle axe',\r\n            family: WPN_FAMILY_AXE,\r\n            damageType: DMG_TYPE_SLASHING,\r\n            skill: SKILL_AXE,\r\n        });\r\n    }\r\n\r\n    _createAttack(attacker, defender, weapon) {\r\n        const str = getSkillValue(this.skill, attacker);\r\n        const die = weapon.roll();\r\n        const damage = die + str;\r\n\r\n        return new Attack({\r\n            attacker,\r\n            defender,\r\n            weaponName: weapon.name,\r\n            damage,\r\n            damageType: this.damageType,\r\n        });\r\n    }\r\n\r\n    attack(attacker, defender, weapon) {\r\n        const attack = this._createAttack(attacker, defender, weapon);\r\n        const result = defender.fireEvent('attacked', { attack });\r\n        const attacks = [attack];\r\n\r\n        if (!result.data.isDodged && !result.data.isKilled && randomBool()) {\r\n            const secondAttack = this._createAttack(attacker, defender, weapon);\r\n\r\n            attacks.push(secondAttack);\r\n\r\n            defender.fireEvent('attacked', { attack });\r\n        }\r\n\r\n        return attacks;\r\n    }\r\n}\r\n","import { randomWeightedBool } from '../../utils/rand';\r\nimport { getSkillValue } from '../Skills';\r\nimport { getWeaponFamilyName } from '../WeaponFamilies';\r\n\r\nexport default class WeaponType {\r\n    constructor(data) {\r\n        this.name = data.name;\r\n        this.family = data.family;\r\n        this.key = data.key;\r\n        this.damageType = data.damageType;\r\n        this.skill = data.skill;\r\n    }\r\n\r\n    weaponDamageText(user, weapon) {\r\n        let text = `1d${weapon.die}`;\r\n        const skill = getSkillValue(this.skill, user);\r\n        const mod = weapon.modifier + skill;\r\n\r\n        if (mod) {\r\n            if (mod > 0) {\r\n                text += ` + ${mod}`;\r\n            } else {\r\n                text += ` - ${Math.abs(mod)}`;\r\n            }\r\n        }\r\n\r\n        return text;\r\n    }\r\n\r\n    getShortDescription(user, weapon) {\r\n        const fam = getWeaponFamilyName(this.family);\r\n\r\n        return `${fam}, ${this.weaponDamageText(user, weapon)}`;\r\n    }\r\n\r\n    getAttacks(attacker, defender, weapon) {\r\n        return [];\r\n    }\r\n\r\n    attack(attacker, defender, weapon) {\r\n        const attacks = this.getAttacks(attacker, defender, weapon);\r\n\r\n        return attacks.map((attack) => {\r\n            attack.defender.fireEvent('attacked', { attack });\r\n        });\r\n    }\r\n\r\n    offhandAttack(attacker, defender, weapon) {\r\n        if (randomWeightedBool(.2)) {\r\n            this.attack(attacker, defender, weapon);\r\n        }\r\n    }\r\n}\r\n","import { pickRandom, randomInt } from '../../utils/rand';\r\nimport Attack from '../Attack';\r\nimport { DMG_TYPE_PIERCING } from '../DamageTypes';\r\nimport { getSkillValue, SKILL_BRAWLING } from '../Skills';\r\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\r\nimport { WPN_TYPE_FANGS } from '../WeaponTypes';\r\nimport WeaponType from './WeaponType';\r\n\r\nexport default class WpnTypeFangs extends WeaponType {\r\n    constructor() {\r\n        super({\r\n            key: WPN_TYPE_FANGS,\r\n            name: 'Fangs',\r\n            family: WPN_FAMILY_UNARMED,\r\n            damageType: DMG_TYPE_PIERCING,\r\n            skill: SKILL_BRAWLING,\r\n        });\r\n    }\r\n\r\n    getAttacks(attacker, defender, weapon) {\r\n        const skill = getSkillValue(this.skill, attacker);\r\n        const die = randomInt(1, 8);\r\n        const damage = die + skill;\r\n\r\n        return [\r\n            new Attack({\r\n                attacker,\r\n                defender,\r\n                weaponName: pickRandom(['gnaw', 'bite']),\r\n                damage,\r\n                damageType: this.damageType,\r\n            }),\r\n        ];\r\n    }\r\n}\r\n","import { pickRandom, randomInt } from '../../utils/rand';\r\nimport Attack from '../Attack';\r\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\r\nimport { getSkillValue, SKILL_BRAWLING } from '../Skills';\r\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\r\nimport { WPN_TYPE_CLAW } from '../WeaponTypes';\r\nimport WeaponType from './WeaponType';\r\n\r\nexport default class WpnTypeClaw extends WeaponType {\r\n    constructor() {\r\n        super({\r\n            key: WPN_TYPE_CLAW,\r\n            name: 'Claws',\r\n            family: WPN_FAMILY_UNARMED,\r\n            damageType: DMG_TYPE_SLASHING,\r\n            skill: SKILL_BRAWLING,\r\n        });\r\n    }\r\n\r\n    getAttacks(attacker, defender, weapon) {\r\n        const skill = getSkillValue(this.skill, attacker);\r\n        const die = randomInt(1, 8);\r\n        const damage = die + skill;\r\n\r\n        return [\r\n            new Attack({\r\n                attacker,\r\n                defender,\r\n                weaponName: pickRandom(['claw']),\r\n                damage,\r\n                damageType: this.damageType,\r\n            }),\r\n        ];\r\n    }\r\n}\r\n","import { game } from '../../core/Game';\r\nimport { getAdjacentDeltas, directionFromDelta } from '../../enums/Directions';\r\nimport Attack from '../Attack';\r\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\r\nimport { getSkillValue, SKILL_BLADE } from '../Skills';\r\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\r\nimport { WPN_TYPE_GREATSWORD } from '../WeaponTypes';\r\nimport WeaponType from './WeaponType';\r\n\r\nexport default class WpnTypeGreatsword extends WeaponType {\r\n    constructor() {\r\n        super({\r\n            key: WPN_TYPE_GREATSWORD,\r\n            name: 'Greatsword',\r\n            family: WPN_FAMILY_BLADE,\r\n            damageType: DMG_TYPE_SLASHING,\r\n            skill: SKILL_BLADE,\r\n        });\r\n    }\r\n\r\n    _getNeighborAttacks(attacker, defender, weapon, damage) {\r\n        const attackerPos = attacker.position.getPos();\r\n        const defenderPos = defender.position.getPos();\r\n        const deltaX = defenderPos.x - attackerPos.x;\r\n        const deltaY = defenderPos.y - attackerPos.y;\r\n        const direction = directionFromDelta(deltaX, deltaY);\r\n        const adjacentDeltas = getAdjacentDeltas(direction.key);\r\n\r\n        return adjacentDeltas\r\n            .map((delta) =>\r\n                game.map.getEntitiesAt(\r\n                    attackerPos.x + delta.x,\r\n                    attackerPos.y + delta.y\r\n                )\r\n            )\r\n            .flat()\r\n            .filter((e) => game.factions.areEntitiesHostile(e, attacker))\r\n            .map((hostile) => {\r\n                return new Attack({\r\n                    attacker,\r\n                    ignoreDodge: true,\r\n                    defender: hostile,\r\n                    weaponName: weapon.name,\r\n                    damage: Math.floor(damage / 2),\r\n                    damageType: this.damageType,\r\n                });\r\n            });\r\n    }\r\n\r\n    _tryAttackDefender(attacker, defender, weapon, damage) {\r\n        const attack = new Attack({\r\n            attacker,\r\n            defender,\r\n            weaponName: weapon.name,\r\n            damage,\r\n            damageType: this.damageType,\r\n        });\r\n\r\n        return defender.fireEvent('attacked', { attack });\r\n    }\r\n\r\n    attack(attacker, defender, weapon) {\r\n        const str = getSkillValue(this.skill, attacker);\r\n        const die = weapon.roll();\r\n        const damage = die + str;\r\n        const result = this._tryAttackDefender(\r\n            attacker,\r\n            defender,\r\n            weapon,\r\n            damage\r\n        );\r\n\r\n        const attacks = [result];\r\n\r\n        if (!result.data.isDodged) {\r\n            const neighborAttacks = this._getNeighborAttacks(\r\n                attacker,\r\n                defender,\r\n                weapon,\r\n                damage\r\n            );\r\n\r\n            neighborAttacks.forEach((attack) => {\r\n                attacks.push(attack);\r\n                attack.defender.fireEvent('attacked', { attack });\r\n            });\r\n        }\r\n\r\n        return attacks;\r\n    }\r\n}\r\n","import { randomWeightedBool } from '../../utils/rand';\r\nimport Attack from '../Attack';\r\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\r\nimport { getSkillValue, SKILL_CUDGEL } from '../Skills';\r\nimport { addStatus, STATUS_STUNNED } from '../Statuses';\r\nimport { WPN_FAMILY_CUDGEL } from '../WeaponFamilies';\r\nimport { WPN_TYPE_MACE } from '../WeaponTypes';\r\nimport WeaponType from './WeaponType';\r\n\r\nexport default class WpnTypeMace extends WeaponType {\r\n    constructor() {\r\n        super({\r\n            key: WPN_TYPE_MACE,\r\n            name: 'Mace',\r\n            family: WPN_FAMILY_CUDGEL,\r\n            damageType: DMG_TYPE_BLUDGEONING,\r\n            skill: SKILL_CUDGEL,\r\n        });\r\n    }\r\n\r\n    _createAttack(attacker, defender, weapon) {\r\n        const str = getSkillValue(this.skill, attacker);\r\n        const die = weapon.roll();\r\n        const damage = die + str;\r\n\r\n        return new Attack({\r\n            attacker,\r\n            defender,\r\n            weaponName: weapon.name,\r\n            damage,\r\n            damageType: this.damageType,\r\n        });\r\n    }\r\n\r\n    attack(attacker, defender, weapon) {\r\n        const attack = this._createAttack(attacker, defender, weapon);\r\n        const result = defender.fireEvent('attacked', { attack });\r\n        const attacks = [attack];\r\n\r\n        if (\r\n            !result.data.isDodged &&\r\n            !result.data.isKilled &&\r\n            randomWeightedBool(0.2)\r\n        ) {\r\n            addStatus(STATUS_STUNNED, defender, {\r\n                duration: 1000,\r\n            });\r\n        }\r\n\r\n        return attacks;\r\n    }\r\n}\r\n","import { Status } from '../ecs/components';\r\nimport StatusBleeding from './statuses/StatusBleeding';\r\nimport StatusRegeneration from './statuses/StatusRegeneration';\r\nimport StatusStunned from './statuses/StatusStunned';\r\n\r\nexport const STATUS_BLEEDING = 'STATUS_BLEEDING';\r\nexport const STATUS_STUNNED = 'STATUS_STUNNED';\r\nexport const STATUS_REGENERATION = 'STATUS_REGENERATION';\r\n\r\nconst lookup = {\r\n    STATUS_BLEEDING: new StatusBleeding(),\r\n    STATUS_STUNNED: new StatusStunned(),\r\n    STATUS_REGENERATION: new StatusRegeneration(),\r\n};\r\n\r\nexport const getStatus = (key) => lookup[key];\r\nexport const addStatus = (key, entity, properties = {}) => {\r\n    return entity.add(Status, {\r\n        ...properties,\r\n        key,\r\n    });\r\n};\r\n","import { LIQUID_BLOOD } from '../../enums/LiquidTypes';\r\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\r\nimport { SPWN_POOL_LIQUID } from '../Spawnables';\r\nimport { spawn } from '../Spawner';\r\nimport { STATUS_BLEEDING } from '../Statuses';\r\nimport Status from './Status';\r\n\r\nexport default class StatusBleeding extends Status {\r\n    constructor() {\r\n        const glyph = {\r\n            fg1: '#f42323',\r\n            fg2: '#411010',\r\n            bg: null,\r\n            ch: 's',\r\n        };\r\n        super(STATUS_BLEEDING, 'Bleeding', STATUS_TYPE_CONDITION, glyph);\r\n        this.isDot = true;\r\n    }\r\n\r\n    getDmgPerTurn(potency) {\r\n        return 3 * potency + 0.5;\r\n    }\r\n\r\n    getPipCount(potency) {\r\n        return Math.round(2 * potency);\r\n    }\r\n\r\n    update(ticks, entity, status) {\r\n        const tick = Math.min(ticks, status.remainingLifetime());\r\n        const dmgPerTurn = this.getDmgPerTurn(status.potency);\r\n        const damage = dmgPerTurn * (tick / 1000);\r\n\r\n        entity.health.applyDamage(damage);\r\n\r\n        const position = entity.position.getPos();\r\n\r\n        spawn(SPWN_POOL_LIQUID, position.x, position.y, {\r\n            content: LIQUID_BLOOD,\r\n            volume: Math.ceil(damage * 6),\r\n        });\r\n\r\n        status.lifetime += tick;\r\n    }\r\n}\r\n","export const STATUS_TYPE_CONDITION = 'STATUS_TYPE_CONDITION';\r\nexport const STATUS_TYPE_BOON = 'STATUS_TYPE_BOON';\r\n","export default class Status {\r\n    isDot = false;\r\n\r\n    getPipCount(potency) {\r\n        return 0;\r\n    }\r\n\r\n    constructor(key, name, type, glyph) {\r\n        this.key = key;\r\n        this.name = name;\r\n        this.type = type;\r\n        this.glyph = glyph;\r\n    }\r\n}\r\n","import { STATUS_TYPE_BOON } from '../../enums/StatusTypes';\r\nimport { STATUS_REGENERATION } from '../Statuses';\r\nimport Status from './Status';\r\n\r\nexport default class StatusRegeneration extends Status {\r\n    constructor() {\r\n        const glyph = {\r\n            fg1: '#6baf70',\r\n            fg2: '#9c9432',\r\n            bg: null,\r\n            ch: '}',\r\n        };\r\n        super(STATUS_REGENERATION, 'Regeneration', STATUS_TYPE_BOON, glyph);\r\n        this.isDot = true;\r\n    }\r\n\r\n    update(ticks, entity, status) {\r\n        const tick = Math.min(ticks, status.remainingLifetime());\r\n        const hpPerTurn = 5;\r\n        const value = Math.floor(hpPerTurn * (tick / 1000));\r\n\r\n        entity.fireEvent('heal', {\r\n            value,\r\n        });\r\n\r\n        status.lifetime += tick;\r\n    }\r\n}\r\n","import { game } from '../../core/Game';\r\nimport { IsIncapacitated } from '../../ecs/components';\r\nimport { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\r\nimport { STATUS_STUNNED } from '../Statuses';\r\nimport Status from './Status';\r\n\r\nexport default class StatusStunned extends Status {\r\n    constructor() {\r\n        const glyph = {\r\n            fg1: '#daa53a',\r\n            fg2: '#f2da97',\r\n            bg: null,\r\n            ch: '|',\r\n        };\r\n        super(STATUS_STUNNED, 'Stunned', STATUS_TYPE_CONDITION, glyph);\r\n    }\r\n\r\n    update(ticks, entity, status) {\r\n        status.lifetime += ticks;\r\n\r\n        if (!entity.isIncapacitated) {\r\n            entity.add(IsIncapacitated);\r\n\r\n            const pos = entity.position.getPos();\r\n\r\n            game.particles.createParticle(pos.x, pos.y, {\r\n                lifetime: 140,\r\n                fg1s: ['yellow'],\r\n                glyphs: ['*'],\r\n            });\r\n        }\r\n\r\n        if (status.isCompleted()) {\r\n            entity.isIncapacitated.destroy();\r\n        }\r\n    }\r\n}\r\n","import Attack from '../Attack';\r\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\r\nimport { getSkillValue, SKILL_BLADE } from '../Skills';\r\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\r\nimport { WPN_TYPE_SHORTSWORD } from '../WeaponTypes';\r\nimport WeaponType from './WeaponType';\r\n\r\nexport default class WpnTypeShortsword extends WeaponType {\r\n    constructor() {\r\n        super({\r\n            key: WPN_TYPE_SHORTSWORD,\r\n            name: 'Shortsword',\r\n            family: WPN_FAMILY_BLADE,\r\n            damageType: DMG_TYPE_SLASHING,\r\n            skill: SKILL_BLADE,\r\n        });\r\n    }\r\n\r\n    getAttacks(attacker, defender, weapon) {\r\n        const str = getSkillValue(this.skill, attacker);\r\n        const die = weapon.roll();\r\n        const damage = die + str;\r\n\r\n        return [\r\n            new Attack({\r\n                attacker,\r\n                defender,\r\n                weaponName: weapon.name,\r\n                damage,\r\n                damageType: this.damageType,\r\n            }),\r\n        ];\r\n    }\r\n}\r\n","import { pickRandom, randomInt } from '../../utils/rand';\r\nimport Attack from '../Attack';\r\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\r\nimport { getSkillValue, SKILL_BRAWLING } from '../Skills';\r\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\r\nimport { WPN_TYPE_UNARMED } from '../WeaponTypes';\r\nimport WeaponType from './WeaponType';\r\n\r\nexport default class WpnTypeUnarmed extends WeaponType {\r\n    constructor() {\r\n        super({\r\n            key: WPN_TYPE_UNARMED,\r\n            name: 'Unarmed',\r\n            family: WPN_FAMILY_UNARMED,\r\n            damageType: DMG_TYPE_BLUDGEONING,\r\n            skill: SKILL_BRAWLING,\r\n        });\r\n    }\r\n\r\n    getAttacks(attacker, defender, weapon) {\r\n        const brawling = getSkillValue(this.skill, attacker);\r\n        const die = randomInt(1, 4);\r\n        const damage = die + brawling;\r\n\r\n        return [\r\n            new Attack({\r\n                attacker,\r\n                defender,\r\n                weaponName: pickRandom(['punch', 'kick']),\r\n                damage,\r\n                damageType: this.damageType,\r\n            }),\r\n        ];\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { capitalize } from 'rot-js/lib/util';\r\nimport {\r\n    getStatName,\r\n    STAT_ATHLETICISM,\r\n    STAT_FINESSE,\r\n    STAT_STRENGTH,\r\n    STAT_TRICKERY,\r\n    STAT_FAITH,\r\n    getStatAbbreviation,\r\n} from '../../data/Stats';\r\n\r\nexport class Stats extends Component {\r\n    static properties = {\r\n        baseStrength: 0,\r\n        baseFinesse: 0,\r\n        baseAthleticism: 0,\r\n        baseTrickery: 0,\r\n        baseFaith: 0,\r\n    };\r\n\r\n    _sumMods(modifiers) {\r\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\r\n    }\r\n\r\n    getStatModifiers(stat) {\r\n        const evt = this.entity.fireEvent(`query-stat-mod`, {\r\n            name: getStatName(stat),\r\n            stat,\r\n            modifiers: [],\r\n        });\r\n\r\n        return evt.data.modifiers;\r\n    }\r\n\r\n    getStatModifierSum(stat) {\r\n        const mods = this.getStatModifiers(stat);\r\n\r\n        return this._sumMods(mods);\r\n    }\r\n\r\n    data(stat) {\r\n        const name = getStatName(stat);\r\n        const abbreviation = getStatAbbreviation(stat);\r\n        const modifiers = this.getStatModifiers(stat);\r\n        const base = this[`base${capitalize(name)}`];\r\n        const modSum = this._sumMods(modifiers);\r\n        const sum = base + modSum;\r\n\r\n        return {\r\n            stat,\r\n            abbreviation,\r\n            name,\r\n            modifiers,\r\n            base,\r\n            sum,\r\n            modSum,\r\n        };\r\n    }\r\n\r\n    all() {\r\n        return {\r\n            strength: this.data(STAT_STRENGTH),\r\n            finesse: this.data(STAT_FINESSE),\r\n            athleticism: this.data(STAT_ATHLETICISM),\r\n            trickery: this.data(STAT_TRICKERY),\r\n            faith: this.data(STAT_FAITH),\r\n        };\r\n    }\r\n\r\n    strength() {\r\n        const mod = this.getStatModifierSum(STAT_STRENGTH);\r\n\r\n        return this.baseStrength + mod;\r\n    }\r\n\r\n    finesse() {\r\n        const mod = this.getStatModifierSum(STAT_FINESSE);\r\n\r\n        return this.baseFinesse + mod;\r\n    }\r\n\r\n    athleticism() {\r\n        const mod = this.getStatModifierSum(STAT_ATHLETICISM);\r\n\r\n        return this.baseAthleticism + mod;\r\n    }\r\n\r\n    trickery() {\r\n        const mod = this.getStatModifierSum(STAT_TRICKERY);\r\n\r\n        return this.baseTrickery + mod;\r\n    }\r\n\r\n    faith() {\r\n        const mod = this.getStatModifierSum(STAT_FAITH);\r\n\r\n        return this.baseFaith + mod;\r\n    }\r\n}\r\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { Component } from 'geotic';\r\nimport { SKILL_SPEED } from '../../data/Skills';\r\nimport { getRaceData, RACE_HUMAN } from '../../data/Races';\r\n\r\nexport class Race extends Component {\r\n    static properties = {\r\n        key: RACE_HUMAN,\r\n    };\r\n\r\n    data() {\r\n        return getRaceData(this.key);\r\n    }\r\n\r\n    get name() {\r\n        return this.data().name;\r\n    }\r\n\r\n    get speed() {\r\n        return this.data().speed;\r\n    }\r\n\r\n    getModifier(stat) {\r\n        return this.data()[stat];\r\n    }\r\n\r\n    onQueryStatMod(evt) {\r\n        const mod = this.getModifier(evt.data.stat);\r\n\r\n        if (mod !== 0) {\r\n            evt.data.modifiers.push({\r\n                source: this.name,\r\n                mod,\r\n            });\r\n        }\r\n    }\r\n\r\n    onQuerySkillMod(evt) {\r\n        if (evt.data.skill === SKILL_SPEED) {\r\n            const mod = this.speed;\r\n\r\n            evt.data.modifiers.push({\r\n                source: this.name,\r\n                mod,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import RaceData from './RaceData';\r\n\r\nexport const RACE_HUMAN = 'RACE_HUMAN';\r\nexport const RACE_GOBLIN = 'RACE_GOBLIN';\r\nexport const RACE_SNAKE = 'RACE_SNAKE';\r\nexport const RACE_BEAR = 'RACE_BEAR';\r\n\r\nconst lookup = {\r\n    [RACE_HUMAN]: new RaceData({\r\n        name: 'Human',\r\n        key: RACE_HUMAN,\r\n        speed: 1,\r\n        STAT_STRENGTH: 1,\r\n        STAT_FINESSE: 1,\r\n        STAT_ATHLETICISM: 1,\r\n        STAT_TRICKERY: 1,\r\n        STAT_FAITH: 0,\r\n    }),\r\n    [RACE_GOBLIN]: new RaceData({\r\n        name: 'Goblin',\r\n        key: RACE_GOBLIN,\r\n        speed: 2,\r\n        STAT_STRENGTH: -1,\r\n        STAT_FINESSE: 2,\r\n        STAT_ATHLETICISM: 1,\r\n        STAT_TRICKERY: 2,\r\n        STAT_FAITH: 0,\r\n    }),\r\n    [RACE_SNAKE]: new RaceData({\r\n        name: 'Snake',\r\n        key: RACE_SNAKE,\r\n        speed: 2,\r\n        STAT_STRENGTH: -2,\r\n        STAT_FINESSE: 3,\r\n        STAT_ATHLETICISM: -1,\r\n        STAT_TRICKERY: 3,\r\n        STAT_FAITH: 0,\r\n    }),\r\n    [RACE_BEAR]: new RaceData({\r\n        name: 'Bear',\r\n        key: RACE_BEAR,\r\n        speed: 2,\r\n        STAT_STRENGTH: 5,\r\n        STAT_FINESSE: -1,\r\n        STAT_ATHLETICISM: 5,\r\n        STAT_TRICKERY: -2,\r\n        STAT_FAITH: -2,\r\n    }),\r\n};\r\n\r\nexport const getRaceData = (name) => lookup[name];\r\n","export default class RaceData {\r\n    name = '';\r\n    speed = 1;\r\n    key = 1;\r\n    STAT_STRENGTH = 0;\r\n    STAT_FINESSE = 0;\r\n    STAT_ATHLETICISM = 0;\r\n    STAT_TRICKERY = 0;\r\n    STAT_FAITH = 0;\r\n\r\n    constructor(data) {\r\n        this.name = data.name || '';\r\n        this.speed = data.speed || 1;\r\n        this.key = data.key;\r\n\r\n        this.STAT_STRENGTH = data.STAT_STRENGTH || 0;\r\n        this.STAT_FINESSE = data.STAT_FINESSE || 0;\r\n        this.STAT_ATHLETICISM = data.STAT_ATHLETICISM || 0;\r\n        this.STAT_TRICKERY = data.STAT_TRICKERY || 0;\r\n        this.STAT_FAITH = data.STAT_FAITH || 0;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport {\r\n    getWeaponType,\r\n    getWeaponTypeDmgType,\r\n    getWeaponTypeFamily,\r\n    getWeaponTypeName,\r\n} from '../../data/WeaponTypes';\r\nimport { randomInt } from '../../utils/rand';\r\n\r\nexport class Weapon extends Component {\r\n    static properties = {\r\n        weaponType: 'WPN_TYPE_DAGGER',\r\n        die: 6,\r\n        modifier: 0,\r\n        cost: 600,\r\n    };\r\n\r\n    get name() {\r\n        return getWeaponTypeName(this.weaponType);\r\n    }\r\n\r\n    get family() {\r\n        return getWeaponTypeFamily(this.weaponType);\r\n    }\r\n\r\n    get damageType() {\r\n        return getWeaponTypeDmgType(this.weaponType);\r\n    }\r\n\r\n    getShortDescription(user) {\r\n        return getWeaponType(this.weaponType).getShortDescription(user, this);\r\n    }\r\n\r\n    roll() {\r\n        const r = randomInt(1, this.die);\r\n\r\n        return r + this.modifier;\r\n    }\r\n\r\n    onTryUseMelee(evt) {\r\n        const weaponType = getWeaponType(this.weaponType);\r\n\r\n        weaponType.attack(evt.data.interactor, evt.data.target, this);\r\n\r\n        evt.data.interactor.fireEvent('energy-consumed', this.cost);\r\n\r\n        evt.data.success = true;\r\n    }\r\n\r\n    onTryUseMeleeOffhand(evt) {\r\n        const weaponType = getWeaponType(this.weaponType);\r\n\r\n        weaponType.offhandAttack(evt.data.interactor, evt.data.target, this);\r\n\r\n        evt.data.success = true;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { STATUS_BLEEDING } from '../../data/Statuses';\r\n\r\nexport class Status extends Component {\r\n    static allowMultiple = true;\r\n    static properties = {\r\n        key: STATUS_BLEEDING,\r\n        duration: 4000,\r\n        lifetime: 0,\r\n        potency: 0.5,\r\n    };\r\n\r\n    remainingLifetime() {\r\n        return this.duration - this.lifetime;\r\n    }\r\n\r\n    isCompleted() {\r\n        return this.lifetime >= this.duration;\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Ground extends Component {}\r\n","import { Component } from 'geotic';\r\n\r\nexport class IsIncapacitated extends Component {}\r\n","import { Component } from 'geotic';\r\nimport { statCheck, STAT_FINESSE } from '../../data/Stats';\r\n\r\nexport class SharpTrap extends Component {\r\n    static properties = {\r\n        challenge: 15,\r\n    };\r\n\r\n    test(entity) {\r\n        return statCheck(STAT_FINESSE, entity, this.challenge);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class EquippedSkillMod extends Component {\r\n    static allowMultiple = true;\r\n    static properties = {\r\n        SKILL_ARMOR: 0,\r\n        SKILL_HEALTH: 0,\r\n        SKILL_SPEED: 0,\r\n        SKILL_THROWING: 0,\r\n        SKILL_DODGE: 0,\r\n        SKILL_BRAWLING: 0,\r\n        SKILL_AXE: 0,\r\n        SKILL_BLADE: 0,\r\n        SKILL_CUDGEL: 0,\r\n    };\r\n\r\n    onQuerySkillModEquipped(evt) {\r\n        const mod = this[evt.data.skill];\r\n\r\n        if (mod) {\r\n            evt.data.modifiers.push({\r\n                source: this.entity.moniker.name,\r\n                mod,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { randomWeightedBool } from '../../utils/rand';\r\nimport { Fire } from './Fire';\r\n\r\nexport class Combustible extends Component {\r\n    static properties = {\r\n        fuel: 200,\r\n        flashPoint: 200,\r\n        spawnableRemains: null,\r\n        burnRate: 5,\r\n    };\r\n\r\n    get isOnFire() {\r\n        return !!this.entity.fire;\r\n    }\r\n\r\n    get isOutOfFuel() {\r\n        return this.fuel <= 0;\r\n    }\r\n\r\n    getTemperature() {\r\n        const pos = this.entity.position.getPos();\r\n\r\n        return game.temperature.getTemperature(pos.x, pos.y);\r\n    }\r\n\r\n    setTemperature(value) {\r\n        const pos = this.entity.position.getPos();\r\n\r\n        return game.temperature.setTemperature(pos.x, pos.y, value);\r\n    }\r\n\r\n    getDieOutChance() {\r\n        return 0.01;\r\n    }\r\n\r\n    getSparkChance() {\r\n        return this.getTemperature() / 1000;\r\n    }\r\n\r\n    getCatchChance(intensity) {\r\n        if (this.fuel <= 0) {\r\n            return 0;\r\n        }\r\n\r\n        const temperature = this.getTemperature();\r\n\r\n        return (temperature * intensity) / 1000;\r\n    }\r\n\r\n    onSpark(evt) {\r\n        if (this.isOnFire) {\r\n            return;\r\n        }\r\n\r\n        const intensity = evt.data.intensity;\r\n\r\n        if (randomWeightedBool(this.getCatchChance(intensity))) {\r\n            this.entity.add(Fire, {\r\n                intensity,\r\n            });\r\n            this.setTemperature(this.flashPoint);\r\n        }\r\n    }\r\n\r\n    onTryIgnite(evt) {\r\n        this.entity.add(Fire, {\r\n            intensity: 3,\r\n        });\r\n        this.setTemperature(this.flashPoint);\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        if (!this.isOnFire && !this.entity.isInventoried) {\r\n            evt.data.interactions.push({\r\n                name: 'Ignite',\r\n                evt: 'try-ignite',\r\n                intensity: 3,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Fire extends Component {\r\n    static properties = {\r\n        intensity: 3,\r\n    };\r\n\r\n    extinguish() {\r\n        this.destroy();\r\n    }\r\n\r\n    onTryExtinguish(evt) {\r\n        this.extinguish();\r\n    }\r\n\r\n    onGetInteractions(evt) {\r\n        evt.data.interactions.push({\r\n            name: 'Extinguish',\r\n            evt: 'try-extinguish',\r\n        });\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class ThermalCapacity extends Component {\r\n    static properties = {\r\n        value: 0.5,\r\n    };\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Abilities extends Component {\r\n    static properties = {\r\n        known: [],\r\n        state: {},\r\n    };\r\n\r\n    onQueryAbilities(evt) {\r\n        evt.data.abilities.push(...this.known);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { getAbility } from '../../data/Abilities';\r\n\r\nexport class AbilityStatus extends Component {\r\n    static allowMultiple = true;\r\n    static keyProperty = 'key';\r\n    static properties = {\r\n        key: 'ABILITY_SPRINT',\r\n        isCoolingDown: false,\r\n        isToggledOn: true,\r\n        cooldownDuration: 50000,\r\n        currentCooldownDuration: 0,\r\n        duration: 10000,\r\n        currentDuration: 0,\r\n        channelDuration: 0,\r\n        currentChannelDuration: 0,\r\n        statMods: {},\r\n        skillMods: {},\r\n    };\r\n\r\n    get ability() {\r\n        return getAbility(this.key);\r\n    }\r\n\r\n    get remainingCooldownDuration() {\r\n        if (!this.isCoolingDown) {\r\n            return Infinity;\r\n        }\r\n\r\n        return this.cooldownDuration - this.currentCooldownDuration;\r\n    }\r\n\r\n    get remainingDuration() {\r\n        if (this.isCoolingDown) {\r\n            return 0;\r\n        }\r\n\r\n        return this.duration - this.currentDuration;\r\n    }\r\n\r\n    get isChanneling() {\r\n        return (\r\n            !this.isCoolingDown &&\r\n            this.currentChannelDuration < this.channelDuration\r\n        );\r\n    }\r\n\r\n    get isComplete() {\r\n        return (\r\n            this.currentDuration >= this.duration ||\r\n            (this.ability.isToggleable && !this.isToggledOn)\r\n        );\r\n    }\r\n\r\n    get isCooldownComplete() {\r\n        return (\r\n            this.isCoolingDown &&\r\n            this.currentCooldownDuration >= this.cooldownDuration\r\n        );\r\n    }\r\n\r\n    startCooldown() {\r\n        this.isCoolingDown = true;\r\n        this.isToggledOn = false;\r\n    }\r\n\r\n    onQuerySkillMod(evt) {\r\n        if (this.isComplete) {\r\n            return;\r\n        }\r\n\r\n        const mod = this.skillMods[evt.data.skill];\r\n\r\n        if (mod) {\r\n            evt.data.modifiers.push({\r\n                source: this.ability.name,\r\n                mod,\r\n            });\r\n        }\r\n    }\r\n\r\n    onQueryStatMod(evt) {\r\n        if (this.isCoolingDown) {\r\n            return;\r\n        }\r\n\r\n        const mod = this.statMods[evt.data.stat];\r\n\r\n        if (mod) {\r\n            evt.data.modifiers.push({\r\n                source: this.ability.name,\r\n                mod,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import PrayerOfProtectionAbility from './abilities/prayers/PrayerOfProtectionAbility';\r\nimport BlinkAbility from './abilities/spells/BlinkAbility';\r\nimport CrimsonWellAbility from './abilities/spells/CrimsonWellAbility';\r\nimport RageAbility from './abilities/stances/RageAbility';\r\nimport SprintAbility from './abilities/stances/SprintAbility';\r\nimport JumpAbility from './abilities/stunts/JumpAbility';\r\n\r\nexport const ABILITY_SPRINT = 'ABILITY_SPRINT';\r\nexport const ABILITY_RAGE = 'ABILITY_RAGE';\r\nexport const ABILITY_CRIMSON_WELL = 'ABILITY_CRIMSON_WELL';\r\nexport const ABILITY_BLINK = 'ABILITY_BLINK';\r\nexport const ABILITY_JUMP = 'ABILITY_JUMP';\r\nexport const ABILITY_PRAYER_PROTECTION = 'ABILITY_PRAYER_PROTECTION';\r\n\r\nconst lookup = {\r\n    ABILITY_SPRINT: new SprintAbility(),\r\n    ABILITY_RAGE: new RageAbility(),\r\n    ABILITY_CRIMSON_WELL: new CrimsonWellAbility(),\r\n    ABILITY_BLINK: new BlinkAbility(),\r\n    ABILITY_JUMP: new JumpAbility(),\r\n    ABILITY_PRAYER_PROTECTION: new PrayerOfProtectionAbility(),\r\n};\r\n\r\nexport const getAbility = (key) => lookup[key];\r\nexport const getAbilityStatus = (key, entity) => {\r\n    if (entity.abilityStatus) {\r\n        return entity.abilityStatus[key];\r\n    }\r\n};\r\nexport const getStance = (entity) => {\r\n    if (!entity.abilityStatus) {\r\n        return;\r\n    }\r\n\r\n    return Object.values(entity.abilityStatus).find((status) => {\r\n        return (\r\n            status.ability.isStance &&\r\n            !status.isCoolingDown &&\r\n            !status.isComplete\r\n        );\r\n    });\r\n};\r\nexport const getChanneling = (entity) => {\r\n    if (!entity.abilityStatus) {\r\n        return;\r\n    }\r\n\r\n    return Object.values(entity.abilityStatus).find((status) => {\r\n        return status.ability.isChanneled && status.isChanneling;\r\n    });\r\n};\r\n","import { ABILITY_TYPE_PRAYER } from '../../../enums/AbilityTypes';\r\nimport { allDirections, directionDelta } from '../../../enums/Directions';\r\nimport { ABILITY_PRAYER_PROTECTION } from '../../Abilities';\r\nimport { getStat, STAT_FAITH } from '../../Stats';\r\nimport SimpleChannelAbility from '../SimpleChannelAbility';\r\n\r\nexport default class PrayerOfProtectionAbility extends SimpleChannelAbility {\r\n    key = ABILITY_PRAYER_PROTECTION;\r\n    type = ABILITY_TYPE_PRAYER;\r\n    name = 'Prayer of Protection';\r\n\r\n    getCooldownDuration(entity) {\r\n        return 20000;\r\n    }\r\n\r\n    getChannelDuration(entity) {\r\n        return 5000;\r\n    }\r\n\r\n    getArmorModifier(entity) {\r\n        return Math.max(2, getStat(STAT_FAITH, entity));\r\n    }\r\n\r\n    getDescription(entity) {\r\n        const armor = this.getArmorModifier(entity);\r\n\r\n        return `Grant +${armor} bonus armor. [FTH]`;\r\n    }\r\n\r\n    getSkillMods(entity) {\r\n        return {\r\n            SKILL_ARMOR: this.getArmorModifier(entity),\r\n        };\r\n    }\r\n\r\n    onChannelComplete(status) {\r\n        const pos = status.entity.position.getPos();\r\n\r\n        allDirections().forEach((dir) => {\r\n            game.particles.createEmitter(\r\n                pos.x,\r\n                pos.y,\r\n                {\r\n                    rate: 3,\r\n                },\r\n                {\r\n                    glyphs: ['·', 'o', 'O'],\r\n                    fg1s: ['yellow'],\r\n                    speed: 0.05,\r\n                    direction: directionDelta(dir),\r\n                    lifetime: 3000,\r\n                }\r\n            );\r\n        });\r\n    }\r\n}\r\n","export const ABILITY_TYPE_STANCE = 0;\r\nexport const ABILITY_TYPE_SHOUT = 1;\r\nexport const ABILITY_TYPE_STUNT = 2;\r\nexport const ABILITY_TYPE_SPELL = 3;\r\nexport const ABILITY_TYPE_PRAYER = 4;\r\n\r\nconst lookup = {\r\n    [ABILITY_TYPE_STANCE]: {\r\n        name: 'Stance',\r\n    },\r\n    [ABILITY_TYPE_SHOUT]: {\r\n        name: 'Shout',\r\n    },\r\n    [ABILITY_TYPE_STUNT]: {\r\n        name: 'Stunt',\r\n    },\r\n    [ABILITY_TYPE_SPELL]: {\r\n        name: 'Spell',\r\n    },\r\n    [ABILITY_TYPE_PRAYER]: {\r\n        name: 'Prayer',\r\n    },\r\n};\r\n\r\nexport const getAbilityTypeName = (key) => lookup[key].name;\r\n","import { game } from '../../core/Game';\r\nimport { AbilityStatus } from '../../ecs/components';\r\nimport Ability from './Ability';\r\n\r\nexport default class SimpleChannelAbility extends Ability {\r\n    isToggleable = false;\r\n    isChanneled = true;\r\n\r\n    getDuration(entity) {\r\n        return 5000;\r\n    }\r\n\r\n    getCooldownDuration(entity) {\r\n        return 50000;\r\n    }\r\n\r\n    getChannelDuration(entity) {\r\n        return 10000;\r\n    }\r\n\r\n    execute(entity, data) {\r\n        entity.add(AbilityStatus, {\r\n            key: this.key,\r\n            isCoolingDown: false,\r\n            channelDuration: this.getChannelDuration(entity),\r\n            currentChannelDuration: 0,\r\n            cooldownDuration: this.getCooldownDuration(entity),\r\n            statMods: this.getStatMods(entity),\r\n            skillMods: this.getSkillMods(entity),\r\n        });\r\n    }\r\n}\r\n","import { game } from '../../core/Game';\r\nimport { SCREEN_WAIT } from '../../core/screens/ScreenType';\r\nimport { AbilityStatus } from '../../ecs/components';\r\nimport { ABILITY_TYPE_STANCE } from '../../enums/AbilityTypes';\r\nimport { getAbilityStatus } from '../Abilities';\r\n\r\nexport default class Ability {\r\n    key = '';\r\n    type = 0;\r\n    name = '';\r\n    isToggleable = false;\r\n    isChanneled = false;\r\n\r\n    get isStance() {\r\n        return this.type === ABILITY_TYPE_STANCE;\r\n    }\r\n\r\n    getDescription(entity) {\r\n        return '';\r\n    }\r\n\r\n    getCooldownDuration(entity) {\r\n        return 5000;\r\n    }\r\n\r\n    getChannelDuration(entity) {\r\n        return 0;\r\n    }\r\n\r\n    constructor(key, type, name) {\r\n        this.key = key;\r\n        this.type = type;\r\n        this.name = name;\r\n    }\r\n\r\n    onChannelComplete(status) {}\r\n\r\n    initiate(entity, options) {\r\n        options.onConfirm();\r\n    }\r\n\r\n    execute(entity, data) {\r\n        entity.add(AbilityStatus, {\r\n            key: this.key,\r\n            isCoolingDown: true,\r\n            cooldownDuration: this.getCooldownDuration(entity),\r\n        });\r\n    }\r\n\r\n    getStatMods(entity) {\r\n        return {};\r\n    }\r\n\r\n    getSkillMods(entity) {\r\n        return {};\r\n    }\r\n\r\n    toggleOn(entity) {\r\n        entity.add(AbilityStatus, {\r\n            key: this.key,\r\n            isToggledOn: true,\r\n            isCoolingDown: false,\r\n            duration: this.getDuration(entity),\r\n            cooldownDuration: this.getCooldownDuration(entity),\r\n            statMods: this.getStatMods(entity),\r\n            skillMods: this.getSkillMods(entity),\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    toggleOff(entity, status) {\r\n        status.startCooldown();\r\n    }\r\n\r\n    channel(energy, status) {\r\n        status.currentChannelDuration += energy;\r\n\r\n        if (status.currentChannelDuration >= status.channelDuration) {\r\n            energy =\r\n                status.channelDuration -\r\n                (status.currentChannelDuration - energy);\r\n            status.currentChannelDuration = status.channelDuration;\r\n            status.startCooldown();\r\n            this.onChannelComplete(status);\r\n        }\r\n\r\n        const entity = status.entity;\r\n\r\n        entity.fireEvent('energy-consumed', energy);\r\n\r\n        return energy;\r\n    }\r\n\r\n    cancelChannel(status) {\r\n        status.currentDuration = status.duration;\r\n        status.startCooldown();\r\n    }\r\n\r\n    update(dt, status) {\r\n        if (status.isCoolingDown) {\r\n            status.currentCooldownDuration += dt;\r\n\r\n            if (status.currentCooldownDuration > status.cooldownDuration) {\r\n                status.currentCooldownDuration = status.cooldownDuration;\r\n            }\r\n        } else if (status.isComplete) {\r\n            status.startCooldown();\r\n        }\r\n\r\n        if (status.isChanneling) {\r\n            return;\r\n        }\r\n\r\n        if (!status.isComplete) {\r\n            status.currentDuration += dt;\r\n        }\r\n\r\n        if (status.isCooldownComplete) {\r\n            status.destroy();\r\n        }\r\n    }\r\n\r\n    getDisplayText(entity) {\r\n        const status = getAbilityStatus(this.key, entity);\r\n\r\n        if (status && status.isCoolingDown) {\r\n            const cd = (status.remainingCooldownDuration / 1000).toFixed(1);\r\n\r\n            return {\r\n                text: `${this.name} [${cd}]`,\r\n                isEnabled: false,\r\n            };\r\n        }\r\n\r\n        if (this.isToggleable) {\r\n            if (status && status.isToggledOn) {\r\n                return {\r\n                    text: `${this.name} [toggle OFF]`,\r\n                    isEnabled: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    text: `${this.name} [toggle ON]`,\r\n                    isEnabled: true,\r\n                };\r\n            }\r\n        }\r\n\r\n        return {\r\n            text: this.name,\r\n            isEnabled: true,\r\n        };\r\n    }\r\n}\r\n","import { game } from '../../../core/Game';\r\nimport { SCREEN_CURSOR } from '../../../core/screens/ScreenType';\r\nimport { ABILITY_TYPE_SPELL } from '../../../enums/AbilityTypes';\r\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\r\nimport { ABILITY_BLINK } from '../../Abilities';\r\nimport Ability from '../Ability';\r\n\r\nexport default class BlinkAbility extends Ability {\r\n    key = ABILITY_BLINK;\r\n    type = ABILITY_TYPE_SPELL;\r\n    name = 'Blink';\r\n\r\n    getCooldownDuration(entity) {\r\n        return 20000;\r\n    }\r\n\r\n    getDescription(entity) {\r\n        return `Teleport to a visible location.`;\r\n    }\r\n\r\n    initiate(entity, options) {\r\n        game.screens.pushScreen(SCREEN_CURSOR, {\r\n            renderer: simpleCursorRenderer({\r\n                isValid: ({ x, y }) => {\r\n                    // must be visible\r\n                    const visible = game.map\r\n                        .getEntitiesAt(x, y, true)\r\n                        .filter((e) => e.isVisible);\r\n\r\n                    // must be at least one entity visible\r\n                    if (visible.length <= 0) {\r\n                        return false;\r\n                    }\r\n\r\n                    // must not be any blocker or beings\r\n                    return !visible.some((e) => e.blocker || e.body);\r\n                },\r\n            }),\r\n            onResult: (result) => {\r\n                game.screens.popScreen();\r\n                options.onConfirm(result);\r\n            },\r\n            onCancel: () => {\r\n                game.screens.popScreen();\r\n                options.onCancel();\r\n            },\r\n        });\r\n    }\r\n\r\n    execute(entity, data) {\r\n        super.execute(entity, data);\r\n\r\n        const prevPos = entity.position.getPos();\r\n        const nextPos = data.position;\r\n\r\n        game.particles.createEmitter(\r\n            prevPos.x,\r\n            prevPos.y,\r\n            {\r\n                rate: 2,\r\n            },\r\n            {\r\n                glyphs: ['O', 'o', '·'],\r\n                fg1s: ['purple'],\r\n                speed: 1,\r\n                lifetime: 300,\r\n            }\r\n        );\r\n\r\n        entity.position.setPos(data.position.x, data.position.y);\r\n\r\n        game.particles.createEmitter(\r\n            nextPos.x,\r\n            nextPos.y,\r\n            {\r\n                rate: 2,\r\n            },\r\n            {\r\n                glyphs: ['·', 'o', 'O'],\r\n                fg1s: ['purple'],\r\n                speed: 1,\r\n                lifetime: 300,\r\n            }\r\n        );\r\n    }\r\n}\r\n","import { game } from '../../core/Game';\r\n\r\nconst truthy = () => true;\r\n\r\nexport const simpleCursorRenderer = (options = {}) => {\r\n    const isValid = options.isValid || truthy;\r\n\r\n    return {\r\n        isValid,\r\n        render: (opts) => {\r\n            const color = isValid(opts) ? 'blue' : 'red';\r\n            const screen = game.camera.worldToScreen(opts.x, opts.y);\r\n\r\n            game.renderer.draw(screen.x, screen.y, 'X', color);\r\n        },\r\n    };\r\n};\r\n","import { game } from '../../../core/Game';\r\nimport { ABILITY_TYPE_SPELL } from '../../../enums/AbilityTypes';\r\nimport { ABILITY_CRIMSON_WELL, getAbilityStatus } from '../../Abilities';\r\nimport Attack from '../../Attack';\r\nimport { DMG_TYPE_NECROTIC } from '../../DamageTypes';\r\nimport { addStatus, STATUS_BLEEDING } from '../../Statuses';\r\nimport SimpleDurationAbility from '../SimpleDurationAbility';\r\n\r\nexport default class CrimsonWellAbility extends SimpleDurationAbility {\r\n    key = ABILITY_CRIMSON_WELL;\r\n    type = ABILITY_TYPE_SPELL;\r\n    name = 'Crimson Well';\r\n\r\n    getDuration(entity) {\r\n        return 8000;\r\n    }\r\n\r\n    getCooldownDuration(entity) {\r\n        return 50000;\r\n    }\r\n\r\n    getDescription(entity) {\r\n        return `Siphon the blood of nearby enemies. Lifesteal +${4} HP from adjacent enemies per turn. You gain bleeding for the duration.`;\r\n    }\r\n\r\n    execute(entity, data) {\r\n        super.execute(entity, data);\r\n        addStatus(STATUS_BLEEDING, entity, {\r\n            duration: this.getDuration(entity),\r\n            potency: 0.5,\r\n        });\r\n\r\n        const status = getAbilityStatus(this.key, entity);\r\n\r\n        this.performLifeteal(status);\r\n    }\r\n\r\n    performLifeteal(status) {\r\n        const entity = status.entity;\r\n        const pos = status.entity.position.getPos();\r\n        game.map\r\n            .getNeighborEntities(pos.x, pos.y)\r\n            .flat()\r\n            .filter((e) => game.factions.areEntitiesHostile(e, entity))\r\n            .map((hostile) => {\r\n                const attack = new Attack({\r\n                    attacker: entity,\r\n                    ignoreDodge: true,\r\n                    defender: hostile,\r\n                    weaponName: this.name,\r\n                    damage: 3,\r\n                    damageType: DMG_TYPE_NECROTIC,\r\n                });\r\n\r\n                const evt = hostile.fireEvent('attacked', { attack });\r\n\r\n                if (evt.data.damage > 0) {\r\n                    entity.fireEvent('heal', {\r\n                        value: evt.data.damage,\r\n                    });\r\n\r\n                    const enemyPos = hostile.position.getPos();\r\n                    game.particles.createEmitter(\r\n                        enemyPos.x,\r\n                        enemyPos.y,\r\n                        {\r\n                            rate: 2,\r\n                        },\r\n                        {\r\n                            glyphs: ['·', 'x'],\r\n                            fg1s: ['red'],\r\n                            speed: 0.01,\r\n                            lifetime: 120,\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n\r\n        game.particles.createEmitter(\r\n            pos.x,\r\n            pos.y,\r\n            {\r\n                rate: 2,\r\n            },\r\n            {\r\n                glyphs: ['x', '·'],\r\n                fg1s: ['red'],\r\n                speed: 0.01,\r\n                lifetime: 120,\r\n            }\r\n        );\r\n    }\r\n\r\n    update(dt, status) {\r\n        super.update(dt, status);\r\n\r\n        if (game.clock.turnDelta <= 0 || status.isComplete) {\r\n            return;\r\n        }\r\n\r\n        this.performLifeteal(status);\r\n    }\r\n}\r\n","import { AbilityStatus } from '../../ecs/components/AbilityStatus';\r\nimport { getAbilityStatus } from '../Abilities';\r\nimport Ability from './Ability';\r\n\r\nexport default class SimpleDurationAbility extends Ability {\r\n    getDuration(entity) {\r\n        return 20000;\r\n    }\r\n\r\n    getCooldownDuration(entity) {\r\n        return 50000;\r\n    }\r\n\r\n    execute(entity, data) {\r\n        const status = getAbilityStatus(this.key, entity);\r\n\r\n        if (status) {\r\n            return false;\r\n        }\r\n\r\n        entity.add(AbilityStatus, {\r\n            key: this.key,\r\n            isToggledOn: true,\r\n            isCoolingDown: true,\r\n            duration: this.getDuration(entity),\r\n            cooldownDuration: this.getCooldownDuration(entity),\r\n            statMods: this.getStatMods(entity),\r\n            skillMods: this.getSkillMods(entity),\r\n        });\r\n\r\n        return true;\r\n    }\r\n}\r\n","import { ABILITY_TYPE_STANCE } from '../../../enums/AbilityTypes';\r\nimport { ABILITY_RAGE } from '../../Abilities';\r\nimport { getStat, STAT_STRENGTH } from '../../Stats';\r\nimport SimpleToggledAbility from '../SimpleToggledAbility';\r\n\r\nexport default class RageAbility extends SimpleToggledAbility {\r\n    key = ABILITY_RAGE;\r\n    type = ABILITY_TYPE_STANCE;\r\n    name = 'Rage';\r\n\r\n    computeStrengthMod(entity) {\r\n        return getStat(STAT_STRENGTH, entity) * 3;\r\n    }\r\n\r\n    getDuration(entity) {\r\n        return 20000;\r\n    }\r\n\r\n    getCooldownDuration(entity) {\r\n        return 50000;\r\n    }\r\n\r\n    getDescription(entity) {\r\n        const str = this.computeStrengthMod(entity);\r\n\r\n        return `Enter a fit of rage. Gain +${str} STR and ${-2} dodge. [STR]`;\r\n    }\r\n\r\n    getSkillMods(entity) {\r\n        return {\r\n            SKILL_DODGE: -2,\r\n        };\r\n    }\r\n\r\n    getStatMods(entity) {\r\n        return {\r\n            STAT_STRENGTH: this.computeStrengthMod(entity),\r\n        };\r\n    }\r\n}\r\n","import { getAbilityStatus } from '../Abilities';\r\nimport Ability from './Ability';\r\n\r\nexport default class SimpleToggledAbility extends Ability {\r\n    isToggleable = true;\r\n\r\n    getDuration(entity) {\r\n        return 10000;\r\n    }\r\n\r\n    getCooldownDuration(entity) {\r\n        return 50000;\r\n    }\r\n\r\n    execute(entity, data) {\r\n        // const status = getAbilityStatus(this.key, entity);\r\n        // if (status) {\r\n        //     this.toggleOff(entity, status);\r\n        // } else {\r\n        //     this.toggleOn(entity);\r\n        // }\r\n    }\r\n}\r\n","import { ABILITY_TYPE_STANCE } from '../../../enums/AbilityTypes';\r\nimport { ABILITY_SPRINT } from '../../Abilities';\r\nimport { getStat, STAT_ATHLETICISM } from '../../Stats';\r\nimport SimpleToggledAbility from '../SimpleToggledAbility';\r\n\r\nexport default class SprintAbility extends SimpleToggledAbility {\r\n    key = ABILITY_SPRINT;\r\n    type = ABILITY_TYPE_STANCE;\r\n    name = 'Sprint';\r\n\r\n    computeSpeedMod(entity) {\r\n        return 5 + 2 * getStat(STAT_ATHLETICISM, entity);\r\n    }\r\n\r\n    getDuration(entity) {\r\n        return 20000;\r\n    }\r\n\r\n    getCooldownDuration(entity) {\r\n        return 50000;\r\n    }\r\n\r\n    getDescription(entity) {\r\n        const speed = this.computeSpeedMod(entity);\r\n\r\n        return `Gain +${speed} move speed. [ATH]`;\r\n    }\r\n\r\n    getSkillMods(entity) {\r\n        return {\r\n            SKILL_SPEED: this.computeSpeedMod(entity),\r\n        };\r\n    }\r\n}\r\n","import { game } from '../../../core/Game';\r\nimport { SCREEN_CURSOR } from '../../../core/screens/ScreenType';\r\nimport { ABILITY_TYPE_STUNT } from '../../../enums/AbilityTypes';\r\nimport { simpleLineRenderer } from '../../../utils/cursor/SimpleLineRenderer';\r\nimport { ABILITY_JUMP } from '../../Abilities';\r\nimport { getStat, STAT_ATHLETICISM } from '../../Stats';\r\nimport Ability from '../Ability';\r\n\r\nexport default class JumpAbility extends Ability {\r\n    key = ABILITY_JUMP;\r\n    type = ABILITY_TYPE_STUNT;\r\n    name = 'Jump';\r\n\r\n    getCooldownDuration(entity) {\r\n        return 20000;\r\n    }\r\n\r\n    getJumpDistance(entity) {\r\n        return Math.floor(Math.max(3, getStat(STAT_ATHLETICISM, entity)) / 3);\r\n    }\r\n\r\n    getDescription(entity) {\r\n        const distance = this.getJumpDistance(entity);\r\n        const word = distance > 1 ? 'tiles' : 'tile';\r\n\r\n        return `Jump up to ${distance} ${word} away. You cannot jump over other creatures. [ATH]`;\r\n    }\r\n\r\n    initiate(entity, options) {\r\n        const distance = this.getJumpDistance(entity);\r\n\r\n        game.screens.pushScreen(SCREEN_CURSOR, {\r\n            maxDistance: distance + 1,\r\n            renderer: simpleLineRenderer({\r\n                isValid: ({ x, y }, idx) => {\r\n                    // must be within range\r\n                    if (idx - 1 > distance) {\r\n                        return false;\r\n                    }\r\n\r\n                    // must be visible\r\n                    const visible = game.map\r\n                        .getEntitiesAt(x, y, true)\r\n                        .filter((e) => e.isVisible);\r\n\r\n                    // must be at least one entity visible\r\n                    if (visible.length <= 0) {\r\n                        return false;\r\n                    }\r\n\r\n                    // must not be any blocker or beings\r\n                    return !visible.some((e) => e.blocker || e.body);\r\n                },\r\n            }),\r\n            onResult: (result) => {\r\n                game.screens.popScreen();\r\n                options.onConfirm(result);\r\n            },\r\n            onCancel: () => {\r\n                game.screens.popScreen();\r\n                options.onCancel();\r\n            },\r\n        });\r\n    }\r\n\r\n    execute(entity, data) {\r\n        super.execute(entity, data);\r\n\r\n        entity.position.setPos(data.position.x, data.position.y);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { BITMASK_WALL } from '../../data/bitmasks';\r\n\r\nexport class BitmaskGlyph extends Component {\r\n    static properties = {\r\n        key: BITMASK_WALL,\r\n        updateGlyph: true,\r\n        value: 0,\r\n    };\r\n}\r\n","export const BITMASK_WALL = 'BITMASK_WALL';\r\n// 1  2  4\r\n// 8     16\r\n// 32 64 128\r\n\r\nconst map = {\r\n    BITMASK_WALL: (value) => {\r\n        switch (value) {\r\n            case 0:\r\n            case 2:\r\n            case 3:\r\n            case 6:\r\n            case 7:\r\n            case 17:\r\n            case 48:\r\n                return '╜';\r\n            case 8:\r\n            case 9:\r\n            case 12:\r\n            case 40:\r\n            case 41:\r\n            case 136:\r\n                return '╛';\r\n            case 16:\r\n            case 20:\r\n            case 144:\r\n            case 148:\r\n                return '╒';\r\n            case 1:\r\n            case 34:\r\n            case 64:\r\n            case 66:\r\n            case 67:\r\n            case 68:\r\n            case 70:\r\n            case 71:\r\n            case 96:\r\n            case 98:\r\n            case 99:\r\n            case 102:\r\n            case 130:\r\n            case 192:\r\n            case 194:\r\n            case 195:\r\n            case 198:\r\n            case 226:\r\n                return '║';\r\n            case 10:\r\n            case 14:\r\n                return '╝';\r\n            case 18:\r\n            case 19:\r\n            case 147:\r\n                return '╚';\r\n            case 72:\r\n            case 200:\r\n                return '╗';\r\n            case 80:\r\n            case 84:\r\n                return '╔';\r\n            case 26:\r\n            case 58:\r\n            case 154:\r\n                return '╩';\r\n            case 82:\r\n            case 83:\r\n            case 114:\r\n                return '╠';\r\n            case 74:\r\n            case 78:\r\n            case 202:\r\n                return '╣';\r\n            case 88:\r\n            case 92:\r\n                return '╦';\r\n            case 90:\r\n                return '╬';\r\n            default:\r\n                return '═';\r\n        }\r\n    },\r\n};\r\n\r\nexport const getMaskGlyph = (key, mask) => map[key](mask);\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { addStatus, STATUS_REGENERATION } from '../../data/Statuses';\r\nimport { CONSOLE_EVENT_LEVEL } from '../../enums/ConsoleEvents';\r\n\r\nconst LEVEL_XP_CAP = 5000;\r\nconst LEVEL_INTENSITY = 16;\r\nconst LEVEL_DIFFERENCE_FACTOR = 20;\r\nconst SKILL_POINTS_PER_LEVEL = 1;\r\n\r\nexport class Level extends Component {\r\n    static properties = {\r\n        xp: 0,\r\n        level: 1,\r\n        skillPoints: 2,\r\n    };\r\n\r\n    get nextLevelReq() {\r\n        return Math.floor(\r\n            (this.level * LEVEL_XP_CAP) / (this.level + LEVEL_INTENSITY)\r\n        );\r\n    }\r\n\r\n    levelUp() {\r\n        this.level++;\r\n        this.skillPoints += SKILL_POINTS_PER_LEVEL;\r\n\r\n        game.console.event(CONSOLE_EVENT_LEVEL, {\r\n            entity: this.entity,\r\n            level: this.level,\r\n        });\r\n\r\n        addStatus(STATUS_REGENERATION, this.entity, {\r\n            duration: 20000,\r\n        });\r\n\r\n        const pos = this.entity.position.getPos();\r\n\r\n        game.particles.createEmitter(\r\n            pos.x,\r\n            pos.y,\r\n            {\r\n                rate: 5,\r\n                duration: 1200,\r\n            },\r\n            {\r\n                glyphs: ['↑'],\r\n                fg1s: ['yellow'],\r\n                speed: 0.015,\r\n                direction: {\r\n                    x: -1,\r\n                    y: -5,\r\n                },\r\n                lifetime: 3000,\r\n            }\r\n        );\r\n        game.particles.createEmitter(\r\n            pos.x,\r\n            pos.y,\r\n            {\r\n                rate: 5,\r\n                duration: 1200,\r\n            },\r\n            {\r\n                glyphs: ['↑'],\r\n                fg1s: ['yellow'],\r\n                speed: 0.015,\r\n                direction: {\r\n                    x: 0,\r\n                    y: -5,\r\n                },\r\n                lifetime: 3000,\r\n            }\r\n        );\r\n        game.particles.createEmitter(\r\n            pos.x,\r\n            pos.y,\r\n            {\r\n                rate: 5,\r\n                duration: 1200,\r\n            },\r\n            {\r\n                glyphs: ['↑'],\r\n                fg1s: ['yellow'],\r\n                speed: 0.015,\r\n                direction: {\r\n                    x: 1,\r\n                    y: -5,\r\n                },\r\n                lifetime: 3000,\r\n            }\r\n        );\r\n    }\r\n\r\n    addXP(xp) {\r\n        this.xp += xp;\r\n\r\n        if (this.xp >= this.nextLevelReq) {\r\n            this.xp -= this.nextLevelReq;\r\n\r\n            this.levelUp();\r\n        }\r\n    }\r\n\r\n    onEnemyKilled(evt) {\r\n        if (!evt.data.enemy.level) {\r\n            return;\r\n        }\r\n\r\n        const levelFactor = 5 + (evt.data.enemy.level.level - this.level);\r\n\r\n        if (levelFactor < 0) {\r\n            return;\r\n        }\r\n\r\n        this.addXP(levelFactor * LEVEL_DIFFERENCE_FACTOR);\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Skills extends Component {\r\n    static properties = {\r\n        SKILL_ARMOR: 0,\r\n        SKILL_HEALTH: 0,\r\n        SKILL_SPEED: 0,\r\n        SKILL_THROWING: 0,\r\n        SKILL_DODGE: 0,\r\n        SKILL_BRAWLING: 0,\r\n        SKILL_AXE: 0,\r\n        SKILL_BLADE: 0,\r\n        SKILL_CUDGEL: 0,\r\n    };\r\n\r\n    onQuerySkillMod(evt) {\r\n        const mod = this[evt.data.skill];\r\n\r\n        if (mod) {\r\n            evt.data.modifiers.push({\r\n                source: this.entity.moniker.name,\r\n                mod,\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Compressable extends Component {\r\n    static properties = {\r\n        compressedCh: 'h',\r\n        massRequirement: 60,\r\n        isCompressed: false,\r\n    };\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class Mass extends Component {\r\n    static properties = {\r\n        value: 20,\r\n    };\r\n}\r\n","import { Component } from 'geotic';\r\nimport { SHARD_VAL_LARGE, SHARD_VAL_MEDIUM } from './HealthShardDropper';\r\n\r\nexport class HealthShard extends Component {\r\n    static properties = {\r\n        value: 1,\r\n    };\r\n\r\n    get healValue() {\r\n        return this.value;\r\n    }\r\n\r\n    onSpawned() {\r\n        const name = this.entity.moniker.name;\r\n\r\n        if (this.value >= SHARD_VAL_LARGE) {\r\n            this.entity.glyph.ch = '♦';\r\n            this.entity.moniker.name = `Large ${name}`;\r\n        } else if (this.value >= SHARD_VAL_MEDIUM) {\r\n            this.entity.glyph.ch = '♥';\r\n            this.entity.moniker.name = `Medium ${name}`;\r\n        } else {\r\n            this.entity.glyph.ch = '☻';\r\n            this.entity.moniker.name = `Small ${name}`;\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\nimport { game } from '../../core/Game';\r\nimport { SPWN_HEALTH_SHARD } from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { allDirections, directionDelta } from '../../enums/Directions';\r\nimport { randomWeightedBool } from '../../utils/rand';\r\n\r\nexport const SHARD_VAL_SMALL = 1;\r\nexport const SHARD_VAL_MEDIUM = 3;\r\nexport const SHARD_VAL_LARGE = 6;\r\n\r\nexport class HealthShardDropper extends Component {\r\n    onDeath(evt) {\r\n        const lvl = this.entity.level.level;\r\n        const playerLvl = game.player.entity.level.level;\r\n        const lvlDiff = 5 + (lvl - playerLvl);\r\n\r\n        if (lvlDiff < 0) {\r\n            return;\r\n        }\r\n\r\n        const pos = this.entity.position.getPos();\r\n        const emptyCells = [];\r\n\r\n        allDirections().forEach((dir) => {\r\n            const delta = directionDelta(dir);\r\n            const adjacent = {\r\n                x: pos.x + delta.x,\r\n                y: pos.y + delta.y\r\n            };\r\n            const entities = game.map.getEntitiesAt(adjacent.x, adjacent.y);\r\n\r\n            if (entities.length <= 0) {\r\n                emptyCells.push(adjacent);\r\n            }\r\n        });\r\n\r\n        if (emptyCells.length <= 3) {\r\n            emptyCells.push(pos);\r\n        }\r\n\r\n        let shardCount = lvlDiff;\r\n        let i = 0;\r\n\r\n        while (shardCount > 0) {\r\n            const shardPos = emptyCells[i % emptyCells.length];\r\n            let shardValue = SHARD_VAL_SMALL;\r\n\r\n            if (shardCount >= SHARD_VAL_LARGE && randomWeightedBool(.8)) {\r\n                shardValue = SHARD_VAL_LARGE;\r\n            } else if (shardCount >= SHARD_VAL_MEDIUM && randomWeightedBool(.8)) {\r\n                shardValue = SHARD_VAL_MEDIUM;\r\n            }\r\n\r\n            shardCount -= shardValue;\r\n\r\n            spawn(SPWN_HEALTH_SHARD, shardPos.x, shardPos.y, {\r\n                healthShard: {\r\n                    value: shardValue\r\n                }\r\n            });\r\n\r\n            i++;\r\n        }\r\n    }\r\n}\r\n","import { Component } from 'geotic';\r\n\r\nexport class HealthShardConsumer extends Component {}\r\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import { game } from '../core/Game';\r\nimport { lerpHSL } from '../utils/ColorUtil';\r\nimport System from './System';\r\n\r\nconst RENDER_MODE_DEFAULT = 0;\r\nconst RENDER_MODE_TEMPERATURE = 1;\r\n\r\nconst temperatureGradient = (v) => {\r\n    const blue = [216, 40, 50];\r\n    const red = [0, 80, 50];\r\n    const rgb = lerpHSL(blue, red, Math.sqrt(v));\r\n\r\n    return `rgb(${rgb[0]},${rgb[1]},${rgb[2]})`;\r\n};\r\n\r\nconst modeLookup = {\r\n    [RENDER_MODE_DEFAULT]: (x, y, e) => {\r\n        if (e.isVisible) {\r\n            game.renderer.draw(\r\n                x,\r\n                y,\r\n                e.glyph.char,\r\n                e.glyph.primary,\r\n                e.glyph.secondary,\r\n                e.glyph.background\r\n            );\r\n        } else if (e.explored) {\r\n            game.renderer.draw(x, y, e.glyph.char, '#2c3538', '#2c3538');\r\n        }\r\n    },\r\n    [RENDER_MODE_TEMPERATURE]: (x, y, e, worldX, worldY) => {\r\n        const temp = game.temperature.getTemperature(worldX, worldY) / 200;\r\n        const bg = temperatureGradient(Math.min(1, temp));\r\n\r\n        if (e.isVisible) {\r\n            game.renderer.draw(\r\n                x,\r\n                y,\r\n                e.glyph.char,\r\n                e.glyph.primary,\r\n                e.glyph.secondary,\r\n                bg\r\n            );\r\n        } else {\r\n            game.renderer.draw(x, y, e.glyph.char, '#2c3538', '#2c3538', bg);\r\n        }\r\n    },\r\n};\r\n\r\nexport default class RenderSystem extends System {\r\n    mode = RENDER_MODE_DEFAULT;\r\n\r\n    renderTile(x, y) {\r\n        const world = this.game.camera.screenToWorld(x, y);\r\n\r\n        if (!this.game.camera.isInView(world.x, world.y)) {\r\n            return;\r\n        }\r\n\r\n        const entities = this.game.map\r\n            .getEntitiesAt(world.x, world.y, true)\r\n            .filter((e) => e.glyph && !e.isInventoried && !e.isDestroying);\r\n\r\n        if (entities.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        let renderableZ = -1;\r\n        let renderable = null;\r\n\r\n        entities.forEach((e) => {\r\n            if (e.glyph.z >= renderableZ) {\r\n                renderable = e;\r\n                renderableZ = e.glyph.z;\r\n            }\r\n        });\r\n\r\n        modeLookup[this.mode](x, y, renderable, world.x, world.y);\r\n    }\r\n\r\n    render(dt) {\r\n        this.game.renderer.clear();\r\n\r\n        for (let x = 0; x < this.game.camera.width; x++) {\r\n            for (let y = 0; y < this.game.camera.height; y++) {\r\n                this.renderTile(x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.render();\r\n    }\r\n}\r\n","import { getStatus } from '../data/Statuses';\r\nimport { Moniker, Actor, IsInventoried, IsVisible } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class UISystem extends System {\r\n    showTicks = false;\r\n    beingsQuery = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.beingsQuery = this.game.ecs.createQuery({\r\n            all: [Moniker, Actor, IsVisible],\r\n            none: [IsInventoried],\r\n        });\r\n    }\r\n\r\n    renderNearbyCreatures() {\r\n        const beings = this.beingsQuery.get();\r\n\r\n        const offsetX = 1;\r\n        let offsetY = 1;\r\n\r\n        beings.forEach((entity) => {\r\n            let moniker = entity.moniker.display;\r\n            let glyphOffset = offsetX;\r\n\r\n            if (entity.factionMember) {\r\n                const relation = this.game.factions.getEntityRelation(\r\n                    game.player.entity,\r\n                    entity\r\n                );\r\n                const glyph = this.game.factions.getAttitudeGlyph(relation);\r\n\r\n                this.game.renderer.drawUI(\r\n                    offsetX,\r\n                    offsetY,\r\n                    glyph.char,\r\n                    glyph.fg1,\r\n                    glyph.fg2\r\n                );\r\n\r\n                glyphOffset += 1.5;\r\n            }\r\n\r\n            this.game.renderer.drawText(glyphOffset, offsetY, moniker);\r\n\r\n            let statusOffset =\r\n                this.game.renderer.computeTextWidth(moniker) +\r\n                glyphOffset +\r\n                0.5;\r\n\r\n            let dotLevel = 0;\r\n\r\n            if (entity.status) {\r\n                entity.status.forEach((status) => {\r\n                    const statusType = getStatus(status.key);\r\n\r\n                    dotLevel += statusType.getPipCount(status.potency);\r\n\r\n                    this.game.renderer.drawUI(\r\n                        statusOffset,\r\n                        offsetY,\r\n                        statusType.glyph.ch,\r\n                        statusType.glyph.fg1,\r\n                        statusType.glyph.fg2\r\n                    );\r\n                    statusOffset++;\r\n                });\r\n            }\r\n\r\n            dotLevel = Math.min(3, dotLevel);\r\n\r\n            if (entity.health) {\r\n                offsetY++;\r\n\r\n                const health = entity.health;\r\n                const barWidth = 8;\r\n\r\n                const prcnt = health.value / health.max;\r\n                const healthWidth = Math.ceil(prcnt * barWidth * 2) / 2;\r\n                const middle = Math.floor(barWidth / 2) - 1;\r\n\r\n                const primaryHP = '#803636';\r\n                const secondaryHp = '#352323';\r\n\r\n                for (let i = 0; i < barWidth; i++) {\r\n                    const diff = healthWidth - i;\r\n                    if (dotLevel && i === middle) {\r\n                        if (diff === 0.5) {\r\n                            if (dotLevel === 1) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '#',\r\n                                    primaryHP,\r\n                                    secondaryHp\r\n                                );\r\n                            } else if (dotLevel === 2) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '\"',\r\n                                    primaryHP,\r\n                                    secondaryHp\r\n                                );\r\n                            } else if (dotLevel === 3) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '!',\r\n                                    primaryHP,\r\n                                    secondaryHp\r\n                                );\r\n                            }\r\n                        } else if (diff > 0) {\r\n                            if (dotLevel === 1) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '‼',\r\n                                    primaryHP,\r\n                                    secondaryHp\r\n                                );\r\n                            } else if (dotLevel === 2) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '↕',\r\n                                    primaryHP,\r\n                                    secondaryHp\r\n                                );\r\n                            } else if (dotLevel === 3) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '◄',\r\n                                    primaryHP,\r\n                                    secondaryHp\r\n                                );\r\n                            }\r\n                        } else {\r\n                            if (dotLevel === 1) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '‼',\r\n                                    secondaryHp,\r\n                                    primaryHP\r\n                                );\r\n                            } else if (dotLevel === 2) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '↕',\r\n                                    secondaryHp,\r\n                                    primaryHP\r\n                                );\r\n                            } else if (dotLevel === 3) {\r\n                                this.game.renderer.drawUI(\r\n                                    i + offsetX,\r\n                                    offsetY,\r\n                                    '◄',\r\n                                    secondaryHp,\r\n                                    primaryHP\r\n                                );\r\n                            }\r\n                        }\r\n                    } else if (diff === 0.5) {\r\n                        this.game.renderer.drawUI(\r\n                            i + offsetX,\r\n                            offsetY,\r\n                            ' ',\r\n                            primaryHP,\r\n                            secondaryHp\r\n                        );\r\n                    } else if (diff > 0) {\r\n                        this.game.renderer.drawUI(\r\n                            i + offsetX,\r\n                            offsetY,\r\n                            '►',\r\n                            primaryHP,\r\n                            secondaryHp\r\n                        );\r\n                    } else {\r\n                        this.game.renderer.drawUI(\r\n                            i + offsetX,\r\n                            offsetY,\r\n                            '►',\r\n                            secondaryHp\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n            offsetY++;\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.showTicks) {\r\n            const turn = this.game.clock.turn;\r\n            const subTurn = `${this.game.clock.subTurn.toFixed(0)}`.padEnd(\r\n                3,\r\n                '0'\r\n            );\r\n\r\n            const str = `${turn}.${subTurn}`;\r\n            const len = Math.ceil(this.game.renderer.computeTextWidth(str));\r\n            this.game.renderer.drawText(\r\n                this.game.camera.width - 1 - len,\r\n                1,\r\n                str\r\n            );\r\n        }\r\n\r\n        const world = this.game.player.position;\r\n        const chunk = this.game.chunks.chunkCoordinate(world.x, world.y);\r\n\r\n        this.game.renderer.drawText(this.game.camera.width - 8, 1, `world (${world.x}, ${world.y})`);\r\n        this.game.renderer.drawText(this.game.camera.width - 8, 2, `chunk (${chunk.x}, ${chunk.y})`);\r\n\r\n        this.renderNearbyCreatures();\r\n    }\r\n}\r\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\r\nimport commands from './commands';\r\nimport Manager from '../Manager';\r\n\r\nexport default class CommandManager extends Manager {\r\n    _commands = {};\r\n    _domainStack = [INPUT_DOMAIN_DEFAULT];\r\n    _inputStack = [];\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        commands.forEach((cmd) => this.registerCommand(cmd));\r\n    }\r\n\r\n    onInputEvent(evt) {\r\n        this._inputStack.push(evt);\r\n    }\r\n\r\n    getNextCommand() {\r\n        const evt = this._inputStack.shift();\r\n\r\n        if (evt) {\r\n            return this.getCommandForInputEvent(evt);\r\n        }\r\n    }\r\n\r\n    pushDomain(domain) {\r\n        this._domainStack.push(domain);\r\n    }\r\n\r\n    popDomain(domain) {\r\n        const index = this._domainStack.lastIndexOf(domain);\r\n\r\n        if (index > -1) {\r\n            this._domainStack.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    getDomainCommands(domain) {\r\n        return this._commands[domain] || [];\r\n    }\r\n\r\n    getCommandForInputEvent(evt) {\r\n        for (let i = this._domainStack.length - 1; i >= 0; i--) {\r\n            const domain = this._domainStack[i];\r\n            const cmds = this.getDomainCommands(domain);\r\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\r\n\r\n            if (cmd) {\r\n                return cmd;\r\n            }\r\n        }\r\n    }\r\n\r\n    registerCommand(command) {\r\n        if (!this._commands[command.domain]) {\r\n            this._commands[command.domain] = [];\r\n        }\r\n\r\n        this._commands[command.domain].push(command);\r\n    }\r\n}\r\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\r\n    INPUT_DOMAIN_MAIN_MENU,\r\n    INPUT_DOMAIN_DEFAULT,\r\n    INPUT_DOMAIN_ADVENTURE,\r\n} from './InputDomainType';\r\nimport InputCommand from './InputCommand';\r\nimport {\r\n    INPUT_CMD_WAIT,\r\n    INPUT_CMD_MOVE_NW,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_NE,\r\n    INPUT_CMD_MOVE_W,\r\n    INPUT_CMD_MOVE_E,\r\n    INPUT_CMD_MOVE_SW,\r\n    INPUT_CMD_MOVE_S,\r\n    INPUT_CMD_MOVE_SE,\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_SAVE,\r\n    INPUT_CMD_LOAD,\r\n    INPUT_CMD_LOOK,\r\n    INPUT_CMD_INTERACT,\r\n    INPUT_CMD_PICK_UP,\r\n    INPUT_CMD_INVENTORY,\r\n    INPUT_CMD_EQUIPMENT,\r\n    INPUT_CMD_CHARACTER,\r\n    INPUT_CMD_SELECT_NW,\r\n    INPUT_CMD_SELECT_N,\r\n    INPUT_CMD_SELECT_NE,\r\n    INPUT_CMD_SELECT_W,\r\n    INPUT_CMD_SELECT_E,\r\n    INPUT_CMD_SELECT_SW,\r\n    INPUT_CMD_SELECT_S,\r\n    INPUT_CMD_SELECT_SE,\r\n    INPUT_CMD_NEW_GAME,\r\n    INPUT_CMD_ABILITIES,\r\n} from './InputCommandType';\r\nimport {\r\n    KEY_S,\r\n    KEY_Q,\r\n    KEY_W,\r\n    KEY_E,\r\n    KEY_A,\r\n    KEY_D,\r\n    KEY_Z,\r\n    KEY_X,\r\n    KEY_C,\r\n    KEY_ENTER,\r\n    KEY_ESCAPE,\r\n    KEY_UP,\r\n    KEY_LEFT,\r\n    KEY_RIGHT,\r\n    KEY_DOWN,\r\n    KEY_SPACE,\r\n    KEY_L,\r\n    KEY_I,\r\n    KEY_G,\r\n    KEY_J,\r\n    KEY_N,\r\n    KEY_P,\r\n    KEY_Y,\r\n    KEY_T,\r\n    KEY_O,\r\n} from './KeyCodes';\r\n\r\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\r\n    new InputCommand({\r\n        domain,\r\n        type,\r\n        name,\r\n        isKeyboard,\r\n        key,\r\n        shift,\r\n        ctrl,\r\n        alt,\r\n        meta,\r\n    });\r\n\r\n// prettier-ignore\r\nexport default [\r\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\r\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\r\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\r\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\r\n\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\r\n\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\r\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\r\n\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_O,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_CHARACTER,            'character',              true, KEY_P,        false, false, false, false),\r\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_ABILITIES,            'abilities',              true, KEY_T,        false, false, false, false),\r\n];\r\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\r\nexport const INPUT_CMD_MOVE_N = 1;\r\nexport const INPUT_CMD_MOVE_NE = 2;\r\nexport const INPUT_CMD_MOVE_W = 3;\r\nexport const INPUT_CMD_MOVE_E = 4;\r\nexport const INPUT_CMD_MOVE_SW = 5;\r\nexport const INPUT_CMD_MOVE_S = 6;\r\nexport const INPUT_CMD_MOVE_SE = 7;\r\n\r\nexport const INPUT_CMD_WAIT = 8;\r\nexport const INPUT_CMD_CONFIRM = 9;\r\nexport const INPUT_CMD_CANCEL = 10;\r\nexport const INPUT_CMD_SAVE = 11;\r\nexport const INPUT_CMD_LOAD = 12;\r\nexport const INPUT_CMD_LOOK = 13;\r\n\r\nexport const INPUT_CMD_PICK_UP = 16;\r\nexport const INPUT_CMD_INTERACT = 17;\r\nexport const INPUT_CMD_INVENTORY = 19;\r\n\r\nexport const INPUT_CMD_SELECT_NW = 20;\r\nexport const INPUT_CMD_SELECT_N = 21;\r\nexport const INPUT_CMD_SELECT_NE = 22;\r\nexport const INPUT_CMD_SELECT_W = 23;\r\nexport const INPUT_CMD_SELECT_E = 24;\r\nexport const INPUT_CMD_SELECT_SW = 25;\r\nexport const INPUT_CMD_SELECT_S = 26;\r\nexport const INPUT_CMD_SELECT_SE = 27;\r\nexport const INPUT_CMD_NEW_GAME = 28;\r\n\r\nexport const INPUT_CMD_EQUIPMENT = 29;\r\nexport const INPUT_CMD_CHARACTER = 30;\r\nexport const INPUT_CMD_ABILITIES = 31;\r\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\r\n    SCREEN_MAIN_MENU,\r\n    SCREEN_ADVENTURE,\r\n    SCREEN_DEATH,\r\n    SCREEN_INVENTORY,\r\n    SCREEN_INTERACT_MODAL,\r\n    SCREEN_CURSOR,\r\n    SCREEN_LOAD_AREA,\r\n    SCREEN_EQUIPMENT,\r\n    SCREEN_LIST_SELECT,\r\n    SCREEN_CHARACTER,\r\n    SCREEN_ABILITIES,\r\n    SCREEN_CONFIRM,\r\n    SCREEN_WAIT,\r\n    SCREEN_CHANNEL,\r\n} from './ScreenType';\r\nimport AdventureScreen from './screens/AdventureScreen';\r\nimport MainMenuScreen from './screens/MainMenuScreen';\r\nimport DeathScreen from './screens/DeathScreen';\r\nimport Manager from '../Manager';\r\nimport InventoryScreen from './screens/InventoryScreen';\r\nimport InteractModalScreen from './screens/InteractModalScreen';\r\nimport CursorScreen from './screens/CursorScreen';\r\nimport LoadAreaScreen from './screens/LoadAreaScreen';\r\nimport EquipmentScreen from './screens/EquipmentScreen';\r\nimport ListSelectionScreen from './screens/ListSelectionScreen';\r\nimport CharacterScreen from './screens/CharacterScreen';\r\nimport AbilityScreen from './screens/AbilityScreen';\r\nimport ConfirmationScreen from './screens/ConfirmationScreen';\r\nimport WaitScreen from './screens/WaitScreen';\r\nimport ChannelScreen from './screens/ChannelScreen';\r\n\r\nexport default class ScreenManager extends Manager {\r\n    #screens = {};\r\n    #screenStack = [];\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#screens = {\r\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\r\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\r\n            [SCREEN_DEATH]: new DeathScreen(game),\r\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\r\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\r\n            [SCREEN_CURSOR]: new CursorScreen(game),\r\n            [SCREEN_LOAD_AREA]: new LoadAreaScreen(game),\r\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\r\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\r\n            [SCREEN_CHARACTER]: new CharacterScreen(game),\r\n            [SCREEN_ABILITIES]: new AbilityScreen(game),\r\n            [SCREEN_CONFIRM]: new ConfirmationScreen(game),\r\n            [SCREEN_WAIT]: new WaitScreen(game),\r\n            [SCREEN_CHANNEL]: new ChannelScreen(game),\r\n        };\r\n        this.setScreen(SCREEN_MAIN_MENU);\r\n    }\r\n\r\n    get screenType() {\r\n        return this.#screenStack[this.#screenStack.length - 1].type;\r\n    }\r\n\r\n    get screenCtx() {\r\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\r\n    }\r\n\r\n    get screen() {\r\n        return this.#screens[this.screenType];\r\n    }\r\n\r\n    setScreen(screenType, ctx = {}) {\r\n        while (this.#screenStack.length > 0) {\r\n            this.screen.onLeave(ctx);\r\n            this.#screenStack.pop();\r\n        }\r\n\r\n        this.#screenStack.push({\r\n            type: screenType,\r\n            ctx,\r\n        });\r\n        this.screen.onEnter(this.screenCtx);\r\n    }\r\n\r\n    replaceScreen(screenType, ctx = {}) {\r\n        this.screen.onLeave(ctx);\r\n        this.#screenStack.pop();\r\n        this.#screenStack.push({\r\n            type: screenType,\r\n            ctx,\r\n        });\r\n        this.screen.onEnter(this.screenCtx);\r\n    }\r\n\r\n    pushScreen(screenType, ctx = {}) {\r\n        this.screen.onLeave(ctx);\r\n        this.#screenStack.push({\r\n            type: screenType,\r\n            ctx,\r\n        });\r\n        this.screen.onEnter(this.screenCtx);\r\n    }\r\n\r\n    popScreen(ctx = {}) {\r\n        this.screen.onLeave(ctx);\r\n        this.#screenStack.pop();\r\n        this.screen.onEnter(this.screenCtx);\r\n    }\r\n\r\n    update(dt) {\r\n        this.screen.onUpdate(dt);\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_NE,\r\n    INPUT_CMD_MOVE_W,\r\n    INPUT_CMD_WAIT,\r\n    INPUT_CMD_MOVE_E,\r\n    INPUT_CMD_MOVE_SW,\r\n    INPUT_CMD_MOVE_S,\r\n    INPUT_CMD_MOVE_SE,\r\n    INPUT_CMD_MOVE_NW,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_SAVE,\r\n    INPUT_CMD_LOAD,\r\n    INPUT_CMD_LOOK,\r\n    INPUT_CMD_INTERACT,\r\n    INPUT_CMD_PICK_UP,\r\n    INPUT_CMD_INVENTORY,\r\n    INPUT_CMD_SELECT_NW,\r\n    INPUT_CMD_SELECT_N,\r\n    INPUT_CMD_SELECT_NE,\r\n    INPUT_CMD_SELECT_W,\r\n    INPUT_CMD_SELECT_E,\r\n    INPUT_CMD_SELECT_SW,\r\n    INPUT_CMD_SELECT_S,\r\n    INPUT_CMD_SELECT_SE,\r\n    INPUT_CMD_EQUIPMENT,\r\n    INPUT_CMD_CHARACTER,\r\n    INPUT_CMD_ABILITIES,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\r\nimport {\r\n    DIR_N,\r\n    DIR_W,\r\n    DIR_E,\r\n    DIR_S,\r\n    DIR_NW,\r\n    DIR_SW,\r\n    DIR_SE,\r\n    DIR_NE,\r\n    directionDelta,\r\n} from '../../../enums/Directions';\r\nimport {\r\n    SCREEN_CURSOR,\r\n    SCREEN_EQUIPMENT,\r\n    SCREEN_INTERACT_MODAL,\r\n    SCREEN_INVENTORY,\r\n    SCREEN_CHARACTER,\r\n    SCREEN_LIST_SELECT,\r\n    SCREEN_MAIN_MENU,\r\n    SCREEN_ABILITIES,\r\n} from '../ScreenType';\r\nimport { Door, Loot } from '../../../ecs/components';\r\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\r\n\r\nexport default class AdventureScreen extends Screen {\r\n    onEnter() {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\r\n        this.game.FOVSystem.computeFOV();\r\n\r\n        const position = this.game.player.position;\r\n\r\n        this.game.camera.setFocus(position.x, position.y);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\r\n    }\r\n\r\n    onDirectionInput(dir) {\r\n        const delta = directionDelta(dir);\r\n        const playerPosition = this.game.player.position;\r\n        const targetPosition = {\r\n            x: playerPosition.x + delta.x,\r\n            y: playerPosition.y + delta.y,\r\n        };\r\n        const entities = this.game.map.getEntitiesAt(\r\n            targetPosition.x,\r\n            targetPosition.y\r\n        );\r\n\r\n        const hostileEntities = entities.filter((e) =>\r\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\r\n        );\r\n\r\n        if (hostileEntities.length > 0) {\r\n            this.game.player.melee(hostileEntities[0]);\r\n        } else {\r\n            const doorEntity = entities.find((e) => e.has(Door));\r\n\r\n            if (doorEntity && !doorEntity.door.isOpen) {\r\n                doorEntity.fireEvent('try-open-door', {\r\n                    interactor: this.game.player.entity,\r\n                });\r\n            } else {\r\n                this.game.player.move(dir);\r\n            }\r\n        }\r\n    }\r\n\r\n    onPickUpCommand() {\r\n        const position = this.game.player.position;\r\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\r\n\r\n        const lootable = entities.find((entity) => entity.has(Loot));\r\n\r\n        if (lootable) {\r\n            lootable.fireEvent('try-pick-up', {\r\n                interactor: this.game.player.entity,\r\n            });\r\n        } else {\r\n            console.log('there is nothing here to pick up.');\r\n        }\r\n    }\r\n\r\n    onInteract(x, y) {\r\n        const entities = this.game.map\r\n            .getEntitiesAt(x, y)\r\n            .filter((e) => !e.isPlayer);\r\n\r\n        const items = entities.filter((entity) => {\r\n            const evt = entity.fireEvent('get-interactions', {\r\n                interactor: this.game.player.entity,\r\n                interactions: [],\r\n            });\r\n\r\n            return evt.data.interactions.length > 0;\r\n        });\r\n\r\n        if (items.length <= 0) {\r\n            return;\r\n        }\r\n\r\n        if (items.length == 1) {\r\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\r\n                interactor: this.game.player.entity,\r\n                interactable: items[0],\r\n            });\r\n            return;\r\n        }\r\n\r\n        items.sort((a, b) => (a.glyph.z < b.glyph.z ? 1 : -1));\r\n\r\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\r\n            header: `Ground`,\r\n            leadText: 'Select an item to interact',\r\n            list: items,\r\n            onRenderRow: (item, x, y, isSelected) => {\r\n                const text = ` ${item.moniker.display}`;\r\n\r\n                this.game.renderer.draw(\r\n                    x + 1,\r\n                    y,\r\n                    item.glyph.char,\r\n                    item.glyph.primary,\r\n                    item.glyph.secondary,\r\n                    item.glyph.background\r\n                );\r\n\r\n                if (isSelected) {\r\n                    this.game.renderer.drawText(x, y, '→', 'yellow');\r\n                    this.game.renderer.drawText(x + 2, y, text, 'yellow');\r\n                } else {\r\n                    this.game.renderer.drawText(x, y, '-');\r\n                    this.game.renderer.drawText(x + 2, y, text);\r\n                }\r\n            },\r\n            onSelect: (item) => {\r\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\r\n                    interactor: this.game.player.entity,\r\n                    interactable: item,\r\n                });\r\n            },\r\n        });\r\n    }\r\n\r\n    onInteractDirection(dir) {\r\n        const delta = directionDelta(dir);\r\n        const playerPosition = this.game.player.position;\r\n        const targetPosition = {\r\n            x: playerPosition.x + delta.x,\r\n            y: playerPosition.y + delta.y,\r\n        };\r\n\r\n        this.onInteract(targetPosition.x, targetPosition.y);\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_SAVE) {\r\n            this.game.state.saveGame();\r\n        }\r\n        if (cmd.type === INPUT_CMD_LOAD) {\r\n            this.game.state.loadGame();\r\n        }\r\n        if (cmd.type === INPUT_CMD_LOOK) {\r\n            game.screens.pushScreen(SCREEN_CURSOR, {\r\n                drawTags: true,\r\n                drawFaction: true,\r\n                drawTemperature: true,\r\n                renderer: simpleCursorRenderer(),\r\n                onResult: () => game.screens.popScreen(),\r\n                onCancel: () => game.screens.popScreen(),\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_PICK_UP) {\r\n            this.onPickUpCommand();\r\n        }\r\n        if (cmd.type === INPUT_CMD_INTERACT) {\r\n            const pos = this.game.player.position;\r\n\r\n            this.onInteract(pos.x, pos.y);\r\n        }\r\n        if (cmd.type === INPUT_CMD_INVENTORY) {\r\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\r\n                accessible: this.game.player.entity,\r\n                accessor: this.game.player.entity,\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_ABILITIES) {\r\n            this.game.screens.pushScreen(SCREEN_ABILITIES, {\r\n                character: this.game.player.entity,\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\r\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\r\n                accessor: this.game.player.entity,\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_CHARACTER) {\r\n            this.game.screens.pushScreen(SCREEN_CHARACTER, {\r\n                character: this.game.player.entity,\r\n            });\r\n        }\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\r\n        }\r\n        if (cmd.type === INPUT_CMD_WAIT) {\r\n            this.game.player.wait();\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\r\n            this.onDirectionInput(DIR_NW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.onDirectionInput(DIR_N);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\r\n            this.onDirectionInput(DIR_NE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_W) {\r\n            this.onDirectionInput(DIR_W);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_E) {\r\n            this.onDirectionInput(DIR_E);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\r\n            this.onDirectionInput(DIR_SW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.onDirectionInput(DIR_S);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\r\n            this.onDirectionInput(DIR_SE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\r\n            this.onInteractDirection(DIR_NW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_N) {\r\n            this.onInteractDirection(DIR_N);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\r\n            this.onInteractDirection(DIR_NE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_W) {\r\n            this.onInteractDirection(DIR_W);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_E) {\r\n            this.onInteractDirection(DIR_E);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\r\n            this.onInteractDirection(DIR_SW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_S) {\r\n            this.onInteractDirection(DIR_S);\r\n        }\r\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\r\n            this.onInteractDirection(DIR_SE);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.updateAdventureSystems(dt);\r\n    }\r\n}\r\n","export default class Screen {\r\n    #game;\r\n\r\n    get game() {\r\n        return this.#game;\r\n    }\r\n\r\n    constructor(game) {\r\n        this.#game = game;\r\n    }\r\n\r\n    onEnter() {}\r\n\r\n    onLeave() {}\r\n\r\n    onUpdate(dt) {}\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_SAVE,\r\n    INPUT_CMD_LOAD,\r\n    INPUT_CMD_NEW_GAME,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_ADVENTURE } from '../ScreenType';\r\nimport {\r\n    UI_GLYPH_BORDER_T,\r\n    UI_GLYPH_BORDER_TERM_L,\r\n    UI_GLYPH_BORDER_TERM_R,\r\n} from '../../../enums/UIGlyphs';\r\nimport { UI_BORDER_FG1, UI_BORDER_FG2 } from '../../../utils/UIWindowUtil';\r\n\r\nexport default class MainMenuScreen extends Screen {\r\n    onEnter() {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n\r\n        if (!this.game.state.isStarted) {\r\n            this.game.music.play('BARDS_TALE');\r\n        }\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onConfirm() {\r\n        if (this.game.state.isStarted) {\r\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\r\n        } else {\r\n            this.game.state.newGame();\r\n        }\r\n    }\r\n\r\n    inputCommand() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.onConfirm();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_SAVE) {\r\n            this.game.state.saveGame();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_LOAD) {\r\n            this.game.state.loadGame();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\r\n            this.game.state.newGame();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.inputCommand();\r\n        this.game.renderer.clear();\r\n        this.game.renderer.draw(2, 1, '@', '#adb8bc', '#66a3dc');\r\n        this.game.renderer.drawText(3, 1, ` Sleepy Crawler`, '#66a3dc');\r\n\r\n        for (let i = 1; i < this.game.camera.width - 1; i++) {\r\n            if (i === 1) {\r\n                this.game.renderer.drawUI(\r\n                    i,\r\n                    2,\r\n                    UI_GLYPH_BORDER_TERM_L,\r\n                    UI_BORDER_FG1,\r\n                    UI_BORDER_FG2\r\n                );\r\n            } else if (i === this.game.camera.width - 2) {\r\n                this.game.renderer.drawUI(\r\n                    i,\r\n                    2,\r\n                    UI_GLYPH_BORDER_TERM_R,\r\n                    UI_BORDER_FG1,\r\n                    UI_BORDER_FG2\r\n                );\r\n            } else {\r\n                this.game.renderer.drawUI(\r\n                    i,\r\n                    2,\r\n                    UI_GLYPH_BORDER_T,\r\n                    UI_BORDER_FG1,\r\n                    UI_BORDER_FG2\r\n                );\r\n            }\r\n        }\r\n\r\n        this.game.renderer.drawText(2, 4, `∙ Movement`);\r\n        this.game.renderer.drawText(3, 6, `▬Q  ↑W  ↨E`);\r\n        this.game.renderer.drawText(3, 7, `←A      →D`);\r\n        this.game.renderer.drawText(3, 8, `∟Z  ↓X  ↔C`);\r\n        this.game.renderer.drawText(\r\n            3,\r\n            10,\r\n            `hold [SHIFT] and a direction to interact`\r\n        );\r\n\r\n        this.game.renderer.drawText(2, 12, `∙ Look [L]`);\r\n        this.game.renderer.drawText(2, 13, `∙ Inventory [I]`);\r\n        this.game.renderer.drawText(2, 14, `∙ Player Character [P]`);\r\n        this.game.renderer.drawText(2, 15, `∙ Equipment [O]`);\r\n        this.game.renderer.drawText(2, 16, `∙ Abilities [T]`);\r\n        this.game.renderer.drawText(2, 17, `∙ Confirm [ENTER]`);\r\n        this.game.renderer.drawText(2, 18, `∙ Cancel [ESC]`);\r\n\r\n        this.game.renderer.drawTextCenter(20, `set out into the forest...`);\r\n        this.game.renderer.drawTextCenter(22, `press [ENTER]`, '#213942');\r\n    }\r\n}\r\n","export const UI_GLYPH_BORDER_TL = '╨';\r\nexport const UI_GLYPH_BORDER_T = '╤';\r\nexport const UI_GLYPH_BORDER_TR = '╥';\r\nexport const UI_GLYPH_BORDER_L = 'α';\r\nexport const UI_GLYPH_BORDER_R = 'Γ';\r\nexport const UI_GLYPH_BORDER_BL = '≡';\r\nexport const UI_GLYPH_BORDER_B = '±';\r\nexport const UI_GLYPH_BORDER_BR = '≥';\r\nexport const UI_GLYPH_BORDER_TERM_R = '╙';\r\nexport const UI_GLYPH_BORDER_TERM_L = 'π';\r\n","import { game } from '../core/Game';\r\nimport {\r\n    UI_GLYPH_BORDER_T,\r\n    UI_GLYPH_BORDER_B,\r\n    UI_GLYPH_BORDER_L,\r\n    UI_GLYPH_BORDER_R,\r\n    UI_GLYPH_BORDER_TL,\r\n    UI_GLYPH_BORDER_TR,\r\n    UI_GLYPH_BORDER_BL,\r\n    UI_GLYPH_BORDER_BR,\r\n    UI_GLYPH_BORDER_TERM_R,\r\n    UI_GLYPH_BORDER_TERM_L,\r\n} from '../enums/UIGlyphs';\r\n\r\nexport const UI_BORDER_FG1 = '#405362';\r\nexport const UI_BORDER_FG2 = '#979545';\r\n\r\nexport const drawUIBox = (x, y, width, height) => {\r\n    game.renderer.clearArea(x, y, width + 1, height + 1);\r\n\r\n    for (let i = x; i < x + width; i++) {\r\n        game.renderer.drawUI(\r\n            i,\r\n            y,\r\n            UI_GLYPH_BORDER_T,\r\n            UI_BORDER_FG1,\r\n            UI_BORDER_FG2\r\n        );\r\n        game.renderer.drawUI(\r\n            i,\r\n            y + height,\r\n            UI_GLYPH_BORDER_B,\r\n            UI_BORDER_FG1,\r\n            UI_BORDER_FG2\r\n        );\r\n    }\r\n\r\n    for (let i = y; i < y + height; i++) {\r\n        game.renderer.drawUI(\r\n            x,\r\n            i,\r\n            UI_GLYPH_BORDER_L,\r\n            UI_BORDER_FG1,\r\n            UI_BORDER_FG2\r\n        );\r\n        game.renderer.drawUI(\r\n            x + width,\r\n            i,\r\n            UI_GLYPH_BORDER_R,\r\n            UI_BORDER_FG1,\r\n            UI_BORDER_FG2\r\n        );\r\n    }\r\n\r\n    game.renderer.drawUI(\r\n        x,\r\n        y,\r\n        UI_GLYPH_BORDER_TL,\r\n        UI_BORDER_FG1,\r\n        UI_BORDER_FG2\r\n    );\r\n    game.renderer.drawUI(\r\n        x + width,\r\n        y,\r\n        UI_GLYPH_BORDER_TR,\r\n        UI_BORDER_FG1,\r\n        UI_BORDER_FG2\r\n    );\r\n    game.renderer.drawUI(\r\n        x,\r\n        y + height,\r\n        UI_GLYPH_BORDER_BL,\r\n        UI_BORDER_FG1,\r\n        UI_BORDER_FG2\r\n    );\r\n    game.renderer.drawUI(\r\n        x + width,\r\n        y + height,\r\n        UI_GLYPH_BORDER_BR,\r\n        UI_BORDER_FG1,\r\n        UI_BORDER_FG2\r\n    );\r\n};\r\n\r\nexport const drawUIWindow = (x, y, width, height, title, icon) => {\r\n    drawUIBox(x, y, width, height);\r\n\r\n    const titleText = icon ? ` ${title}` : title;\r\n    const titleWidth = Math.ceil(game.renderer.computeTextWidth(titleText));\r\n\r\n    const titleOffset = x + 2;\r\n    const iconWidth = icon ? 1 : 0;\r\n\r\n    game.renderer.drawUI(\r\n        titleOffset - 1,\r\n        y,\r\n        UI_GLYPH_BORDER_TERM_R,\r\n        UI_BORDER_FG1,\r\n        UI_BORDER_FG2\r\n    );\r\n    game.renderer.drawUI(\r\n        titleOffset + iconWidth + titleWidth,\r\n        y,\r\n        UI_GLYPH_BORDER_TERM_L,\r\n        UI_BORDER_FG1,\r\n        UI_BORDER_FG2\r\n    );\r\n\r\n    if (icon) {\r\n        game.renderer.draw(\r\n            titleOffset,\r\n            y,\r\n            icon.char,\r\n            icon.primary,\r\n            icon.secondary,\r\n            icon.background\r\n        );\r\n    }\r\n\r\n    game.renderer.drawText(titleOffset + iconWidth, y, titleText);\r\n};\r\n","import Screen from './Screen';\r\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\r\n\r\nexport default class DeathScreen extends Screen {\r\n    onEnter() {\r\n        this.game.state.gameOver();\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.renderSystem.update(dt);\r\n\r\n        const text = 'you have succumbed to the forest';\r\n\r\n        this.game.renderer.drawTextCenter(10, text, '#ce5454', '#ce5454');\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\n\r\nexport default class InventoryScreen extends Screen {\r\n    #accessible;\r\n    #accessor;\r\n    list = new SelectableList();\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.#accessible = ctx.accessible;\r\n        this.#accessor = ctx.accessor;\r\n        this.list.setItems(this.#accessible.inventory.content);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectItem() {\r\n        const interactable = this.list.selected;\r\n\r\n        if (interactable) {\r\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\r\n                interactable,\r\n                interactor: this.#accessor,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.popScreen();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectItem();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.renderer.clear();\r\n        this.game.renderer.drawTextCenter(\r\n            3,\r\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\r\n            'yellow'\r\n        );\r\n\r\n        if (this.list.items.length === 0) {\r\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\r\n        }\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const ypos = idx + 5;\r\n\r\n            if (isSelected) {\r\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\r\n            } else {\r\n                this.game.renderer.drawText(1, ypos, '-');\r\n            }\r\n\r\n            this.game.renderer.draw(\r\n                2,\r\n                ypos,\r\n                item.glyph.char,\r\n                item.glyph.primary,\r\n                item.glyph.secondary,\r\n                item.glyph.background\r\n            );\r\n\r\n            const textLen = this.game.renderer.computeTextWidth(\r\n                item.moniker.display\r\n            );\r\n\r\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\r\n\r\n            if (item.isEquipped) {\r\n                const slot = item.isEquipped.slot.name;\r\n\r\n                this.game.renderer.drawText(\r\n                    4 + textLen + 0.5,\r\n                    ypos,\r\n                    `[${slot}]`,\r\n                    '#2c3538'\r\n                );\r\n            }\r\n        });\r\n\r\n        this.game.renderer.drawText(1, 1, '← back [esc]');\r\n    }\r\n}\r\n","export default class SelectableList {\r\n    _items = [];\r\n    _idx = 0;\r\n\r\n    get selected() {\r\n        return this._items[this._idx];\r\n    }\r\n\r\n    get items() {\r\n        return this._items;\r\n    }\r\n\r\n    get data() {\r\n        return this._items.map((item, idx) => ({\r\n            item,\r\n            idx,\r\n            isSelected: idx === this._idx,\r\n        }));\r\n    }\r\n\r\n    get isEmpty() {\r\n        return this._items.length <= 0;\r\n    }\r\n\r\n    get length() {\r\n        return this._items.length;\r\n    }\r\n\r\n    constructor(items = [], idx = 0) {\r\n        this._idx = idx;\r\n        this.setItems(items);\r\n    }\r\n\r\n    setItems(items = []) {\r\n        this._items = items;\r\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\r\n    }\r\n\r\n    up() {\r\n        this._idx--;\r\n\r\n        if (this._idx < 0) {\r\n            this._idx = this._items.length - 1;\r\n        }\r\n    }\r\n\r\n    down() {\r\n        this._idx++;\r\n\r\n        if (this._idx >= this._items.length) {\r\n            this._idx = 0;\r\n        }\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\nimport { getSkillName, getAllSkillEquippedModSums } from '../../../data/Skills';\r\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\r\n\r\nexport default class InteractModalScreen extends Screen {\r\n    #width = 18;\r\n    #height = 10;\r\n    #interactable;\r\n    #interactor;\r\n    list = new SelectableList();\r\n\r\n    get left() {\r\n        return Math.floor((this.game.camera.width - this.#width) / 2);\r\n    }\r\n\r\n    get top() {\r\n        return Math.floor((this.game.camera.height - this.#height) / 2);\r\n    }\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.#interactable = ctx.interactable;\r\n        this.#interactor = ctx.interactor;\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList() {\r\n        const evt = this.#interactable.fireEvent('get-interactions', {\r\n            interactor: this.#interactor,\r\n            interactions: [],\r\n        });\r\n\r\n        this.list.setItems([\r\n            ...evt.data.interactions,\r\n            {\r\n                name: 'Back',\r\n                isBack: true,\r\n            },\r\n        ]);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectItem() {\r\n        const interaction = this.list.selected;\r\n\r\n        if (interaction.isBack) {\r\n            this.game.screens.popScreen();\r\n            return;\r\n        }\r\n\r\n        this.#interactable.fireEvent(interaction.evt, {\r\n            interactor: this.#interactor,\r\n        });\r\n\r\n        if (this.#interactable.isDestroyed) {\r\n            this.game.screens.popScreen();\r\n\r\n            return;\r\n        }\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.popScreen();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectItem();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        drawUIWindow(\r\n            this.left,\r\n            this.top,\r\n            this.#width,\r\n            this.#height,\r\n            this.#interactable.moniker.display,\r\n            this.#interactable.glyph\r\n        );\r\n\r\n        let listPadding = 2;\r\n        const xpos = this.left + 2;\r\n\r\n        if (this.#interactable.weapon) {\r\n            const weaponDmg = this.#interactable.weapon.getShortDescription(\r\n                this.#interactor\r\n            );\r\n\r\n            this.game.renderer.drawText(\r\n                xpos,\r\n                this.top + listPadding,\r\n                weaponDmg\r\n            );\r\n\r\n            listPadding += 2;\r\n        }\r\n\r\n        const modifiers = getAllSkillEquippedModSums(this.#interactable);\r\n        let hasMod = false;\r\n\r\n        Object.keys(modifiers).forEach((skill) => {\r\n            const modifier = modifiers[skill];\r\n\r\n            if (modifier === 0) {\r\n                return;\r\n            }\r\n\r\n            hasMod = true;\r\n\r\n            const name = getSkillName(skill);\r\n            const ypos = this.top + listPadding;\r\n\r\n            this.game.renderer.drawText(xpos, ypos, name);\r\n            const len = this.game.renderer.computeTextWidth(name);\r\n\r\n            if (modifier > 0) {\r\n                this.game.renderer.drawText(\r\n                    xpos + len,\r\n                    ypos,\r\n                    ` +${modifier}`,\r\n                    'green'\r\n                );\r\n            } else {\r\n                this.game.renderer.drawText(\r\n                    xpos + len,\r\n                    ypos,\r\n                    ` -${modifier}`,\r\n                    'red'\r\n                );\r\n            }\r\n\r\n            listPadding++;\r\n        });\r\n\r\n        if (hasMod) {\r\n            listPadding++;\r\n        }\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const ypos = idx + this.top + listPadding;\r\n\r\n            if (isSelected) {\r\n                this.game.renderer.drawText(\r\n                    xpos,\r\n                    ypos,\r\n                    `→ ${item.name}`,\r\n                    'yellow'\r\n                );\r\n            } else {\r\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_NE,\r\n    INPUT_CMD_MOVE_W,\r\n    INPUT_CMD_MOVE_E,\r\n    INPUT_CMD_MOVE_SW,\r\n    INPUT_CMD_MOVE_S,\r\n    INPUT_CMD_MOVE_SE,\r\n    INPUT_CMD_MOVE_NW,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_CONFIRM,\r\n} from '../../input/InputCommandType';\r\nimport {\r\n    DIR_N,\r\n    DIR_W,\r\n    DIR_E,\r\n    DIR_S,\r\n    DIR_NW,\r\n    DIR_SW,\r\n    DIR_SE,\r\n    DIR_NE,\r\n    directionDelta,\r\n} from '../../../enums/Directions';\r\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\r\nimport { FactionMember } from '../../../ecs/components';\r\nimport { drawTags } from '../../../utils/UITags';\r\nimport { simpleCursorRenderer } from '../../../utils/cursor/SimpleCursorRenderer';\r\n\r\nconst NOOP = () => {};\r\n\r\nexport default class CursorScreen extends Screen {\r\n    x = 0;\r\n    y = 0;\r\n    maxDistance = Infinity;\r\n    start = {};\r\n    drawTags = false;\r\n    drawFaction = false;\r\n    drawTemperature = false;\r\n    onResult = NOOP;\r\n    onCancel = NOOP;\r\n\r\n    onEnter(ctx) {\r\n        this.game.renderer.clear();\r\n        this.game.FOVSystem.computeFOV();\r\n\r\n        this.start = ctx.start || this.game.player.position;\r\n        this.drawTags = ctx.drawTags || false;\r\n        this.drawFaction = ctx.drawFaction || false;\r\n        this.drawTemperature = ctx.drawTemperature || false;\r\n        this.onResult = ctx.onResult || NOOP;\r\n        this.onCancel = ctx.onCancel || NOOP;\r\n        this.renderer = ctx.renderer || simpleCursorRenderer();\r\n        this.maxDistance = ctx.maxDistance || Infinity;\r\n\r\n        this.x = this.start.x;\r\n        this.y = this.start.y;\r\n    }\r\n\r\n    onDirectionInput(direction) {\r\n        const delta = directionDelta(direction);\r\n\r\n        if (Math.abs(this.start.x - (this.x + delta.x)) <= this.maxDistance) {\r\n            this.x += delta.x;\r\n        }\r\n        if (Math.abs(this.start.y - (this.y + delta.y)) <= this.maxDistance) {\r\n            this.y += delta.y;\r\n        }\r\n    }\r\n\r\n    onConfirm() {\r\n        const opts = this.getOpts();\r\n\r\n        if (this.renderer.isValid(opts)) {\r\n            this.onResult(opts);\r\n        }\r\n    }\r\n\r\n    onCancel() {\r\n        this.onCancel();\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.onConfirm();\r\n        }\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.onCancel();\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\r\n            this.onDirectionInput(DIR_NW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.onDirectionInput(DIR_N);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\r\n            this.onDirectionInput(DIR_NE);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_W) {\r\n            this.onDirectionInput(DIR_W);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_E) {\r\n            this.onDirectionInput(DIR_E);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\r\n            this.onDirectionInput(DIR_SW);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.onDirectionInput(DIR_S);\r\n        }\r\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\r\n            this.onDirectionInput(DIR_SE);\r\n        }\r\n    }\r\n\r\n    getOpts() {\r\n        return {\r\n            start: {\r\n                x: this.start.x,\r\n                y: this.start.y,\r\n            },\r\n            position: {\r\n                x: this.x,\r\n                y: this.y,\r\n            },\r\n            x: this.x,\r\n            y: this.y,\r\n            screen: this.game.camera.worldToScreen(this.x, this.y),\r\n            line: bresenhamLine(this.start.x, this.start.y, this.x, this.y),\r\n        };\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.updateAdventureSystems(dt);\r\n\r\n        this.renderer.render(this.getOpts());\r\n\r\n        if (this.drawTags) {\r\n            drawTags(this.x, this.y);\r\n        }\r\n\r\n        if (this.drawFaction) {\r\n            const target = this.game.map\r\n                .getEntitiesAt(this.x, this.y)\r\n                .filter((e) => e.isVisible && e.factionMember)\r\n                .pop();\r\n\r\n            const player = this.game.player.entity;\r\n\r\n            if (target) {\r\n                const faction = target.factionMember.faction;\r\n                const relation = this.game.factions.getEntityRelation(\r\n                    player,\r\n                    target\r\n                );\r\n\r\n                let disp = this.game.factions.getDisplay(relation);\r\n\r\n                this.game.renderer.drawTextCenter(\r\n                    1,\r\n                    `${faction.display} Faction [${disp}]`\r\n                );\r\n            }\r\n        }\r\n\r\n        if (this.drawTemperature) {\r\n            const tmpC = this.game.temperature.getTemperature(this.x, this.y);\r\n            const tmpF = (tmpC * 9) / 5 + 32;\r\n\r\n            this.game.renderer.drawText(\r\n                this.game.camera.width - 12,\r\n                this.game.camera.height - 1,\r\n                `${Math.round(tmpF)}°F (${Math.round(tmpC)}°C)`\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { game } from '../core/Game';\r\n\r\nexport const drawTags = (x, y) => {\r\n    const entities = game.map\r\n        .getEntitiesAt(x, y)\r\n        .filter((e) => e.moniker && e.isVisible);\r\n    const screen = game.camera.worldToScreen(x, y);\r\n\r\n    if (screen.x < game.camera.width / 2) {\r\n        entities.forEach((entity, i) => {\r\n            const c = i === 0 ? '◄' : ' ';\r\n            game.renderer.drawText(screen.x + 1, screen.y + i, `${c}█`, '#ddd');\r\n            game.renderer.drawText(\r\n                screen.x + 2,\r\n                screen.y + i,\r\n                entity.moniker.display + ' ',\r\n                '#111133',\r\n                'white',\r\n                '#ddd'\r\n            );\r\n        });\r\n    } else {\r\n        entities.forEach((entity, i) => {\r\n            const c = i === 0 ? '►' : ' ';\r\n            game.renderer.drawText(screen.x - 1, screen.y + i, `█${c}`, '#ddd');\r\n            const len = game.renderer.computeTextWidth(entity.moniker.display);\r\n            game.renderer.drawText(\r\n                screen.x - len - 1.5,\r\n                screen.y + i,\r\n                ' ' + entity.moniker.display,\r\n                '#111133',\r\n                'white',\r\n                '#ddd'\r\n            );\r\n        });\r\n    }\r\n};\r\n","import { SCREEN_ADVENTURE } from '../ScreenType';\r\nimport Screen from './Screen';\r\n\r\nexport default class LoadAreaScreen extends Screen {\r\n    #prevousArea;\r\n    #nextArea;\r\n\r\n    onEnter(ctx) {\r\n        this.#prevousArea = ctx.prevousArea;\r\n        this.#nextArea = ctx.nextArea;\r\n\r\n        this.renderLoadingText();\r\n\r\n        if (ctx.prevousArea) {\r\n            const data = this.game.state.saveGame();\r\n\r\n            data.world.areaId = ctx.nextArea.id;\r\n            data.map.playerPosition = ctx.entry;\r\n\r\n            this.game.state.loadGameData(data);\r\n\r\n            return;\r\n        }\r\n\r\n        this.game.world.onAreaLoaded(ctx.nextArea, ctx.entry);\r\n        this.game.map.onAreaLoaded(ctx.nextArea, ctx.entry);\r\n        this.game.music.onAreaLoaded(ctx.nextArea, ctx.entry);\r\n        this.game.temperature.onAreaLoaded(ctx.nextArea, ctx.entry);\r\n\r\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\r\n    }\r\n\r\n    renderLoadingText() {\r\n        this.game.renderer.clear();\r\n        if (this.#prevousArea) {\r\n            const prevText = `You are leaving area ${this.#prevousArea.id}`;\r\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\r\n        } else {\r\n            const nextText = `You are entering area ${this.#nextArea.id}`;\r\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.renderLoadingText();\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\n\r\nexport default class EquipmentScreen extends Screen {\r\n    #accessor;\r\n    list = new SelectableList();\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.#accessor = ctx.accessor;\r\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectSlot() {\r\n        const interactable = this.list.selected.content;\r\n\r\n        if (interactable) {\r\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\r\n                interactable,\r\n                interactor: this.#accessor,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.popScreen();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectSlot();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n        this.game.renderer.clear();\r\n        this.game.renderer.drawTextCenter(\r\n            3,\r\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\r\n            'purple'\r\n        );\r\n\r\n        if (this.list.isEmpty) {\r\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\r\n        }\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const slot = item;\r\n            const ypos = idx + 5;\r\n            const selectedColor = 'yellow';\r\n\r\n            if (isSelected) {\r\n                this.game.renderer.drawText(\r\n                    1,\r\n                    ypos,\r\n                    `→ ${slot.name}`,\r\n                    selectedColor\r\n                );\r\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\r\n            } else {\r\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\r\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\r\n            }\r\n\r\n            if (slot.isEmpty) {\r\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\r\n            } else {\r\n                const content = slot.content;\r\n                this.game.renderer.draw(\r\n                    15,\r\n                    ypos,\r\n                    content.glyph.char,\r\n                    content.glyph.primary,\r\n                    content.glyph.secondary,\r\n                    content.glyph.background\r\n                );\r\n                this.game.renderer.drawText(\r\n                    16,\r\n                    ypos,\r\n                    ` ${content.moniker.display}`\r\n                );\r\n            }\r\n        });\r\n\r\n        this.game.renderer.drawText(1, 1, '← back [esc]');\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\r\n\r\nconst NOOP = () => {};\r\n\r\nexport default class ListSelectionScreen extends Screen {\r\n    width = 18;\r\n    height = 10;\r\n    list = new SelectableList();\r\n    header = '';\r\n    icon = null;\r\n    leadText = null;\r\n\r\n    get left() {\r\n        return Math.floor((this.game.camera.width - this.width) / 2);\r\n    }\r\n\r\n    get top() {\r\n        return Math.floor((this.game.camera.height - this.height) / 2);\r\n    }\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.list.setItems(ctx.list || []);\r\n        this.header = ctx.header || 'Select';\r\n        this.icon = ctx.icon || null;\r\n        this.leadText = ctx.leadText || null;\r\n        this.onSelect = ctx.onSelect || NOOP;\r\n        this.onCancel = ctx.onCancel || NOOP;\r\n        this.onGetRowName = ctx.onGetRowName || NOOP;\r\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectItem() {\r\n        this.onSelect(this.list.selected);\r\n    }\r\n\r\n    cancel() {\r\n        this.onCancel();\r\n        this.game.screens.popScreen();\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.cancel();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectItem();\r\n        }\r\n    }\r\n\r\n    defaultRowRender(row, x, y, isSelected) {\r\n        const text = this.onGetRowName(row, x, y, isSelected);\r\n\r\n        if (isSelected) {\r\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\r\n        } else {\r\n            this.game.renderer.drawText(x, y, `- ${text}`);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        drawUIWindow(\r\n            this.left,\r\n            this.top,\r\n            this.width,\r\n            this.height,\r\n            this.header,\r\n            this.icon\r\n        );\r\n\r\n        let yOffset = this.top + 2;\r\n\r\n        const xpos = this.left + 2;\r\n\r\n        if (this.leadText) {\r\n            this.game.renderer.drawText(xpos, yOffset, this.leadText);\r\n\r\n            yOffset += 2;\r\n        }\r\n\r\n        this.list.data.forEach(({ item, idx, isSelected }) => {\r\n            const ypos = yOffset + idx;\r\n\r\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\r\n        });\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\nimport {\r\n    SKILL_ARMOR,\r\n    getSkillValue,\r\n    getSkillsByStat,\r\n} from '../../../data/Skills';\r\nimport { getArmorBlockPercentDisplay } from '../../../data/skills/ArmorSkill';\r\nimport { capitalize } from '../../../utils/StringUtil';\r\n\r\nconst MODE_STAT = 0;\r\nconst MODE_SKILL = 1;\r\n\r\nexport default class CharacterScreen extends Screen {\r\n    character;\r\n    mode = MODE_STAT;\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.character = ctx.character;\r\n\r\n        const stats = this.character.stats.all();\r\n\r\n        this.stats = new SelectableList(Object.values(stats));\r\n        this.skills = new SelectableList();\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectItem() {\r\n        if (this.mode === MODE_STAT) {\r\n            this.mode = MODE_SKILL;\r\n        } else {\r\n            const skillPoints = this.character.level.skillPoints;\r\n\r\n            if (skillPoints > 0) {\r\n                const skill = this.skills.selected;\r\n\r\n                this.character.skills[skill.key]++;\r\n                this.character.level.skillPoints--;\r\n            }\r\n        }\r\n    }\r\n\r\n    up() {\r\n        if (this.mode === MODE_STAT) {\r\n            this.stats.up();\r\n        } else {\r\n            this.skills.up();\r\n        }\r\n    }\r\n\r\n    back() {\r\n        if (this.mode === MODE_STAT) {\r\n            this.game.screens.popScreen();\r\n        } else {\r\n            this.mode = MODE_STAT;\r\n        }\r\n    }\r\n\r\n    down() {\r\n        if (this.mode === MODE_STAT) {\r\n            this.stats.down();\r\n        } else {\r\n            this.skills.down();\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.back();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectItem();\r\n        }\r\n    }\r\n\r\n    renderSkills(stat, offsetY) {\r\n        this.skills.setItems(getSkillsByStat(stat.stat));\r\n\r\n        this.game.renderer.drawText(\r\n            14,\r\n            offsetY,\r\n            `${capitalize(stat.name)} skills`,\r\n            'orange'\r\n        );\r\n\r\n        this.skills.data.forEach(({ item, idx, isSelected }) => {\r\n            const skill = item;\r\n            const posY = 2 + idx + offsetY;\r\n            const value = getSkillValue(skill.key, this.character);\r\n\r\n            if (isSelected) {\r\n                const color = this.mode === MODE_SKILL ? 'yellow' : '#c1c172';\r\n\r\n                this.game.renderer.drawText(14, posY, `→ ${skill.name}`, color);\r\n                this.game.renderer.drawText(22, posY, `+${value}`, color);\r\n            } else {\r\n                const selector = this.mode === MODE_SKILL ? '-' : ' ';\r\n\r\n                this.game.renderer.drawText(\r\n                    14,\r\n                    posY,\r\n                    `${selector} ${skill.name}`\r\n                );\r\n                this.game.renderer.drawText(22, posY, `+${value}`);\r\n            }\r\n        });\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        this.game.renderer.clear();\r\n        this.game.renderer.drawTextCenter(\r\n            3,\r\n            `~ ${this.character.moniker.display} Character ~`,\r\n            'orange'\r\n        );\r\n\r\n        const level = this.character.level.level;\r\n        const xp = this.character.level.xp;\r\n        const nextLevelReqXp = this.character.level.nextLevelReq;\r\n\r\n        let offsetY = 5;\r\n\r\n        this.game.renderer.drawText(1, offsetY, 'level');\r\n        this.game.renderer.drawText(\r\n            8,\r\n            offsetY,\r\n            `${level} (${xp}/${nextLevelReqXp} xp)`\r\n        );\r\n\r\n        offsetY++;\r\n\r\n        const health = Math.ceil(this.character.health.value);\r\n        const healthMax = this.character.health.max;\r\n\r\n        this.game.renderer.drawText(1, offsetY, 'health');\r\n        this.game.renderer.drawText(8, offsetY, `${health}/${healthMax}`);\r\n\r\n        offsetY++;\r\n\r\n        const armor = getSkillValue(SKILL_ARMOR, this.character);\r\n        const armorPrcnt = getArmorBlockPercentDisplay(armor);\r\n\r\n        this.game.renderer.drawText(1, offsetY, 'armor');\r\n        this.game.renderer.drawText(8, offsetY, `${armor} (${armorPrcnt}%)`);\r\n\r\n        offsetY++;\r\n\r\n        const skillPoints = this.character.level.skillPoints;\r\n        const skillPointColor = skillPoints > 0 ? 'green' : undefined;\r\n\r\n        this.game.renderer.drawText(1, offsetY, 'skill points');\r\n        this.game.renderer.drawText(\r\n            8,\r\n            offsetY,\r\n            `${skillPoints}`,\r\n            skillPointColor\r\n        );\r\n\r\n        offsetY++;\r\n        offsetY++;\r\n\r\n        this.game.renderer.drawText(1, offsetY, 'Stats', 'orange');\r\n\r\n        this.stats.data.forEach(({ item, idx, isSelected }) => {\r\n            const stat = item;\r\n            const ypos = offsetY + idx + 2;\r\n            const modDir = stat.modSum >= 0 ? '+' : '-';\r\n\r\n            if (isSelected) {\r\n                const color = this.mode === MODE_STAT ? 'yellow' : '#c1c172';\r\n\r\n                this.game.renderer.drawText(\r\n                    1,\r\n                    ypos,\r\n                    `→ ${stat.abbreviation} ${stat.name}`,\r\n                    color\r\n                );\r\n                this.game.renderer.drawText(\r\n                    11,\r\n                    ypos,\r\n                    `${modDir}${stat.sum}`,\r\n                    color\r\n                );\r\n            } else {\r\n                const selector = this.mode === MODE_STAT ? '-' : ' ';\r\n\r\n                this.game.renderer.drawText(\r\n                    1,\r\n                    ypos,\r\n                    `${selector} ${stat.abbreviation} ${stat.name}`\r\n                );\r\n                this.game.renderer.drawText(11, ypos, `${modDir}${stat.sum}`);\r\n            }\r\n        });\r\n\r\n        this.renderSkills(this.stats.selected, offsetY);\r\n\r\n        this.game.renderer.drawText(1, 1, '← back [esc]');\r\n    }\r\n}\r\n","export const capitalize = (str) => {\r\n    return str.charAt(0).toUpperCase() + str.slice(1);\r\n};\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport SelectableList from '../../../utils/SelectableList';\r\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\r\nimport {\r\n    getAbility,\r\n    getAbilityStatus,\r\n    getStance,\r\n} from '../../../data/Abilities';\r\nimport { getAbilityTypeName } from '../../../enums/AbilityTypes';\r\nimport { SCREEN_CHANNEL, SCREEN_CONFIRM } from '../ScreenType';\r\n\r\nexport default class AbilityScreen extends Screen {\r\n    width = 18;\r\n    PADDING_RIGHT = 1;\r\n    PADDING_HEIGHT = 4;\r\n    character;\r\n    list = new SelectableList();\r\n\r\n    get left() {\r\n        return Math.floor(\r\n            this.game.camera.width - this.width - this.PADDING_RIGHT\r\n        );\r\n    }\r\n\r\n    get top() {\r\n        return this.PADDING_HEIGHT;\r\n    }\r\n\r\n    get height() {\r\n        return Math.floor(this.game.camera.height - this.PADDING_HEIGHT * 2);\r\n    }\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n        this.character = ctx.character;\r\n\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList() {\r\n        const evt = this.character.fireEvent('query-abilities', {\r\n            abilities: [],\r\n        });\r\n\r\n        this.list.setItems([\r\n            ...evt.data.abilities.map((type) => getAbility(type)),\r\n            {\r\n                name: 'Back',\r\n                isBack: true,\r\n            },\r\n        ]);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    selectItem() {\r\n        const ability = this.list.selected;\r\n\r\n        if (ability.isBack) {\r\n            this.game.screens.popScreen();\r\n            return;\r\n        }\r\n\r\n        const status = getAbilityStatus(ability.key, this.character);\r\n\r\n        // is the ability on cooldown? IGNORE IT\r\n        if (status && status.isCoolingDown) {\r\n            return;\r\n        }\r\n\r\n        // is the ability toggled on?\r\n        if (status && status.isToggledOn) {\r\n            ability.toggleOff(this.character, status);\r\n            this.game.screens.popScreen();\r\n            return;\r\n        }\r\n\r\n        // is the ability a stance?\r\n        if (ability.isStance) {\r\n            const stance = getStance(this.character);\r\n\r\n            if (stance) {\r\n                this.game.screens.pushScreen(SCREEN_CONFIRM, {\r\n                    header: 'Switch stance?',\r\n                    leadText: `Only one stance can be active at a time. Do you want to switch from ${stance.ability.name} to ${ability.name}?`,\r\n                    onConfirm: () => {\r\n                        stance.ability.toggleOff(this.character, stance);\r\n                        ability.toggleOn(this.character);\r\n                        this.game.screens.popScreen();\r\n                    },\r\n                });\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (!status && ability.isToggleable) {\r\n            ability.toggleOn(this.character);\r\n            this.game.screens.popScreen();\r\n            return;\r\n        }\r\n\r\n        ability.initiate(this.character, {\r\n            onConfirm: (data) => {\r\n                ability.execute(this.character, data);\r\n\r\n                this.game.screens.popScreen();\r\n\r\n                if (ability.isChanneled && this.character.isPlayer) {\r\n                    this.game.screens.pushScreen(SCREEN_CHANNEL, {\r\n                        entity: this.character,\r\n                    });\r\n                }\r\n            },\r\n            onCancel: () => {},\r\n        });\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.game.screens.popScreen();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_N) {\r\n            this.list.up();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_MOVE_S) {\r\n            this.list.down();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.selectItem();\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.game.updateAdventureSystems(dt);\r\n        this.handleInput();\r\n\r\n        drawUIWindow(\r\n            this.left,\r\n            this.top,\r\n            this.width,\r\n            this.height,\r\n            'Abilities',\r\n            this.character.glyph\r\n        );\r\n\r\n        let yOffset = this.top + 2;\r\n        let xOffset = this.left + 2;\r\n\r\n        this.list.data.forEach(({ item: ability, idx, isSelected }) => {\r\n            if (ability.isBack) {\r\n                if (isSelected) {\r\n                    this.game.renderer.drawText(\r\n                        xOffset,\r\n                        yOffset + idx,\r\n                        '→ Back',\r\n                        'yellow'\r\n                    );\r\n                } else {\r\n                    this.game.renderer.drawText(\r\n                        xOffset,\r\n                        yOffset + idx,\r\n                        '- Back'\r\n                    );\r\n                }\r\n                return;\r\n            }\r\n\r\n            const display = ability.getDisplayText(this.character);\r\n\r\n            if (isSelected) {\r\n                if (display.isEnabled) {\r\n                    this.game.renderer.drawText(\r\n                        xOffset,\r\n                        yOffset + idx,\r\n                        `→ ${display.text}`,\r\n                        'yellow'\r\n                    );\r\n                } else {\r\n                    this.game.renderer.drawText(\r\n                        xOffset,\r\n                        yOffset + idx,\r\n                        `→ ${display.text}`,\r\n                        'gray'\r\n                    );\r\n                }\r\n            } else {\r\n                if (display.isEnabled) {\r\n                    this.game.renderer.drawText(\r\n                        xOffset,\r\n                        yOffset + idx,\r\n                        `- ${display.text}`\r\n                    );\r\n                } else {\r\n                    this.game.renderer.drawText(\r\n                        xOffset,\r\n                        yOffset + idx,\r\n                        `- ${display.text}`,\r\n                        'gray'\r\n                    );\r\n                }\r\n            }\r\n        });\r\n\r\n        const ability = this.list.selected;\r\n\r\n        if (ability.isBack) {\r\n            return;\r\n        }\r\n\r\n        const description = `${getAbilityTypeName(\r\n            ability.type\r\n        )}. ${ability.getDescription(this.character)}`;\r\n\r\n        this.game.renderer.drawTextWrapping(\r\n            xOffset,\r\n            yOffset + this.list.length + 1,\r\n            this.width - 2,\r\n            description\r\n        );\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport {\r\n    INPUT_CMD_CONFIRM,\r\n    INPUT_CMD_CANCEL,\r\n    INPUT_CMD_MOVE_N,\r\n    INPUT_CMD_MOVE_S,\r\n    INPUT_CMD_MOVE_E,\r\n    INPUT_CMD_MOVE_W,\r\n} from '../../input/InputCommandType';\r\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\r\nimport { drawUIWindow } from '../../../utils/UIWindowUtil';\r\n\r\nconst NOOP = () => {};\r\n\r\nconst OPT_YES = 1;\r\nconst OPT_NO = 0;\r\n\r\nexport default class ConfirmationScreen extends Screen {\r\n    width = 18;\r\n    option = 0;\r\n\r\n    get height() {\r\n        if (!this.leadText) {\r\n            return 4;\r\n        }\r\n\r\n        const textW = this.game.renderer.computeTextWidthTile(this.leadText);\r\n\r\n        return Math.ceil(textW / (this.width - 2) + 6);\r\n    }\r\n\r\n    get left() {\r\n        return Math.floor((this.game.camera.width - this.width) / 2);\r\n    }\r\n\r\n    get top() {\r\n        return Math.floor((this.game.camera.height - this.height) / 2);\r\n    }\r\n\r\n    get bottom() {\r\n        return this.top + this.height;\r\n    }\r\n\r\n    get right() {\r\n        return this.left + this.width;\r\n    }\r\n\r\n    onEnter(ctx) {\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\r\n\r\n        this.header = ctx.header || 'Are you sure?';\r\n        this.onConfirm = ctx.onConfirm || NOOP;\r\n        this.onCancel = ctx.onCancel || NOOP;\r\n        this.onResult = ctx.onResult || NOOP;\r\n        this.confirmText = ctx.confirmText || 'confirm';\r\n        this.cancelText = ctx.cancelText || 'cancel';\r\n        this.leadText = ctx.leadText || '';\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\r\n    }\r\n\r\n    onSelection(result) {\r\n        this.game.screens.popScreen();\r\n\r\n        if (result) {\r\n            this.onConfirm();\r\n        } else {\r\n            this.onCancel();\r\n        }\r\n\r\n        this.onResult(result);\r\n    }\r\n\r\n    toggleSelection() {\r\n        this.option = this.option ? OPT_NO : OPT_YES;\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (\r\n            [\r\n                INPUT_CMD_MOVE_N,\r\n                INPUT_CMD_MOVE_E,\r\n                INPUT_CMD_MOVE_S,\r\n                INPUT_CMD_MOVE_W,\r\n            ].includes(cmd.type)\r\n        ) {\r\n            this.toggleSelection();\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.onSelection(OPT_NO);\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CONFIRM) {\r\n            this.onSelection(this.option);\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        drawUIWindow(this.left, this.top, this.width, this.height, this.header);\r\n\r\n        if (this.leadText) {\r\n            this.game.renderer.drawTextWrapping(\r\n                this.left + 2,\r\n                this.top + 2,\r\n                this.width - 2,\r\n                this.leadText\r\n            );\r\n        }\r\n\r\n        const cancel = this.option\r\n            ? `- ${this.cancelText}`\r\n            : `→ ${this.cancelText}`;\r\n        const confirm = this.option\r\n            ? `→ ${this.confirmText}`\r\n            : `- ${this.confirmText}`;\r\n\r\n        this.game.renderer.drawText(\r\n            this.left + 3,\r\n            this.bottom - 2,\r\n            cancel,\r\n            this.option ? undefined : 'yellow'\r\n        );\r\n\r\n        const textWidth = this.game.renderer.computeTextWidth(confirm);\r\n\r\n        this.game.renderer.drawText(\r\n            this.right - 2 - textWidth,\r\n            this.bottom - 2,\r\n            confirm,\r\n            this.option ? 'yellow' : undefined\r\n        );\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\r\n\r\nexport default class WaitScreen extends Screen {\r\n    time = 1000;\r\n    curTime = 0;\r\n\r\n    onEnter(ctx) {\r\n        this.time = ctx.time || 1000;\r\n        this.curTime = 0;\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.curTime += dt;\r\n\r\n        if (this.curTime >= this.time) {\r\n            this.game.screens.popScreen();\r\n            return;\r\n        }\r\n\r\n        this.handleInput();\r\n    }\r\n}\r\n","import Screen from './Screen';\r\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\r\nimport { INPUT_CMD_CANCEL, INPUT_CMD_WAIT } from '../../input/InputCommandType';\r\nimport { getChanneling } from '../../../data/Abilities';\r\n\r\nexport default class ChannelScreen extends Screen {\r\n    onEnter(ctx) {\r\n        this.entity = ctx.entity;\r\n        this.channel = getChanneling(this.entity);\r\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\r\n    }\r\n\r\n    onLeave() {\r\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\r\n    }\r\n\r\n    handleInput() {\r\n        const cmd = this.game.commands.getNextCommand();\r\n\r\n        if (!cmd) {\r\n            return;\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_WAIT) {\r\n            this.channel.ability.channel(200, this.channel);\r\n        }\r\n\r\n        if (cmd.type === INPUT_CMD_CANCEL) {\r\n            this.channel.ability.cancelChannel(this.channel);\r\n        }\r\n    }\r\n\r\n    renderChanneling() {\r\n        const percent =\r\n            this.channel.currentChannelDuration / this.channel.channelDuration;\r\n        const maxLength = 16;\r\n        const length = Math.ceil(percent * maxLength * 2) / 2;\r\n        const center = Math.floor(this.game.camera.width / 2) - maxLength / 2;\r\n        const bottom = this.game.camera.height - 6;\r\n\r\n        const fract = `(${(\r\n            Math.floor(this.channel.currentChannelDuration / 100) / 10\r\n        ).toFixed(1)}/${Math.ceil(this.channel.channelDuration / 100) / 10})`;\r\n        this.game.renderer.drawTextCenter(\r\n            bottom,\r\n            `Channeling ${this.channel.ability.name} ${fract}`\r\n        );\r\n        this.game.renderer.drawTextCenter(\r\n            bottom + 2,\r\n            'press [S] to channel or [ESC] to cancel',\r\n            '#53575b'\r\n        );\r\n\r\n        for (let i = 0; i < maxLength; i++) {\r\n            const diff = length - i;\r\n\r\n            if (diff == 0.5) {\r\n                this.game.renderer.drawUI(\r\n                    center + i,\r\n                    bottom - 1,\r\n                    ' ',\r\n                    '#4685bc',\r\n                    '#2f3438'\r\n                );\r\n            } else if (diff > 0) {\r\n                this.game.renderer.drawUI(\r\n                    center + i,\r\n                    bottom - 1,\r\n                    '►',\r\n                    '#4685bc'\r\n                );\r\n            } else {\r\n                this.game.renderer.drawUI(\r\n                    center + i,\r\n                    bottom - 1,\r\n                    '►',\r\n                    '#2f3438'\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    onUpdate(dt) {\r\n        this.handleInput();\r\n\r\n        this.game.updateAdventureSystems(dt);\r\n        this.renderChanneling();\r\n\r\n        if (!this.channel.isChanneling) {\r\n            this.game.screens.popScreen();\r\n        }\r\n    }\r\n}\r\n","import Manager from './Manager';\r\nimport { directionDelta } from '../enums/Directions';\r\n\r\nexport default class PlayerManager extends Manager {\r\n    #entityId = null;\r\n    actionQueue = [];\r\n\r\n    get entity() {\r\n        return this.game.ecs.getEntity(this.#entityId);\r\n    }\r\n\r\n    get id() {\r\n        return this.#entityId;\r\n    }\r\n\r\n    get isTurn() {\r\n        return this.entity.actor.hasEnergy;\r\n    }\r\n\r\n    get position() {\r\n        return this.entity.position.getPos();\r\n    }\r\n\r\n    spawn() {\r\n        const entity = this.game.ecs.createPrefab('Player');\r\n\r\n        this.#entityId = entity.id;\r\n\r\n        return this.entity;\r\n    }\r\n\r\n    getSetupData() {\r\n        // TODO\r\n        // player.fireEvent('query-owned-entities', { ids });\r\n        // player.fireEvent('dereference-unowned-entities');\r\n        // serialize all \"owned\"\r\n        const entity = this.game.ecs.createPrefab('Player');\r\n        const entityId = entity.id;\r\n        const serialized = entity.serialize();\r\n\r\n        entity.destroy();\r\n\r\n        return {\r\n            entityId,\r\n            entity: serialized, // TODO inventory\r\n        };\r\n    }\r\n\r\n    setup(data) {\r\n        this.#entityId = data.entityId;\r\n        this.game.ecs.deserialize(data.entity);\r\n    }\r\n\r\n    getSaveGameData() {\r\n        const entityId = this.entity.id;\r\n\r\n        // gather all entities for player\r\n        const evt = this.entity.fireEvent('query-ownership', {\r\n            result: new Set([this.entity]),\r\n        });\r\n        const owned = Array.from(evt.data.result);\r\n        const serialized = this.game.ecs.serialize(owned);\r\n\r\n        owned.forEach((e) => e.destroy());\r\n\r\n        return {\r\n            entityId,\r\n            entity: serialized, // TODO inventory\r\n        };\r\n    }\r\n\r\n    teardown() {\r\n        if (this.entity) {\r\n            this.entity.destroy();\r\n        }\r\n        this.#entityId = null; // TODO does this need to destroy()?\r\n    }\r\n\r\n    getNextAction() {\r\n        return this.actionQueue.shift();\r\n    }\r\n\r\n    move(direction) {\r\n        this.actionQueue.push(() => {\r\n            const delta = directionDelta(direction);\r\n\r\n            this.entity.fireEvent('try-move', delta);\r\n        });\r\n    }\r\n\r\n    melee(target) {\r\n        this.actionQueue.push(() => {\r\n            if (target.isDestroyed || target.isDead) {\r\n                console.warn(`Melee action on destroyed target ${target}`);\r\n\r\n                return;\r\n            }\r\n\r\n            this.entity.fireEvent('try-melee', {\r\n                target,\r\n            });\r\n        });\r\n    }\r\n\r\n    wait(turns = 1) {\r\n        this.actionQueue.push(() => {\r\n            this.entity.fireEvent('energy-consumed', turns * 1000);\r\n        });\r\n    }\r\n}\r\n","import { Engine } from 'geotic';\r\n\r\nimport * as components from './components';\r\nimport * as prefabs from './prefabs';\r\nimport Manager from '../core/Manager';\r\n\r\nexport default class ECS extends Manager {\r\n    #engine;\r\n    #id = 1;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#engine = new Engine();\r\n        this.#engine.idGenerator = () => `e${this.#id++}`;\r\n\r\n        Object.values(components).forEach((component) => {\r\n            this.#engine.registerComponent(component);\r\n        });\r\n\r\n        Object.values(prefabs).forEach((prefab) => {\r\n            this.#engine.registerPrefab(prefab);\r\n        });\r\n\r\n        this.world = this.#engine.createWorld();\r\n    }\r\n\r\n    teardown() {\r\n        this.destroyEntities();\r\n    }\r\n\r\n    destroyEntities() {\r\n        for (let entity of this.#engine.entities.all) {\r\n            entity.destroy();\r\n        }\r\n    }\r\n\r\n    cloneEntity(entity) {\r\n        const data = entity.serialize();\r\n\r\n        data.id = this.world.createId();\r\n\r\n        this.world.deserialize(data);\r\n\r\n        return this.world.getEntity(data.id);\r\n    }\r\n}\r\n","import Manager from './Manager';\r\nimport { SCREEN_ADVENTURE } from './screens/ScreenType';\r\n\r\nconst stringify = JSON.stringify;\r\nconst parse = JSON.parse;\r\n\r\nexport default class GameStateManager extends Manager {\r\n    #isStarted = false;\r\n    #filename = 'test';\r\n\r\n    get filename() {\r\n        return this.#filename;\r\n    }\r\n\r\n    get isStarted() {\r\n        return this.#isStarted;\r\n    }\r\n\r\n    gameOver() {\r\n        this.#isStarted = false;\r\n    }\r\n\r\n    initiateTeardown() {\r\n        this.#isStarted = false;\r\n\r\n        this.game.player.teardown();\r\n        this.game.map.teardown();\r\n        this.game.engine.teardown();\r\n        this.game.world.teardown();\r\n        this.game.temperature.teardown();\r\n        this.game.console.teardown();\r\n    }\r\n\r\n    initiateSetup(data) {\r\n        this.#isStarted = true;\r\n\r\n        this.game.clock.setup(data.clock);\r\n        this.game.player.setup(data.player);\r\n        this.game.world.setup(data.world);\r\n        this.game.map.setup(data.map);\r\n    }\r\n\r\n    newGame() {\r\n        this.#filename = prompt('Enter save name', 'hello');\r\n\r\n        if (!this.filename) {\r\n            return;\r\n        }\r\n\r\n        this.deleteFile(this.filename);\r\n\r\n        // spawn player\r\n        const player = this.game.player.spawn();\r\n        player.position.setPos(8, 8);\r\n\r\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\r\n\r\n        // set screen to adventure\r\n\r\n\r\n        // const playerData = this.game.player.getSetupData();\r\n        // this.initiateTeardown();\r\n\r\n        // const data = {\r\n        //     filename: this.filename,\r\n        //     clock: this.game.clock.getSetupData(),\r\n        //     player: this.game.player.getSetupData(),\r\n        //     world: this.game.world.getSetupData(),\r\n        //     map: this.game.map.getSetupData(),\r\n        // };\r\n\r\n        // this.initiateSetup(data);\r\n    }\r\n\r\n    saveGame() {\r\n        if (!this.isStarted) {\r\n            console.warn(\"cannot save game since it's not started\");\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            filename: this.filename,\r\n            clock: this.game.clock.getSaveGameData(),\r\n            map: this.game.map.getSaveGameData(),\r\n            player: this.game.player.getSaveGameData(),\r\n            world: this.game.world.getSaveGameData(),\r\n            temperature: this.game.temperature.getSaveGameData(),\r\n        };\r\n\r\n        console.log('save data', data);\r\n\r\n        localStorage.setItem(this.filename, stringify(data));\r\n\r\n        return data;\r\n    }\r\n\r\n    deleteFile(filename) {\r\n        const files = Object.keys(localStorage);\r\n\r\n        files.forEach((file) => {\r\n            if (file.startsWith(`${filename}-`)) {\r\n                localStorage.removeItem(file);\r\n            }\r\n        });\r\n    }\r\n\r\n    saveChunkPositionData(chunkId, data) {\r\n        localStorage.setItem(\r\n            `${this.filename}-chunk-${chunkId}-positions`,\r\n            stringify(data)\r\n        );\r\n    };\r\n\r\n    loadChunkPositionData(chunkId) {\r\n        const json = localStorage.getItem(\r\n            `${this.filename}-chunk-${chunkId}-positions`\r\n        );\r\n\r\n        return json && parse(json);\r\n    }\r\n\r\n    saveChunkEntityData(chunkId, entityData) {\r\n        localStorage.setItem(\r\n            `${this.filename}-chunk-${chunkId}-entities`,\r\n            stringify(entityData)\r\n        );\r\n    }\r\n\r\n    loadChunkEntityData(chunkId) {\r\n        const json = localStorage.getItem(\r\n            `${this.filename}-chunk-${chunkId}-entities`\r\n        );\r\n\r\n        return json && parse(json);\r\n    }\r\n\r\n    saveAreaPositionData(areaId, positionData) {\r\n        localStorage.setItem(\r\n            `${this.filename}-${areaId}-positions`,\r\n            stringify(positionData)\r\n        );\r\n    }\r\n\r\n    saveAreaTemperatureData(areaId, temperatureData) {\r\n        localStorage.setItem(\r\n            `${this.filename}-${areaId}-temperatures`,\r\n            stringify(temperatureData)\r\n        );\r\n    }\r\n\r\n    saveAreaEntityData(areaId, entityData) {\r\n        localStorage.setItem(\r\n            `${this.filename}-${areaId}-entities`,\r\n            stringify(entityData)\r\n        );\r\n    }\r\n\r\n    loadAreaEntityData(areaId) {\r\n        const json = localStorage.getItem(\r\n            `${this.filename}-${areaId}-entities`\r\n        );\r\n\r\n        return json && parse(json);\r\n    }\r\n\r\n    loadAreaPositionData(areaId) {\r\n        const json = localStorage.getItem(\r\n            `${this.filename}-${areaId}-positions`\r\n        );\r\n\r\n        return json && parse(json);\r\n    }\r\n\r\n    loadAreaTemperatureData(areaId) {\r\n        const json = localStorage.getItem(\r\n            `${this.filename}-${areaId}-temperatures`\r\n        );\r\n\r\n        return json && parse(json);\r\n    }\r\n\r\n    loadSavefileData(filename) {\r\n        const json = localStorage.getItem(filename);\r\n\r\n        return json && parse(json);\r\n    }\r\n\r\n    loadGame() {\r\n        const filename = prompt('Enter save filename to load', 'test');\r\n\r\n        const data = this.loadSavefileData(filename);\r\n\r\n        if (!data) {\r\n            console.warn(`save file ${filename} not found`);\r\n        }\r\n\r\n        this.#filename = filename;\r\n\r\n        console.log('Loading game', data);\r\n\r\n        this.initiateTeardown();\r\n        this.initiateSetup(data);\r\n    }\r\n\r\n    loadGameData(data) {\r\n        this.initiateTeardown();\r\n        this.initiateSetup(data);\r\n    }\r\n}\r\n","import Manager from './Manager';\r\n\r\nexport default class ClockManager extends Manager {\r\n    #tick = 0;\r\n    #tickDelta = 0;\r\n    #turnDelta = 0;\r\n\r\n    get tick() {\r\n        return this.#tick;\r\n    }\r\n\r\n    get tickDelta() {\r\n        return this.#tickDelta;\r\n    }\r\n\r\n    get turnDelta() {\r\n        return this.#turnDelta;\r\n    }\r\n\r\n    get turn() {\r\n        return Math.floor(this.#tick / 1000);\r\n    }\r\n\r\n    get subTurn() {\r\n        return this.#tick - this.turn * 1000;\r\n    }\r\n\r\n    getSetupData() {\r\n        return {\r\n            tick: 0,\r\n            tickDelta: 0,\r\n        };\r\n    }\r\n\r\n    getSaveGameData() {\r\n        return {\r\n            tick: this.tick,\r\n            tickDelta: this.tickDelta,\r\n        };\r\n    }\r\n\r\n    setup(data) {\r\n        this.#tick = data.tick;\r\n        this.#tickDelta = data.tickDelta;\r\n    }\r\n\r\n    incrementTick(delta) {\r\n        const prevTurn = this.turn;\r\n\r\n        this.#tickDelta = delta;\r\n        this.#tick += delta;\r\n\r\n        const curTurn = this.turn;\r\n\r\n        this.#turnDelta = curTurn - prevTurn;\r\n    }\r\n\r\n    update(dt) {\r\n        this.#tickDelta = 0;\r\n        this.#turnDelta = 0;\r\n    }\r\n}\r\n","import Manager from './Manager';\r\nimport FastMap from '../utils/FastMap';\r\nimport { IsInventoried, Position } from '../ecs/components';\r\n\r\nexport default class MapManager extends Manager {\r\n    #playerOutOfBounds = null;\r\n    positions;\r\n    #width = 64;\r\n    #height = 64;\r\n\r\n    get width() {\r\n        return this.game.chunks.chunkCountX * this.game.chunks.chunkWidth;\r\n    }\r\n\r\n    get height() {\r\n        return this.game.chunks.chunkCountY * this.game.chunks.chunkHeight;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        // this.query = this.game.ecs.createQuery({\r\n        //     all: [Position],\r\n        //     none: [IsInventoried],\r\n        // });\r\n\r\n        // this.positions = new FastMap(this.width, this.height);\r\n\r\n        // this.query.onEntityAdded((e) => {\r\n        //     this.positions.set(0, 0, e.id);\r\n        // });\r\n\r\n        // this.query.onEntityRemoved((e) => {\r\n        //     this.positions.remove(e.id);\r\n        // });\r\n    }\r\n\r\n    getSetupData() {\r\n        return {};\r\n    }\r\n\r\n    teardown() {\r\n        this.#playerOutOfBounds = false;\r\n        // this.positions.clear();\r\n    }\r\n\r\n    setup(data) {\r\n        if (data.playerPosition) {\r\n            this.game.player.entity.position.setPos(\r\n                data.playerPosition.x,\r\n                data.playerPosition.y\r\n            );\r\n        } else {\r\n            const position = this.getRandomEmptyPosition();\r\n            this.game.player.entity.position.setPos(position.x, position.y);\r\n        }\r\n\r\n        this.game.FOVSystem.computeFOV();\r\n    }\r\n\r\n    getSaveGameData() {\r\n        // const data = this.positions.serialize();\r\n\r\n        // this.game.state.saveAreaPositionData(this.game.world.areaId, data);\r\n\r\n        return {\r\n            playerPosition: this.game.player.position,\r\n        };\r\n    }\r\n\r\n    onAreaLoaded(area) {\r\n        // this.#playerOutOfBounds = false;\r\n\r\n        // const data = this.game.state.loadAreaPositionData(area.id);\r\n\r\n        // if (data) {\r\n        //     this.positions.deserialize(data);\r\n        // }\r\n    }\r\n\r\n    getPosition(entityId, chunkId) {\r\n        return this.game.chunks.getPosition(entityId, chunkId);\r\n    }\r\n\r\n    setPosition(x, y, entityId, chunkId) {\r\n        this.game.chunks.setPosition(x, y, entityId, chunkId);\r\n\r\n        if (entityId === this.game.player.id) {\r\n            this.game.camera.setFocus(x, y);\r\n        }\r\n    }\r\n\r\n    getEntitiesAt(x, y, includeGround = false) {\r\n        return this.game.chunks.getEntitiesAt(x, y, includeGround);\r\n        // return this.positions.get(x, y).reduce((entities, id) => {\r\n        //     const e = this.game.ecs.getEntity(id);\r\n\r\n        //     if (!e.isInventoried && (includeGround ? true : !e.ground)) {\r\n        //         entities.push(e);\r\n        //     }\r\n\r\n        //     return entities;\r\n        // }, []);\r\n    }\r\n\r\n    isAdjacent(x1, y1, x2, y2) {\r\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\r\n    }\r\n\r\n    getEntitiesInRect(x, y, width, height) {\r\n        const entities = [];\r\n\r\n        for (let i = x; i < x + width + 1; i++) {\r\n            for (let j = y; j < y + height + 1; j++) {\r\n                entities.push(...this.getEntitiesAt(i, j));\r\n            }\r\n        }\r\n\r\n        return entities;\r\n    }\r\n\r\n    getEntitiesInRange(x, y, range) {\r\n        const diameter = range * 2;\r\n\r\n        return this.getEntitiesInRect(x - range, y - range, diameter, diameter);\r\n    }\r\n\r\n    getNeighborEntities(x, y) {\r\n        return [\r\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\r\n            this.getEntitiesAt(x, y - 1), // TOP\r\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\r\n            this.getEntitiesAt(x - 1, y), // LEFT\r\n            this.getEntitiesAt(x + 1, y), // RIGHT\r\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\r\n            this.getEntitiesAt(x, y + 1), // BOTTOM\r\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\r\n        ];\r\n    }\r\n\r\n    getRandomEmptyPosition() {\r\n        let x, y;\r\n        do {\r\n            x = Math.trunc(Math.random() * this.width);\r\n            y = Math.trunc(Math.random() * this.height);\r\n        } while (this.getEntitiesAt(x, y, false).length > 0);\r\n\r\n        return { x, y };\r\n    }\r\n\r\n    isOutOfbounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\r\n    }\r\n\r\n    onPlayerOutOfBounds(x, y) {\r\n        if (y < 0) {\r\n            this.game.world.enterArea(this.game.world.area.northArea, {\r\n                x,\r\n                y: this.height - 1,\r\n            });\r\n        }\r\n        if (y >= this.height) {\r\n            this.game.world.enterArea(this.game.world.area.southArea, {\r\n                x,\r\n                y: 0,\r\n            });\r\n        }\r\n        if (x >= this.width) {\r\n            this.game.world.enterArea(this.game.world.area.eastArea, {\r\n                x: 0,\r\n                y,\r\n            });\r\n        }\r\n        if (x < 0) {\r\n            this.game.world.enterArea(this.game.world.area.westArea, {\r\n                x: this.width - 1,\r\n                y,\r\n            });\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        // if (this.#playerOutOfBounds) {\r\n        //     this.onPlayerOutOfBounds(\r\n        //         this.#playerOutOfBounds.x,\r\n        //         this.#playerOutOfBounds.y\r\n        //     );\r\n        // }\r\n    }\r\n}\r\n","export default class FastMap {\r\n    _width = 0;\r\n    _height = 0;\r\n    _data = [];\r\n    _idHash = new Map();\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    get size() {\r\n        return this._width * this._height;\r\n    }\r\n\r\n    constructor(width, height) {\r\n        this._width = width;\r\n        this._height = height;\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            this._data[i] = new Set();\r\n        }\r\n    }\r\n\r\n    idx(x, y) {\r\n        return y * this.width + x;\r\n    }\r\n\r\n    coord(idx) {\r\n        return {\r\n            x: Math.trunc(idx % this.width),\r\n            y: Math.trunc(idx / this.width),\r\n        };\r\n    }\r\n\r\n    getValues() {\r\n        return Array.from(this._idHash.keys());\r\n    }\r\n\r\n    clear() {\r\n        this._idHash.clear();\r\n\r\n        for (let i = 0; i < this.size; i++) {\r\n            this._data[i].clear();\r\n        }\r\n    }\r\n\r\n    serialize() {\r\n        const entries = this._data.map((d) => Array.from(d));\r\n\r\n        return {\r\n            width: this.width,\r\n            height: this.height,\r\n            entries,\r\n        };\r\n    }\r\n\r\n    deserialize(data) {\r\n        this._width = data.width;\r\n        this._height = data.height;\r\n        this._idHash = new Map();\r\n\r\n        for (let i = 0; i < data.entries.length; i++) {\r\n            const coord = this.coord(i);\r\n            this._data[i] = new Set(data.entries[i]);\r\n\r\n            data.entries[i].forEach((id) => {\r\n                this._idHash.set(id, coord);\r\n            });\r\n        }\r\n    }\r\n\r\n    set(x, y, id) {\r\n        if (this.isOutOfBounds(x, y)) {\r\n            console.warn(\r\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\r\n            );\r\n            return;\r\n        }\r\n\r\n        const idx = this.idx(x, y);\r\n\r\n        this.remove(id);\r\n\r\n        this._idHash.set(id, { x, y });\r\n        this._data[idx].add(id);\r\n    }\r\n\r\n    get(x, y) {\r\n        if (this.isOutOfBounds(x, y)) {\r\n            return [];\r\n        }\r\n\r\n        return Array.from(this._data[this.idx(x, y)]);\r\n    }\r\n\r\n    has(id) {\r\n        return this._idHash.has(id);\r\n    }\r\n\r\n    getPosition(id) {\r\n        const pos = this._idHash.get(id);\r\n\r\n        if (!pos) {\r\n            console.warn('Cannot get position', id);\r\n        }\r\n\r\n        return pos;\r\n    }\r\n\r\n    remove(id) {\r\n        if (!this.has(id)) {\r\n            return;\r\n        }\r\n\r\n        const pos = this.getPosition(id);\r\n        const idx = this.idx(pos.x, pos.y);\r\n\r\n        this._idHash.delete(id);\r\n        this._data[idx].delete(id);\r\n    }\r\n\r\n    isOutOfBounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\r\n    }\r\n}\r\n","import { FOV } from 'rot-js';\r\nimport {\r\n    Explorable,\r\n    Explored,\r\n    Shadowcaster,\r\n    IsVisible,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class FOVSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\r\n            this.isSquareVisible(x, y)\r\n        );\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [IsVisible],\r\n        });\r\n    }\r\n\r\n    isSquareVisible(x, y) {\r\n        return !this.game.map\r\n            .getEntitiesAt(x, y)\r\n            .some((e) => e.has(Shadowcaster));\r\n    }\r\n\r\n    setVisible(x, y, amount, range) {\r\n        this.game.map.getEntitiesAt(x, y, true).forEach((e) => {\r\n            e.add(IsVisible, {\r\n                range,\r\n                amount,\r\n            });\r\n            if (e.explorable && !e.explored) {\r\n                e.add(Explored);\r\n                if (e.bitmaskGlyph) {\r\n                    this.game.bitmasks.refreshMaskAndNeighbors(e);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    computeFOV() {\r\n        this.query.get().forEach((e) => e.isVisible.destroy());\r\n\r\n        const pos = this.game.player.position;\r\n\r\n        this.fov.compute(pos.x, pos.y, 8, (x, y, r, visibility) => {\r\n            this.setVisible(x, y, visibility, r);\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (this.game.clock.tickDelta) {\r\n            this.computeFOV();\r\n        }\r\n    }\r\n}\r\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\r\nimport { IsDead, IsDestroying, IsPlayer } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class DeathSystem extends System {\r\n    #query = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#query = game.ecs.createQuery({\r\n            all: [IsDead],\r\n            none: [IsDestroying],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        this.#query.get().forEach((entity) => {\r\n            entity.fireEvent('death');\r\n\r\n            if (entity.isPlayer) {\r\n                this.game.screens.setScreen(SCREEN_DEATH);\r\n            } else {\r\n                entity.add(IsDestroying);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { game } from '../core/Game';\r\nimport { Particle, ParticleEmitter } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class ParticleSystem extends System {\r\n    #particleQuery = null;\r\n    #emitterQuery = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.#emitterQuery = game.ecs.createQuery({\r\n            all: [ParticleEmitter],\r\n        });\r\n        this.#particleQuery = game.ecs.createQuery({\r\n            all: [Particle],\r\n        });\r\n    }\r\n\r\n    createParticle(x, y, properties = {}) {\r\n        const e = this.game.ecs.createEntity();\r\n\r\n        e.add(Particle, {\r\n            ...properties,\r\n            x,\r\n            y,\r\n        });\r\n    }\r\n\r\n    createEmitter(x, y, emitterData = {}, particleData = {}) {\r\n        const e = this.game.ecs.createEntity();\r\n\r\n        e.add(ParticleEmitter, {\r\n            x,\r\n            y,\r\n            ...emitterData,\r\n            particleData: {\r\n                direction: {\r\n                    x: 0,\r\n                    y: 0,\r\n                },\r\n                glyphs: ['░', '▒', '▓', '█'],\r\n                fg1s: ['cyan', 'blue'],\r\n                speed: 0.04,\r\n                lifetime: 600,\r\n                ...particleData,\r\n            },\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        this.#emitterQuery.get().forEach((entity) => {\r\n            const emitter = entity.particleEmitter;\r\n\r\n            emitter.age += dt;\r\n\r\n            if (emitter.isExpired) {\r\n                entity.destroy();\r\n            } else {\r\n                const total = (emitter.rate / 1000) * emitter.duration;\r\n                const targetCount = Math.trunc(emitter.percent * total);\r\n\r\n                for (let i = emitter.count; i < targetCount; i++) {\r\n                    emitter.createParticle();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.#particleQuery.get().forEach((entity) => {\r\n            const particle = entity.particle;\r\n\r\n            particle.age += dt;\r\n\r\n            if (particle.isExpired) {\r\n                entity.destroy();\r\n                return;\r\n            }\r\n\r\n            particle.x += particle.direction.x * particle.speed;\r\n            particle.y += particle.direction.y * particle.speed;\r\n\r\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\r\n                return;\r\n            }\r\n\r\n            const screen = this.game.camera.worldToScreen(\r\n                particle.x,\r\n                particle.y\r\n            );\r\n\r\n            this.game.renderer.draw(\r\n                Math.round(screen.x),\r\n                Math.round(screen.y),\r\n                particle.glyph,\r\n                particle.fg1,\r\n                particle.fg2,\r\n                particle.bg\r\n            );\r\n        });\r\n    }\r\n}\r\n","import { FactionMember } from '../ecs/components';\r\nimport {\r\n    factions,\r\n    FACTION_BEAR,\r\n    FACTION_GOBLIN,\r\n    FACTION_PLAYER,\r\n    FACTION_SERPENT,\r\n    FACTION_VILLAGER,\r\n    getFactionByName,\r\n} from '../enums/Factions';\r\nimport Manager from './Manager';\r\n\r\nexport default class FactionManager extends Manager {\r\n    relations = {};\r\n\r\n    get factions() {\r\n        return Object.values(factions);\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -400);\r\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 300);\r\n        this.setRelation(FACTION_PLAYER, FACTION_SERPENT, -250);\r\n        this.setRelation(FACTION_PLAYER, FACTION_BEAR, -250);\r\n        this.setRelation(FACTION_SERPENT, FACTION_VILLAGER, -300);\r\n        this.setRelation(FACTION_SERPENT, FACTION_GOBLIN, 300);\r\n        this.setRelation(FACTION_SERPENT, FACTION_BEAR, 300);\r\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\r\n        this.setRelation(FACTION_BEAR, FACTION_VILLAGER, -400);\r\n    }\r\n\r\n    getFactionById(id) {\r\n        return this.factions.find((f) => f.id === id);\r\n    }\r\n\r\n    getFactionByName(name) {\r\n        return getFactionByName(name);\r\n    }\r\n\r\n    isHostile(factionA, factionB) {\r\n        return factionA !== factionB;\r\n    }\r\n\r\n    _relationKey(idA, idB) {\r\n        return [idA, idB].sort().join('-');\r\n    }\r\n\r\n    setRelation(idA, idB, value) {\r\n        const key = this._relationKey(idA, idB);\r\n\r\n        this.relations[key] = value;\r\n    }\r\n\r\n    getRelation(idA, idB) {\r\n        const key = this._relationKey(idA, idB);\r\n\r\n        if (!this.relations.hasOwnProperty(key)) {\r\n            this.relations[key] = 0;\r\n        }\r\n\r\n        return this.relations[key];\r\n    }\r\n\r\n    getEntityRelation(entityA, entityB) {\r\n        const memberA = entityA.factionMember;\r\n        const memberB = entityB.factionMember;\r\n\r\n        if (memberA && memberB) {\r\n            const factionA = memberA.faction;\r\n            const factionB = memberB.faction;\r\n\r\n            return this.getRelation(factionA.id, factionB.id);\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    areEntitiesHostile(entityA, entityB) {\r\n        const relation = this.getEntityRelation(entityA, entityB);\r\n\r\n        return relation < -200;\r\n    }\r\n\r\n    getDisplay(value) {\r\n        if (value <= -300) {\r\n            return 'Aggressive';\r\n        }\r\n\r\n        if (value <= -200) {\r\n            return 'Unfriendly';\r\n        }\r\n\r\n        if (value >= 300) {\r\n            return 'Loyal';\r\n        }\r\n\r\n        if (value >= 200) {\r\n            return 'Friendly';\r\n        }\r\n\r\n        if (value >= 100) {\r\n            return 'Amicable';\r\n        }\r\n\r\n        return 'Neutral';\r\n    }\r\n\r\n    getAttitudeGlyph(value) {\r\n        if (value <= -200) {\r\n            return {\r\n                char: '☻',\r\n                fg1: '#ca4444',\r\n                fg2: '#411010',\r\n            };\r\n        }\r\n\r\n        if (value >= 200) {\r\n            return {\r\n                char: '☺',\r\n                fg1: '#78b478',\r\n                fg2: '#1a251a',\r\n            };\r\n        }\r\n\r\n        return {\r\n            char: '♥',\r\n            fg1: '#b9bcc2',\r\n            fg2: '#222832',\r\n        };\r\n    }\r\n}\r\n","import Manager from './Manager';\r\n\r\nexport default class CameraManager extends Manager {\r\n    width = 32;\r\n    height = 24;\r\n    zoom = 2;\r\n    padding = 5;\r\n    clampX = 16;\r\n    clampY = 12;\r\n\r\n    _focusX = 0;\r\n    _focusY = 0;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        window.addEventListener('resize', this.onWindowResize.bind(this));\r\n        this.onWindowResize();\r\n    }\r\n\r\n    get renderedTileWidth() {\r\n        return this.zoom * this.game.renderer.tileWidth;\r\n    }\r\n\r\n    get renderedTileHeight() {\r\n        return this.zoom * this.game.renderer.tileHeight;\r\n    }\r\n\r\n    get left() {\r\n        return this.topLeftWorldX;\r\n    }\r\n\r\n    get right() {\r\n        return this.topLeftWorldX + this.width;\r\n    }\r\n\r\n    get top() {\r\n        return this.topLeftWorldY;\r\n    }\r\n\r\n    get bottom() {\r\n        return this.topLeftWorldY + this.height;\r\n    }\r\n\r\n    computeSize() {\r\n        this.width = Math.max(\r\n            this.clampX,\r\n            Math.floor(window.innerWidth / this.renderedTileWidth)\r\n        );\r\n        this.height = Math.max(\r\n            this.clampY,\r\n            Math.floor(window.innerHeight / this.renderedTileHeight)\r\n        );\r\n        this.topLeftWorldX = Math.floor(\r\n            Math.min(\r\n                Math.max(-this.padding, this._focusX - this.width / 2),\r\n                Math.max(\r\n                    (this.width - this.game.map.width) / -2,\r\n                    this.padding + this.game.map.width - this.width\r\n                )\r\n            )\r\n        );\r\n        this.topLeftWorldY = Math.floor(\r\n            Math.min(\r\n                Math.max(-this.padding, this._focusY - this.height / 2),\r\n                Math.max(\r\n                    (this.height - this.game.map.height) / -2,\r\n                    this.padding + this.game.map.height - this.height\r\n                )\r\n            )\r\n        );\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.computeSize();\r\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\r\n    }\r\n\r\n    setZoom(zoom) {\r\n        this.zoom = zoom;\r\n        this.computeSize();\r\n        this.onWindowResize();\r\n    }\r\n\r\n    setFocus(x, y) {\r\n        this._focusX = x;\r\n        this._focusY = y;\r\n        this.computeSize();\r\n    }\r\n\r\n    setPadding(value) {\r\n        this.padding = value;\r\n        this.computeSize();\r\n    }\r\n\r\n    worldToScreen(x, y) {\r\n        return {\r\n            x: x - this.topLeftWorldX,\r\n            y: y - this.topLeftWorldY,\r\n        };\r\n    }\r\n\r\n    screenToWorld(x, y) {\r\n        return {\r\n            x: x + this.topLeftWorldX,\r\n            y: y + this.topLeftWorldY,\r\n        };\r\n    }\r\n\r\n    getScreenRect() {\r\n        return {\r\n            x: this.topLeftWorldX,\r\n            y: this.topLeftWorldY,\r\n            width: this.width,\r\n            height: this.height,\r\n        };\r\n    }\r\n\r\n    isInView(worldX, worldY) {\r\n        const screen = this.worldToScreen(worldX, worldY);\r\n\r\n        return (\r\n            screen.x < this.width &&\r\n            screen.y < this.height &&\r\n            screen.x >= 0 &&\r\n            screen.y >= 0\r\n        );\r\n    }\r\n}\r\n","import System from './System';\r\n\r\nconst fpsElement = document.getElementsByClassName('fps')[0];\r\n\r\nexport default class FPSMonitoringSystem extends System {\r\n    frames = [];\r\n    frameCount = 60;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.frames = [];\r\n\r\n        for (let i = 0; i < this.frameCount; i++) {\r\n            this.frames[i] = 0;\r\n        }\r\n    }\r\n\r\n    update(dt) {\r\n        this.frames.push(1000 / dt);\r\n        this.frames.shift();\r\n\r\n        const sum = this.frames.reduce((s, v) => s + v, 0);\r\n        const fps = Math.trunc(sum / this.frameCount);\r\n\r\n        fpsElement.innerText = fps;\r\n    }\r\n}\r\n","import WorldData from '../data/WorldData';\r\nimport { IsPlayer } from '../ecs/components';\r\nimport Manager from './Manager';\r\nimport { SCREEN_LOAD_AREA } from './screens/ScreenType';\r\n\r\nexport class WorldManager extends Manager {\r\n    #data;\r\n    #areaId;\r\n    #entry;\r\n\r\n    get areaId() {\r\n        return this.#areaId;\r\n    }\r\n\r\n    get area() {\r\n        return this.#data.getArea(this.#areaId);\r\n    }\r\n\r\n    get entry() {\r\n        return this.#entry;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.#data = new WorldData();\r\n    }\r\n\r\n    getSetupData() {\r\n        return {\r\n            areaId: this.#data.getStartingArea().id,\r\n            exploredAreaIds: [],\r\n        };\r\n    }\r\n\r\n    getSaveGameData() {\r\n        // TODO only save area data??\r\n        const data = Array.from(this.game.ecs.entities.all).filter(\r\n            (e) => !e.has(IsPlayer)\r\n        );\r\n        const serialized = this.game.ecs.serialize(data);\r\n\r\n        console.log('serialized map data', serialized);\r\n\r\n        this.game.state.saveAreaEntityData(this.area.id, serialized);\r\n\r\n        return {\r\n            areaId: this.area.id,\r\n            exploredAreaIds: [],\r\n        };\r\n    }\r\n\r\n    setup(data) {\r\n        // const area = this.#data.getArea(data.areaId);\r\n\r\n        // this.game.screens.setScreen(SCREEN_LOAD_AREA, {\r\n        //     nextArea: area,\r\n        //     entry: data.position,\r\n        // });\r\n    }\r\n\r\n    teardown() {\r\n        // TODO: destroy all area entities?\r\n        this.#areaId = null;\r\n    }\r\n\r\n    onAreaLoaded(area, entry) {\r\n        this.#areaId = area.id;\r\n\r\n        const data = this.game.state.loadAreaEntityData(area.id);\r\n\r\n        if (data) {\r\n            this.game.ecs.deserialize(data);\r\n        } else {\r\n            area.generate(this.game);\r\n        }\r\n    }\r\n\r\n    enterArea(area, entry) {\r\n        this.game.screens.setScreen(SCREEN_LOAD_AREA, {\r\n            prevousArea: this.area,\r\n            nextArea: area,\r\n            entry,\r\n        });\r\n    }\r\n}\r\n","import { Area } from './Area';\r\nimport data from './world.json';\r\n\r\nexport default class WorldData {\r\n    #areas = [];\r\n\r\n    get width() {\r\n        return data.width;\r\n    }\r\n\r\n    get height() {\r\n        return data.height;\r\n    }\r\n\r\n    idx(x, y) {\r\n        return y * this.width + x;\r\n    }\r\n\r\n    coord(idx) {\r\n        return {\r\n            x: Math.trunc(idx % this.width),\r\n            y: Math.trunc(idx / this.width),\r\n        };\r\n    }\r\n\r\n    constructor() {\r\n        this.#areas = [];\r\n\r\n        for (let x = 0; x < data.width; x++) {\r\n            for (let y = 0; y < data.height; y++) {\r\n                const area = Area.parseData(this, data.areas[y][x], x, y);\r\n\r\n                this.#areas[area.id] = area;\r\n            }\r\n        }\r\n    }\r\n\r\n    isOutOfBounds(x, y) {\r\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\r\n    }\r\n\r\n    getStartingArea() {\r\n        return this.getArea(15);\r\n    }\r\n\r\n    getAreaByCoord(x, y) {\r\n        return this.getArea(this.idx(x, y));\r\n    }\r\n\r\n    getArea(idx) {\r\n        const { x, y } = this.coord(idx);\r\n\r\n        if (this.isOutOfBounds(x, y)) {\r\n            return new Area(this, x, y);\r\n        }\r\n\r\n        return this.#areas[idx];\r\n    }\r\n}\r\n","import { game } from '../core/Game';\r\nimport { getGenerator } from '../level/generators/generators';\r\n\r\nexport class Area {\r\n    #x = 0;\r\n    #y = 0;\r\n    connectionsNorth = [];\r\n    connectionsWest = [];\r\n    generator = {};\r\n    music = null;\r\n\r\n    get x() {\r\n        return this.#x;\r\n    }\r\n\r\n    get y() {\r\n        return this.#y;\r\n    }\r\n\r\n    get id() {\r\n        return this.world.idx(this.x, this.y);\r\n    }\r\n\r\n    get northArea() {\r\n        return this.world.getAreaByCoord(this.#x, this.#y - 1);\r\n    }\r\n\r\n    get southArea() {\r\n        return this.world.getAreaByCoord(this.#x, this.#y + 1);\r\n    }\r\n\r\n    get eastArea() {\r\n        return this.world.getAreaByCoord(this.#x + 1, this.#y);\r\n    }\r\n\r\n    get westArea() {\r\n        return this.world.getAreaByCoord(this.#x - 1, this.#y);\r\n    }\r\n\r\n    constructor(world, x, y) {\r\n        this.world = world;\r\n        this.#x = x;\r\n        this.#y = y;\r\n    }\r\n\r\n    getExits() {\r\n        const exits = [];\r\n\r\n        // north\r\n        exits.push(\r\n            ...this.connectionsNorth.map((c) => ({\r\n                x: 12,\r\n                y: 0,\r\n            }))\r\n        );\r\n\r\n        // west\r\n        exits.push(\r\n            ...this.connectionsWest.map((c) => ({\r\n                x: 0,\r\n                y: 12,\r\n            }))\r\n        );\r\n\r\n        // east\r\n        exits.push(\r\n            ...this.eastArea.connectionsWest.map((c) => ({\r\n                x: game.map.width - 1,\r\n                y: 12,\r\n            }))\r\n        );\r\n\r\n        // south\r\n        exits.push(\r\n            ...this.southArea.connectionsNorth.map((c) => ({\r\n                x: 12,\r\n                y: game.map.height - 1,\r\n            }))\r\n        );\r\n\r\n        return exits;\r\n    }\r\n\r\n    generate(game) {\r\n        const exits = this.getExits();\r\n        const generator = getGenerator(this.generator.type);\r\n\r\n        const settings = {\r\n            width: game.map.width,\r\n            height: game.map.height,\r\n            exits,\r\n        };\r\n\r\n        const tiles = generator.generate(settings);\r\n\r\n        generator.populate(settings, tiles);\r\n\r\n        this.tiles = tiles;\r\n    }\r\n\r\n    static parseData(world, data, x, y) {\r\n        const area = new Area(world, x, y);\r\n\r\n        area.connectionsNorth = data.connectionsNorth;\r\n        area.connectionsWest = data.connectionsWest;\r\n        area.generator = data.generator;\r\n        area.music = data.music;\r\n        area.temperature = data.temperature;\r\n\r\n        return area;\r\n    }\r\n}\r\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\r\nimport { ForestGenerator } from './ForestGenerator';\r\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\r\nimport { ForestTownGenerator } from './ForestTownGenerator';\r\nimport { CanyonGenerator } from './CanyonGenerator';\r\nimport { DesertGenerator } from './DesertGenerator';\r\n\r\nconst mapping = {\r\n    FOREST: ForestGenerator,\r\n    FOREST_STRONGHOLD: ForestStrongholdGenerator,\r\n    FOREST_CABINS: ForestCabinsGenerator,\r\n    FOREST_TOWN: ForestTownGenerator,\r\n    CANYON: CanyonGenerator,\r\n    DESERT: DesertGenerator,\r\n};\r\n\r\nexport const getGenerator = (name) => {\r\n    return DesertGenerator;\r\n    // return mapping[name];\r\n};\r\n","import { pickRandom } from '../../utils/rand';\r\nimport { digExits } from '../LevelConnections';\r\nimport { UniformScheme } from '../schemes/UniformScheme';\r\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\r\nimport AreaGenerator from './AreaGenerator';\r\n\r\nexport class ForestCabinsGenerator extends AreaGenerator {\r\n    static generate(settings) {\r\n        const tiles = UniformScheme.generate({\r\n            width: settings.width,\r\n            height: settings.height,\r\n        });\r\n\r\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\r\n\r\n        const mediumRooms = tiles.rooms.filter(\r\n            (r) => r.width >= 3 && r.height >= 3\r\n        );\r\n        const room = pickRandom(mediumRooms);\r\n\r\n        if (room) {\r\n            room.theme = TILE_THEME_CABIN;\r\n            room.includeWalls = true;\r\n        }\r\n\r\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\r\n        const room2 = pickRandom(distancedRooms);\r\n\r\n        if (room2) {\r\n            room2.theme = TILE_THEME_CABIN;\r\n            room2.includeWalls = true;\r\n        }\r\n\r\n        const leftovers = tiles.getUnassignedTiles();\r\n\r\n        leftovers.forEach((tile) => {\r\n            tile.theme = TILE_THEME_FOREST;\r\n        });\r\n\r\n        digExits(tiles, settings.exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import { computeAStar } from '../utils/AStar';\r\nimport { manhattanDistance } from '../utils/ManhattanDistance';\r\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\r\n\r\nconst getClosestTile = (tiles, target) => {\r\n    let closest = null;\r\n    let closestDistance = null;\r\n\r\n    tiles.data.forEach((tile) => {\r\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\r\n            return;\r\n        }\r\n\r\n        const distance = manhattanDistance(tile, target);\r\n\r\n        if (distance < closestDistance || closest === null) {\r\n            closest = tile;\r\n            closestDistance = distance;\r\n            return;\r\n        }\r\n    });\r\n\r\n    return closest;\r\n};\r\n\r\nexport const digExit = (tiles, exit) => {\r\n    const source = getClosestTile(tiles, exit);\r\n\r\n    if (source.x === exit.x && source.y === exit.y) {\r\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\r\n        return;\r\n    }\r\n\r\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\r\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\r\n\r\n    const result = computeAStar({\r\n        goal: {\r\n            x: source.x,\r\n            y: source.y,\r\n        },\r\n        start: {\r\n            x: exit.x,\r\n            y: exit.y,\r\n        },\r\n        allowDiagonals: false,\r\n        cost: (a, b) => {\r\n            if (tiles.isOnEdge(b.x, b.y)) {\r\n                return Infinity;\r\n            }\r\n\r\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\r\n                return manhattanDistance(a, b);\r\n            }\r\n\r\n            return Infinity;\r\n        },\r\n    });\r\n\r\n    result.path.forEach((segment) => {\r\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\r\n    });\r\n\r\n    if (result.success) {\r\n        const door = result.path[result.path.length - 2];\r\n        const room = tiles.getRoomForTile(door.x, door.y);\r\n\r\n        if (room) {\r\n            room.addExit(door.x, door.y);\r\n        }\r\n    }\r\n};\r\n\r\nexport const digExits = (tiles, exits) => {\r\n    exits.forEach((exit) => digExit(tiles, exit));\r\n};\r\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\r\nimport ForestTheme from './ForestTheme';\r\nimport CanyonTheme from './CanyonTheme';\r\nimport CabinTheme from './CabinTheme';\r\nimport DesertTheme from './DesertTheme';\r\n\r\nexport const TILE_THEME_FOREST = 0;\r\nexport const TILE_THEME_CASTLE = 1;\r\nexport const TILE_THEME_CABIN = 2;\r\nexport const TILE_THEME_CANYON = 3;\r\nexport const TILE_THEME_DESERT = 4;\r\n\r\nconst mapping = {\r\n    [TILE_THEME_FOREST]: ForestTheme,\r\n    [TILE_THEME_CASTLE]: CastleTheme,\r\n    [TILE_THEME_CABIN]: CabinTheme,\r\n    [TILE_THEME_CANYON]: CanyonTheme,\r\n    [TILE_THEME_DESERT]: DesertTheme,\r\n};\r\n\r\nexport const getThemePopulator = (theme) => {\r\n    return mapping[theme];\r\n};\r\n","import {\r\n    SPWN_GROUND_STONE,\r\n    SPWN_STONE,\r\n    SPWN_STONE_WALL,\r\n    SPWN_WOOD_DOOR,\r\n} from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { randomInt } from '../../utils/rand';\r\nimport { TILE_TYPE_WALL } from '../TileData';\r\nimport TileThemePopulator from './TileThemePopulator';\r\n\r\nexport default class CastleTheme extends TileThemePopulator {\r\n    static populateTile(tile) {\r\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\r\n\r\n        if (this.getEntities(tile).length === 0) {\r\n            if (tile.isType(TILE_TYPE_WALL)) {\r\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    static populateRoom(room) {\r\n        room.exits.forEach((exit) => {\r\n            if (this.getEntities(exit).length === 0) {\r\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\r\n            }\r\n        });\r\n\r\n        room.tiles.forEach((tile) => this.populateTile(tile));\r\n\r\n        for (let i = 0; i < randomInt(0, 3); i++) {\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_STONE, tile.x, tile.y);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { game } from '../../core/Game';\r\nimport { pickRandom } from '../../utils/rand';\r\n\r\nexport default class TileThemePopulator {\r\n    static populateTile(tile) {}\r\n\r\n    static populateRoom(room) {\r\n        room.tiles.forEach((tile) => {\r\n            this.populateTile(tile);\r\n        });\r\n    }\r\n\r\n    static populate(tiles) {\r\n        tiles.data.forEach((tile) => {\r\n            this.populateTile(tile);\r\n        });\r\n    }\r\n\r\n    static getEntities(tile) {\r\n        return game.map.getEntitiesAt(tile.x, tile.y).filter((e) => !e.ground);\r\n    }\r\n\r\n    static clearTile(tile) {\r\n        getEntities(tile).forEach((e) => {\r\n            e.destroy();\r\n        });\r\n    }\r\n\r\n    static getRandomEmptyTile(tileArr, attempts = 100) {\r\n        for (let i = 0; i < attempts; i++) {\r\n            const tile = pickRandom(tileArr);\r\n\r\n            if (this.getEntities(tile) <= 0) {\r\n                return tile;\r\n            }\r\n        }\r\n\r\n        console.warn(\r\n            `ran out of attempts (${attempts}) to place item`,\r\n            tileArr\r\n        );\r\n    }\r\n\r\n    static trySpawn(room, cb) {\r\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\r\n\r\n        if (tile) {\r\n            cb(tile);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    SPWN_GOBLIN_GRUNT,\r\n    SPWN_PINE_TREE,\r\n    SPWN_STONE,\r\n    SPWN_BEAR,\r\n    SPWN_VIAL_BLOOD,\r\n    SPWN_VIAL_HONEY,\r\n    SPWN_VIAL_WATER,\r\n    SPWN_GROUND_GRASS,\r\n    SPWN_TWIG,\r\n    SPWN_GOBLIN_BRUISER,\r\n    SPWN_GOBLIN_STARGAZER,\r\n} from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { randomInt } from '../../utils/rand';\r\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\r\nimport TileThemePopulator from './TileThemePopulator';\r\n\r\nexport default class ForestTheme extends TileThemePopulator {\r\n    static populateTile(tile) {\r\n        spawn(SPWN_GROUND_GRASS, tile.x, tile.y);\r\n\r\n        if (tile.isType(TILE_TYPE_WALL)) {\r\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\r\n        }\r\n    }\r\n\r\n    static populateRoom(room) {\r\n        room.tiles.forEach((tile) => {\r\n            this.populateTile(tile);\r\n\r\n            if (Math.random() > 0.1) {\r\n                return;\r\n            }\r\n\r\n            if (tile.isType(TILE_TYPE_FLOOR) && Math.random() < 0.5) {\r\n                spawn(SPWN_TWIG, tile.x, tile.y);\r\n            } else {\r\n                spawn(SPWN_STONE, tile.x, tile.y);\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_GOBLIN_BRUISER, tile.x, tile.y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_GOBLIN_STARGAZER, tile.x, tile.y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_BEAR, tile.x, tile.y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            if (Math.random() > 0.05) {\r\n                return;\r\n            }\r\n\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            if (Math.random() > 0.05) {\r\n                return;\r\n            }\r\n\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            if (Math.random() > 0.05) {\r\n                return;\r\n            }\r\n\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import {\r\n    SPWN_GOBLIN_GRUNT,\r\n    SPWN_STONE,\r\n    SPWN_VIAL_BLOOD,\r\n    SPWN_CLIFF,\r\n    SPWN_GROUND_GRASS_DEAD,\r\n    SPWN_SNAKE\r\n} from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { randomInt } from '../../utils/rand';\r\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\r\nimport TileThemePopulator from './TileThemePopulator';\r\n\r\nexport default class CanyonTheme extends TileThemePopulator {\r\n    static populateTile(tile) {\r\n        spawn(SPWN_GROUND_GRASS_DEAD, tile.x, tile.y);\r\n\r\n        if (tile.isType(TILE_TYPE_WALL)) {\r\n            spawn(SPWN_CLIFF, tile.x, tile.y);\r\n        }\r\n    }\r\n\r\n    static populateRoom(room) {\r\n        room.tiles.forEach((tile) => {\r\n            this.populateTile(tile);\r\n\r\n            if (Math.random() > 0.05) {\r\n                return;\r\n            }\r\n\r\n            if (tile.isType(TILE_TYPE_FLOOR)) {\r\n                spawn(SPWN_STONE, tile.x, tile.y);\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < randomInt(0, 2); i++) {\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_SNAKE, tile.x, tile.y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\r\n            });\r\n        }\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            if (Math.random() > 0.05) {\r\n                return;\r\n            }\r\n\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import {\r\n    SPWN_HUMAN_WANDERER,\r\n    SPWN_WOOD_DOOR,\r\n    SPWN_WOOD_WALL,\r\n    SPWN_WOOD_CHEST,\r\n    SPWN_STONE,\r\n    SPWN_VIAL_HONEY,\r\n    SPWN_AMULET,\r\n    SPWN_CLOTH_ARMOR,\r\n    SPWN_LEATHER_BOOTS,\r\n    SPWN_SHORTSWORD,\r\n    SPWN_GREATSWORD,\r\n    SPWN_BATTLE_AXE,\r\n    SPWN_HATCHET,\r\n    SPWN_GROUND_STONE,\r\n    SPWN_MACE,\r\n    SPWN_HEAVY_PLATE_ARMOR,\r\n    SPWN_LEATHER_ARMOR,\r\n    SPWN_CLOTH_HOOD,\r\n    SPWN_WIZARD_CAP,\r\n    SPWN_HELM,\r\n    SPWN_TWIG,\r\n} from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { randomInt } from '../../utils/rand';\r\nimport { TILE_TYPE_WALL } from '../TileData';\r\nimport TileThemePopulator from './TileThemePopulator';\r\n\r\nexport default class CabinTheme extends TileThemePopulator {\r\n    static populateTile(tile) {\r\n        spawn(SPWN_GROUND_STONE, tile.x, tile.y);\r\n\r\n        if (this.getEntities(tile).length === 0) {\r\n            if (tile.isType(TILE_TYPE_WALL)) {\r\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    static populateRoom(room) {\r\n        room.tiles.forEach((tile) => this.populateTile(tile));\r\n\r\n        room.exits.forEach((exit) => {\r\n            if (this.getEntities(exit).length === 0) {\r\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\r\n            }\r\n        });\r\n\r\n        this.trySpawn(room, (tile) => {\r\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\r\n\r\n            chest.inventory.addLoot(spawn(SPWN_TWIG));\r\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\r\n            chest.inventory.addLoot(spawn(SPWN_STONE));\r\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\r\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\r\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_BOOTS));\r\n            chest.inventory.addLoot(spawn(SPWN_SHORTSWORD));\r\n            chest.inventory.addLoot(spawn(SPWN_GREATSWORD));\r\n            chest.inventory.addLoot(spawn(SPWN_BATTLE_AXE));\r\n            chest.inventory.addLoot(spawn(SPWN_HATCHET));\r\n            chest.inventory.addLoot(spawn(SPWN_MACE));\r\n            chest.inventory.addLoot(spawn(SPWN_HEAVY_PLATE_ARMOR));\r\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_ARMOR));\r\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_HOOD));\r\n            chest.inventory.addLoot(spawn(SPWN_WIZARD_CAP));\r\n            chest.inventory.addLoot(spawn(SPWN_HELM));\r\n        });\r\n\r\n        for (let i = 0; i < randomInt(1, 3); i++) {\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import {\r\n    SPWN_GOBLIN_GRUNT,\r\n    SPWN_PINE_TREE,\r\n    SPWN_STONE,\r\n    SPWN_BEAR,\r\n    SPWN_VIAL_BLOOD,\r\n    SPWN_VIAL_HONEY,\r\n    SPWN_VIAL_WATER,\r\n    SPWN_GROUND_GRASS,\r\n    SPWN_TWIG,\r\n    SPWN_GOBLIN_BRUISER,\r\n    SPWN_GOBLIN_STARGAZER,\r\n    SPWN_GROUND_SAND,\r\n    SPWN_CLIFF,\r\n    SPWN_SNAKE,\r\n    SPWN_DESERT_REED,\r\n} from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { randomInt, randomWeightedBool } from '../../utils/rand';\r\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\r\nimport TileThemePopulator from './TileThemePopulator';\r\n\r\nexport default class DesertTheme extends TileThemePopulator {\r\n    static populateTile(tile) {\r\n        spawn(SPWN_GROUND_SAND, tile.x, tile.y);\r\n\r\n        if (tile.isType(TILE_TYPE_WALL)) {\r\n            spawn(SPWN_CLIFF, tile.x, tile.y);\r\n        }\r\n    }\r\n\r\n    static populateRoom(room) {\r\n        room.tiles.forEach((tile) => {\r\n            this.populateTile(tile);\r\n\r\n            if (tile.isType(TILE_TYPE_FLOOR)) {\r\n                if (randomWeightedBool(.05)) {\r\n                    spawn(SPWN_DESERT_REED, tile.x, tile.y);\r\n                }\r\n\r\n                if (randomWeightedBool(.01)) {\r\n                    spawn(SPWN_SNAKE, tile.x, tile.y);\r\n                }\r\n            }\r\n        });\r\n\r\n        for (let i = 0; i < randomInt(0, 1); i++) {\r\n            if (Math.random() > 0.05) {\r\n                return;\r\n            }\r\n\r\n            this.trySpawn(room, (tile) => {\r\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { Map as MapGenerator } from 'rot-js';\r\nimport { digExits } from '../LevelConnections';\r\nimport TileContainer from '../TileContainer';\r\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\r\nimport TileScheme from '../TileScheme';\r\n\r\nexport class UniformScheme extends TileScheme {\r\n    static generate(settings) {\r\n        const width = settings.width;\r\n        const height = settings.height;\r\n        const exits = settings.exits || [];\r\n        const tiles = new TileContainer(width, height);\r\n\r\n        const generator = new MapGenerator.Uniform(width, height, {\r\n            timeLimit: 8000,\r\n            roomWidth: settings.roomWidth || [2, 8],\r\n            roomHeight: settings.roomHeight || [2, 8],\r\n            roomDugPercentage: settings.digPercentage || 0.8,\r\n        });\r\n\r\n        generator.create((x, y, v) => {\r\n            if (v === 0) {\r\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\r\n            }\r\n\r\n            if (v === 1) {\r\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\r\n            }\r\n        });\r\n\r\n        generator.getRooms().forEach((r) => {\r\n            const room = tiles.createRoom(\r\n                r.getLeft(),\r\n                r.getTop(),\r\n                r.getRight() - r.getLeft() + 1,\r\n                r.getBottom() - r.getTop() + 1\r\n            );\r\n            r.getDoors((x, y) => {\r\n                room.addExit(x, y);\r\n            });\r\n        });\r\n\r\n        digExits(tiles, exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import Grid from '../utils/Grid';\r\nimport RoomData from './RoomData';\r\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\r\n\r\nexport default class TileContainer {\r\n    #defaultType = TILE_TYPE_FLOOR;\r\n    #grid = [];\r\n    #rooms = {};\r\n\r\n    get width() {\r\n        return this.#grid.width;\r\n    }\r\n\r\n    get height() {\r\n        return this.#grid.height;\r\n    }\r\n\r\n    get size() {\r\n        return this.width * this.height;\r\n    }\r\n\r\n    get data() {\r\n        return this.#grid.data;\r\n    }\r\n\r\n    get rooms() {\r\n        return Object.values(this.#rooms);\r\n    }\r\n\r\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\r\n        this.#grid = new Grid(width, height, createTileData);\r\n        this.#defaultType = defaultType;\r\n        this.clear();\r\n    }\r\n\r\n    getTile(x, y) {\r\n        return this.#grid.get(x, y);\r\n    }\r\n\r\n    setTileType(x, y, type) {\r\n        this.#grid.get(x, y).type = type;\r\n    }\r\n\r\n    setTileTheme(x, y, theme) {\r\n        this.#grid.get(x, y).theme = theme;\r\n    }\r\n\r\n    getTileType(x, y) {\r\n        return this.getTile(x, y).type;\r\n    }\r\n\r\n    addRoom(room) {\r\n        this.#rooms[room.id] = room;\r\n    }\r\n\r\n    createRoom(x, y, width, height) {\r\n        const room = new RoomData(x, y, width, height, this);\r\n\r\n        this.addRoom(room);\r\n\r\n        return room;\r\n    }\r\n\r\n    clear() {\r\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\r\n    }\r\n\r\n    fill(x, y, width, height, type) {\r\n        for (let i = x; i < x + width; i++) {\r\n            for (let j = y; j < y + height; j++) {\r\n                this.setTileType(i, j, type);\r\n            }\r\n        }\r\n    }\r\n\r\n    tileTypeMatches(x, y, type) {\r\n        return this.getTile(x, y).isType(type);\r\n    }\r\n\r\n    combineOther(offsetX, offsetY, tiles) {\r\n        tiles.rooms.forEach((room) => {\r\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\r\n        });\r\n        tiles.data.forEach((tile) => {\r\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\r\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\r\n        });\r\n    }\r\n\r\n    isOnEdge(x, y) {\r\n        return (\r\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\r\n        );\r\n    }\r\n\r\n    setTheme(theme) {\r\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\r\n        this.rooms.forEach((room) => (room.theme = theme));\r\n    }\r\n\r\n    getRoomForTile(x, y) {\r\n        const tile = this.getTile(x, y);\r\n\r\n        return this.rooms.find((room) => {\r\n            return room.tiles.includes(tile);\r\n        });\r\n    }\r\n\r\n    getUnassignedTiles() {\r\n        return this.data.filter((tile) => {\r\n            return !this.getRoomForTile(tile.x, tile.y);\r\n        });\r\n    }\r\n\r\n    getNeighbors(x, y) {\r\n        return this.#grid.getNeighbors(x, y);\r\n    }\r\n}\r\n","import { nanoid } from 'nanoid';\r\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\r\nimport { TILE_TYPE_FLOOR } from './TileData';\r\n\r\nexport default class RoomData {\r\n    id = 0;\r\n    x = 0;\r\n    y = 0;\r\n    width = 0;\r\n    height = 0;\r\n    theme = TILE_THEME_FOREST;\r\n    includeWalls = false;\r\n    #container = null;\r\n    #exitCoords = [];\r\n\r\n    get relativeExits() {\r\n        return this.#exitCoords;\r\n    }\r\n\r\n    get exits() {\r\n        return this.relativeExits.map((exit) => ({\r\n            x: exit.x + this.x,\r\n            y: exit.y + this.y,\r\n        }));\r\n    }\r\n\r\n    get left() {\r\n        return this.includeWalls ? this.x - 1 : this.x;\r\n    }\r\n\r\n    get right() {\r\n        return this.includeWalls\r\n            ? this.x + this.width + 1\r\n            : this.x + this.width;\r\n    }\r\n\r\n    get top() {\r\n        return this.includeWalls ? this.y - 1 : this.y;\r\n    }\r\n\r\n    get bottom() {\r\n        return this.includeWalls\r\n            ? this.y + this.height + 1\r\n            : this.y + this.height;\r\n    }\r\n\r\n    get borderTiles() {\r\n        const start = this.includeWalls ? -1 : 0;\r\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\r\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\r\n        const borders = [];\r\n\r\n        // TODO this loop can be a lot simpler...\r\n        for (let i = start; i < endWidth; i++) {\r\n            for (let j = start; j < endHeight; j++) {\r\n                if (\r\n                    i === start ||\r\n                    i === endWidth - 1 ||\r\n                    j === start ||\r\n                    j === endHeight - 1\r\n                ) {\r\n                    borders.push(\r\n                        this.#container.getTile(i + this.x, j + this.y)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return borders;\r\n    }\r\n\r\n    get interiorTiles() {\r\n        const interior = [];\r\n\r\n        for (let i = 0; i < this.width; i++) {\r\n            for (let j = 0; j < this.height; j++) {\r\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\r\n            }\r\n        }\r\n\r\n        return interior;\r\n    }\r\n\r\n    get tiles() {\r\n        const start = this.includeWalls ? -1 : 0;\r\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\r\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\r\n        const tiles = [];\r\n\r\n        for (let i = start; i < endWidth; i++) {\r\n            for (let j = start; j < endHeight; j++) {\r\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\r\n            }\r\n        }\r\n\r\n        return tiles;\r\n    }\r\n\r\n    constructor(x, y, width, height, container) {\r\n        this.id = nanoid();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.#container = container;\r\n    }\r\n\r\n    addRelativeExit(x, y) {\r\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\r\n        this.#exitCoords.push({ x, y });\r\n    }\r\n\r\n    addExit(x, y) {\r\n        this.addRelativeExit(x - this.x, y - this.y);\r\n    }\r\n\r\n    cloneTo(x, y, container) {\r\n        const room = new RoomData(x, y, this.width, this.height, container);\r\n\r\n        room.theme = this.theme;\r\n        room.includeWalls = this.includeWalls;\r\n\r\n        this.relativeExits.forEach((exit) => {\r\n            room.addRelativeExit(exit.x, exit.y);\r\n        });\r\n\r\n        container.addRoom(room);\r\n\r\n        return room;\r\n    }\r\n\r\n    containsPoint(x, y) {\r\n        return (\r\n            x <= this.right &&\r\n            x >= this.left &&\r\n            y <= this.bottom &&\r\n            y >= this.top\r\n        );\r\n    }\r\n\r\n    intersects(left, top, right, bottom) {\r\n        const c1 = left < this.right;\r\n        const c2 = right > this.left;\r\n        const c3 = top < this.bottom;\r\n        const c4 = bottom > this.top;\r\n\r\n        return c1 && c2 && c3 && c4;\r\n    }\r\n}\r\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\r\nimport TileContainer from '../TileContainer';\r\n\r\nexport default class AreaGenerator {\r\n    static generate(settings) {\r\n        return new TileContainer(settings.width, settings.height);\r\n    }\r\n\r\n    static populate(settings, tiles) {\r\n        // tiles.rooms.forEach((room) => {\r\n        //     const theme = getThemePopulator(room.theme);\r\n\r\n        //     theme.populateRoom(room);\r\n        // });\r\n\r\n        // tiles.getUnassignedTiles().forEach((tile) => {\r\n        //     const theme = getThemePopulator(tile.theme);\r\n\r\n        //     theme.populateTile(tile);\r\n        // });\r\n    }\r\n}\r\n","import { digExits } from '../LevelConnections';\r\nimport { UniformScheme } from '../schemes/UniformScheme';\r\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\r\nimport AreaGenerator from './AreaGenerator';\r\n\r\nexport class ForestGenerator extends AreaGenerator {\r\n    static generate(settings) {\r\n        const tiles = UniformScheme.generate({\r\n            width: settings.width,\r\n            height: settings.height,\r\n            exits: settings.exits,\r\n        });\r\n\r\n        tiles.setTheme(TILE_THEME_FOREST);\r\n\r\n        digExits(tiles, settings.exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import { digExits } from '../LevelConnections';\r\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\r\nimport { UniformScheme } from '../schemes/UniformScheme';\r\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\r\nimport TileContainer from '../TileContainer';\r\nimport AreaGenerator from './AreaGenerator';\r\n\r\nexport class ForestStrongholdGenerator extends AreaGenerator {\r\n    static generate(settings) {\r\n        const tiles = new TileContainer(settings.width, settings.height);\r\n        const padding = 5;\r\n        const exitOffset = Math.ceil(padding / 2) - 1;\r\n\r\n        const top = UniformScheme.generate({\r\n            width: settings.width - padding,\r\n            height: padding,\r\n            exits: [\r\n                { x: exitOffset, y: padding - 1 },\r\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\r\n                { x: padding + 11, y: padding - 1 },\r\n            ],\r\n        });\r\n\r\n        const left = UniformScheme.generate({\r\n            width: padding,\r\n            height: settings.height - padding,\r\n            exits: [\r\n                { x: exitOffset, y: 0 },\r\n                {\r\n                    x: padding - 1,\r\n                    y: settings.height - padding - exitOffset - 1,\r\n                },\r\n            ],\r\n        });\r\n\r\n        const bottom = UniformScheme.generate({\r\n            width: settings.width - padding,\r\n            height: padding,\r\n            exits: [\r\n                { x: 0, y: exitOffset },\r\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\r\n            ],\r\n        });\r\n\r\n        const right = UniformScheme.generate({\r\n            width: padding,\r\n            height: settings.height - padding,\r\n            exits: [\r\n                { x: 0, y: exitOffset - 1 },\r\n                { x: exitOffset, y: settings.height - padding - 1 },\r\n            ],\r\n        });\r\n\r\n        const castle = DenseCastleScheme.generate({\r\n            width: settings.width - padding * 2 + 2,\r\n            height: settings.height - padding * 2 + 2,\r\n            exits: [{ x: 12, y: 0 }],\r\n        });\r\n\r\n        top.setTheme(TILE_THEME_FOREST);\r\n        left.setTheme(TILE_THEME_FOREST);\r\n        bottom.setTheme(TILE_THEME_FOREST);\r\n        right.setTheme(TILE_THEME_FOREST);\r\n        castle.setTheme(TILE_THEME_CASTLE);\r\n\r\n        tiles.combineOther(0, 0, top);\r\n        tiles.combineOther(0, padding, left);\r\n        tiles.combineOther(padding, settings.height - padding, bottom);\r\n        tiles.combineOther(settings.width - padding, 0, right);\r\n        tiles.combineOther(padding - 1, padding - 1, castle);\r\n\r\n        digExits(tiles, settings.exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import { digExits } from '../LevelConnections';\r\nimport TileContainer from '../TileContainer';\r\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\r\nimport { pickRandom, randomInt } from '../../utils/rand';\r\nimport { computeAStar } from '../../utils/AStar';\r\nimport { diagonalDistance } from '../../utils/diagonalDistance';\r\nimport TileScheme from '../TileScheme';\r\n\r\nconst VERTICAL = 0;\r\nconst HORIZONTAL = 1;\r\n\r\nlet curId = 1;\r\nconst createNodeId = () => curId++;\r\n\r\nconst splitNodeVertical = (node, cut) => {\r\n    const leftId = createNodeId();\r\n    const rightId = createNodeId();\r\n    const left = {\r\n        id: leftId,\r\n        isLeaf: true,\r\n        parentId: node.id,\r\n        siblingId: rightId,\r\n        offsetX: node.offsetX,\r\n        offsetY: node.offsetY,\r\n        width: cut,\r\n        height: node.height,\r\n    };\r\n    const right = {\r\n        id: rightId,\r\n        isLeaf: true,\r\n        parentId: node.id,\r\n        siblingId: leftId,\r\n        offsetX: node.offsetX + cut,\r\n        offsetY: node.offsetY,\r\n        width: node.width - cut,\r\n        height: node.height,\r\n    };\r\n    return [left, right];\r\n};\r\n\r\nconst splitNodeHorizontal = (node, cut) => {\r\n    const topId = createNodeId();\r\n    const bottomId = createNodeId();\r\n    const top = {\r\n        id: topId,\r\n        isLeaf: true,\r\n        parentId: node.id,\r\n        siblingId: bottomId,\r\n        offsetX: node.offsetX,\r\n        offsetY: node.offsetY,\r\n        width: node.width,\r\n        height: cut,\r\n    };\r\n    const bottom = {\r\n        id: bottomId,\r\n        isLeaf: true,\r\n        parentId: node.id,\r\n        siblingId: topId,\r\n        offsetX: node.offsetX,\r\n        offsetY: node.offsetY + cut,\r\n        width: node.width,\r\n        height: node.height - cut,\r\n    };\r\n\r\n    return [top, bottom];\r\n};\r\n\r\nexport class DenseCastleScheme extends TileScheme {\r\n    static generate(settings) {\r\n        const width = settings.width;\r\n        const height = settings.height;\r\n        const exits = settings.exits || [];\r\n\r\n        const minRoomWidth = settings.minRoomWidth || 4;\r\n        const minRoomHeight = settings.minRoomHeight || 4;\r\n\r\n        const maxRoomWidth = settings.maxRoomWidth || 12;\r\n        const maxRoomHeight = settings.maxRoomHeight || 12;\r\n\r\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\r\n\r\n        const loopiness = settings.loopiness || 35;\r\n\r\n        const tiles = new TileContainer(width, height);\r\n\r\n        for (let i = 0; i < width; i++) {\r\n            for (let j = 0; j < height; j++) {\r\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\r\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\r\n                } else {\r\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\r\n                }\r\n            }\r\n        }\r\n\r\n        const nodes = [\r\n            {\r\n                isLeaf: true,\r\n                parentId: null,\r\n                siblingId: null,\r\n                id: createNodeId(),\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n                height: height - 1,\r\n                width: width - 1,\r\n            },\r\n        ];\r\n\r\n        const graph = [];\r\n\r\n        while (nodes.length > 0) {\r\n            const node = nodes.pop();\r\n            graph.push(node);\r\n\r\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\r\n                const ignoreSplit = Math.random() < splitIgnoreChance;\r\n\r\n                if (ignoreSplit) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            const directions = [];\r\n\r\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\r\n                directions.push(VERTICAL);\r\n            }\r\n\r\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\r\n                directions.push(HORIZONTAL);\r\n            }\r\n\r\n            if (directions.length <= 0) {\r\n                continue;\r\n            }\r\n\r\n            const direction = pickRandom(directions);\r\n\r\n            if (direction === VERTICAL) {\r\n                const cut = randomInt(\r\n                    minRoomWidth + 1,\r\n                    node.width - minRoomWidth - 1\r\n                );\r\n\r\n                nodes.push(...splitNodeVertical(node, cut));\r\n            } else {\r\n                const cut = randomInt(\r\n                    minRoomHeight + 1,\r\n                    node.height - minRoomHeight - 1\r\n                );\r\n\r\n                nodes.push(...splitNodeHorizontal(node, cut));\r\n            }\r\n\r\n            node.isLeaf = false;\r\n        }\r\n\r\n        graph.forEach((node) => {\r\n            if (node.parentId === null) {\r\n                return;\r\n            }\r\n\r\n            if (node.isLeaf) {\r\n                const room = tiles.createRoom(\r\n                    node.offsetX + 1,\r\n                    node.offsetY + 1,\r\n                    node.width - 1,\r\n                    node.height - 1\r\n                );\r\n\r\n                room.includeWalls = true;\r\n\r\n                for (let i = 0; i < node.width; i++) {\r\n                    tiles.setTileType(\r\n                        node.offsetX + i,\r\n                        node.offsetY,\r\n                        TILE_TYPE_WALL\r\n                    );\r\n                }\r\n\r\n                for (let j = 0; j < node.height; j++) {\r\n                    tiles.setTileType(\r\n                        node.offsetX,\r\n                        node.offsetY + j,\r\n                        TILE_TYPE_WALL\r\n                    );\r\n                }\r\n                return;\r\n            }\r\n        });\r\n\r\n        graph.forEach((node) => {\r\n            if (node.parentId === null) {\r\n                return;\r\n            }\r\n\r\n            const sibling = graph.find((n) => n.id === node.siblingId);\r\n\r\n            let doorCandidates = [];\r\n            let hasSib = false;\r\n\r\n            if (sibling.offsetX < node.offsetX) {\r\n                hasSib = true;\r\n                for (let i = 1; i < node.height; i++) {\r\n                    const x = node.offsetX;\r\n                    const y = node.offsetY + i;\r\n                    const tile = tiles.getTile(x, y);\r\n\r\n                    if (\r\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\r\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\r\n                    ) {\r\n                        doorCandidates.push(tile);\r\n                    }\r\n                }\r\n            } else if (sibling.offsetY < node.offsetY) {\r\n                hasSib = true;\r\n                for (let i = 1; i < node.width; i++) {\r\n                    const x = node.offsetX + i;\r\n                    const y = node.offsetY;\r\n                    const tile = tiles.getTile(x, y);\r\n\r\n                    if (\r\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\r\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\r\n                    ) {\r\n                        doorCandidates.push(tile);\r\n                    }\r\n                }\r\n            }\r\n\r\n            const door = pickRandom(doorCandidates);\r\n\r\n            if (hasSib && !door) {\r\n                console.warn(\r\n                    'cannot make door!?',\r\n                    node,\r\n                    node.width,\r\n                    node.height\r\n                );\r\n            }\r\n\r\n            if (door) {\r\n                const room = tiles.getRoomForTile(door.x, door.y);\r\n\r\n                if (room) {\r\n                    room.addExit(door.x, door.y);\r\n                }\r\n\r\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\r\n            }\r\n        });\r\n\r\n        const cost = (a, b) => {\r\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\r\n                return diagonalDistance(a, b);\r\n            }\r\n\r\n            return Infinity;\r\n        };\r\n\r\n        const tryAddLoop = (a, b) => {\r\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\r\n                const start = {\r\n                    x: b.x,\r\n                    y: b.y,\r\n                };\r\n                const goal = {\r\n                    x: a.x,\r\n                    y: a.y,\r\n                };\r\n                const path = computeAStar({\r\n                    start,\r\n                    goal,\r\n                    cost,\r\n                });\r\n\r\n                if (path.success && path.cost >= loopiness) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        tiles.data\r\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\r\n            .forEach((tile) => {\r\n                const north = tiles.getTile(tile.x, tile.y - 1);\r\n                const south = tiles.getTile(tile.x, tile.y + 1);\r\n\r\n                if (tryAddLoop(north, south)) {\r\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\r\n\r\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\r\n\r\n                    if (room) {\r\n                        room.addExit(tile.x, tile.y);\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                const east = tiles.getTile(tile.x - 1, tile.y);\r\n                const west = tiles.getTile(tile.x + 1, tile.y);\r\n\r\n                if (tryAddLoop(east, west)) {\r\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\r\n\r\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\r\n\r\n                    if (room) {\r\n                        room.addExit(tile.x, tile.y);\r\n                    }\r\n\r\n                    return;\r\n                }\r\n            });\r\n\r\n        digExits(tiles, exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import { game } from '../../core/Game';\r\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\r\nimport { spawn } from '../../data/Spawner';\r\nimport { computeAStar } from '../../utils/AStar';\r\nimport { diagonalDistance } from '../../utils/diagonalDistance';\r\nimport { manhattanDistance } from '../../utils/ManhattanDistance';\r\nimport { pickRandom } from '../../utils/rand';\r\nimport { digExits } from '../LevelConnections';\r\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\r\nimport {\r\n    getThemePopulator,\r\n    TILE_THEME_CABIN,\r\n    TILE_THEME_FOREST,\r\n} from '../themes/TileTheme';\r\nimport { TILE_TYPE_WALL } from '../TileData';\r\nimport { addBorder } from './GeneratorUtils';\r\nimport AreaGenerator from './AreaGenerator';\r\n\r\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\r\nconst isBottomLeftCorner = (t, room) =>\r\n    t.x === room.left && t.y === room.bottom - 1;\r\nconst isBottomRightCorner = (t, room) =>\r\n    t.x === room.right - 1 && t.y === room.bottom - 1;\r\nconst isTopRightCorner = (t, room) =>\r\n    t.x === room.right - 1 && t.y === room.top;\r\n\r\nexport class ForestTownGenerator extends AreaGenerator {\r\n    static generate(settings) {\r\n        const tiles = ScatteredScheme.generate({\r\n            width: settings.width,\r\n            height: settings.height,\r\n            exits: settings.exits,\r\n            minCount: 4,\r\n        });\r\n\r\n        tiles.setTheme(TILE_THEME_CABIN);\r\n\r\n        const addDoor = (room) => {\r\n            const edges = room.borderTiles.filter(\r\n                (t) =>\r\n                    !(\r\n                        isTopLeftCorner(t, room) ||\r\n                        isBottomLeftCorner(t, room) ||\r\n                        isBottomRightCorner(t, room) ||\r\n                        isTopRightCorner(t, room)\r\n                    )\r\n            );\r\n\r\n            const door = pickRandom(edges);\r\n\r\n            if (door) {\r\n                room.addExit(door.x, door.y);\r\n            }\r\n        };\r\n\r\n        tiles.rooms.forEach(addDoor);\r\n\r\n        tiles.getUnassignedTiles().forEach((tile) => {\r\n            tile.theme = TILE_THEME_FOREST;\r\n        });\r\n\r\n        addBorder(tiles);\r\n\r\n        digExits(tiles, settings.exits);\r\n\r\n        return tiles;\r\n    }\r\n\r\n    static populate(settings, tiles) {\r\n        tiles.rooms.forEach((room) => {\r\n            const theme = getThemePopulator(room.theme);\r\n\r\n            theme.populateRoom(room);\r\n        });\r\n\r\n        const doors = tiles.rooms.map((room) => room.exits).flat();\r\n        const walkways = new Set();\r\n\r\n        const populatePath = (result) => {\r\n            if (!result.success) {\r\n                return;\r\n            }\r\n\r\n            result.path.forEach((segment) => {\r\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\r\n\r\n                if (entities.length > 0) {\r\n                    return;\r\n                }\r\n\r\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\r\n\r\n                walkways.add(`${segment.x},${segment.y}`);\r\n            });\r\n        };\r\n\r\n        const generatePath = (start, end) => {\r\n            const path = computeAStar({\r\n                allowDiagonals: false,\r\n                start: {\r\n                    x: start.x,\r\n                    y: start.y,\r\n                },\r\n                goal: {\r\n                    x: end.x,\r\n                    y: end.y,\r\n                },\r\n                cost: (a, b) => {\r\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\r\n                        return Infinity;\r\n                    }\r\n\r\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\r\n                    const walls = neighbors.filter((n) =>\r\n                        n.isType(TILE_TYPE_WALL)\r\n                    );\r\n\r\n                    if (walls.length > 0) {\r\n                        return walls.length * 2;\r\n                    }\r\n\r\n                    if (walkways.has(`${b.x},${b.y}`)) {\r\n                        return 0.1;\r\n                    }\r\n\r\n                    return manhattanDistance(a, b) * 2;\r\n                },\r\n            });\r\n\r\n            populatePath(path);\r\n        };\r\n\r\n        doors.forEach((doorA) => {\r\n            settings.exits.forEach((exit) => {\r\n                generatePath(doorA, exit);\r\n            });\r\n            doors.forEach((doorB) => {\r\n                if (doorA === doorB) {\r\n                    return;\r\n                }\r\n\r\n                generatePath(doorA, doorB);\r\n            });\r\n        });\r\n\r\n        tiles.getUnassignedTiles().forEach((tile) => {\r\n            const theme = getThemePopulator(tile.theme);\r\n\r\n            theme.populateTile(tile);\r\n        });\r\n    }\r\n}\r\n","import { randomInt } from '../../utils/rand';\r\nimport { digExits } from '../LevelConnections';\r\nimport TileContainer from '../TileContainer';\r\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\r\nimport TileScheme from '../TileScheme';\r\n\r\nexport class ScatteredScheme extends TileScheme {\r\n    static generate(settings) {\r\n        const attempt = settings.attempt || 1;\r\n        const maxAttempts = settings.maxAttempts || 100;\r\n        const width = settings.width;\r\n        const height = settings.height;\r\n        const padding = settings.padding || 3;\r\n        const roomPadding = settings.roomPadding || 3;\r\n        const minCount = settings.minCount || 5;\r\n        const maxCount = settings.maxCount || 8;\r\n        const minWidth = settings.minWidth || 5;\r\n        const maxWidth = settings.maxWidth || 9;\r\n        const minHeight = settings.minHeight || 5;\r\n        const maxHeight = settings.maxHeight || 9;\r\n        const exits = settings.exits || [];\r\n        const tiles = new TileContainer(width, height);\r\n\r\n        if (attempt > maxAttempts) {\r\n            console.warn(\r\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\r\n            );\r\n\r\n            return tiles;\r\n        }\r\n\r\n        const createBox = () => {\r\n            const width = randomInt(minWidth, maxWidth);\r\n            const height = randomInt(minHeight, maxHeight);\r\n\r\n            return {\r\n                x: randomInt(padding, settings.width - padding - width),\r\n                y: randomInt(padding, settings.height - padding - height),\r\n                width,\r\n                height,\r\n                get top() {\r\n                    return this.y - roomPadding;\r\n                },\r\n                get bottom() {\r\n                    return this.y + this.height + roomPadding;\r\n                },\r\n                get left() {\r\n                    return this.x - roomPadding;\r\n                },\r\n                get right() {\r\n                    return this.x + this.width + roomPadding;\r\n                },\r\n            };\r\n        };\r\n\r\n        const overlaps = (box) => {\r\n            return tiles.rooms.some((room) => {\r\n                return room.intersects(\r\n                    box.left,\r\n                    box.top,\r\n                    box.right,\r\n                    box.bottom\r\n                );\r\n            });\r\n        };\r\n\r\n        for (let i = 0; i < 100; i++) {\r\n            const box = createBox();\r\n\r\n            if (overlaps(box)) {\r\n                continue;\r\n            }\r\n\r\n            for (let i = 0; i < box.width; i++) {\r\n                for (let j = 0; j < box.height; j++) {\r\n                    const point = {\r\n                        x: box.x + i,\r\n                        y: box.y + j,\r\n                    };\r\n\r\n                    if (\r\n                        i === 0 ||\r\n                        i === box.width - 1 ||\r\n                        j === 0 ||\r\n                        j === box.height - 1\r\n                    ) {\r\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\r\n                    } else {\r\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\r\n                    }\r\n                }\r\n            }\r\n\r\n            tiles.createRoom(box.x, box.y, box.width, box.height);\r\n\r\n            if (tiles.rooms.length >= maxCount) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (tiles.rooms.length < minCount) {\r\n            return this.generate({\r\n                ...settings,\r\n                attempt: attempt + 1,\r\n            });\r\n        }\r\n\r\n        digExits(tiles, exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { digExits } from '../LevelConnections';\r\nimport { UniformScheme } from '../schemes/UniformScheme';\r\nimport { TILE_THEME_CANYON } from '../themes/TileTheme';\r\nimport AreaGenerator from './AreaGenerator';\r\n\r\nexport class CanyonGenerator extends AreaGenerator {\r\n    static generate(settings) {\r\n        const tiles = UniformScheme.generate({\r\n            width: settings.width,\r\n            height: settings.height,\r\n            exits: settings.exits,\r\n        });\r\n\r\n        tiles.setTheme(TILE_THEME_CANYON);\r\n\r\n        digExits(tiles, settings.exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import { digExits } from '../LevelConnections';\r\nimport { SquareScheme } from '../schemes/SquareScheme';\r\nimport { TILE_THEME_DESERT } from '../themes/TileTheme';\r\nimport TileContainer from '../TileContainer';\r\nimport AreaGenerator from './AreaGenerator';\r\n\r\nexport class DesertGenerator extends AreaGenerator {\r\n    static generate(settings) {\r\n        // const tiles = SquareScheme.generate({\r\n        //     width: settings.width,\r\n        //     height: settings.height,\r\n        //     exits: settings.exits,\r\n        // });\r\n\r\n        const tiles = new TileContainer(settings.width, settings.height);\r\n\r\n        // tiles.setTheme(TILE_THEME_DESERT);\r\n\r\n        // digExits(tiles, settings.exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import { addBorder } from '../generators/GeneratorUtils';\r\nimport { digExits } from '../LevelConnections';\r\nimport TileContainer from '../TileContainer';\r\nimport TileScheme from '../TileScheme';\r\n\r\nexport class SquareScheme extends TileScheme {\r\n    static generate(settings) {\r\n        const width = settings.width;\r\n        const height = settings.height;\r\n        const exits = settings.exits || [];\r\n\r\n        const tiles = new TileContainer(width, height);\r\n\r\n        addBorder(tiles);\r\n\r\n        const room = tiles.createRoom(0, 0, settings.width, settings.height);\r\n\r\n        room.includeWalls = true;\r\n\r\n        digExits(tiles, exits);\r\n\r\n        return tiles;\r\n    }\r\n}\r\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\r\nimport Manager from './Manager';\r\n\r\nexport default class ConsoleManager extends Manager {\r\n    messages = [];\r\n    events = [];\r\n    consoleHeight = 4;\r\n\r\n    teardown() {\r\n        this.messages = [];\r\n        this.events = [];\r\n    }\r\n\r\n    event(type, data) {\r\n        this.events.push({ type, data });\r\n    }\r\n\r\n    log(text) {\r\n        this.messages.push({ text });\r\n    }\r\n\r\n    render(dt) {\r\n        this.events.forEach(({ type, data }) => {\r\n            if (shouldAppear(type, data)) {\r\n                this.messages.push({\r\n                    text: getMessage(type, data),\r\n                });\r\n            }\r\n        });\r\n        this.events = [];\r\n\r\n        const msgs = this.messages.slice(\r\n            Math.max(this.messages.length - this.consoleHeight, 0)\r\n        );\r\n        const height = Math.min(msgs.length, this.consoleHeight);\r\n\r\n        msgs.forEach((message, i) => {\r\n            this.game.renderer.drawText(\r\n                0,\r\n                this.game.camera.height - (height - i),\r\n                message.text\r\n            );\r\n        });\r\n    }\r\n}\r\n","import { IsDestroying } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class DestroySystem extends System {\r\n    #query;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.#query = game.ecs.createQuery({\r\n            all: [IsDestroying],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        this.#query.get().forEach((entity) => {\r\n            if (entity.isDestroying.pass > 0) {\r\n\r\n                if (entity.position) {\r\n                    const chunkId = entity.position.chunkId;\r\n\r\n                    this.game.chunks.removeEntity(entity.id, chunkId);\r\n                }\r\n\r\n                entity.destroy();\r\n            } else {\r\n                entity.isDestroying.pass++;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { Howl } from 'howler';\r\nimport Manager from './Manager';\r\nimport music from './../data/music.json';\r\n\r\nclass Track {\r\n    isPlaying = false;\r\n    isIntro = false;\r\n    howl = null;\r\n\r\n    constructor(path, data) {\r\n        this.name = data.name;\r\n        this.loop = new Howl({\r\n            loop: true,\r\n            src: [`${path}${data.loop}`],\r\n        });\r\n\r\n        if (data.intro) {\r\n            this.intro = new Howl({\r\n                loop: false,\r\n                src: [`${path}${data.intro}`],\r\n            });\r\n\r\n            this.intro.on('end', () => {\r\n                if (this.isPlaying) {\r\n                    this.howl = this.loop;\r\n                    this.loop.seek(0);\r\n                    this.loop.volume(1);\r\n                    this.loop.play();\r\n                } else {\r\n                    this.intro.stop();\r\n                    this.loop.stop();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    play() {\r\n        if (this.isPlaying) {\r\n            return;\r\n        }\r\n\r\n        if (this.intro) {\r\n            this.howl = this.intro;\r\n            this.intro.seek(0);\r\n            this.intro.play();\r\n            this.intro.fade(0, 1, 5000);\r\n            this.loop.stop();\r\n            // this.intro.volume(1);\r\n        } else {\r\n            this.howl = this.loop;\r\n            this.loop.seek(0);\r\n            this.loop.play();\r\n            this.loop.fade(0, 1, 5000);\r\n            // this.loop.volume(1);\r\n        }\r\n\r\n        this.isPlaying = true;\r\n    }\r\n\r\n    stop() {\r\n        if (this.howl) {\r\n            this.howl.fade(1, 0, 500);\r\n        }\r\n        this.isPlaying = false;\r\n    }\r\n}\r\n\r\nexport default class MusicManager extends Manager {\r\n    tracks = {};\r\n    currentTrack = null;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        const path = `${window.location.protocol}//${window.location.host}${window.location.pathname}${music.path}`;\r\n\r\n        music.tracks.forEach((data) => {\r\n            const track = new Track(path, data);\r\n\r\n            this.tracks[data.key] = track;\r\n        });\r\n    }\r\n\r\n    play(key) {\r\n        if (key === this.currentTrack) {\r\n            return;\r\n        }\r\n\r\n        if (this.currentTrack) {\r\n            this.tracks[this.currentTrack].stop();\r\n        }\r\n\r\n        this.tracks[key].play();\r\n        this.currentTrack = key;\r\n    }\r\n\r\n    stop() {\r\n        if (this.currentTrack) {\r\n            this.tracks[this.currentTrack].stop();\r\n        }\r\n    }\r\n\r\n    onAreaLoaded(area) {\r\n        this.play(area.music);\r\n    }\r\n}\r\n","import { getStatus } from '../data/Statuses';\r\nimport { Status } from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class StatusSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [Status],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.game.clock.tickDelta) {\r\n            return;\r\n        }\r\n\r\n        const delta = this.game.clock.tickDelta;\r\n\r\n        this.query.get().forEach((entity) => {\r\n            entity.status.forEach((status) => {\r\n                const statusType = getStatus(status.key);\r\n\r\n                statusType.update(delta, entity, status);\r\n\r\n                if (status.isCompleted()) {\r\n                    status.destroy();\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","import {\r\n    IsDestroying,\r\n    IsInventoried,\r\n    LiquidContainer,\r\n    Position,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class LiquidSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [LiquidContainer, Position],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.game.clock.tickDelta) {\r\n            return;\r\n        }\r\n\r\n        const pools = Array.from(this.query.get());\r\n\r\n        pools.reduce((rv, pool) => {\r\n            const container = pool.liquidContainer;\r\n\r\n            if (!container.isFreeFlowing) {\r\n                return rv;\r\n            }\r\n\r\n            const pos = pool.position.getPos();\r\n            const liquid = container.content;\r\n            const key = `${pos.x},${pos.y},${liquid}`;\r\n\r\n            if (rv[key]) {\r\n                rv[key].combineFrom(container);\r\n            } else {\r\n                rv[key] = container;\r\n            }\r\n\r\n            return rv;\r\n        }, {});\r\n    }\r\n}\r\n","import { addStatus, STATUS_BLEEDING } from '../data/Statuses';\r\nimport {\r\n    IsDestroying,\r\n    IsInventoried,\r\n    Position,\r\n    SharpTrap,\r\n} from '../ecs/components';\r\nimport { CONSOLE_EVENT_TRAP_SHARP } from '../enums/ConsoleEvents';\r\nimport System from './System';\r\n\r\nexport default class TrapSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.sharpTrapQuery = this.game.ecs.createQuery({\r\n            all: [SharpTrap, Position],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.game.clock.turnDelta) {\r\n            return;\r\n        }\r\n\r\n        this.sharpTrapQuery.get().forEach((trapEntity) => {\r\n            const pos = trapEntity.position.getPos();\r\n            const entities = this.game.map.getEntitiesAt(pos.x, pos.y);\r\n\r\n            entities.forEach((entity) => {\r\n                if (entity.id === trapEntity.id) {\r\n                    return;\r\n                }\r\n                if (entity.stats) {\r\n                    const saved = trapEntity.sharpTrap.test(entity);\r\n\r\n                    if (!saved) {\r\n                        addStatus(STATUS_BLEEDING, entity);\r\n                        this.game.console.event(CONSOLE_EVENT_TRAP_SHARP, {\r\n                            trap: trapEntity,\r\n                            entity,\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { spawn } from '../data/Spawner';\r\nimport {\r\n    Combustible,\r\n    Fire,\r\n    IsDestroying,\r\n    IsInventoried,\r\n    Position,\r\n} from '../ecs/components';\r\nimport { randomWeightedBool } from '../utils/rand';\r\nimport System from './System';\r\n\r\nexport default class FireSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [Fire, Combustible, Position],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.game.clock.turnDelta) {\r\n            return;\r\n        }\r\n\r\n        this.query.get().forEach((entity) => {\r\n            const pos = entity.position.getPos();\r\n            const combustible = entity.combustible;\r\n            let temperature = this.game.temperature.getTemperature(\r\n                pos.x,\r\n                pos.y\r\n            );\r\n\r\n            combustible.fuel -= combustible.burnRate;\r\n            temperature += combustible.burnRate;\r\n\r\n            this.game.temperature.setTemperature(pos.x, pos.y, temperature);\r\n\r\n            const sparkChance = combustible.getSparkChance();\r\n            const dieChance = combustible.getDieOutChance();\r\n\r\n            this.game.map\r\n                .getNeighborEntities(pos.x, pos.y)\r\n                .flat()\r\n                .filter((e) => e.combustible)\r\n                .forEach((neighbor) => {\r\n                    const spark = randomWeightedBool(sparkChance);\r\n\r\n                    if (spark) {\r\n                        neighbor.fireEvent('spark', {\r\n                            intensity: entity.fire.intensity - 1,\r\n                        });\r\n                    }\r\n                });\r\n\r\n            if (combustible.isOutOfFuel) {\r\n                entity.add(IsDestroying);\r\n\r\n                if (combustible.spawnableRemains) {\r\n                    spawn(combustible.spawnableRemains, pos.x, pos.y);\r\n                }\r\n            } else if (randomWeightedBool(dieChance)) {\r\n                entity.fire.extinguish();\r\n\r\n                this.game.particles.createParticle(pos.x, pos.y, {\r\n                    lifetime: 1000,\r\n                    fg1s: ['yellow', 'red'],\r\n                    glyphs: ['.', '↑', '^'],\r\n                });\r\n            } else {\r\n                this.game.particles.createParticle(pos.x, pos.y, {\r\n                    lifetime: 1000,\r\n                    fg1s: ['yellow', 'red'],\r\n                    glyphs: ['.', '↑', '^'],\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { avgArray } from '../utils/ArrayUtil';\r\nimport { lerp } from '../utils/LerpUtil';\r\nimport MemoryGrid from '../utils/MemoryGrid';\r\nimport System from './System';\r\n\r\nexport default class TemperatureSystem extends System {\r\n    data;\r\n\r\n    get width() {\r\n        return this.game.map.width;\r\n    }\r\n\r\n    get height() {\r\n        return this.game.map.height;\r\n    }\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.grid = new MemoryGrid(this.width, this.height);\r\n    }\r\n\r\n    teardown() {\r\n        this.grid.clear();\r\n    }\r\n\r\n    getAmbientTemperature() {\r\n        return this.game.world.area.temperature.ambient;\r\n    }\r\n\r\n    getAmbientCapacity() {\r\n        return this.game.world.area.temperature.capacity;\r\n    }\r\n\r\n    getSaveGameData() {\r\n        const data = this.grid.serialize();\r\n\r\n        this.game.state.saveAreaTemperatureData(\r\n            this.game.world.areaId,\r\n            data\r\n        );\r\n    }\r\n\r\n    onAreaLoaded(area) {\r\n        const data = this.game.state.loadAreaTemperatureData(area.id);\r\n\r\n        if (data) {\r\n            this.grid.deserialize(data);\r\n        } else {\r\n            this.grid.defaultValueGenerator = () => area.temperature.ambient;\r\n            this.grid.previous.defaultValueGenerator = () =>\r\n                area.temperature.ambient;\r\n            this.grid.setAll(area.temperature.ambient);\r\n        }\r\n    }\r\n\r\n    setTemperature(x, y, value) {\r\n        this.grid.set(x, y, value);\r\n    }\r\n\r\n    getTemperature(x, y) {\r\n        return this.grid.get(x, y);\r\n    }\r\n\r\n    getCapacity(x, y) {\r\n        let hasCap = false;\r\n        let hasFire = false;\r\n\r\n        const capacity = this.game.map.getEntitiesAt(x, y).reduce((cap, e) => {\r\n            if (e.fire) {\r\n                hasFire = true;\r\n                return 0;\r\n            }\r\n            if (e.thermalCapacity) {\r\n                hasCap = true;\r\n\r\n                return cap + e.thermalCapacity.value;\r\n            }\r\n\r\n            return cap;\r\n        }, 0);\r\n\r\n        if (hasFire) {\r\n            return 0;\r\n        }\r\n\r\n        if (hasCap) {\r\n            return capacity;\r\n        }\r\n\r\n        return this.getAmbientCapacity();\r\n    }\r\n\r\n    update(dt) {\r\n        return;\r\n\r\n        if (!this.game.clock.tickDelta) {\r\n            return;\r\n        }\r\n\r\n        this.grid.copyToPrevious();\r\n\r\n        const ambient = this.getAmbientTemperature();\r\n\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                const previous = this.grid.previous.get(x, y);\r\n                const cells = this.grid.previous.getNeighbors(x, y);\r\n\r\n                cells.push(ambient);\r\n                cells.push(previous);\r\n\r\n                const avg = avgArray(cells);\r\n\r\n                if (Math.abs(previous - avg) < 0.01) {\r\n                    continue;\r\n                }\r\n\r\n                const capacity = this.getCapacity(x, y);\r\n                const t = lerp(previous, avg, capacity);\r\n\r\n                this.grid.set(x, y, t);\r\n            }\r\n        }\r\n    }\r\n}\r\n","export const sumArray = (arr = []) => arr.reduce((sum, val) => sum + val, 0);\r\nexport const avgArray = (arr = []) => sumArray(arr) / arr.length;\r\n","export const lerp = (f0, f1, t) => (1 - t) * f0 + t * f1;\r\nexport const lerp2 = (v1, v2, t) => {\r\n    return {\r\n        x: lerp(v1.x, v2.x, t),\r\n        y: lerp(v2.y, v2.x, t),\r\n    };\r\n};\r\n\r\nwindow.lerp = lerp;\r\n","import Grid from './Grid';\r\n\r\nexport default class MemoryGrid extends Grid {\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    constructor(width, height, defaultValueGenerator = () => null) {\r\n        super(width, height, defaultValueGenerator);\r\n        this.previous = new Grid(width, height, defaultValueGenerator);\r\n    }\r\n\r\n    copyToPrevious() {\r\n        this.previous._width = this._width;\r\n        this.previous._height = this._height;\r\n        this.previous.data = [...this.data];\r\n    }\r\n}\r\n","import { IsDestroying } from '../ecs/components';\r\nimport { AbilityStatus } from '../ecs/components/AbilityStatus';\r\nimport System from './System';\r\n\r\nexport default class AbilitySystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.query = this.game.ecs.createQuery({\r\n            all: [AbilityStatus],\r\n            none: [IsDestroying],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        const delta = this.game.clock.tickDelta;\r\n\r\n        if (!delta) {\r\n            return;\r\n        }\r\n\r\n        this.query.get().forEach((entity) => {\r\n            Object.values(entity.abilityStatus).forEach((status) => {\r\n                status.ability.update(delta, status);\r\n            });\r\n        });\r\n    }\r\n}\r\n","import {\r\n    HealthShard,\r\n    IsDestroying,\r\n    IsInventoried,\r\n    Position,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class HealthShardSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.shards = this.game.ecs.createQuery({\r\n            all: [HealthShard, Position],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.game.clock.tickDelta) {\r\n            return;\r\n        }\r\n\r\n        this.shards.get().forEach((shardEntity) => {\r\n            const shard = shardEntity.healthShard;\r\n            const pos = shardEntity.position.getPos();\r\n            const entities = this.game.map.getEntitiesAt(pos.x, pos.y);\r\n\r\n            entities.forEach((entity) => {\r\n                if (!entity.healthShardConsumer) {\r\n                    return;\r\n                }\r\n\r\n                entity.fireEvent('heal', {\r\n                    value: shard.healValue,\r\n                });\r\n\r\n                this.game.particles.createEmitter(\r\n                    pos.x,\r\n                    pos.y,\r\n                    {\r\n                        rate: 2,\r\n                        duration: 600,\r\n                    },\r\n                    {\r\n                        glyphs: ['∙', '·'],\r\n                        fg1s: ['red'],\r\n                        speed: .05,\r\n                        lifetime: 250,\r\n                    }\r\n                );\r\n\r\n                shardEntity.add(IsDestroying);\r\n\r\n                return;\r\n            });\r\n        });\r\n    }\r\n}\r\n","import {\r\n    Compressable,\r\n    IsDestroying,\r\n    IsInventoried,\r\n    Position,\r\n} from '../ecs/components';\r\nimport System from './System';\r\n\r\nexport default class CompressionSystem extends System {\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.compressables = this.game.ecs.createQuery({\r\n            all: [Compressable, Position],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n    }\r\n\r\n    update(dt) {\r\n        if (!this.game.clock.tickDelta) {\r\n            return;\r\n        }\r\n\r\n        this.compressables.get().forEach((compressableEntity) => {\r\n            const compressable = compressableEntity.compressable;\r\n            const pos = compressableEntity.position.getPos();\r\n            const entities = this.game.map.getEntitiesAt(pos.x, pos.y);\r\n\r\n            entities.forEach((entity) => {\r\n                if (entity.id === compressableEntity.id) {\r\n                    return;\r\n                }\r\n                if (!entity.mass) {\r\n                    return;\r\n                }\r\n                if (entity.mass.value < compressable.massRequirement) {\r\n                    return;\r\n                }\r\n\r\n                compressableEntity.glyph.ch = compressable.compressedCh;\r\n                compressable.isCompressed = true;\r\n\r\n                compressableEntity.fireEvent('compressed', {\r\n                    interactor: entity,\r\n                });\r\n            });\r\n        });\r\n    }\r\n}\r\n","import { getMaskGlyph } from '../data/bitmasks';\r\nimport {\r\n    BitmaskGlyph,\r\n    Explored,\r\n    IsDestroying,\r\n    IsInventoried,\r\n    Position,\r\n} from '../ecs/components';\r\nimport Manager from './Manager';\r\n\r\nexport default class BitmaskManager extends Manager {\r\n    constructor(game) {\r\n        super(game);\r\n        this.query = game.ecs.createQuery({\r\n            all: [BitmaskGlyph, Position, Explored],\r\n            none: [IsInventoried, IsDestroying],\r\n        });\r\n\r\n        this.query.onEntityRemoved((entity) => {\r\n            if (entity.isDestroying || entity.IsInventoried) {\r\n                this.refreshMaskAndNeighbors(entity);\r\n            }\r\n        });\r\n    }\r\n\r\n    getMaskNeighbors(x, y, key) {\r\n        const neighbors = this.game.map.getNeighborEntities(x, y);\r\n\r\n        return neighbors.map((list) => {\r\n            return list.filter(\r\n                (e) =>\r\n                    e.explored &&\r\n                    e.bitmaskGlyph &&\r\n                    e.bitmaskGlyph.key === key &&\r\n                    !e.isDestroying\r\n            );\r\n        });\r\n    }\r\n\r\n    refreshMaskAndNeighbors(entity) {\r\n        const key = entity.bitmaskGlyph.key;\r\n        const pos = entity.position.getPos();\r\n\r\n        this.refreshMask(entity);\r\n\r\n        const neighbors = this.getMaskNeighbors(pos.x, pos.y, key);\r\n\r\n        neighbors.flat().forEach((neighbor) => {\r\n            this.refreshMask(neighbor);\r\n        });\r\n    }\r\n\r\n    refreshMask(entity) {\r\n        const key = entity.bitmaskGlyph.key;\r\n        const pos = entity.position.getPos();\r\n        const neighbors = this.getMaskNeighbors(pos.x, pos.y, key);\r\n        const mask = this.sumMask(neighbors);\r\n\r\n        if (entity.bitmaskGlyph.updateGlyph) {\r\n            entity.glyph.ch = getMaskGlyph(key, mask);\r\n        }\r\n    }\r\n\r\n    sumMask(neighbors) {\r\n        return neighbors.reduce((sum, cell, idx) => {\r\n            return cell.length ? sum + 2 ** idx : sum;\r\n        }, 0);\r\n    }\r\n\r\n    refreshAll() {\r\n        this.query.get().forEach((entity) => {\r\n            this.refreshMask(entity);\r\n        });\r\n    }\r\n}\r\n","import Chunk from '../data/Chunk';\r\nimport Grid from '../utils/Grid';\r\nimport Manager from './Manager';\r\n\r\nexport default class ChunkManager extends Manager {\r\n    chunkWidth = 8;\r\n    chunkHeight = 8;\r\n\r\n    chunkCountX = 16;\r\n    chunkCountY = 16;\r\n\r\n    constructor(game) {\r\n        super(game);\r\n        this.chunks = new Grid(this.chunkCountX, this.chunkCountY);\r\n\r\n        for (let x = 0; x < this.chunkCountX; x++) {\r\n            for (let y = 0; y < this.chunkCountY; y++) {\r\n                const id = this.chunks.idx(x, y);\r\n                const chunk = new Chunk(id, x, y, this.chunkWidth, this.chunkHeight);\r\n\r\n                this.chunks.set(x, y, chunk);\r\n            }\r\n        }\r\n    }\r\n\r\n    chunkCoordinate(worldX, worldY) {\r\n        return {\r\n            x: Math.floor(worldX / this.chunkWidth),\r\n            y: Math.floor(worldY / this.chunkHeight),\r\n        };\r\n    }\r\n\r\n    localCoordinate(worldX, worldY) {\r\n        return {\r\n            x: worldX % this.chunkWidth,\r\n            y: worldY % this.chunkHeight,\r\n        };\r\n    }\r\n\r\n    getPosition(entityId, chunkId) {\r\n        const chunk = this.getChunkById(chunkId);\r\n        const local = chunk.getPosition(entityId);\r\n\r\n        return {\r\n            x: local.x + chunk.x * this.chunkWidth,\r\n            y: local.y + chunk.y * this.chunkHeight,\r\n        };\r\n    }\r\n\r\n    setPosition(x, y, entityId, chunkId) {\r\n        const chunkPos = this.chunkCoordinate(x, y);\r\n        const local = this.localCoordinate(x, y);\r\n        const chunk = this.getChunk(chunkPos.x, chunkPos.y);\r\n\r\n        if (!chunk) {\r\n            return;\r\n        }\r\n\r\n        if (chunkId !== chunk.id) {\r\n            const old = this.getChunkById(chunkId);\r\n\r\n            old.removeEntity(entityId);\r\n        }\r\n\r\n        // TODO: should not have to lookup entity here\r\n        const entity = this.game.ecs.getEntity(entityId);\r\n        entity.position.chunkId = chunk.id;\r\n\r\n        chunk.setPosition(local.x, local.y, entityId);\r\n    }\r\n\r\n    removeEntity(entityId, chunkId) {\r\n        console.log('remove entity', entityId, chunkId);\r\n        const chunk = this.getChunkById(chunkId);\r\n\r\n        chunk.removeEntity(entityId);\r\n    }\r\n\r\n    getEntitiesAt(x, y, includeGround = false) {\r\n        if (x < 0 || y < 0) {\r\n            return [];\r\n        }\r\n\r\n        const chunkPos = this.chunkCoordinate(x, y);\r\n        const local = this.localCoordinate(x, y);\r\n        const chunk = this.getChunk(chunkPos.x, chunkPos.y);\r\n\r\n        if (!chunk) {\r\n            return [];\r\n        }\r\n\r\n        return chunk.getEntitiesAt(local.x, local.y, includeGround);\r\n    }\r\n\r\n    getSetupData() {\r\n        return {};\r\n    }\r\n\r\n    getChunkById(chunkId) {\r\n        const coord = this.chunks.coord(chunkId);\r\n\r\n        return this.getChunk(coord.x, coord.y);\r\n    }\r\n\r\n    getChunk(chunkX, chunkY) {\r\n        const chunk = this.chunks.get(chunkX, chunkY);\r\n\r\n        if (chunk && !chunk.isLoaded) {\r\n            chunk.load();\r\n        }\r\n\r\n        return chunk;\r\n    }\r\n\r\n    update(dt) {\r\n        this.chunks.data.forEach((chunk) => {\r\n            if (!chunk.isLoaded) {\r\n                return;\r\n            }\r\n\r\n            const c1 = game.camera.left < chunk.right;\r\n            const c2 = game.camera.right > chunk.left;\r\n            const c3 = game.camera.top < chunk.bottom;\r\n            const c4 = game.camera.bottom > chunk.top;\r\n\r\n            const intersects = c1 && c2 && c3 && c4;\r\n\r\n            if (!intersects) {\r\n                chunk.unload();\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { game } from '../core/Game';\r\nimport { generateChunk } from '../level/ChunkGenerator';\r\nimport FastMap from '../utils/FastMap';\r\n\r\nexport default class Chunk {\r\n    get worldX() {\r\n        return this.width * this.x;\r\n    }\r\n\r\n    get worldY() {\r\n        return this.height * this.y;\r\n    }\r\n\r\n    get left() {\r\n        return this.width * this.x;\r\n    }\r\n\r\n    get right() {\r\n        return this.width * this.x + this.width;\r\n    }\r\n\r\n    get top() {\r\n        return this.height * this.y;\r\n    }\r\n\r\n    get bottom() {\r\n        return this.height * this.y + this.height;\r\n    }\r\n\r\n    constructor(id, x, y, width, height) {\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.data = new FastMap(width, height);\r\n        this.isLoaded = false;\r\n    }\r\n\r\n    load() {\r\n        if (this.isLoaded) {\r\n            console.log('chunk is already loaded.');\r\n            return;\r\n        }\r\n\r\n        console.log(`load chunk ${this.id} (${this.x}, ${this.y})`);\r\n\r\n        const saved = game.state.loadChunkPositionData(this.id);\r\n\r\n        if (!saved) {\r\n            generateChunk(this);\r\n        } else {\r\n            this.data.deserialize(saved);\r\n\r\n            const entityData = game.state.loadChunkEntityData(this.id);\r\n\r\n            game.ecs.deserialize(entityData);\r\n        }\r\n\r\n        this.isLoaded = true;\r\n    }\r\n\r\n    unload() {\r\n        if (!this.isLoaded) {\r\n            console.log('chunk is already un-loaded.');\r\n            return;\r\n        }\r\n\r\n        console.log(`unload chunk ${this.id} (${this.x}, ${this.y})`);\r\n\r\n        const entityIds = this.data.getValues();\r\n\r\n        const entities = entityIds.map((id) => {\r\n            return game.ecs.getEntity(id);\r\n        });\r\n\r\n        const serialized = game.ecs.serialize(entities);\r\n\r\n        game.state.saveChunkPositionData(this.id, this.data.serialize());\r\n        game.state.saveChunkEntityData(this.id, serialized);\r\n\r\n        entities.forEach((e) => e.destroy());\r\n\r\n        this.isLoaded = false;\r\n    }\r\n\r\n    removeEntity(entityId) {\r\n        this.data.remove(entityId);\r\n    }\r\n\r\n    getPosition(entityId) {\r\n        if (!this.isLoaded) {\r\n            this.load();\r\n        }\r\n\r\n        return this.data.getPosition(entityId);\r\n    }\r\n\r\n    setPosition(x, y, entityId) {\r\n        this.data.set(x, y, entityId);\r\n    }\r\n\r\n    getEntitiesAt(x, y, includeGround = false) {\r\n        return this.data.get(x, y).reduce((entities, id) => {\r\n            const e = game.ecs.getEntity(id);\r\n\r\n            if (!e.isInventoried && (includeGround ? true : !e.ground)) {\r\n                entities.push(e);\r\n            }\r\n\r\n            return entities;\r\n        }, []);\r\n    }\r\n}\r\n","import SimplexNoise from 'simplex-noise';\r\nimport { SPWN_DESERT_REED, SPWN_GROUND_GRASS_DEAD, SPWN_GROUND_SAND } from '../data/Spawnables';\r\nimport { spawnForChunk } from '../data/Spawner';\r\n\r\nconst simplex = new SimplexNoise('seed1');\r\n\r\nexport const generateChunk = (chunk) => {\r\n    console.log(`generate chunk ${chunk.id}`);\r\n\r\n    for (let x = 0; x < chunk.width; x++) {\r\n        for (let y = 0; y < chunk.width; y++) {\r\n            const nzX = (chunk.worldX + x);\r\n            const nzY = (chunk.worldY + y);\r\n\r\n            const v = simplex.noise2D(nzX / 10, nzY / 10)\r\n\r\n            if (v <= -1) {\r\n                console.log('low value!!', v);\r\n            } else if (v >= 1) {\r\n                console.log('high value!!', v);\r\n            }\r\n\r\n            if (v < .3) {\r\n                spawnForChunk(SPWN_GROUND_GRASS_DEAD, x, y, {}, chunk);\r\n                if (v < -.4) {\r\n                    spawnForChunk(SPWN_DESERT_REED, x, y, {}, chunk);\r\n                }\r\n            } else {\r\n                spawnForChunk(SPWN_GROUND_SAND, x, y, {}, chunk);\r\n            }\r\n        }\r\n    }\r\n};\r\n","/*\n * A fast javascript implementation of simplex noise by Jonas Wagner\n\nBased on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\nWhich is based on example code by Stefan Gustavson (stegu@itn.liu.se).\nWith Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\nBetter rank ordering method by Stefan Gustavson in 2012.\n\n\n Copyright (c) 2018 Jonas Wagner\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n */\n(function() {\n  'use strict';\n\n  var F2 = 0.5 * (Math.sqrt(3.0) - 1.0);\n  var G2 = (3.0 - Math.sqrt(3.0)) / 6.0;\n  var F3 = 1.0 / 3.0;\n  var G3 = 1.0 / 6.0;\n  var F4 = (Math.sqrt(5.0) - 1.0) / 4.0;\n  var G4 = (5.0 - Math.sqrt(5.0)) / 20.0;\n\n  function SimplexNoise(randomOrSeed) {\n    var random;\n    if (typeof randomOrSeed == 'function') {\n      random = randomOrSeed;\n    }\n    else if (randomOrSeed) {\n      random = alea(randomOrSeed);\n    } else {\n      random = Math.random;\n    }\n    this.p = buildPermutationTable(random);\n    this.perm = new Uint8Array(512);\n    this.permMod12 = new Uint8Array(512);\n    for (var i = 0; i < 512; i++) {\n      this.perm[i] = this.p[i & 255];\n      this.permMod12[i] = this.perm[i] % 12;\n    }\n\n  }\n  SimplexNoise.prototype = {\n    grad3: new Float32Array([1, 1, 0,\n      -1, 1, 0,\n      1, -1, 0,\n\n      -1, -1, 0,\n      1, 0, 1,\n      -1, 0, 1,\n\n      1, 0, -1,\n      -1, 0, -1,\n      0, 1, 1,\n\n      0, -1, 1,\n      0, 1, -1,\n      0, -1, -1]),\n    grad4: new Float32Array([0, 1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1,\n      0, -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1,\n      1, 0, 1, 1, 1, 0, 1, -1, 1, 0, -1, 1, 1, 0, -1, -1,\n      -1, 0, 1, 1, -1, 0, 1, -1, -1, 0, -1, 1, -1, 0, -1, -1,\n      1, 1, 0, 1, 1, 1, 0, -1, 1, -1, 0, 1, 1, -1, 0, -1,\n      -1, 1, 0, 1, -1, 1, 0, -1, -1, -1, 0, 1, -1, -1, 0, -1,\n      1, 1, 1, 0, 1, 1, -1, 0, 1, -1, 1, 0, 1, -1, -1, 0,\n      -1, 1, 1, 0, -1, 1, -1, 0, -1, -1, 1, 0, -1, -1, -1, 0]),\n    noise2D: function(xin, yin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0 = 0; // Noise contributions from the three corners\n      var n1 = 0;\n      var n2 = 0;\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin) * F2; // Hairy factor for 2D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var t = (i + j) * G2;\n      var X0 = i - t; // Unskew the cell origin back to (x,y) space\n      var Y0 = j - t;\n      var x0 = xin - X0; // The x,y distances from the cell origin\n      var y0 = yin - Y0;\n      // For the 2D case, the simplex shape is an equilateral triangle.\n      // Determine which simplex we are in.\n      var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n      if (x0 > y0) {\n        i1 = 1;\n        j1 = 0;\n      } // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      else {\n        i1 = 0;\n        j1 = 1;\n      } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n      // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n      // c = (3-sqrt(3))/6\n      var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n      var y1 = y0 - j1 + G2;\n      var x2 = x0 - 1.0 + 2.0 * G2; // Offsets for last corner in (x,y) unskewed coords\n      var y2 = y0 - 1.0 + 2.0 * G2;\n      // Work out the hashed gradient indices of the three simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      // Calculate the contribution from the three corners\n      var t0 = 0.5 - x0 * x0 - y0 * y0;\n      if (t0 >= 0) {\n        var gi0 = permMod12[ii + perm[jj]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0); // (x,y) of grad3 used for 2D gradient\n      }\n      var t1 = 0.5 - x1 * x1 - y1 * y1;\n      if (t1 >= 0) {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1);\n      }\n      var t2 = 0.5 - x2 * x2 - y2 * y2;\n      if (t2 >= 0) {\n        var gi2 = permMod12[ii + 1 + perm[jj + 1]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to return values in the interval [-1,1].\n      return 70.0 * (n0 + n1 + n2);\n    },\n    // 3D simplex noise\n    noise3D: function(xin, yin, zin) {\n      var permMod12 = this.permMod12;\n      var perm = this.perm;\n      var grad3 = this.grad3;\n      var n0, n1, n2, n3; // Noise contributions from the four corners\n      // Skew the input space to determine which simplex cell we're in\n      var s = (xin + yin + zin) * F3; // Very nice and simple skew factor for 3D\n      var i = Math.floor(xin + s);\n      var j = Math.floor(yin + s);\n      var k = Math.floor(zin + s);\n      var t = (i + j + k) * G3;\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var x0 = xin - X0; // The x,y,z distances from the cell origin\n      var y0 = yin - Y0;\n      var z0 = zin - Z0;\n      // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n      // Determine which simplex we are in.\n      var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n      var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n      if (x0 >= y0) {\n        if (y0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // X Y Z order\n        else if (x0 >= z0) {\n          i1 = 1;\n          j1 = 0;\n          k1 = 0;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // X Z Y order\n        else {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 1;\n          j2 = 0;\n          k2 = 1;\n        } // Z X Y order\n      }\n      else { // x0<y0\n        if (y0 < z0) {\n          i1 = 0;\n          j1 = 0;\n          k1 = 1;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Z Y X order\n        else if (x0 < z0) {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 0;\n          j2 = 1;\n          k2 = 1;\n        } // Y Z X order\n        else {\n          i1 = 0;\n          j1 = 1;\n          k1 = 0;\n          i2 = 1;\n          j2 = 1;\n          k2 = 0;\n        } // Y X Z order\n      }\n      // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n      // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n      // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n      // c = 1/6.\n      var x1 = x0 - i1 + G3; // Offsets for second corner in (x,y,z) coords\n      var y1 = y0 - j1 + G3;\n      var z1 = z0 - k1 + G3;\n      var x2 = x0 - i2 + 2.0 * G3; // Offsets for third corner in (x,y,z) coords\n      var y2 = y0 - j2 + 2.0 * G3;\n      var z2 = z0 - k2 + 2.0 * G3;\n      var x3 = x0 - 1.0 + 3.0 * G3; // Offsets for last corner in (x,y,z) coords\n      var y3 = y0 - 1.0 + 3.0 * G3;\n      var z3 = z0 - 1.0 + 3.0 * G3;\n      // Work out the hashed gradient indices of the four simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      // Calculate the contribution from the four corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = permMod12[ii + perm[jj + perm[kk]]] * 3;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad3[gi0] * x0 + grad3[gi0 + 1] * y0 + grad3[gi0 + 2] * z0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = permMod12[ii + i1 + perm[jj + j1 + perm[kk + k1]]] * 3;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad3[gi1] * x1 + grad3[gi1 + 1] * y1 + grad3[gi1 + 2] * z1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = permMod12[ii + i2 + perm[jj + j2 + perm[kk + k2]]] * 3;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad3[gi2] * x2 + grad3[gi2 + 1] * y2 + grad3[gi2 + 2] * z2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = permMod12[ii + 1 + perm[jj + 1 + perm[kk + 1]]] * 3;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad3[gi3] * x3 + grad3[gi3 + 1] * y3 + grad3[gi3 + 2] * z3);\n      }\n      // Add contributions from each corner to get the final noise value.\n      // The result is scaled to stay just inside [-1,1]\n      return 32.0 * (n0 + n1 + n2 + n3);\n    },\n    // 4D simplex noise, better simplex rank ordering method 2012-03-09\n    noise4D: function(x, y, z, w) {\n      var perm = this.perm;\n      var grad4 = this.grad4;\n\n      var n0, n1, n2, n3, n4; // Noise contributions from the five corners\n      // Skew the (x,y,z,w) space to determine which cell of 24 simplices we're in\n      var s = (x + y + z + w) * F4; // Factor for 4D skewing\n      var i = Math.floor(x + s);\n      var j = Math.floor(y + s);\n      var k = Math.floor(z + s);\n      var l = Math.floor(w + s);\n      var t = (i + j + k + l) * G4; // Factor for 4D unskewing\n      var X0 = i - t; // Unskew the cell origin back to (x,y,z,w) space\n      var Y0 = j - t;\n      var Z0 = k - t;\n      var W0 = l - t;\n      var x0 = x - X0; // The x,y,z,w distances from the cell origin\n      var y0 = y - Y0;\n      var z0 = z - Z0;\n      var w0 = w - W0;\n      // For the 4D case, the simplex is a 4D shape I won't even try to describe.\n      // To find out which of the 24 possible simplices we're in, we need to\n      // determine the magnitude ordering of x0, y0, z0 and w0.\n      // Six pair-wise comparisons are performed between each possible pair\n      // of the four coordinates, and the results are used to rank the numbers.\n      var rankx = 0;\n      var ranky = 0;\n      var rankz = 0;\n      var rankw = 0;\n      if (x0 > y0) rankx++;\n      else ranky++;\n      if (x0 > z0) rankx++;\n      else rankz++;\n      if (x0 > w0) rankx++;\n      else rankw++;\n      if (y0 > z0) ranky++;\n      else rankz++;\n      if (y0 > w0) ranky++;\n      else rankw++;\n      if (z0 > w0) rankz++;\n      else rankw++;\n      var i1, j1, k1, l1; // The integer offsets for the second simplex corner\n      var i2, j2, k2, l2; // The integer offsets for the third simplex corner\n      var i3, j3, k3, l3; // The integer offsets for the fourth simplex corner\n      // simplex[c] is a 4-vector with the numbers 0, 1, 2 and 3 in some order.\n      // Many values of c will never occur, since e.g. x>y>z>w makes x<z, y<w and x<w\n      // impossible. Only the 24 indices which have non-zero entries make any sense.\n      // We use a thresholding to set the coordinates in turn from the largest magnitude.\n      // Rank 3 denotes the largest coordinate.\n      i1 = rankx >= 3 ? 1 : 0;\n      j1 = ranky >= 3 ? 1 : 0;\n      k1 = rankz >= 3 ? 1 : 0;\n      l1 = rankw >= 3 ? 1 : 0;\n      // Rank 2 denotes the second largest coordinate.\n      i2 = rankx >= 2 ? 1 : 0;\n      j2 = ranky >= 2 ? 1 : 0;\n      k2 = rankz >= 2 ? 1 : 0;\n      l2 = rankw >= 2 ? 1 : 0;\n      // Rank 1 denotes the second smallest coordinate.\n      i3 = rankx >= 1 ? 1 : 0;\n      j3 = ranky >= 1 ? 1 : 0;\n      k3 = rankz >= 1 ? 1 : 0;\n      l3 = rankw >= 1 ? 1 : 0;\n      // The fifth corner has all coordinate offsets = 1, so no need to compute that.\n      var x1 = x0 - i1 + G4; // Offsets for second corner in (x,y,z,w) coords\n      var y1 = y0 - j1 + G4;\n      var z1 = z0 - k1 + G4;\n      var w1 = w0 - l1 + G4;\n      var x2 = x0 - i2 + 2.0 * G4; // Offsets for third corner in (x,y,z,w) coords\n      var y2 = y0 - j2 + 2.0 * G4;\n      var z2 = z0 - k2 + 2.0 * G4;\n      var w2 = w0 - l2 + 2.0 * G4;\n      var x3 = x0 - i3 + 3.0 * G4; // Offsets for fourth corner in (x,y,z,w) coords\n      var y3 = y0 - j3 + 3.0 * G4;\n      var z3 = z0 - k3 + 3.0 * G4;\n      var w3 = w0 - l3 + 3.0 * G4;\n      var x4 = x0 - 1.0 + 4.0 * G4; // Offsets for last corner in (x,y,z,w) coords\n      var y4 = y0 - 1.0 + 4.0 * G4;\n      var z4 = z0 - 1.0 + 4.0 * G4;\n      var w4 = w0 - 1.0 + 4.0 * G4;\n      // Work out the hashed gradient indices of the five simplex corners\n      var ii = i & 255;\n      var jj = j & 255;\n      var kk = k & 255;\n      var ll = l & 255;\n      // Calculate the contribution from the five corners\n      var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0 - w0 * w0;\n      if (t0 < 0) n0 = 0.0;\n      else {\n        var gi0 = (perm[ii + perm[jj + perm[kk + perm[ll]]]] % 32) * 4;\n        t0 *= t0;\n        n0 = t0 * t0 * (grad4[gi0] * x0 + grad4[gi0 + 1] * y0 + grad4[gi0 + 2] * z0 + grad4[gi0 + 3] * w0);\n      }\n      var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1 - w1 * w1;\n      if (t1 < 0) n1 = 0.0;\n      else {\n        var gi1 = (perm[ii + i1 + perm[jj + j1 + perm[kk + k1 + perm[ll + l1]]]] % 32) * 4;\n        t1 *= t1;\n        n1 = t1 * t1 * (grad4[gi1] * x1 + grad4[gi1 + 1] * y1 + grad4[gi1 + 2] * z1 + grad4[gi1 + 3] * w1);\n      }\n      var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2 - w2 * w2;\n      if (t2 < 0) n2 = 0.0;\n      else {\n        var gi2 = (perm[ii + i2 + perm[jj + j2 + perm[kk + k2 + perm[ll + l2]]]] % 32) * 4;\n        t2 *= t2;\n        n2 = t2 * t2 * (grad4[gi2] * x2 + grad4[gi2 + 1] * y2 + grad4[gi2 + 2] * z2 + grad4[gi2 + 3] * w2);\n      }\n      var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3 - w3 * w3;\n      if (t3 < 0) n3 = 0.0;\n      else {\n        var gi3 = (perm[ii + i3 + perm[jj + j3 + perm[kk + k3 + perm[ll + l3]]]] % 32) * 4;\n        t3 *= t3;\n        n3 = t3 * t3 * (grad4[gi3] * x3 + grad4[gi3 + 1] * y3 + grad4[gi3 + 2] * z3 + grad4[gi3 + 3] * w3);\n      }\n      var t4 = 0.6 - x4 * x4 - y4 * y4 - z4 * z4 - w4 * w4;\n      if (t4 < 0) n4 = 0.0;\n      else {\n        var gi4 = (perm[ii + 1 + perm[jj + 1 + perm[kk + 1 + perm[ll + 1]]]] % 32) * 4;\n        t4 *= t4;\n        n4 = t4 * t4 * (grad4[gi4] * x4 + grad4[gi4 + 1] * y4 + grad4[gi4 + 2] * z4 + grad4[gi4 + 3] * w4);\n      }\n      // Sum up and scale the result to cover the range [-1,1]\n      return 27.0 * (n0 + n1 + n2 + n3 + n4);\n    }\n  };\n\n  function buildPermutationTable(random) {\n    var i;\n    var p = new Uint8Array(256);\n    for (i = 0; i < 256; i++) {\n      p[i] = i;\n    }\n    for (i = 0; i < 255; i++) {\n      var r = i + ~~(random() * (256 - i));\n      var aux = p[i];\n      p[i] = p[r];\n      p[r] = aux;\n    }\n    return p;\n  }\n  SimplexNoise._buildPermutationTable = buildPermutationTable;\n\n  function alea() {\n    // Johannes Baagøe <baagoe@baagoe.com>, 2010\n    var s0 = 0;\n    var s1 = 0;\n    var s2 = 0;\n    var c = 1;\n\n    var mash = masher();\n    s0 = mash(' ');\n    s1 = mash(' ');\n    s2 = mash(' ');\n\n    for (var i = 0; i < arguments.length; i++) {\n      s0 -= mash(arguments[i]);\n      if (s0 < 0) {\n        s0 += 1;\n      }\n      s1 -= mash(arguments[i]);\n      if (s1 < 0) {\n        s1 += 1;\n      }\n      s2 -= mash(arguments[i]);\n      if (s2 < 0) {\n        s2 += 1;\n      }\n    }\n    mash = null;\n    return function() {\n      var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n      s0 = s1;\n      s1 = s2;\n      return s2 = t - (c = t | 0);\n    };\n  }\n  function masher() {\n    var n = 0xefc8249d;\n    return function(data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n  }\n\n  // amd\n  if (typeof define !== 'undefined' && define.amd) define(function() {return SimplexNoise;});\n  // common js\n  if (typeof exports !== 'undefined') exports.SimplexNoise = SimplexNoise;\n  // browser\n  else if (typeof window !== 'undefined') window.SimplexNoise = SimplexNoise;\n  // nodejs\n  if (typeof module !== 'undefined') {\n    module.exports = SimplexNoise;\n  }\n\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}