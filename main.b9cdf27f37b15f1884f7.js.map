{"version":3,"sources":["webpack://sleepy/webpack/runtime/create fake namespace object","webpack://sleepy/./src/index.js","webpack://sleepy/./src/utils/ImageLoader.js","webpack://sleepy/./node_modules/howler/dist/howler.js","webpack://sleepy/./src/core/Game.js","webpack://sleepy/./src/core/rendering/RenderManager.js","webpack://sleepy/./src/core/Manager.js","webpack://sleepy/./src/core/rendering/Display.js","webpack://sleepy/./src/utils/Grid.js","webpack://sleepy/./src/core/rendering/spritesheets.js","webpack://sleepy/./src/core/rendering/SpriteSheet.js","webpack://sleepy/./src/core/rendering/cp437.js","webpack://sleepy/./src/core/rendering/Sprite.js","webpack://sleepy/./src/utils/ColorParser.js","webpack://sleepy/./node_modules/color-parse/index.mjs","webpack://sleepy/./node_modules/color-name/index.js","webpack://sleepy/./src/core/input/InputController.js","webpack://sleepy/./src/core/input/events/InputKeyboardEvent.js","webpack://sleepy/./src/core/input/events/InputEvent.js","webpack://sleepy/./src/core/input/events/InputMouseEvent.js","webpack://sleepy/./src/systems/ActionSystem.js","webpack://sleepy/./src/ecs/components/Actor.js","webpack://sleepy/../node_modules/camelcase/index.js","webpack://sleepy/../src/util/string-util.js","webpack://sleepy/../src/Properties/Property.js","webpack://sleepy/../src/Properties/SimpleProperty.js","webpack://sleepy/../src/Properties/EntityProperty.js","webpack://sleepy/../src/Properties/EntityArrayProperty.js","webpack://sleepy/../src/Properties/PropertyFactory.js","webpack://sleepy/../src/Component.js","webpack://sleepy/../src/registries/ComponentRegistry.js","webpack://sleepy/../node_modules/deepmerge/dist/cjs.js","webpack://sleepy/../src/PrefabComponent.js","webpack://sleepy/../src/Prefab.js","webpack://sleepy/../src/registries/PrefabRegistry.js","webpack://sleepy/../src/EntityEvent.js","webpack://sleepy/../src/Entity.js","webpack://sleepy/../src/registries/EntityRegistry.js","webpack://sleepy/../src/Query.js","webpack://sleepy/../src/registries/QueryRegistry.js","webpack://sleepy/../src/Engine.js","webpack://sleepy/../node_modules/nanoid/non-secure/index.js","webpack://sleepy/./src/ecs/components/IsDestroying.js","webpack://sleepy/./src/ecs/components/LiquidContainer.js","webpack://sleepy/./src/data/Spawnables.js","webpack://sleepy/./src/data/Spawner.js","webpack://sleepy/./src/data/spawnables/SpawnableVialHoney.js","webpack://sleepy/./src/enums/LiquidTypes.js","webpack://sleepy/./src/data/spawnables/SpawnableVialBlood.js","webpack://sleepy/./src/data/spawnables/SpawnableVialWater.js","webpack://sleepy/./src/data/spawnables/SpawnableGoblinGrunt.js","webpack://sleepy/./src/ai/GoalTypes/BoredGoalType.js","webpack://sleepy/./src/ai/GoalTypes/GoalType.js","webpack://sleepy/./src/ai/GoalActionResult.js","webpack://sleepy/./src/ai/GoalTypes/KillSomethingGoalType.js","webpack://sleepy/./src/utils/AStar.js","webpack://sleepy/./src/utils/diagonalDistance.js","webpack://sleepy/./src/utils/ManhattanDistance.js","webpack://sleepy/./src/utils/PriorityQueue.js","webpack://sleepy/./src/ai/GoalTypes/MoveGoalType.js","webpack://sleepy/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://sleepy/./src/data/spawnables/SpawnablePineTree.js","webpack://sleepy/./src/utils/rand.js","webpack://sleepy/./src/data/spawnables/SpawnableHumanWanderer.js","webpack://sleepy/./src/data/spawnables/SpawnablePoolLiquid.js","webpack://sleepy/./src/ecs/components/Door.js","webpack://sleepy/./src/ecs/components/Blocker.js","webpack://sleepy/./src/ecs/components/Shadowcaster.js","webpack://sleepy/./src/ecs/components/Armor.js","webpack://sleepy/./src/ecs/components/Loot.js","webpack://sleepy/./src/ecs/components/Inventory.js","webpack://sleepy/./src/core/screens/ScreenType.js","webpack://sleepy/./src/ecs/components/IsInventoried.js","webpack://sleepy/./src/ecs/components/Stackable.js","webpack://sleepy/./src/enums/Stackables.js","webpack://sleepy/./src/ecs/components/Throwable.js","webpack://sleepy/./src/data/Abilities.js","webpack://sleepy/./src/data/abilities/ArmorAbility.js","webpack://sleepy/./src/data/abilities/Ability.js","webpack://sleepy/./src/data/abilities/SpeedAbility.js","webpack://sleepy/./src/data/abilities/ThrowingAbility.js","webpack://sleepy/./src/data/Stats.js","webpack://sleepy/./src/data/abilities/DodgeAbility.js","webpack://sleepy/./src/data/Attack.js","webpack://sleepy/./src/data/DamageTypes.js","webpack://sleepy/./src/enums/CursorSegments.js","webpack://sleepy/./src/utils/BresenhamLine.js","webpack://sleepy/./src/ecs/components/Body.js","webpack://sleepy/./src/ecs/components/IsVisible.js","webpack://sleepy/./src/ecs/components/FragileGlass.js","webpack://sleepy/./src/enums/ConsoleEvents.js","webpack://sleepy/./src/ecs/components/Brain.js","webpack://sleepy/./src/ecs/components/Goal.js","webpack://sleepy/./src/ai/GoalEvaluator.js","webpack://sleepy/./src/ecs/components/Moniker.js","webpack://sleepy/./src/ecs/components/Logger.js","webpack://sleepy/./src/ecs/components/Position.js","webpack://sleepy/./src/ecs/components/Glyph.js","webpack://sleepy/./src/ecs/components/Legs.js","webpack://sleepy/./src/ecs/components/MoveCommand.js","webpack://sleepy/./src/enums/Directions.js","webpack://sleepy/./src/ecs/components/MeleeCommand.js","webpack://sleepy/./src/ecs/components/IsPlayer.js","webpack://sleepy/./src/ecs/components/Wandering.js","webpack://sleepy/./src/ecs/components/Explorable.js","webpack://sleepy/./src/ecs/components/Explored.js","webpack://sleepy/./src/ecs/components/Health.js","webpack://sleepy/./src/ecs/components/IsDead.js","webpack://sleepy/./src/ecs/components/FactionMember.js","webpack://sleepy/./src/enums/Factions.js","webpack://sleepy/./src/data/Faction.js","webpack://sleepy/./src/ecs/components/Eyes.js","webpack://sleepy/./src/ecs/components/Particle.js","webpack://sleepy/./src/ecs/components/ParticleEmitter.js","webpack://sleepy/./src/ecs/components/LootDropper.js","webpack://sleepy/./src/data/tables/LootSpawn.js","webpack://sleepy/./src/utils/WeightedTable.js","webpack://sleepy/./src/data/tables/loot/LootTableGoblin.js","webpack://sleepy/./src/data/tables/loot/LootTableForest.js","webpack://sleepy/./src/ecs/components/IsEquipped.js","webpack://sleepy/./src/ecs/components/Equipment.js","webpack://sleepy/./src/data/EquipmentSlotType.js","webpack://sleepy/./src/ecs/components/EquipmentSlot.js","webpack://sleepy/./src/data/WeaponTypes.js","webpack://sleepy/./src/data/WeaponFamilies.js","webpack://sleepy/./src/data/weapons/WpnTypeBattleAxe.js","webpack://sleepy/./src/data/weapons/WeaponType.js","webpack://sleepy/./src/data/weapons/WpnTypeGreatsword.js","webpack://sleepy/./src/data/weapons/WpnTypeShortsword.js","webpack://sleepy/./src/data/weapons/WpnTypeUnarmed.js","webpack://sleepy/./src/ecs/components/Stats.js","webpack://sleepy/./node_modules/rot-js/lib/util.js","webpack://sleepy/./src/ecs/components/Race.js","webpack://sleepy/./src/data/Races.js","webpack://sleepy/./src/data/RaceData.js","webpack://sleepy/./src/ecs/components/Weapon.js","webpack://sleepy/./src/ecs/components/Status.js","webpack://sleepy/./src/data/Statuses.js","webpack://sleepy/./src/data/statuses/StatusBleeding.js","webpack://sleepy/./src/enums/StatusTypes.js","webpack://sleepy/./src/data/statuses/Status.js","webpack://sleepy/./src/systems/System.js","webpack://sleepy/./src/systems/RenderSystem.js","webpack://sleepy/./src/systems/MovementSystem.js","webpack://sleepy/./src/systems/UISystem.js","webpack://sleepy/./src/core/input/MouseManager.js","webpack://sleepy/./src/core/input/CommandManager.js","webpack://sleepy/./src/core/input/InputDomainType.js","webpack://sleepy/./src/core/input/commands.js","webpack://sleepy/./src/core/input/InputCommand.js","webpack://sleepy/./src/core/input/InputCommandType.js","webpack://sleepy/./src/core/input/KeyCodes.js","webpack://sleepy/./src/core/screens/ScreenManager.js","webpack://sleepy/./src/core/screens/screens/AdventureScreen.js","webpack://sleepy/./src/core/screens/screens/Screen.js","webpack://sleepy/./src/core/screens/screens/MainMenuScreen.js","webpack://sleepy/./src/core/screens/screens/DeathScreen.js","webpack://sleepy/./src/core/screens/screens/InventoryScreen.js","webpack://sleepy/./src/utils/SelectableList.js","webpack://sleepy/./src/core/screens/screens/InteractModalScreen.js","webpack://sleepy/./src/core/screens/screens/CursorScreen.js","webpack://sleepy/./src/core/screens/screens/LoadSectorScreen.js","webpack://sleepy/./src/core/screens/screens/EquipmentScreen.js","webpack://sleepy/./src/core/screens/screens/ListSelectionScreen.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/simple.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://sleepy/./node_modules/rot-js/lib/eventqueue.js","webpack://sleepy/./node_modules/rot-js/lib/MinHeap.js","webpack://sleepy/./src/core/screens/screens/CharacterScreen.js","webpack://sleepy/./src/core/PlayerManager.js","webpack://sleepy/./src/ecs/index.js","webpack://sleepy/./src/core/GameStateManager.js","webpack://sleepy/./src/core/ClockManager.js","webpack://sleepy/./src/systems/CursorSystem.js","webpack://sleepy/./src/core/MapManager.js","webpack://sleepy/./src/utils/FastMap.js","webpack://sleepy/./src/systems/FOVSystem.js","webpack://sleepy/./node_modules/rot-js/lib/index.js","webpack://sleepy/./node_modules/rot-js/lib/rng.js","webpack://sleepy/./node_modules/rot-js/lib/display/display.js","webpack://sleepy/./node_modules/rot-js/lib/display/hex.js","webpack://sleepy/./node_modules/rot-js/lib/display/canvas.js","webpack://sleepy/./node_modules/rot-js/lib/display/backend.js","webpack://sleepy/./node_modules/rot-js/lib/display/rect.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile.js","webpack://sleepy/./node_modules/rot-js/lib/display/tile-gl.js","webpack://sleepy/./node_modules/rot-js/lib/color.js","webpack://sleepy/./node_modules/rot-js/lib/display/term.js","webpack://sleepy/./node_modules/rot-js/lib/text.js","webpack://sleepy/./node_modules/rot-js/lib/constants.js","webpack://sleepy/./node_modules/rot-js/lib/stringgenerator.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/index.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/speed.js","webpack://sleepy/./node_modules/rot-js/lib/scheduler/action.js","webpack://sleepy/./node_modules/rot-js/lib/fov/index.js","webpack://sleepy/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/fov.js","webpack://sleepy/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://sleepy/./node_modules/rot-js/lib/map/index.js","webpack://sleepy/./node_modules/rot-js/lib/map/arena.js","webpack://sleepy/./node_modules/rot-js/lib/map/map.js","webpack://sleepy/./node_modules/rot-js/lib/map/uniform.js","webpack://sleepy/./node_modules/rot-js/lib/map/dungeon.js","webpack://sleepy/./node_modules/rot-js/lib/map/features.js","webpack://sleepy/./node_modules/rot-js/lib/map/cellular.js","webpack://sleepy/./node_modules/rot-js/lib/map/digger.js","webpack://sleepy/./node_modules/rot-js/lib/map/ellermaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/iceymaze.js","webpack://sleepy/./node_modules/rot-js/lib/map/rogue.js","webpack://sleepy/./node_modules/rot-js/lib/noise/index.js","webpack://sleepy/./node_modules/rot-js/lib/noise/simplex.js","webpack://sleepy/./node_modules/rot-js/lib/noise/noise.js","webpack://sleepy/./node_modules/rot-js/lib/path/index.js","webpack://sleepy/./node_modules/rot-js/lib/path/dijkstra.js","webpack://sleepy/./node_modules/rot-js/lib/path/path.js","webpack://sleepy/./node_modules/rot-js/lib/path/astar.js","webpack://sleepy/./node_modules/rot-js/lib/engine.js","webpack://sleepy/./node_modules/rot-js/lib/lighting.js","webpack://sleepy/./src/systems/MeleeSystem.js","webpack://sleepy/./src/systems/DeathSystem.js","webpack://sleepy/./src/systems/ParticleSystem.js","webpack://sleepy/./src/core/FactionManager.js","webpack://sleepy/./src/core/CameraManager.js","webpack://sleepy/./src/systems/FPSMonitoringSystem.js","webpack://sleepy/./src/core/WorldManager.js","webpack://sleepy/./src/data/WorldData.js","webpack://sleepy/./src/data/Sector.js","webpack://sleepy/./src/level/generators/generators.js","webpack://sleepy/./src/level/generators/ForestCabinsGenerator.js","webpack://sleepy/./src/level/LevelConnections.js","webpack://sleepy/./src/level/TileData.js","webpack://sleepy/./src/level/themes/TileTheme.js","webpack://sleepy/./src/level/themes/CastleTheme.js","webpack://sleepy/./src/level/themes/TileThemePopulator.js","webpack://sleepy/./src/level/themes/ForestTheme.js","webpack://sleepy/./src/level/themes/CabinTheme.js","webpack://sleepy/./src/level/schemes/UniformScheme.js","webpack://sleepy/./src/level/TileContainer.js","webpack://sleepy/./src/level/RoomData.js","webpack://sleepy/./node_modules/nanoid/index.prod.js","webpack://sleepy/./node_modules/nanoid/url-alphabet/index.js","webpack://sleepy/./src/level/TileScheme.js","webpack://sleepy/./src/level/generators/SectorGenerator.js","webpack://sleepy/./src/level/generators/ForestGenerator.js","webpack://sleepy/./src/level/generators/ForestStrongholdGenerator.js","webpack://sleepy/./src/level/schemes/DenseCastleScheme.js","webpack://sleepy/./src/level/generators/ForestTownGenerator.js","webpack://sleepy/./src/level/schemes/ScatteredScheme.js","webpack://sleepy/./src/level/generators/GeneratorUtils.js","webpack://sleepy/./src/core/ConsoleManager.js","webpack://sleepy/./src/systems/DestroySystem.js","webpack://sleepy/./src/core/MusicManager.js","webpack://sleepy/./src/systems/StatusSystem.js","webpack://sleepy/webpack/bootstrap","webpack://sleepy/webpack/runtime/compat get default export","webpack://sleepy/webpack/runtime/define property getters","webpack://sleepy/webpack/runtime/global","webpack://sleepy/webpack/runtime/hasOwnProperty shorthand","webpack://sleepy/webpack/runtime/make namespace object","webpack://sleepy/webpack/startup"],"names":["leafPrototypes","getProto","loadImages","then","require","window","game","ecs","start","loadImage","img","Promise","resolve","reject","complete","addEventListener","error","imgs","Array","from","document","querySelectorAll","all","map","HowlerGlobal","this","init","prototype","self","Howler","_counter","_html5AudioPool","html5PoolSize","_codecs","_howls","_muted","_volume","_canPlayEvent","_navigator","navigator","masterGain","noAudio","usingWebAudio","autoSuspend","ctx","autoUnlock","_setup","volume","vol","parseFloat","setupAudioContext","gain","setValueAtTime","currentTime","i","length","_webAudio","ids","_getSoundIds","j","sound","_soundById","_node","mute","muted","stop","unload","close","codecs","ext","replace","state","_autoSuspend","Audio","oncanplaythrough","e","_setupCodecs","audioTest","err","canPlayType","mpegTest","checkOpera","userAgent","match","isOldOpera","parseInt","split","mp3","mpeg","opus","ogg","oga","wav","aac","caf","m4a","m4b","mp4","weba","webm","dolby","flac","_unlockAudio","_audioUnlocked","_mobileUnloaded","sampleRate","_scratchBuffer","createBuffer","unlock","audioNode","_unlocked","_releaseHtml5Audio","load","_autoResume","source","createBufferSource","buffer","connect","destination","noteOn","resume","onended","disconnect","removeEventListener","_emit","_obtainHtml5Audio","pop","testPlay","play","catch","console","warn","audio","push","suspend","_sounds","_paused","_suspendTimer","clearTimeout","setTimeout","handleSuspension","_resumeAfterSuspend","Howl","o","src","_autoplay","autoplay","_format","format","_html5","html5","_loop","loop","_pool","pool","_preload","preload","_rate","rate","_sprite","sprite","_src","undefined","_xhr","method","xhr","headers","withCredentials","_duration","_state","_endTimers","_queue","_playLock","_onend","onend","fn","_onfade","onfade","_onload","onload","_onloaderror","onloaderror","_onplayerror","onplayerror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_onmute","onmute","_onvolume","onvolume","_onrate","onrate","_onseek","onseek","_onunlock","onunlock","_onresume","event","action","url","str","exec","toLowerCase","location","protocol","slice","Sound","loadBuffer","internal","id","num","_ended","_id","_inactiveSound","soundId","_loadQueue","seek","Math","max","_seek","duration","timeout","abs","setParams","_start","_stop","node","playWebAudio","_refreshBuffer","_playStart","bufferSource","noteGrainOn","Infinity","bind","once","_clearTimer","playHtml5","playbackRate","paused","loadedNoReadyState","ejecta","readyState","isCocoonJS","listener","pause","_rateSeek","_stopFade","noteOff","_cleanBuffer","isNaN","arguments","_clearSound","_interval","args","index","indexOf","apply","fade","to","len","min","end","linearRampToValueAtTime","_startFadeInterval","isGroup","diff","steps","stepLen","lastTick","Date","now","_fadeTo","setInterval","tick","round","clearInterval","cancelScheduledValues","loopStart","loopEnd","playing","realTime","rateSeek","seekAndEmit","emitSeek","sounds","_errorFn","_loadFn","_endFn","splice","remCache","cache","on","events","off","isId","keys","Object","isArray","msg","call","task","shift","ended","_drain","reset","limit","cnt","_panner","isIOS","vendor","test","howl","_parent","parent","create","createGain","createGainNode","_errorListener","_loadListener","_endListener","code","ceil","__default","loadSound","data","atob","dataView","Uint8Array","charCodeAt","decodeAudioData","XMLHttpRequest","open","responseType","forEach","key","setRequestHeader","status","response","onerror","safeXhrSend","send","arraybuffer","success","AudioContext","webkitAudioContext","iOS","platform","appVersion","version","safari","exports","global","_super","_pos","_orientation","stereo","pan","pos","x","y","z","positionX","setTargetAtTime","positionY","positionZ","setPosition","orientation","xUp","yUp","zUp","or","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","_stereo","_pannerAttr","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","refDistance","rolloffFactor","_onstereo","onstereo","_onpos","onpos","_onorientation","onorientation","pannerType","createStereoPanner","setupPanner","orientationX","orientationY","orientationZ","pannerAttr","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_distanceModel","_maxDistance","_refDistance","_rolloffFactor","_panningModel","pa","panner","type","createPanner","Game","engine","constructor","ECS","music","MusicManager","mouse","MouseManager","clock","ClockManager","renderer","Renderer","GameStateManager","world","WorldManager","MapManager","camera","CameraManager","factions","FactionManager","player","PlayerManager","commands","CommandManager","screens","ScreenManager","input","InputController","ConsoleManager","actionSystem","ActionSystem","movementSystem","MovementSystem","meleeSystem","MeleeSystem","deathSystem","DeathSystem","statusSystem","StatusSystem","FOVSystem","renderSystem","RenderSystem","UISystem","cursor","CursorSystem","particles","ParticleSystem","fps","FPSMonitoringSystem","destroySystem","DestroySystem","boundLoop","requestAnimationFrame","updateAdventureSystems","dt","update","render","t","Manager","display","canvas","super","spritesheets","spritesheet","name","Display","width","height","tileWidth","tileHeight","body","appendChild","resizeDisplay","zoom","setSize","draw","char","fg1","fg2","bg","tiles","getSprite","computeTextWidth","text","drawText","font","charAt","drawTextCenter","clear","clearArea","pxToTile","xPx","yPx","trunc","onNewGame","getSaveGameData","cells","Grid","suppressOOBWarn","createElement","getContext","alpha","globalCompositeOperation","textBaseline","widthPx","heightPx","style","cssText","clearAndResize","set","colorize","fillStyle","clearColor","fillRect","offsetX","cellX","cellY","filter","c","cell","pixelX","pixelY","drawImage","_width","_height","defaultValueGenerator","idx","coord","size","value","isOutOfBounds","get","getNeighbors","tileImage","getElementById","fontImage","SpriteSheet","image","spriteWidth","spriteCountX","spriteHeight","spriteCountY","cp437","row","glyph","Sprite","isBlack","r","g","b","sheet","sourceX","sourceY","primaryCss","secondaryCss","primary","parseColor","secondary","_cache","hasOwnProperty","pixels","getImageData","cvs","putImageData","colorStr","parsed","colorParse","values","cstr","m","space","parts","names","base","isRGB","trim","baseHues","join","red","R","green","G","blue","B","h","hue","H","s","saturation","S","l","lightness","L","brightness","a","opacity","orange","yellow","purple","module","onKeydown","container","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","evt","InputKeyboardEvent","keyCode","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","preventDefault","onInputEvent","offsetY","InputMouseEvent","button","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","tileX","tileY","System","createQuery","Actor","none","IsDestroying","IsDead","entities","sorted","sort","actor","energy","entity","hasEnergy","incrementTick","addEnergy","tickDelta","isPlayer","fireEvent","Component","onEnergyConsumed","reduceEnergy","onTick","camelCase","options","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","_","p1","camelCache","camelString","camelcaseSlow","pascalCache","Property","component","enumerable","v","serialize","onDestroyed","cleanupReference","SimpleProperty","EntityProperty","getEntity","EntityArrayProperty","Proxy","target","prop","receiver","Reflect","old","deleteProperty","proxy","ref","PropertyStrategy","Boolean","ob","properties","_onAttached","_onDetached","_onDestroyed","onAttached","onDetached","remove","destroy","clone","createComponent","_onEvent","handlerName","onEvent","_defaultPropertyValue","propertyName","_defineProxies","initialProperties","initialValue","property","PropertyFactory","ComponentRegistry","Map","register","getAccessor","typeOrClassOrComponent","_getType","_definitions","typeOrClass","definition","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","PrefabComponent","componentDef","overwrite","applyToEntity","initialProps","props","merge","Prefab","addComponent","prefabComponent","arrComps","accessor","components","initialCompProps","PrefabRegistry","deserialize","registered","prefab","inherit","comps","componentData","def","_ecs","nameOrClassOrPrefab","_prefabs","nameOrClass","EntityEvent","is","handle","prevent","Entity","has","hasType","nestedComponent","add","attach","configurable","allowMultiple","owns","isComponent","instance","o2","k2","v2","EntityRegistry","_entities","createOrGetById","onEntityDestroyed","cleanupRefs","refs","_refs","addRef","entityId","Set","removeRef","json","list","entityData","deserializeEntity","pascalString","d","Query","any","isMatch","hasAny","_filter","some","hasAll","every","hasNone","onEntityAdded","onEntityRemoved","candidate","isTracking","cb","_onEntityCreated","_onComponentAdded","_onComponentRemoved","_onEntityDestroyed","bustCache","QueryRegistry","filters","query","onComponentAdded","onComponentRemoved","onEntityCreated","Engine","nanoid","generateId","createEntity","createPrefab","prefabs","destroyEntity","registerPrefab","registerComponent","queries","pass","LiquidContainer","isEmpty","liquids","content","maxVolume","overridePrimary","liquid","overrideSecondary","_checkDestroyOnEmpty","destroyOnEmpty","pour","quantity","isPourable","spawn","SPWN_POOL_LIQUID","onTryPour","interactor","position","getPos","onTryDrink","drinkLiquid","onGetInteractions","interactions","LIQUID_BLOOD","SPWN_VIAL_HONEY","SPWN_VIAL_BLOOD","SPWN_VIAL_WATER","SPWN_STONE","SPWN_GOBLIN_GRUNT","SPWN_HUMAN_WANDERER","SPWN_PINE_TREE","SPWN_WOOD_WALL","SPWN_WOOD_DOOR","SPWN_WOOD_CHEST","SPWN_STONE_WALL","SPWN_DIRT_PATH","SPWN_CORPSE","SPWN_GLASS_SHARD","SPWN_AMULET","SPWN_CLOTH_ARMOR","SPWN_LEATHER_BOOTS","SPWN_SHORTSWORD","SPWN_GREATSWORD","SPWN_BATTLE_AXE","SPWN_HATCHET","simplePrefab","prefabName","spawnables","VialHoney","VialBlood","VialWater","GoblinGrunt","HumanWanderer","PineTree","PoolLiquid","setPos","createSpawnable","vial","liquidContainer","LIQUID_HONEY","LIQUID_WATER","LIQUID_OIL","colorDesc","onDrink","log","direction","glyphs","fg1s","speed","lifetime","goblin","brain","pushGoal","BoredGoalType","sword","equipmentSlot","handRight","equip","GoalType","goal","targets","killGoal","KillSomethingGoalType","SUCCESS","boredomGoal","FAILURE","originalIntent","INVALID","isDead","isDestroyed","handled","targetPos","result","computeAStar","cost","blocker","diagonalDistance","segment","path","delta","moveGoal","MoveGoalType","defaultSettings","allowDiagonals","settings","heuristic","manhattanDistance","PriorityQueue","cameFrom","costSoFar","startKey","goalKey","costs","put","currentKey","current","neighbors","nextKey","graphCost","newCost","priority","previous","previousKey","unshift","dx","dy","peek","item","createItem","EatFoodGoalType","food","pickRandom","arr","floor","random","randomInt","randomBool","wanderer","Door","isOpen","chOpen","chClosed","openDoor","ch","shadowcaster","closeDoor","Blocker","Shadowcaster","onTryCloseDoor","onTryOpenDoor","onProjectileHit","stopProjectile","deflectProjectile","isAttached","Armor","onQueryEquippedAbilityModifierArmor","modifiers","moniker","mod","Loot","isInventoried","IsInventoried","Inventory","inventory","hasLoot","onEquipped","addLoot","onTryPickUp","onTryTake","owner","removeLoot","onQueryOwnership","getStackable","stackableIdentifier","find","Stackable","stackable","identifier","loot","existing","addOther","dropLoot","dropper","onTryOpen","SCREEN_INVENTORY","accessible","SCREEN_MAIN_MENU","SCREEN_ADVENTURE","SCREEN_DEATH","SCREEN_INTERACT_MODAL","SCREEN_CURSOR","SCREEN_LOAD_SECTOR","SCREEN_EQUIPMENT","SCREEN_LIST_SELECT","SCREEN_CHARACTER","isOwnedBy","onTryDrop","onThrown","increment","amount","other","STACKABLE_DEFAULT","STACKABLE_STONE","STACKABLE_GLASS_SHARD","Throwable","throw","trajectory","initiator","stopped","deflected","hit","projectile","getStat","STAT_STRENGTH","damage","die","modifier","attack","Attack","attacker","defender","weaponName","damageType","ignoreDodge","onTryThrow","range","getAbilityValue","ABILITY_THROWING","drawLine","drawTags","onResult","bresenhamLine","onCancel","getSegmentTypes","line","lineValid","CURSOR_SEGMENT_NONE","IsVisible","Body","CURSOR_SEGMENT_INTEREST","CURSOR_SEGMENT_UNKNOWN","CURSOR_SEGMENT_INVALID","interestIdx","blockerIdx","DMG_TYPE_BLUDGEONING","ABILITY_SPEED","ABILITY_ARMOR","ABILITY_DODGE","lookup","ArmorAbility","SpeedAbility","ThrowingAbility","DodgeAbility","getAbility","getAbilityName","compute","getArmorBlockPercent","ability","unscaled","Ability","getModifierSum","baseStat","getModifiers","reduce","sum","cur","STAT_ATHLETICISM","STAT_FINESSE","STAT_TRICKERY","getStatName","stat","stats","getDodgePercent","DMG_TYPE_PIERCING","DMG_TYPE_SLASHING","verb","getDmgTypeName","getDmgTypeVerb","colorMap","glyphMap","getCursorSegmentTypeColor","getCursorSegmentTypeGlyph","x0","y0","x1","y1","sx","sy","e2","bresenhamLineExclusive","onDeath","corpse","corpseSpawnable","FragileGlass","shatter","CONSOLE_EVENT_SHATTER","onCollideGround","onCollide","CONSOLE_EVENT_DAMAGE","CONSOLE_EVENT_DEAD","CONSOLE_EVENT_MISS","CONSOLE_EVENT_BLOCK","getMonikerSubject","Moniker","simpleDisplay","getMonikerIndirectObject","IsPlayer","mapping","message","dodgePrcnt","shouldAppear","dmgVerb","dmg","blocked","blockText","getMessage","Brain","goals","onTakeAction","peekGoal","isFinished","popGoal","currentGoal","takeAction","removeGoal","goalsToDestroy","isSelf","isSiblingGoal","Goal","GoalEvaluator","goalTypeMap","GoalTypes","goalType","getGoalType","disp","door","Logger","onLog","Position","getPosition","equals","Glyph","col","primaryColorOverride","secondaryColorOverride","Legs","onTryMove","targetX","targetY","targetTileEntities","nonHostile","factionMember","MoveCommand","DIR_Z","directions","shortName","fullName","adjacent","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_E","DIR_SW","DIR_S","DIR_SE","getAdjacentDeltas","directionFromDelta","dir","MeleeCommand","Wandering","onBoredom","Directions","Explorable","Explored","Health","applyDamage","onAttacked","dodge","isDodged","isKilled","armor","armorPrcnt","onHeal","FactionMember","getFactionByName","FACTION_PLAYER","FACTION_VILLAGER","FACTION_GOBLIN","FACTION_NATURE","Faction","villager","nature","Eyes","canSee","onTryDetectHostiles","Particle","age","frame","chunks","percent","fg2s","bgs","startX","startY","ParticleEmitter","createParticle","particle","particleData","count","LootDropper","spawnLoot","tables","TBL_LOOT_GOBLIN","LootTableGoblin","TBL_LOOT_FOREST","LootTableForest","getTable","tableKey","pickLoot","tableKeys","WeightedTable","pick","spawnable","rows","weight","currentW","chance","maxWeight","table","goblins","forest","IsEquipped","slotKey","onDropped","slot","unequip","Equipment","onTryEquip","slots","slotTypes","includes","slotType","header","onRenderRow","isSelected","onSelect","onTryUnequip","isEquipped","EQ_SLOT_BODY","EQ_SLOT_NECK","EQ_SLOT_FEET","EQ_SLOT_ARM","EQ_SLOT_HAND","EquipmentSlot","equipment","onTryMelee","isPrimary","selfPos","isAdjacent","getWeaponType","WPN_TYPE_UNARMED","onQueryAbilityModifierArmor","isOffhand","WPN_TYPE_WAR_HAMMER","WPN_TYPE_SLEDGE_HAMMER","WPN_TYPE_CLUB","WPN_TYPE_MACE","WPN_TYPE_HEAVY_AXE","WPN_TYPE_BATTLE_AXE","WPN_TYPE_GREATSWORD","WPN_TYPE_SHORTSWORD","WPN_TYPE_DAGGER","WPN_TYPE_STAFF","WPN_TYPE_HALBERD","WPN_TYPE_JAVELIN","WpnTypeUnarmed","family","WPN_FAMILY_HAMMER","WPN_FAMILY_AXE","WpnTypeBattleAxe","WpnTypeGreatsword","WpnTypeShortsword","WPN_FAMILY_BLADE","WPN_FAMILY_POLEARM","getWeaponTypeName","getWeaponTypeFamily","getWeaponTypeDmgType","WPN_FAMILY_ARCHERY","WPN_FAMILY_UNARMED","getWeaponFamilyName","WeaponType","_createAttack","weapon","roll","attacks","secondAttack","weaponDamageText","user","getShortDescription","fam","getAttacks","_getNeighborAttacks","attackerPos","defenderPos","deltaX","deltaY","flat","hostile","_tryAttackDefender","Stats","_sumMods","getStatModifiers","getStatModifierSum","mods","capitalize","modSum","strength","finesse","athleticism","trickery","baseStrength","baseFinesse","baseAthleticism","baseTrickery","n","clamp","toUpperCase","substring","template","group1","group2","obj","replaced","first","Race","getRaceData","modStrength","modFinesse","modAthleticism","modTrickery","onQueryStatModifierStrength","strengthMod","onQueryStatModifierFinesse","finesseMod","onQueryStatModifierAthleticism","athleticismMod","onQueryStatModifierTrickery","trickeryMod","onQueryAbilityModifierSpeed","RACE_HUMAN","RACE_GOBLIN","RaceData","Weapon","weaponType","onTryUseMelee","Status","remainingLifetime","isCompleted","STATUS_BLEEDING","potency","StatusBleeding","getStatus","STATUS_TYPE_CONDITION","getDmgPerTurn","ticks","health","explored","renderable","isInView","screen","worldToScreen","renderables","background","moveCommand","turn","subTurn","toFixed","padEnd","hp","INPUT_DOMAIN_DEFAULT","cmd","registerCommand","disable","enable","getCommandForInputEvent","onInputCommand","pushDomain","domain","popDomain","lastIndexOf","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","INPUT_DOMAIN_ADVENTURE","INPUT_DOMAIN_LOOK","INPUT_DOMAIN_LIST","isKeyboard","InputCommand","INPUT_CMD_CONFIRM","KEY_ENTER","KEY_SPACE","INPUT_CMD_CANCEL","KEY_ESCAPE","INPUT_CMD_SAVE","KEY_S","INPUT_CMD_LOAD","KEY_L","INPUT_CMD_NEW_GAME","KEY_N","INPUT_CMD_WAIT","INPUT_CMD_MOVE_NW","KEY_Q","INPUT_CMD_MOVE_N","KEY_W","KEY_UP","INPUT_CMD_MOVE_NE","KEY_E","INPUT_CMD_MOVE_W","KEY_A","KEY_LEFT","INPUT_CMD_MOVE_E","KEY_D","KEY_RIGHT","INPUT_CMD_MOVE_SW","KEY_Z","INPUT_CMD_MOVE_S","KEY_X","KEY_DOWN","INPUT_CMD_MOVE_SE","KEY_C","INPUT_CMD_SELECT_NW","INPUT_CMD_SELECT_N","INPUT_CMD_SELECT_NE","INPUT_CMD_SELECT_W","INPUT_CMD_SELECT_E","INPUT_CMD_SELECT_SW","INPUT_CMD_SELECT_S","INPUT_CMD_SELECT_SE","INPUT_CMD_INTERACT","INPUT_CMD_LOOK","INPUT_CMD_PICK_UP","KEY_G","KEY_J","INPUT_CMD_INVENTORY","KEY_I","INPUT_CMD_EQUIPMENT","KEY_P","INPUT_CMD_CHARACTER","KEY_Y","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_H","KEY_K","KEY_M","KEY_O","KEY_R","KEY_T","KEY_U","KEY_V","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","MainMenuScreen","AdventureScreen","DeathScreen","InventoryScreen","InteractModalScreen","CursorScreen","LoadSectorScreen","EquipmentScreen","ListSelectionScreen","CharacterScreen","setScreen","screenType","onLeave","onEnter","screenCtx","replaceScreen","pushScreen","popScreen","onUpdate","Screen","computeFOV","setFocus","onDirectionInput","directionDelta","playerPosition","targetPosition","getEntitiesAt","hostileEntities","areEntitiesHostile","melee","doorEntity","move","onPickUpCommand","lootable","onInteract","items","onGetRowName","interactable","onInteractDirection","saveGame","loadGame","wait","isStarted","onConfirm","newGame","gameOver","SelectableList","setItems","selectItem","selected","up","down","ypos","textLen","_items","_idx","refreshList","isBack","interaction","left","top","listPadding","xpos","weaponDmg","NOOP","cursorColor","types","color","getEntities","faction","relation","getEntityRelation","getDisplay","drawCursor","prevousSector","nextSector","renderLoadingText","sectorId","entry","loadGameData","onSectorLoaded","prevText","nextText","selectSlot","defaultRowRender","cancel","Simple","Scheduler","repeat","_current","_repeat","EventQueue","getTime","getTimeOf","getEventTime","_time","_events","MinHeap","time","heap","timestamp","lessThan","loc","updateUp","updateDown","last","parentNode","leftChildNode","rightChildNode","existNode","swap","minNode","numbers","validnumbers","minimal","leftChild","rightChild","debugPrint","healthMax","pad","modDir","getSetupData","serialized","setup","teardown","isTurn","meleeCommand","turns","destroyEntities","cloneEntity","initiateTeardown","initiateSetup","prompt","deleteFile","filename","localStorage","setItem","JSON","stringify","file","startsWith","removeItem","saveSectorPositionData","positionData","saveSectorEntityData","loadSectorEntityData","getItem","parse","loadSectorPositionData","loadSavefileData","toggle","isEnabled","FastMap","getRandomEmptyPosition","sector","x2","y2","getEntitiesInRect","getEntitiesInRange","diameter","getNeighborEntities","isOutOfbounds","onPlayerOutOfBounds","enterSector","northSector","southSector","eastSector","westSector","_data","_idHash","entries","delete","fov","FOV","isSquareVisible","setVisible","isVisible","visibility","Util","util","Color","Text","FRAC","RNG","_seed","_s0","_s1","_s2","_c","getSeed","setSeed","seed","getUniform","getUniformInt","lowerBound","upperBound","getNormal","mean","stddev","u","sqrt","getPercentage","shuffle","getWeightedValue","total","part","getState","setState","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","fontSize","spacing","border","forceSquareRatio","fontFamily","fontStyle","fg","tileMap","tileSet","tileColorize","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","getOptions","getContainer","computeSize","availWidth","availHeight","computeFontSize","computeTileSize","eventToPosition","touches","clientX","clientY","maxWidth","cx","cy","lines","tokens","token","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","cch","_draw","clearBefore","Canvas","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","_fill","chars","concat","fillText","hexSizeWidth","hexSizeHeight","hexSize","oldFont","measureText","ratio","_normalizedEventToPosition","nodeSize","beginPath","moveTo","lineTo","fill","_updateSize","opts","charWidth","xprop","yprop","Backend","textAlign","rect","getBoundingClientRect","_canvasCache","_drawWithCache","_drawNoCache","hash","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","tile","context","_uniforms","_gl","_initWebGL","alert","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","Float32Array","buf","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","colorCache","Number","$","fromString","cached","CACHE","color1","add_","multiply","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","hue2rgb","q","toRGB","clamped","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","avail","process","stdout","write","positionToAnsi","newColor","colorToAnsi","columns","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","lineLength","lastTokenWithSpace","breakInsideToken","nextIndex","breakIndex","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","generate","_sample","_join","observe","_split","subcontext","_observeEvent","getStats","priorCount","dataCount","eventCount","_backoff","available","Speed","Action","getSpeed","_defaultDuration","setDuration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","callback","_lightPasses","A","blocks","DATA","_getCircle","angle","_visibleCoords","v1","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","compute180","previousOctant","nextPreviousOctant","nextOctant","compute90","octant","_castVisibility","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_fillMap","Dungeon","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","dirIndex1","dirIndex2","center1","center2","diffX","diffY","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","getRooms","getCorridors","Feature","doorX","doorY","_x1","_y1","_x2","_y2","_doors","getDoors","addDoors","isWallCallback","right","bottom","debug","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","corridorLength","nx","ny","ok","firstCornerBad","secondCornerBad","createPriorityWalls","priorityWallCallback","born","survive","_dirs","probability","newMap","widthStep","widthStart","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","local","_tunnelToConnected6","_tunnelToConnected","k","pp","connectedKeys","notConnectedKeys","_getClosest","point","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","featureName","feature","createRandomAt","deltas","addToList","removeFromList","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","_getWallPosition","aRoom","aDirection","rx","ry","_drawCorridor","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","moves","xAbs","yAbs","firstHalf","secondHalf","connection","otherWall","Simplex","F2","G2","Noise","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","t0","grad","t2","Dijkstra","AStar","Path","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","lock","act","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","_lights","_reflectivityCache","_fovCache","setFOV","_fov","setLight","clearLights","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","_updateFOV","fovKey","formFactor","key1","vis","createEmitter","emitter","particleEmitter","isExpired","targetCount","setRelation","getFactionById","isHostile","factionA","factionB","_relationKey","idA","idB","relations","getRelation","entityA","entityB","memberA","memberB","onWindowResize","clampX","innerWidth","renderedTileWidth","clampY","innerHeight","renderedTileHeight","topLeftWorldX","padding","_focusX","topLeftWorldY","_focusY","setZoom","setPadding","screenToWorld","worldX","worldY","fpsElement","getElementsByClassName","frames","frameCount","innerText","getSector","WorldData","getStartingSector","exploredSectorIds","Sector","getSectorByCoord","getExits","exits","connectionsNorth","connectionsWest","generator","getGenerator","populate","ForestGenerator","ForestStrongholdGenerator","ForestCabinsGenerator","ForestTownGenerator","SectorGenerator","UniformScheme","theme","TILE_THEME_FOREST","mediumRooms","TILE_THEME_CABIN","includeWalls","distancedRooms","getUnassignedTiles","digExits","digExit","exit","closest","closestDistance","isType","TILE_TYPE_FLOOR","distance","getClosestTile","setTileType","TILE_TYPE_WALL","isOnEdge","tileTypeMatches","getRoomForTile","addExit","TILE_TYPE_OUT_OF_BOUNDS","TileData","TILE_THEME_CASTLE","createTileData","ForestTheme","CastleTheme","CabinTheme","getThemePopulator","TileThemePopulator","populateTile","trySpawn","tileArr","attempts","getRandomEmptyTile","interiorTiles","chest","TileScheme","TileContainer","MapGenerator","digPercentage","createRoom","defaultType","getTile","setTileTheme","getTileType","addRoom","RoomData","combineOther","cloneTo","setTheme","relativeExits","endWidth","endHeight","borders","interior","addRelativeExit","containsPoint","intersects","c1","c2","c3","c4","bytes","crypto","getRandomValues","customRandom","alphabet","getRandom","mask","LN2","step","customAlphabet","byte","urlAlphabet","populateRoom","exitOffset","castle","DenseCastleScheme","curId","createNodeId","splitNodeVertical","cut","leftId","rightId","isLeaf","parentId","siblingId","splitNodeHorizontal","topId","bottomId","minRoomWidth","minRoomHeight","maxRoomWidth","maxRoomHeight","splitIgnoreChance","loopiness","nodes","graph","sibling","doorCandidates","hasSib","tryAddLoop","north","south","east","west","ScatteredScheme","edges","borderTiles","isTopLeftCorner","isBottomLeftCorner","isBottomRightCorner","isTopRightCorner","addBorder","doors","walkways","generatePath","doorA","doorB","attempt","maxAttempts","roomPadding","minCount","maxCount","minWidth","minHeight","maxHeight","createBox","overlaps","box","msgs","isDestroying","Track","intro","isPlaying","host","pathname","track","tracks","currentTrack","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","getter","__esModule","getPrototypeOf","__proto__","mode","ns","getOwnPropertyNames","defineProperty","globalThis","Function","toStringTag"],"mappings":"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","file":"main.b9cdf27f37b15f1884f7.js","sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => Object.getPrototypeOf(obj) : (obj) => obj.__proto__;\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(key => def[key] = () => value[key]);\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","import { loadImages } from './utils/ImageLoader';\nimport { Howl } from 'howler';\n\nloadImages().then(() => {\n    const { game } = require('./core/Game');\n\n    window.game = game;\n    window.ecs = game.ecs;\n\n    game.start();\n});\n","const loadImage = (img) =>\n    new Promise((resolve, reject) => {\n        if (img.complete) {\n            resolve();\n        }\n\n        img.addEventListener('load', () => {\n            resolve();\n        });\n\n        img.addEventListener('error', (error) => {\n            reject(error);\n        });\n    });\n\nexport const loadImages = () => {\n    const imgs = Array.from(document.querySelectorAll('img'));\n\n    return Promise.all(imgs.map(loadImage));\n};\n","/*!\n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var checkOpera = self._navigator && self._navigator.userAgent.match(/OPR\\/([0-6].)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        webm: !!audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, ''),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n\n          var listener = function() {\n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return self;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            self._emit('seek', id);\n\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.1\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Update the panner values or create a new panner if none exists.\n        var panner = sound._panner;\n        if (panner) {\n          panner.coneInnerAngle = pa.coneInnerAngle;\n          panner.coneOuterAngle = pa.coneOuterAngle;\n          panner.coneOuterGain = pa.coneOuterGain;\n          panner.distanceModel = pa.distanceModel;\n          panner.maxDistance = pa.maxDistance;\n          panner.refDistance = pa.refDistance;\n          panner.rolloffFactor = pa.rolloffFactor;\n          panner.panningModel = pa.panningModel;\n        } else {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import Renderer from './rendering/RenderManager';\nimport InputController from './input/InputController';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport ScreenManager from './screens/ScreenManager';\nimport PlayerManager from './PlayerManager';\nimport ECS from '../ecs';\nimport GameStateManager from './GameStateManager';\nimport ClockManager from './ClockManager';\nimport CursorSystem from '../systems/CursorSystem';\nimport MapManager from './MapManager';\nimport FOVSystem from '../systems/FOVSystem';\nimport MeleeSystem from '../systems/MeleeSystem';\nimport DeathSystem from '../systems/DeathSystem';\nimport ParticleSystem from '../systems/ParticleSystem';\nimport FactionManager from './FactionManager';\nimport CameraManager from './CameraManager';\nimport FPSMonitoringSystem from '../systems/FPSMonitoringSystem';\nimport { WorldManager } from './WorldManager';\nimport ConsoleManager from './ConsoleManager';\nimport DestroySystem from '../systems/DestroySystem';\nimport MusicManager from './MusicManager';\nimport StatusSystem from '../systems/StatusSystem';\n\nexport default class Game {\n    #lastUpdate;\n\n    get ecs() {\n        return this.engine.engine;\n    }\n\n    constructor() {\n        this.engine = new ECS(this);\n        this.music = new MusicManager(this);\n        this.mouse = new MouseManager(this);\n        this.clock = new ClockManager(this);\n        this.renderer = new Renderer(this);\n        this.state = new GameStateManager(this);\n        this.world = new WorldManager(this);\n        this.map = new MapManager(this);\n        this.camera = new CameraManager(this);\n        this.factions = new FactionManager(this);\n        this.player = new PlayerManager(this);\n        this.commands = new CommandManager(this);\n        this.screens = new ScreenManager(this);\n        this.input = new InputController(this);\n        this.console = new ConsoleManager(this);\n\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.meleeSystem = new MeleeSystem(this);\n        this.deathSystem = new DeathSystem(this);\n        this.statusSystem = new StatusSystem(this);\n        this.FOVSystem = new FOVSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n        this.cursor = new CursorSystem(this);\n        this.particles = new ParticleSystem(this);\n        this.fps = new FPSMonitoringSystem(this);\n        this.destroySystem = new DestroySystem(this);\n    }\n\n    start() {\n        this.#lastUpdate = Date.now();\n        this.boundLoop = this.loop.bind(this);\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    updateAdventureSystems(dt) {\n        this.clock.update(dt);\n        this.actionSystem.update(dt);\n        this.statusSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.meleeSystem.update(dt);\n        this.deathSystem.update(dt);\n        this.FOVSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.particles.update(dt);\n        this.UISystem.update(dt);\n        this.map.update(dt);\n        this.destroySystem.update(dt);\n        this.console.render(dt);\n    }\n\n    loop(t) {\n        const now = Date.now();\n        const dt = now - this.#lastUpdate;\n\n        this.screens.update(dt);\n        this.fps.update(dt);\n        this.renderer.render();\n\n        this.#lastUpdate = now;\n\n        requestAnimationFrame(this.boundLoop);\n    }\n}\n\nexport const game = new Game();\n","import Manager from '../Manager';\nimport Display from './Display';\nimport spritesheets from './spritesheets';\n\nexport default class Renderer extends Manager {\n    tileWidth = 16;\n    tileHeight = 16;\n    #spritesheets = {};\n    #display = null;\n\n    get display() {\n        return this.#display;\n    }\n\n    get canvas() {\n        return this.display.canvas;\n    }\n\n    constructor(game) {\n        super(game);\n\n        spritesheets().forEach((spritesheet) => {\n            this.#spritesheets[spritesheet.name] = spritesheet;\n        });\n\n        this.#display = new Display({\n            width: 20,\n            height: 20,\n            tileWidth: this.tileWidth,\n            tileHeight: this.tileHeight,\n        });\n\n        document.body.appendChild(this.display.canvas);\n    }\n\n    resizeDisplay(width, height, zoom) {\n        this.display.setSize(width, height, zoom);\n    }\n\n    draw(x, y, char, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const sprite = this.#spritesheets.tiles.getSprite(char);\n\n        this.display.draw(x, y, sprite, fg1, fg2, bg);\n    }\n\n    computeTextWidth(text) {\n        return text.length * 0.5;\n    }\n\n    drawText(x, y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        for (let i = 0; i < text.length; i++) {\n            const sprite = this.#spritesheets.font.getSprite(text.charAt(i));\n\n            this.display.draw(x + 0.5 * i, y, sprite, fg1, fg2, bg);\n        }\n    }\n\n    drawTextCenter(y, text, fg1 = '#d0d6d8', fg2 = '#333', bg) {\n        const len = this.computeTextWidth(text);\n\n        this.drawText(\n            Math.ceil((this.game.camera.width - len) / 2),\n            y,\n            text,\n            fg1,\n            fg2,\n            bg\n        );\n    }\n\n    clear() {\n        this.display.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.display.clearArea(x, y, width, height);\n    }\n\n    pxToTile(xPx, yPx) {\n        const x = Math.trunc(xPx / this.tileWidth);\n        const y = Math.trunc(yPx / this.tileHeight);\n\n        return { x, y };\n    }\n\n    render() {\n        this.display.render();\n    }\n}\n","export default class Manager {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onNewGame() {}\n    getSaveGameData() {}\n}\n","import Grid from '../../utils/Grid';\n\nexport default class Display {\n    ctx;\n    canvas;\n    width;\n    height;\n    zoom = 1;\n    tileWidth;\n    tileHeight;\n    cells;\n    clearColor = '#141a23';\n\n    constructor({ width, height, tileWidth, tileHeight }) {\n        this.tileWidth = tileWidth;\n        this.tileHeight = tileHeight;\n\n        this.cells = new Grid(width * 2, height, () => null);\n        this.cells.suppressOOBWarn = true;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { alpha: false });\n        this.ctx.globalCompositeOperation = 'destination-over';\n\n        this.ctx.font = `${this.tileHeight}px monospace`;\n        this.ctx.textBaseline = 'top';\n\n        this.setSize(width, height);\n    }\n\n    setSize(width, height, zoom) {\n        this.width = width;\n        this.height = height;\n        this.zoom = zoom;\n\n        const widthPx = this.tileWidth * this.width;\n        const heightPx = this.tileHeight * this.height;\n\n        this.canvas.style.cssText = `width: ${widthPx}px; height: ${heightPx}px; transform: scale(${this.zoom})`;\n        this.canvas.width = widthPx;\n        this.canvas.height = heightPx;\n\n        this.cells.clearAndResize(width * 2, height);\n    }\n\n    draw(x, y, sprite, fg1, fg2, bg) {\n        this.cells.set(x * 2, y, {\n            img: sprite.colorize(fg1, fg2),\n            width: sprite.width,\n            height: sprite.height,\n            bg,\n            x,\n            y,\n        });\n    }\n\n    clear() {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            0,\n            0,\n            this.tileWidth * this.width,\n            this.tileHeight * this.height\n        );\n        this.cells.clear();\n    }\n\n    clearArea(x, y, width, height) {\n        this.ctx.fillStyle = this.clearColor;\n        this.ctx.fillRect(\n            x * this.tileWidth,\n            y * this.tileHeight,\n            this.tileWidth * width,\n            this.tileHeight * height\n        );\n\n        const offsetX = x * 2;\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                const cellX = offsetX + i * 2;\n                const cellY = y + j;\n\n                this.cells.set(cellX, cellY, undefined);\n                this.cells.set(cellX + 1, cellY, undefined);\n            }\n        }\n    }\n\n    render() {\n        this.cells.data\n            .filter((c) => c)\n            .forEach((cell) => {\n                const pixelX = cell.x * this.tileWidth;\n                const pixelY = cell.y * this.tileHeight;\n\n                if (cell.bg) {\n                    this.ctx.fillStyle = cell.bg;\n                    this.ctx.fillRect(pixelX, pixelY, cell.width, cell.height);\n                }\n\n                if (cell.img) {\n                    this.ctx.drawImage(cell.img, pixelX, pixelY);\n                }\n            });\n    }\n}\n","export default class Grid {\n    _width = 0;\n    _height = 0;\n    data = [];\n    suppressOOBWarn = false;\n    #defaultValueGenerator = () => null;\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height, defaultValueGenerator = () => null) {\n        this._width = width;\n        this._height = height;\n        this.#defaultValueGenerator = defaultValueGenerator;\n\n        this.clear();\n    }\n\n    idx(x, y) {\n        return y * this._width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this._width),\n            y: Math.trunc(idx / this._width),\n        };\n    }\n\n    clear() {\n        this.data = [];\n        for (let i = 0; i < this.size; i++) {\n            const { x, y } = this.coord(i);\n\n            this.data[i] = this.#defaultValueGenerator(x, y);\n        }\n    }\n\n    set(x, y, value) {\n        if (this.isOutOfBounds(x, y)) {\n            if (!this.suppressOOBWarn) {\n                console.warn(\n                    `Trying to set out-of-bounds coordinates (${x}, ${y}) to value ${value}`\n                );\n            }\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.data[idx] = value;\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return this.#defaultValueGenerator();\n        }\n\n        return this.data[this.idx(x, y)];\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this._width || y >= this.height;\n    }\n\n    getNeighbors(x, y) {\n        return [\n            this.get(x - 1, y - 1), // TOP LEFT\n            this.get(x, y - 1), // TOP\n            this.get(x + 1, y - 1), // TOP RIGHT\n            this.get(x - 1, y), // LEFT\n            this.get(x + 1, y), // RIGHT\n            this.get(x - 1, y + 1), // BOTTOM LEFT\n            this.get(x, y + 1), // BOTTOM\n            this.get(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    clearAndResize(width, height) {\n        this._width = width;\n        this._height = height;\n        this.clear();\n    }\n}\n","import SpriteSheet from './SpriteSheet';\n\nexport default () => {\n    const tileImage = document.getElementById('spritesheet-tiles');\n    const fontImage = document.getElementById('spritesheet-font');\n\n    return [\n        new SpriteSheet('tiles', tileImage),\n        new SpriteSheet('font', fontImage),\n    ];\n};\n","import cp437 from './cp437';\nimport Sprite from './Sprite';\n\nexport default class SpriteSheet {\n    #name = null;\n    #defaultGlyph = '?';\n    #sprites = {};\n\n    get name() {\n        return this.#name;\n    }\n\n    get width() {\n        return this.image.width;\n    }\n\n    get height() {\n        return this.image.height;\n    }\n\n    get spriteCountX() {\n        return 16;\n    }\n\n    get spriteCountY() {\n        return 16;\n    }\n\n    constructor(name, image) {\n        this.#name = name;\n        this.image = image;\n\n        this.spriteWidth = this.image.width / this.spriteCountX;\n        this.spriteHeight = this.image.height / this.spriteCountY;\n\n        cp437.forEach((row, i) => {\n            row.forEach((glyph, j) => {\n                this.#sprites[glyph] = new Sprite(glyph, this, j, i);\n            });\n        });\n    }\n\n    getSprite(glyph) {\n        if (this.#sprites[glyph]) {\n            return this.#sprites[glyph];\n        }\n\n        return this.#sprites[this.#defaultGlyph];\n    }\n}\n","// prettier-ignore\nexport default [\n    ['NUL', '☺', '☻', '♥', '♦', '♣', '♠', '•', '◘', '○', '◙', '♂', '♀', '♪', '♫', '☼'],\n    ['►', '◄', '↕', '‼', '¶', '§', '▬', '↨', '↑', '↓', '→', '←', '∟', '↔', '▲', '▼'],\n    [' ', '!', '\"', '#', '$', '%', '&', '\\'', '(', ')', '*', '+', ',', '-', '.', '/'],\n    ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', '<', '=', '>', '?'],\n    ['@', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'],\n    ['P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\\\', ']', '^', '_'],\n    ['`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'],\n    ['p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}', '~', '⌂'],\n    ['Ç', 'ü', 'é', 'â', 'ä', 'à', 'å', 'ç', 'ê', 'ë', 'è', 'ï', 'î', 'ì', 'Ä', 'Å'],\n    ['É', 'æ', 'Æ', 'ô', 'ö', 'ò', 'û', 'ù', 'ÿ', 'Ö', 'Ü', '¢', '£', '¥', '₧', 'ƒ'],\n    ['á', 'í', 'ó', 'ú', 'ñ', 'Ñ', 'ª', 'º', '¿', '⌐', '¬', '½', '¼', '¡', '«', '»'],\n    ['░', '▒', '▓', '│', '┤', '╡', '╢', '╖', '╕', '╣', '║', '╗', '╝', '╜', '╛', '┐'],\n    ['└', '┴', '┬', '├', '─', '┼', '╞', '╟', '╚', '╔', '╩', '╦', '╠', '═', '╬', '╧'],\n    ['╨', '╤', '╥', '╙', '╘', '╒', '╓', '╫', '╪', '┘', '┌', '█', '▄', '▌', '▐', '▀'],\n    ['α', 'ß', 'Γ', 'π', 'Σ', 'σ', 'µ', 'τ', 'Φ', 'Θ', 'Ω', 'δ', '∞', 'φ', 'ε', '∩'],\n    ['≡', '±', '≥', '≤', '⌠', '⌡', '÷', '≈', '°', '∙', '·', '√', 'ⁿ', '²', '■', 'NBSP'],\n];\n","import { parseColor } from '../../utils/ColorParser';\n\nconst isWhite = (r, g, b) => r === 255 && g === 255 && b === 255;\nconst isBlack = (r, g, b) => r === 0 && g === 0 && b === 0;\n\nexport default class Sprite {\n    #ctx = null;\n    #glyph = null;\n    #sheet = null;\n    #x = null;\n    #y = null;\n    _cache = {};\n\n    get glyph() {\n        return this.#glyph;\n    }\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get sheet() {\n        return this.#sheet;\n    }\n\n    get image() {\n        return this.sheet.image;\n    }\n\n    get sourceX() {\n        return this.sheet.spriteWidth * this.x;\n    }\n\n    get sourceY() {\n        return this.sheet.spriteHeight * this.y;\n    }\n\n    get width() {\n        return this.sheet.spriteWidth;\n    }\n\n    get height() {\n        return this.sheet.spriteHeight;\n    }\n\n    constructor(glyph, sheet, x, y) {\n        this.#glyph = glyph;\n        this.#sheet = sheet;\n        this.#x = x;\n        this.#y = y;\n\n        const canvas = document.createElement('canvas');\n\n        canvas.width = this.width;\n        canvas.height = this.height;\n\n        this.#ctx = canvas.getContext('2d');\n\n        this.#ctx.drawImage(\n            this.sheet.image,\n            this.sourceX,\n            this.sourceY,\n            this.width,\n            this.height,\n            0,\n            0,\n            this.width,\n            this.height\n        );\n    }\n\n    colorize(primaryCss, secondaryCss) {\n        const primary = parseColor(primaryCss);\n        const secondary = parseColor(secondaryCss);\n\n        const key = `${primary.key}-${secondary.key}`;\n\n        if (this._cache.hasOwnProperty(key)) {\n            return this._cache[key];\n        }\n\n        const pixels = this.#ctx.getImageData(0, 0, this.width, this.height);\n\n        for (let i = 0; i < pixels.data.length; i += 4) {\n            const r = pixels.data[i];\n            const g = pixels.data[i + 1];\n            const b = pixels.data[i + 2];\n\n            if (isBlack(r, g, b)) {\n                pixels.data[i] = primary[0];\n                pixels.data[i + 1] = primary[1];\n                pixels.data[i + 2] = primary[2];\n                pixels.data[i + 4] = primary[3];\n            } else {\n                pixels.data[i] = secondary[0];\n                pixels.data[i + 1] = secondary[1];\n                pixels.data[i + 2] = secondary[2];\n                pixels.data[i + 4] = secondary[3];\n            }\n        }\n\n        const cvs = document.createElement('canvas');\n\n        cvs.width = this.width;\n        cvs.height = this.height;\n\n        cvs.getContext('2d').putImageData(pixels, 0, 0);\n\n        this._cache[key] = cvs;\n\n        return cvs;\n    }\n}\n","import colorParse from 'color-parse';\n\nconst cache = {};\n\nexport const parseColor = (colorStr) => {\n    if (!cache.hasOwnProperty(colorStr)) {\n        const parsed = colorParse(colorStr).values;\n        const data = [parsed[0], parsed[1], parsed[2], parsed.alpha];\n\n        data.key = `${data[0]},${data[1]},${data[2]},${data[3]}`;\n\n        cache[colorStr] = data;\n    }\n\n    return cache[colorStr];\n};\n","/**\r\n * @module color-parse\r\n */\r\nimport names from 'color-name'\r\n\r\nexport default parse\r\n\r\n/**\r\n * Base hues\r\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\r\n */\r\n//FIXME: use external hue detector\r\nvar baseHues = {\r\n\tred: 0,\r\n\torange: 60,\r\n\tyellow: 120,\r\n\tgreen: 180,\r\n\tblue: 240,\r\n\tpurple: 300\r\n}\r\n\r\n/**\r\n * Parse color from the string passed\r\n *\r\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\r\n */\r\nfunction parse (cstr) {\r\n\tvar m, parts = [], alpha = 1, space\r\n\r\n\tif (typeof cstr === 'string') {\r\n\t\t//keyword\r\n\t\tif (names[cstr]) {\r\n\t\t\tparts = names[cstr].slice()\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//reserved words\r\n\t\telse if (cstr === 'transparent') {\r\n\t\t\talpha = 0\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [0,0,0]\r\n\t\t}\r\n\r\n\t\t//hex\r\n\t\telse if (/^#[A-Fa-f0-9]+$/.test(cstr)) {\r\n\t\t\tvar base = cstr.slice(1)\r\n\t\t\tvar size = base.length\r\n\t\t\tvar isShort = size <= 4\r\n\t\t\talpha = 1\r\n\r\n\t\t\tif (isShort) {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[0], 16),\r\n\t\t\t\t\tparseInt(base[1] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[2], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 4) {\r\n\t\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tparts = [\r\n\t\t\t\t\tparseInt(base[0] + base[1], 16),\r\n\t\t\t\t\tparseInt(base[2] + base[3], 16),\r\n\t\t\t\t\tparseInt(base[4] + base[5], 16)\r\n\t\t\t\t]\r\n\t\t\t\tif (size === 8) {\r\n\t\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!parts[0]) parts[0] = 0\r\n\t\t\tif (!parts[1]) parts[1] = 0\r\n\t\t\tif (!parts[2]) parts[2] = 0\r\n\r\n\t\t\tspace = 'rgb'\r\n\t\t}\r\n\r\n\t\t//color space\r\n\t\telse if (m = /^((?:rgb|hs[lvb]|hwb|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms)a?)\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\r\n\t\t\tvar name = m[1]\r\n\t\t\tvar isRGB = name === 'rgb'\r\n\t\t\tvar base = name.replace(/a$/, '')\r\n\t\t\tspace = base\r\n\t\t\tvar size = base === 'cmyk' ? 4 : base === 'gray' ? 1 : 3\r\n\t\t\tparts = m[2].trim()\r\n\t\t\t\t.split(/\\s*[,\\/]\\s*|\\s+/)\r\n\t\t\t\t.map(function (x, i) {\r\n\t\t\t\t\t//<percentage>\r\n\t\t\t\t\tif (/%$/.test(x)) {\r\n\t\t\t\t\t\t//alpha\r\n\t\t\t\t\t\tif (i === size)\treturn parseFloat(x) / 100\r\n\t\t\t\t\t\t//rgb\r\n\t\t\t\t\t\tif (base === 'rgb') return parseFloat(x) * 255 / 100\r\n\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//hue\r\n\t\t\t\t\telse if (base[i] === 'h') {\r\n\t\t\t\t\t\t//<deg>\r\n\t\t\t\t\t\tif (/deg$/.test(x)) {\r\n\t\t\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//<base-hue>\r\n\t\t\t\t\t\telse if (baseHues[x] !== undefined) {\r\n\t\t\t\t\t\t\treturn baseHues[x]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn parseFloat(x)\r\n\t\t\t\t})\r\n\r\n\t\t\tif (name === base) parts.push(1)\r\n\t\t\talpha = (isRGB) ? 1 : (parts[size] === undefined) ? 1 : parts[size]\r\n\t\t\tparts = parts.slice(0, size)\r\n\t\t}\r\n\r\n\t\t//named channels case\r\n\t\telse if (cstr.length > 10 && /[0-9](?:\\s|\\/)/.test(cstr)) {\r\n\t\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t})\r\n\r\n\t\t\tspace = cstr.match(/([a-z])/ig).join('').toLowerCase()\r\n\t\t}\r\n\t}\r\n\r\n\t//numeric case\r\n\telse if (!isNaN(cstr)) {\r\n\t\tspace = 'rgb'\r\n\t\tparts = [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff]\r\n\t}\r\n\r\n\t//array-like\r\n\telse if (Array.isArray(cstr) || cstr.length) {\r\n\t\tparts = [cstr[0], cstr[1], cstr[2]]\r\n\t\tspace = 'rgb'\r\n\t\talpha = cstr.length === 4 ? cstr[3] : 1\r\n\t}\r\n\r\n\t//object case - detects css cases of rgb and hsl\r\n\telse if (cstr instanceof Object) {\r\n\t\tif (cstr.r != null || cstr.red != null || cstr.R != null) {\r\n\t\t\tspace = 'rgb'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.r || cstr.red || cstr.R || 0,\r\n\t\t\t\tcstr.g || cstr.green || cstr.G || 0,\r\n\t\t\t\tcstr.b || cstr.blue || cstr.B || 0\r\n\t\t\t]\r\n\t\t}\r\n\t\telse {\r\n\t\t\tspace = 'hsl'\r\n\t\t\tparts = [\r\n\t\t\t\tcstr.h || cstr.hue || cstr.H || 0,\r\n\t\t\t\tcstr.s || cstr.saturation || cstr.S || 0,\r\n\t\t\t\tcstr.l || cstr.lightness || cstr.L || cstr.b || cstr.brightness\r\n\t\t\t]\r\n\t\t}\r\n\r\n\t\talpha = cstr.a || cstr.alpha || cstr.opacity || 1\r\n\r\n\t\tif (cstr.opacity != null) alpha /= 100\r\n\t}\r\n\r\n\treturn {\r\n\t\tspace: space,\r\n\t\tvalues: parts,\r\n\t\talpha: alpha\r\n\t}\r\n}\r\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\nimport Manager from '../Manager';\n\nexport default class InputController extends Manager {\n    constructor(game) {\n        super(game);\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.game.renderer.canvas;\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        e.preventDefault();\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x,\n            y,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            xPx,\n            yPx,\n        });\n\n        this.game.commands.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const xPx = e.offsetX;\n        const yPx = e.offsetY;\n        const { x, y } = this.game.renderer.pxToTile(xPx, yPx);\n\n        this.game.mouse.updatePosition(x, y);\n    }\n\n    onMouseEnter(e) {\n        this.game.mouse.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.game.mouse.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import { Actor, IsDead, IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [Actor],\n            none: [IsDestroying, IsDead],\n        });\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        let entity = sorted[0];\n\n        if (entity && !entity.actor.hasEnergy) {\n            this.game.clock.incrementTick(-1 * entity.actor.energy);\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.game.clock.tickDelta);\n            });\n        }\n\n        while (entity && entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n            entity = sorted.shift();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelcaseSlow from 'camelcase';\n\nconst camelCache = new Map();\n\nexport const camelString = (value) => {\n    if (!camelCache.has(value)) {\n        camelCache.set(value, camelcaseSlow(value));\n    }\n\n    return camelCache.get(value);\n};\n\nconst pascalCache = new Map();\n\nexport const pascalString = (value) => {\n    if (!pascalCache.has(value)) {\n        pascalCache.set(value, camelcaseSlow(value, { pascalCase: true }));\n    }\n\n    return pascalCache.get(value);\n};\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`,\n                entity\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import { camelString } from './util/string-util';\nimport PropertyFactory from './Properties/PropertyFactory';\n\nexport default class Component {\n    entity = null;\n    ecs = null;\n    _props = {};\n    _isDestroyed = false;\n\n    static allowMultiple = false;\n    static keyProperty = null;\n    static properties = {};\n\n    static get type() {\n        return this.name;\n    }\n\n    get type() {\n        return this.constructor.name;\n    }\n\n    get isAttached() {\n        return Boolean(this.entity);\n    }\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    get allowMultiple() {\n        return this.constructor.allowMultiple;\n    }\n\n    get keyProperty() {\n        return this.constructor.keyProperty;\n    }\n\n    get properties() {\n        const ob = {};\n\n        for (const [key, value] of Object.entries(this._props)) {\n            ob[key] = value.get();\n        }\n\n        return ob;\n    }\n\n    get key() {\n        return this[this.keyProperty];\n    }\n\n    constructor(ecs, properties = {}) {\n        this.ecs = ecs;\n        this._defineProxies(properties);\n    }\n\n    serialize() {\n        return Object.entries(this._props).reduce(\n            (o, [key, value]) => ({\n                ...o,\n                [key]: value.serialize(),\n            }),\n            {}\n        );\n    }\n\n    _onAttached(entity) {\n        this.entity = entity;\n        this.ecs.queries.onComponentAdded(entity, this);\n        this.onAttached();\n    }\n\n    _onDetached() {\n        if (this.isAttached) {\n            this.onDetached();\n            const entity = this.entity;\n\n            this.entity = null;\n            this.ecs.queries.onComponentRemoved(entity, this);\n        }\n    }\n\n    _onDestroyed() {\n        this._isDestroyed = true;\n        this.onDestroyed();\n\n        for (const prop of Object.values(this._props)) {\n            prop.onDestroyed();\n        }\n    }\n\n    onAttached() {}\n\n    onDetached() {}\n\n    onDestroyed() {}\n\n    remove(destroy = true) {\n        if (this.isAttached) {\n            this.entity.remove(this);\n        }\n        if (destroy) {\n            this._onDestroyed();\n        }\n    }\n\n    destroy() {\n        this.remove(true);\n    }\n\n    clone() {\n        return this.ecs.createComponent(this.type, this.serialize());\n    }\n\n    _onEvent(evt) {\n        this.onEvent(evt);\n\n        const handlerName = camelString(`on ${evt.name}`);\n\n        if (typeof this[handlerName] === 'function') {\n            this[handlerName](evt);\n        }\n    }\n\n    onEvent(evt) {}\n\n    _defaultPropertyValue(propertyName) {\n        const value = this.constructor.properties[propertyName];\n\n        if (value === '<EntityArray>') {\n            return [];\n        }\n\n        if (value === '<Entity>') {\n            return undefined;\n        }\n\n        return value;\n    }\n\n    _defineProxies(initialProperties) {\n        for (const key in this.constructor.properties) {\n            const initialValue = initialProperties.hasOwnProperty(key)\n                ? initialProperties[key]\n                : this._defaultPropertyValue(key);\n            const property = PropertyFactory.create(\n                this,\n                this.constructor.properties[key]\n            );\n\n            this._props[key] = property;\n            Object.defineProperty(this, key, property.descriptor);\n            property.set(initialValue);\n        }\n    }\n}\n","import Component from '../Component';\nimport { camelString } from '../util/string-util';\n\nexport default class ComponentRegistry {\n    _definitions = new Map();\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    register(component) {\n        this._definitions.set(component.name, component);\n        camelString(component.name); // prime camelcase cache\n    }\n\n    getAccessor(type) {\n        return camelString(type);\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this._definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this._ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\n    name = '';\n    inherit = [];\n    components = [];\n\n    constructor(ecs, name) {\n        this.ecs = ecs;\n        this.name = name;\n    }\n\n    addComponent(prefabComponent) {\n        this.components.push(prefabComponent);\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        this.inherit.forEach((parent) => {\n            parent.applyToEntity(entity, initialProps);\n        });\n\n        const arrComps = {};\n\n        this.components.forEach((component, i) => {\n            const definition = component.componentDef;\n            const accessor = this.ecs.components.getAccessor(definition.type);\n\n            let initialCompProps = {};\n\n            if (definition.allowMultiple) {\n                if (definition.keyProperty) {\n                    const key = component.properties[definition.keyProperty];\n\n                    if (initialProps[accessor] && initialProps[accessor][key]) {\n                        initialCompProps = initialProps[accessor][key];\n                    }\n                } else {\n                    if (!arrComps[accessor]) {\n                        arrComps[accessor] = 0;\n                    }\n\n                    if (\n                        initialProps[accessor] &&\n                        initialProps[accessor][arrComps[accessor]]\n                    ) {\n                        initialCompProps =\n                            initialProps[accessor][arrComps[accessor]];\n                    }\n\n                    arrComps[accessor]++;\n                }\n            } else {\n                initialCompProps = initialProps[accessor];\n            }\n\n            component.applyToEntity(entity, initialCompProps);\n        });\n\n        return entity;\n    }\n}\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    _prefabs = {};\n    _ecs = null;\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this._ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this._ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this._ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this._prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this._prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this._ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","export default class EntityEvent {\n    data = {};\n    _prevented = false;\n    _handled = false;\n\n    get prevented() {\n        return this._prevented;\n    }\n\n    get handled() {\n        return this._handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this._handled = true;\n        this._prevented = true;\n    }\n\n    prevent() {\n        this._prevented = true;\n    }\n}\n","import Component from './Component';\nimport EntityEvent from './EntityEvent';\n\nexport default class Entity {\n    id = null;\n    components = {};\n    ecs = null;\n    _isDestroyed = false;\n\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n\n    constructor(ecs, id = null) {\n        this.ecs = ecs;\n        this.id = id || ecs.generateId();\n    }\n\n    has(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const hasType = this.hasOwnProperty(accessor);\n\n        if (hasType && key) {\n            return this[accessor].hasOwnProperty(key);\n        }\n\n        return hasType;\n    }\n\n    get(typeOrClass, key = null) {\n        const type = this.ecs.components._getType(typeOrClass);\n        const accessor = this.ecs.components.getAccessor(type);\n        const components = this[accessor];\n\n        if (components && key) {\n            return components[key];\n        }\n\n        return components;\n    }\n\n    destroy() {\n        this._isDestroyed = true;\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component.destroy();\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent.destroy();\n                }\n            }\n        }\n\n        this.ecs.entities.onEntityDestroyed(this);\n    }\n\n    add(typeOrClass, properties = {}) {\n        if (typeOrClass instanceof Component) {\n            if (typeOrClass.isAttached) {\n                console.warn(\n                    `\"${typeOrClass.type}\" component cannot be added, since it is already attached to an entity.`\n                );\n                return false;\n            }\n\n            return this.attach(typeOrClass);\n        }\n\n        const component = this.ecs.components.create(typeOrClass, properties);\n\n        if (!component) {\n            console.warn(\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\n            );\n            return false;\n        }\n\n        return this.attach(component);\n    }\n\n    attach(component) {\n        const accessor = this.ecs.components.getAccessor(component.type);\n\n        if (!component.allowMultiple) {\n            if (this.has(component.type)) {\n                console.warn(\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\n                );\n                return false;\n            }\n\n            this.components[accessor] = component;\n\n            Object.defineProperty(this, accessor, {\n                enumerable: true,\n                configurable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.keyProperty) {\n            if (!this.components[accessor]) {\n                this.components[accessor] = [];\n                Object.defineProperty(this, accessor, {\n                    configurable: true,\n                    enumerable: true,\n                    get() {\n                        return this.components[accessor];\n                    },\n                });\n            }\n\n            this.components[accessor].push(component);\n\n            component._onAttached(this);\n            this.ecs.queries.onComponentAdded(this);\n\n            return true;\n        }\n\n        if (!component.key) {\n            console.warn(\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\n            );\n            return false;\n        }\n\n        if (!this.components[accessor]) {\n            this.components[accessor] = {};\n            Object.defineProperty(this, accessor, {\n                configurable: true,\n                enumerable: true,\n                get() {\n                    return this.components[accessor];\n                },\n            });\n        }\n\n        this.components[accessor][component.key] = component;\n\n        component._onAttached(this);\n        this.ecs.queries.onComponentAdded(this, component);\n\n        return true;\n    }\n\n    owns(component) {\n        return component.entity === this;\n    }\n\n    remove(typeOrClassOrComponent, key = null) {\n        const isComponent = typeOrClassOrComponent instanceof Component;\n        key = isComponent ? typeOrClassOrComponent.key : key;\n\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\n\n        const accessor = this.ecs.components.getAccessor(definition.type);\n\n        if (definition.allowMultiple) {\n            if (!definition.keyProperty) {\n                if (isComponent) {\n                    const all = this.components[accessor];\n\n                    if (!all) {\n                        console.warn(\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n                        );\n                        return;\n                    }\n\n                    const index = all.indexOf(typeOrClassOrComponent);\n\n                    if (index > -1) {\n                        all.splice(index, 1);\n                        typeOrClassOrComponent._onDetached();\n\n                        if (all.length === 0) {\n                            delete this[accessor];\n                            delete this.components[accessor];\n                        }\n\n                        this.ecs.queries.onComponentRemoved(this);\n\n                        return true;\n                    }\n                } else {\n                    for (const instance of this.components[accessor]) {\n                        instance._onDetached();\n                    }\n\n                    delete this[accessor];\n                    delete this.components[accessor];\n                    this.ecs.queries.onComponentRemoved(this);\n\n                    return true;\n                }\n            }\n\n            if (!key) {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\n                );\n                return;\n            }\n\n            const all = this.components[accessor];\n            const component = all[key];\n\n            if (component) {\n                delete all[key];\n                component._onDetached();\n                if (Object.keys(all).length <= 0) {\n                    delete this[accessor];\n                    delete this.components[accessor];\n                }\n                this.ecs.queries.onComponentRemoved(this);\n\n                return component;\n            } else {\n                console.warn(\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\n                );\n                return;\n            }\n        }\n\n        if (accessor in this) {\n            const component = this.components[accessor];\n\n            delete this[accessor];\n            delete this.components[accessor];\n            component._onDetached();\n            this.ecs.queries.onComponentRemoved(this);\n\n            return component;\n        }\n\n        console.warn(\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\n        );\n    }\n\n    serialize() {\n        return Object.entries(this.components).reduce(\n            (o, [key, value]) => {\n                if (value instanceof Component) {\n                    return {\n                        ...o,\n                        [key]: value.serialize(),\n                    };\n                }\n\n                if (Array.isArray(value)) {\n                    return {\n                        ...o,\n                        [key]: value.map((v) => v.serialize()),\n                    };\n                }\n\n                return {\n                    ...o,\n                    [key]: Object.entries(value).reduce(\n                        (o2, [k2, v2]) => ({\n                            ...o2,\n                            [k2]: v2.serialize(),\n                        }),\n                        {}\n                    ),\n                };\n            },\n            {\n                id: this.id,\n            }\n        );\n    }\n\n    fireEvent(name, data) {\n        const evt = new EntityEvent(name, data);\n\n        for (const component of Object.values(this.components)) {\n            if (component instanceof Component) {\n                component._onEvent(evt);\n\n                if (evt.prevented) {\n                    return evt;\n                }\n            } else {\n                for (const nestedComponent of Object.values(component)) {\n                    nestedComponent._onEvent(evt);\n\n                    if (evt.prevented) {\n                        return evt;\n                    }\n                }\n            }\n        }\n\n        return evt;\n    }\n}\n","import { pascalString } from '../util/string-util';\nimport Entity from '../Entity';\n\nexport default class EntityRegistry {\n    _entities = new Map();\n    _ecs = null;\n    _refs = new Map();\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    get all() {\n        return this._entities.values();\n    }\n\n    register(entity) {\n        this._entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this._entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this._ecs, id);\n\n        this.register(entity);\n\n        this._ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this._entities.delete(entity.id);\n        this._ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this._refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this._refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this._refs.has(entityId)) {\n            this._refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this._refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this._refs.has(entityId)) {\n            this._refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize(entities) {\n        const json = [];\n        const list = entities ? entities : this._entities;\n\n        list.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = pascalString(key);\n            const definition = this._ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    _ecs;\n    _filter;\n    _onEntityAddedCallbacks = [];\n    _onEntityRemovedCallbacks = [];\n    _cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this._ecs = ecs;\n        this._filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this._filter.any.length\n            ? this._filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this._filter.all.every((c) => entity.has(c));\n        const hasNone = !this._filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    onEntityAdded(fn) {\n        this._onEntityAddedCallbacks.push(fn);\n    }\n\n    onEntityRemoved(fn) {\n        this._onEntityRemovedCallbacks.push(fn);\n    }\n\n    has(entity) {\n        return this._cache.has(entity);\n    }\n\n    candidate(entity) {\n        const isTracking = this.has(entity);\n\n        if (this.isMatch(entity)) {\n            if (!isTracking) {\n                this._cache.add(entity);\n                this._onEntityAddedCallbacks.forEach((cb) => cb(entity));\n            }\n\n            return true;\n        }\n\n        if (isTracking) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        if (this.has(entity)) {\n            this._cache.delete(entity);\n            this._onEntityRemovedCallbacks.forEach((cb) => cb(entity));\n        }\n    }\n\n    bustCache() {\n        this._cache.clear();\n\n        for (const entity of this._ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this._cache;\n    }\n\n    get() {\n        return this._cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    _ecs;\n    _queries = [];\n\n    constructor(ecs) {\n        this._ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this._ecs, filters);\n\n        this._queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this._queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this._queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this._queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this._queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity(id) {\n        return this.entities.create(id);\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize(entities) {\n        return {\n            entities: this.entities.serialize(entities),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","import { Component } from 'geotic';\n\nexport class IsDestroying extends Component {\n    static properties = {\n        pass: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { SPWN_POOL_LIQUID } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { drinkLiquid, liquids, LIQUID_BLOOD } from '../../enums/LiquidTypes';\nimport { IsDestroying } from './IsDestroying';\n\nexport class LiquidContainer extends Component {\n    static properties = {\n        content: LIQUID_BLOOD,\n        volume: 10,\n        maxVolume: 10,\n        overridePrimary: false,\n        overrideSecondary: false,\n        isPourable: false,\n        destroyOnEmpty: false,\n    };\n\n    get liquid() {\n        return !this.isEmpty && liquids[this.content];\n    }\n\n    get isEmpty() {\n        return isNaN(this.content) || this.volume <= 0;\n    }\n\n    get display() {\n        if (this.isEmpty) {\n            return `[empty] ${this.volume}/${this.maxVolume}`;\n        }\n\n        return `[${liquids[this.content].name}] ${this.volume}/${\n            this.maxVolume\n        }`;\n    }\n\n    get primaryColorOverride() {\n        if (this.overridePrimary && this.liquid) {\n            return this.liquid.primary;\n        }\n\n        return null;\n    }\n\n    get secondaryColorOverride() {\n        if (this.overrideSecondary && this.liquid) {\n            return this.liquid.secondary;\n        }\n\n        return null;\n    }\n\n    _checkDestroyOnEmpty() {\n        if (this.destroyOnEmpty && this.isEmpty) {\n            this.entity.add(IsDestroying);\n        }\n    }\n\n    pour(x, y, quantity) {\n        if (!this.isPourable) {\n            console.warn('The container connot be poured.');\n            return false;\n        }\n\n        if (this.volume <= 0) {\n            console.warn('The contianer is empty and cannot be poured.');\n            return false;\n        }\n\n        if (isNaN(quantity) || quantity >= this.volume) {\n            quantity = this.volume;\n        }\n\n        this.volume -= quantity;\n\n        spawn(SPWN_POOL_LIQUID, x, y, {\n            content: this.content,\n            volume: quantity,\n        });\n\n        this._checkDestroyOnEmpty();\n\n        return true;\n    }\n\n    onTryPour(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        const pos = evt.data.interactor.position.getPos();\n\n        this.pour(pos.x, pos.y, evt.data.volume);\n\n        evt.data.interactor.fireEvent('energy-consumed', 400);\n        evt.handle();\n    }\n\n    onTryDrink(evt) {\n        if (this.isEmpty) {\n            console.warn('The container is empty.');\n            return;\n        }\n\n        drinkLiquid(evt.data.interactor, this.content, this.volume);\n        this.volume = 0;\n        this._checkDestroyOnEmpty();\n\n        evt.data.interactor.fireEvent('energy-consumed', 700);\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Drink',\n            evt: 'try-drink',\n        });\n\n        if (this.isPourable) {\n            evt.data.interactions.push({\n                name: 'Pour',\n                evt: 'try-pour',\n            });\n        }\n    }\n}\n","export const SPWN_VIAL_HONEY = 'SPWN_VIAL_HONEY';\nexport const SPWN_VIAL_BLOOD = 'SPWN_VIAL_BLOOD';\nexport const SPWN_VIAL_WATER = 'SPWN_VIAL_WATER';\nexport const SPWN_STONE = 'SPWN_STONE';\nexport const SPWN_GOBLIN_GRUNT = 'SPWN_GOBLIN_GRUNT';\nexport const SPWN_HUMAN_WANDERER = 'SPWN_HUMAN_WANDERER';\nexport const SPWN_PINE_TREE = 'SPWN_PINE_TREE';\nexport const SPWN_WOOD_WALL = 'SPWN_WOOD_WALL';\nexport const SPWN_WOOD_DOOR = 'SPWN_WOOD_DOOR';\nexport const SPWN_WOOD_CHEST = 'SPWN_WOOD_CHEST';\nexport const SPWN_STONE_WALL = 'SPWN_STONE_WALL';\nexport const SPWN_DIRT_PATH = 'SPWN_DIRT_PATH';\nexport const SPWN_CORPSE = 'SPWN_CORPSE';\nexport const SPWN_POOL_LIQUID = 'SPWN_POOL_LIQUID';\nexport const SPWN_GLASS_SHARD = 'SPWN_GLASS_SHARD';\nexport const SPWN_AMULET = 'SPWN_AMULET';\nexport const SPWN_CLOTH_ARMOR = 'SPWN_CLOTH_ARMOR';\nexport const SPWN_LEATHER_BOOTS = 'SPWN_LEATHER_BOOTS';\nexport const SPWN_SHORTSWORD = 'SPWN_SHORTSWORD';\nexport const SPWN_GREATSWORD = 'SPWN_GREATSWORD';\nexport const SPWN_BATTLE_AXE = 'SPWN_BATTLE_AXE';\nexport const SPWN_HATCHET = 'SPWN_HATCHET';\n","import { game } from '../core/Game';\n\nimport * as VialHoney from './spawnables/SpawnableVialHoney';\nimport * as VialBlood from './spawnables/SpawnableVialBlood';\nimport * as VialWater from './spawnables/SpawnableVialWater';\nimport * as GoblinGrunt from './spawnables/SpawnableGoblinGrunt';\nimport * as PineTree from './spawnables/SpawnablePineTree';\nimport * as HumanWanderer from './spawnables/SpawnableHumanWanderer';\nimport * as PoolLiquid from './spawnables/SpawnablePoolLiquid';\n\nconst simplePrefab = (prefabName) => (data) =>\n    game.ecs.createPrefab(prefabName, data);\n\nconst spawnables = {\n    SPWN_VIAL_HONEY: VialHoney.createSpawnable,\n    SPWN_VIAL_BLOOD: VialBlood.createSpawnable,\n    SPWN_VIAL_WATER: VialWater.createSpawnable,\n    SPWN_STONE: simplePrefab('Stone'),\n    SPWN_WOOD_WALL: simplePrefab('WoodWall'),\n    SPWN_WOOD_DOOR: simplePrefab('Door'),\n    SPWN_WOOD_CHEST: simplePrefab('Chest'),\n    SPWN_STONE_WALL: simplePrefab('Wall'),\n    SPWN_DIRT_PATH: simplePrefab('DirtPathway'),\n    SPWN_CORPSE: simplePrefab('Corpse'),\n    SPWN_GLASS_SHARD: simplePrefab('GlassShard'),\n    SPWN_AMULET: simplePrefab('Amulet'),\n    SPWN_CLOTH_ARMOR: simplePrefab('ClothArmor'),\n    SPWN_LEATHER_BOOTS: simplePrefab('Boots'),\n    SPWN_SHORTSWORD: simplePrefab('Shortsword'),\n    SPWN_GREATSWORD: simplePrefab('Greatsword'),\n    SPWN_BATTLE_AXE: simplePrefab('BattleAxe'),\n    SPWN_HATCHET: simplePrefab('Hatchet'),\n    SPWN_GOBLIN_GRUNT: GoblinGrunt.createSpawnable,\n    SPWN_HUMAN_WANDERER: HumanWanderer.createSpawnable,\n    SPWN_PINE_TREE: PineTree.createSpawnable,\n    SPWN_POOL_LIQUID: PoolLiquid.createSpawnable,\n};\n\nexport const spawn = (key, x, y, data = {}) => {\n    const entity = spawnables[key](data, x, y);\n\n    if (!isNaN(x) && !isNaN(y) && entity.position) {\n        entity.position.setPos(x, y);\n    }\n\n    return entity;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_HONEY } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_HONEY;\n\n    return vial;\n};\n","import { game } from '../core/Game';\n\nexport const LIQUID_WATER = 0;\nexport const LIQUID_BLOOD = 1;\nexport const LIQUID_HONEY = 3;\nexport const LIQUID_OIL = 4;\n\nexport const liquids = {\n    [LIQUID_WATER]: {\n        name: 'water',\n        colorDesc: 'watery',\n        primary: '#66a3dc',\n        secondary: '#8bb9d5',\n        onDrink: (entity) => {\n            console.log('Mmm. earth juice. yummy');\n        },\n    },\n    [LIQUID_BLOOD]: {\n        name: 'blood',\n        colorDesc: 'bloody',\n        primary: '#ce2a36',\n        secondary: '#e0c1c2',\n        onDrink: (entity, volume) => {\n            console.log('blood. this would make a good syrup');\n            entity.fireEvent('heal', {\n                value: volume * 1,\n            });\n        },\n    },\n    [LIQUID_HONEY]: {\n        name: 'honey',\n        colorDesc: 'gooey golden',\n        primary: '#d6aa3a',\n        secondary: '#f4d260',\n        onDrink: (entity, volume) => {\n            const pos = entity.position.getPos();\n\n            game.particles.createEmitter(pos.x, pos.y - 1, {\n                direction: {\n                    x: 0,\n                    y: -1,\n                },\n                glyphs: ['.', '○'],\n                fg1s: ['#d6aa3a'],\n                speed: 0.02,\n                lifetime: 500,\n            });\n\n            entity.fireEvent('heal', {\n                value: volume * 2,\n            });\n        },\n    },\n};\n\nexport const drinkLiquid = (entity, type, volume) => {\n    liquids[type].onDrink(entity, volume);\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_BLOOD } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_BLOOD;\n\n    return vial;\n};\n","import { game } from '../../core/Game';\nimport { LIQUID_WATER } from '../../enums/LiquidTypes';\n\nexport const createSpawnable = () => {\n    const vial = game.ecs.createPrefab('Vial');\n\n    vial.liquidContainer.content = LIQUID_WATER;\n\n    return vial;\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\nimport { SPWN_SHORTSWORD } from '../Spawnables';\nimport { spawn } from '../Spawner';\n\nexport const createSpawnable = () => {\n    const goblin = game.ecs.createPrefab('Goblin');\n\n    goblin.brain.pushGoal(BoredGoalType.create());\n\n    const sword = spawn(SPWN_SHORTSWORD);\n\n    goblin.equipmentSlot.handRight.equip(sword);\n\n    return goblin;\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\nimport { KillSomethingGoalType } from './KillSomethingGoalType';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        // do i detect any hostiles?\n        const targets = new Set();\n\n        entity.fireEvent('try-detect-hostiles', {\n            targets,\n        });\n\n        if (targets.size > 0) {\n            const target = [...targets][0];\n\n            const killGoal = KillSomethingGoalType.createAsSubGoal(goal, {\n                target: target.id,\n            });\n\n            entity.brain.pushGoal(killGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // is there anything i want to do since i'm bored?\n        const boredomGoal = entity.fireEvent('boredom');\n\n        if (boredomGoal.data.goal) {\n            entity.brain.pushGoal(boredomGoal.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // nothing to do, just idle\n        entity.fireEvent('energy-consumed', 1000);\n\n        return SUCCESS;\n    };\n}\n","import { FAILURE } from '../GoalActionResult';\nimport { game } from '../../core/Game';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return game.ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        }).goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { GoalType } from './GoalType';\nimport { FAILURE, SUCCESS } from '../GoalActionResult';\nimport { computeAStar } from '../../utils/AStar';\nimport { game } from '../../core/Game';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { MoveGoalType } from './MoveGoalType';\n\nexport class KillSomethingGoalType extends GoalType {\n    static name = 'KillSomething';\n\n    static isFinished = (entity, goal) => {\n        return !goal.target || goal.target.isDead || goal.target.isDestroyed;\n    };\n\n    static takeAction = (entity, goal) => {\n        // try melee\n        let evt = entity.fireEvent('try-melee', {\n            target: goal.target,\n        });\n\n        if (evt.handled) {\n            return SUCCESS;\n        }\n\n        const start = entity.position.getPos();\n        const targetPos = goal.target.position.getPos();\n\n        // try pathing to target\n        const result = computeAStar({\n            start,\n            goal: targetPos,\n            cost: (a, b) => {\n                const entities = game.map.getEntitiesAt(b.x, b.y);\n\n                if (game.map.isOutOfbounds(b.x, b.y)) {\n                    return Infinity;\n                }\n\n                if (entities.some((e) => e.blocker)) {\n                    return Infinity;\n                }\n\n                return diagonalDistance(a, b);\n            },\n        });\n\n        if (result.success) {\n            const segment = result.path[1];\n            const delta = {\n                x: segment.x - start.x,\n                y: segment.y - start.y,\n            };\n            const moveGoal = MoveGoalType.createAsSubGoal(goal, {\n                data: delta,\n            });\n\n            entity.brain.pushGoal(moveGoal);\n\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        // try defense\n        // try ranged\n        // try items\n        // try movement\n        // fail to intent\n\n        entity.fireEvent('energy-consumed', 1000);\n\n        return FAILURE;\n    };\n}\n","import { diagonalDistance } from './diagonalDistance';\nimport { manhattanDistance } from './ManhattanDistance';\nimport PriorityQueue from './PriorityQueue';\n\nconst getNeighbors = (x, y) => [\n    {\n        x: x,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y,\n    },\n    {\n        x: x + 1,\n        y: y,\n    },\n    {\n        x: x,\n        y: y + 1,\n    },\n    {\n        x: x - 1,\n        y: y - 1,\n    },\n    {\n        x: x + 1,\n        y: y - 1,\n    },\n    {\n        x: x - 1,\n        y: y + 1,\n    },\n    {\n        x: x + 1,\n        y: y + 1,\n    },\n];\n\nconst key = (pos) => `${pos.x},${pos.y}`;\n\nconst defaultSettings = {\n    start: {},\n    goal: {},\n    cost: () => {},\n    allowDiagonals: true,\n};\n\nexport const computeAStar = (settings = defaultSettings) => {\n    const heuristic = settings.allowDiagonals\n        ? diagonalDistance\n        : manhattanDistance;\n    const start = settings.start;\n    const goal = settings.goal;\n    const cost = settings.cost;\n\n    const open = new PriorityQueue();\n    const cameFrom = {};\n    const costSoFar = {};\n    const startKey = key(start);\n    const goalKey = key(goal);\n\n    const result = {\n        success: false,\n        path: [],\n        costs: [],\n        cost: Infinity,\n        start,\n        goal,\n    };\n\n    if (cost(start, goal) === Infinity) {\n        return result;\n    }\n\n    open.put(\n        {\n            key: startKey,\n            pos: start,\n        },\n        0\n    );\n\n    costSoFar[startKey] = 0;\n\n    while (!open.isEmpty()) {\n        const { key: currentKey, pos: current } = open.pop();\n\n        if (currentKey === goalKey) {\n            result.success = true;\n            break;\n        }\n\n        const neighbors = getNeighbors(current.x, current.y);\n\n        for (let next of neighbors) {\n            const nextKey = key(next);\n            const graphCost = nextKey === goalKey ? 0 : cost(current, next);\n\n            if (graphCost === Infinity) {\n                continue;\n            }\n\n            const newCost = costSoFar[currentKey] + graphCost;\n\n            if (!(nextKey in costSoFar) || newCost < costSoFar[nextKey]) {\n                costSoFar[nextKey] = newCost;\n\n                const priority = newCost + heuristic(next, goal);\n\n                open.put(\n                    {\n                        key: nextKey,\n                        pos: next,\n                    },\n                    priority\n                );\n\n                cameFrom[nextKey] = current;\n            }\n        }\n    }\n\n    if (!result.success) {\n        return result;\n    }\n\n    result.path = [goal];\n    result.cost = costSoFar[goalKey];\n    result.costs = [costSoFar[goalKey]];\n\n    let previous = cameFrom[key(goal)];\n\n    while (previous) {\n        const previousKey = key(previous);\n\n        result.path.unshift(previous);\n        result.costs.unshift(costSoFar[previousKey]);\n\n        previous = cameFrom[previousKey];\n    }\n\n    return result;\n};\n","export const diagonalDistance = (a, b) => {\n    const dx = Math.abs(a.x - b.x);\n    const dy = Math.abs(a.y - b.y);\n\n    return 1 * (dx + dy) + (1.41 - 2 * 1) * Math.min(dx, dy);\n};\n","export const manhattanDistance = (a, b) => {\n    return Math.abs(a.x - b.x) + Math.abs(a.y - b.y);\n};\n","const createItem = (value, priority) => ({ value, priority });\n\nexport default class PriorityQueue {\n    #items = [];\n\n    isEmpty() {\n        return this.#items.length <= 0;\n    }\n\n    pop() {\n        if (!this.isEmpty()) {\n            return this.#items.shift().value;\n        }\n    }\n\n    peek() {\n        if (!this.isEmpty()) {\n            return this.#items[0].value;\n        }\n    }\n\n    put(value, priority) {\n        const item = createItem(value, priority);\n\n        for (let i = 0; i < this.#items.length; i++) {\n            if (this.#items[i].priority > item.priority) {\n                this.#items.splice(i, 0, item);\n                return;\n            }\n        }\n\n        this.#items.push(item);\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport const createSpawnable = () => {\n    const type = pickRandom(['PineTree', 'SmallPineTree']);\n    const tree = game.ecs.createPrefab(type);\n\n    return tree;\n};\n","export const pickRandom = (arr) => {\n    return arr[Math.floor(Math.random() * arr.length)];\n};\n\nexport const randomInt = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const randomBool = () => {\n    return pickRandom([true, false]);\n};\n","import { BoredGoalType } from '../../ai/GoalTypes';\nimport { game } from '../../core/Game';\n\nexport const createSpawnable = () => {\n    const wanderer = game.ecs.createPrefab('HumanWanderer');\n\n    wanderer.brain.pushGoal(BoredGoalType.create());\n\n    return wanderer;\n};\n","import { game } from '../../core/Game';\n\nexport const createSpawnable = (data) => {\n    return game.ecs.createPrefab('Pool', {\n        liquidContainer: {\n            content: data.content,\n            volume: data.volume,\n        },\n    });\n};\n","import { Component } from 'geotic';\nimport { Blocker } from './Blocker';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Door extends Component {\n    static properties = {\n        isOpen: false,\n        chOpen: \"'\",\n        chClosed: '+',\n    };\n\n    get ch() {\n        return this.isOpen ? this.chOpen : this.chClosed;\n    }\n\n    get display() {\n        return this.isOpen ? '[open]' : '[closed]';\n    }\n\n    openDoor() {\n        if (this.isOpen) {\n            return false;\n        }\n\n        this.isOpen = true;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.blocker.destroy();\n        this.entity.shadowcaster.destroy();\n\n        return true;\n    }\n\n    closeDoor() {\n        if (!this.isOpen) {\n            return false;\n        }\n        // todo: check if entity blocking door\n\n        this.isOpen = false;\n\n        const glyph = this.entity.glyph;\n\n        if (glyph) {\n            glyph.ch = this.ch;\n        }\n\n        this.entity.add(Blocker);\n        this.entity.add(Shadowcaster);\n\n        return true;\n    }\n\n    onGetInteractions(evt) {\n        if (this.isOpen) {\n            evt.data.interactions.push({\n                name: 'Close door',\n                evt: 'try-close-door',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Open door',\n                evt: 'try-open-door',\n            });\n        }\n    }\n\n    onTryCloseDoor(evt) {\n        if (this.closeDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onTryOpenDoor(evt) {\n        if (this.openDoor()) {\n            evt.data.interactor.fireEvent('energy-consumed', 800);\n        }\n        evt.handle();\n    }\n\n    onProjectileHit(evt) {\n        if (!this.isOpen) {\n            evt.data.stopProjectile = true;\n            evt.data.deflectProjectile = false;\n        }\n\n        this.openDoor();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Blocker extends Component {\n    onProjectileHit(evt) {\n        // https://github.com/ddmills/geotic/issues/22\n        if (!this.isAttached) {\n            return;\n        }\n\n        evt.data.stopProjectile = true;\n        evt.data.deflectProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Shadowcaster extends Component {}\n","import { Component } from 'geotic';\n\nexport class Armor extends Component {\n    static properties = {\n        value: 4,\n    };\n\n    onQueryEquippedAbilityModifierArmor(evt) {\n        evt.data.modifiers.push({\n            source: this.entity.moniker.name,\n            mod: this.value,\n        });\n    }\n}\n","import { Component } from 'geotic';\nimport { Inventory } from './Inventory';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Loot extends Component {\n    onGetInteractions(evt) {\n        const interactor = evt.data.interactor;\n        const isInventoried = this.entity.has(IsInventoried);\n\n        if (!interactor.has(Inventory)) {\n            return;\n        }\n\n        if (isInventoried) {\n            if (interactor.inventory.hasLoot(this.entity)) {\n                evt.data.interactions.push({\n                    name: 'Drop',\n                    evt: 'try-drop',\n                });\n            } else {\n                evt.data.interactions.push({\n                    name: 'Take',\n                    evt: 'try-take',\n                });\n            }\n        } else {\n            evt.data.interactions.push({\n                name: 'Pickup',\n                evt: 'try-pick-up',\n            });\n        }\n    }\n\n    onEquipped(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactor.inventory.addLoot(this.entity);\n    }\n\n    onTryPickUp(evt) {\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n        evt.handle();\n    }\n\n    onTryTake(evt) {\n        const owner = this.entity.isInventoried.owner;\n\n        owner.inventory.removeLoot(this.entity);\n        evt.data.interactor.inventory.addLoot(this.entity);\n        evt.data.interactor.fireEvent('energy-consumed', 100);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_INVENTORY } from '../../core/screens/ScreenType';\nimport { IsInventoried } from './IsInventoried';\nimport { Stackable } from './Stackable';\n\nexport class Inventory extends Component {\n    static properties = {\n        content: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.content.forEach((entity) => entity.destroy());\n    }\n\n    onQueryOwnership(evt) {\n        this.content.forEach((entity) => {\n            evt.data.result.add(entity);\n            entity.fireEvent('query-ownership', { result: evt.data.result });\n        });\n    }\n\n    getStackable(stackableIdentifier) {\n        return this.content.find((entity) => {\n            return (\n                entity.has(Stackable) &&\n                entity.stackable.identifier === stackableIdentifier\n            );\n        });\n    }\n\n    addLoot(loot) {\n        if (loot.has(Stackable)) {\n            const existing = this.getStackable(loot.stackable.identifier);\n\n            if (existing) {\n                existing.stackable.addOther(loot);\n\n                return;\n            }\n        }\n\n        loot.add(IsInventoried, {\n            owner: this.entity,\n        });\n\n        this.content.push(loot);\n    }\n\n    hasLoot(loot) {\n        const idx = this.content.indexOf(loot);\n\n        return idx >= 0;\n    }\n\n    removeLoot(loot, quantity) {\n        const isStackable = loot.has(Stackable);\n\n        if (isStackable && !isNaN(quantity)) {\n            loot.stackable.split(quantity);\n\n            return this.removeLoot(loot);\n        }\n\n        const idx = this.content.indexOf(loot);\n\n        if (idx >= 0) {\n            this.content.splice(idx, 1);\n            loot.isInventoried.destroy();\n        }\n\n        return loot;\n    }\n\n    dropLoot(loot, quantity) {\n        const ob = this.removeLoot(loot, quantity);\n        const pos = this.entity.position.getPos();\n\n        ob.position.setPos(pos.x, pos.y);\n\n        ob.fireEvent('dropped', {\n            dropper: this.entity,\n        });\n\n        return ob;\n    }\n\n    onTryOpen(evt) {\n        game.screens.replaceScreen(SCREEN_INVENTORY, {\n            accessible: this.entity,\n            accessor: evt.data.interactor,\n        });\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        evt.data.interactions.push({\n            name: 'Open',\n            evt: 'try-open',\n        });\n    }\n}\n","export const SCREEN_MAIN_MENU = 0;\nexport const SCREEN_ADVENTURE = 1;\nexport const SCREEN_DEATH = 2;\nexport const SCREEN_INVENTORY = 3;\nexport const SCREEN_INTERACT_MODAL = 4;\nexport const SCREEN_CURSOR = 5;\nexport const SCREEN_LOAD_SECTOR = 6;\nexport const SCREEN_EQUIPMENT = 7;\nexport const SCREEN_LIST_SELECT = 8;\nexport const SCREEN_CHARACTER = 9;\n","import { Component } from 'geotic';\nimport { Stackable } from './Stackable';\n\nexport class IsInventoried extends Component {\n    static properties = {\n        owner: '<Entity>',\n    };\n\n    isOwnedBy(entity) {\n        return this.owner && this.owner.id === entity.id;\n    }\n\n    onQueryOwnership(evt) {\n        evt.data.result.add(this.entity);\n    }\n\n    onTryDrop(evt) {\n        this.owner.inventory.dropLoot(this.entity);\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        evt.handle();\n    }\n\n    onThrown(evt) {\n        const isStackable = this.entity.has(Stackable);\n        const quantity = isStackable ? 1 : null;\n\n        this.owner.inventory.removeLoot(this.entity, quantity);\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { STACKABLE_DEFAULT } from '../../enums/Stackables';\nimport { IsDestroying } from './IsDestroying';\nimport { IsInventoried } from './IsInventoried';\n\nexport class Stackable extends Component {\n    static properties = {\n        identifier: STACKABLE_DEFAULT,\n        quantity: 1,\n    };\n\n    get display() {\n        return `x ${this.quantity}`;\n    }\n\n    increment(amount) {\n        this.quantity += amount;\n    }\n\n    addOther(other) {\n        this.increment(other.stackable.quantity);\n        other.stackable.quantity = 0;\n        other.add(IsDestroying);\n    }\n\n    split(quantity) {\n        if (quantity >= this.quantity) {\n            quantity = this.quantity;\n            return this.entity;\n        }\n\n        const clone = game.engine.cloneEntity(this.entity);\n        clone.stackable.quantity -= quantity;\n\n        this.quantity = quantity;\n\n        if (clone.has(IsInventoried)) {\n            // make sure inventory contents are still \"correct\"\n            clone.isInventoried.owner.inventory.content.push(clone);\n        }\n\n        return clone;\n    }\n}\n","export const STACKABLE_DEFAULT = 'STACKABLE_DEFAULT';\nexport const STACKABLE_STONE = 'STACKABLE_STONE';\nexport const STACKABLE_GLASS_SHARD = 'STACKABLE_GLASS_SHARD';\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_ADVENTURE, SCREEN_CURSOR } from '../../core/screens/ScreenType';\nimport { ABILITY_THROWING, getAbilityValue } from '../../data/Abilities';\nimport Attack from '../../data/Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../../data/DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../../data/Stats';\nimport {\n    CURSOR_SEGMENT_INVALID,\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_UNKNOWN,\n    CURSOR_SEGMENT_NONE,\n} from '../../enums/CursorSegments';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { randomInt } from '../../utils/rand';\nimport { Blocker } from './Blocker';\nimport { Body } from './Body';\nimport { Inventory } from './Inventory';\nimport { IsVisible } from './IsVisible';\n\nexport class Throwable extends Component {\n    static properties = {\n        die: 4,\n        modifier: 0,\n        cost: 500,\n        damageType: DMG_TYPE_BLUDGEONING,\n    };\n\n    onGetInteractions(evt) {\n        if (!evt.data.interactor.has(Inventory)) {\n            return;\n        }\n\n        if (!evt.data.interactor.inventory.hasLoot(this.entity)) {\n            return;\n        }\n\n        evt.data.interactions.push({\n            name: 'Throw',\n            evt: 'try-throw',\n        });\n    }\n\n    throw(trajectory, initiator) {\n        this.entity.fireEvent('thrown', {\n            initiator,\n            trajectory,\n        });\n\n        for (let i = 0; i < trajectory.length; i++) {\n            if (i == 0) {\n                continue;\n            }\n\n            const position = trajectory[i];\n            const entities = position.entities;\n\n            let stopped = false;\n            let deflected = false;\n\n            const hit = entities.find((entity) => {\n                const evt = entity.fireEvent('projectile-hit', {\n                    initiator,\n                    trajectory,\n                    projectile: this.entity,\n                });\n\n                stopped = evt.data.stopProjectile;\n                deflected = evt.data.deflectProjectile;\n\n                return stopped || deflected;\n            });\n\n            if (hit) {\n                if (deflected) {\n                    const prev = trajectory[i - 1];\n\n                    this.entity.position.setPos(prev.x, prev.y);\n                    this.entity.fireEvent('collide-ground', {\n                        initiator,\n                        x: prev.x,\n                        y: prev.y,\n                    });\n                } else {\n                    this.entity.position.setPos(position.x, position.y);\n                    this.entity.fireEvent('collide', {\n                        initiator,\n                        hit,\n                        x: position.x,\n                        y: position.y,\n                    });\n\n                    const str = getStat(STAT_STRENGTH, initiator);\n                    const die = randomInt(1, this.die);\n                    const damage = die + str + this.modifier;\n                    const attack = new Attack({\n                        attacker: initiator,\n                        defender: hit,\n                        weaponName: this.entity.moniker.display,\n                        damage,\n                        damageType: this.damageType,\n                        ignoreDodge: true,\n                    });\n\n                    hit.fireEvent('attacked', { attack });\n                }\n\n                break;\n            } else if (i === trajectory.length - 1) {\n                this.entity.position.setPos(position.x, position.y);\n                this.entity.fireEvent('collide-ground', {\n                    initiator,\n                    x: position.x,\n                    y: position.y,\n                });\n            }\n        }\n    }\n\n    onTryThrow(evt) {\n        const range = getAbilityValue(ABILITY_THROWING, evt.data.interactor);\n\n        game.screens.pushScreen(SCREEN_CURSOR, {\n            start: evt.data.interactor.position.getPos(),\n            drawLine: true,\n            drawTags: false,\n            onResult: (cursor) => {\n                game.screens.setScreen(SCREEN_ADVENTURE);\n\n                this.entity.position.setPos(cursor.start.x, cursor.start.y);\n\n                const line = bresenhamLine(\n                    cursor.start.x,\n                    cursor.start.y,\n                    cursor.position.x,\n                    cursor.position.y\n                );\n                const trajectory = line.slice(0, range + 1).map((pos) => ({\n                    x: pos.x,\n                    y: pos.y,\n                    entities: game.map.getEntitiesAt(pos.x, pos.y),\n                }));\n\n                evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n                this.throw(trajectory, evt.data.interactor);\n            },\n            onCancel: () => {\n                game.screens.popScreen();\n            },\n            getSegmentTypes: (line) => {\n                let lineValid = true;\n\n                const result = line.map(({ x, y }, idx) => {\n                    if (idx === 0) {\n                        return CURSOR_SEGMENT_NONE;\n                    }\n\n                    // todo: fire \"query\" event on each item in path\n                    const entities = game.map.getEntitiesAt(x, y);\n                    const blocker = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Blocker)\n                    );\n                    const body = entities.find(\n                        (entity) => entity.has(IsVisible) && entity.has(Body)\n                    );\n\n                    if (blocker) {\n                        lineValid = false;\n                    }\n\n                    const atMaxRange = idx === range;\n\n                    if (lineValid && (body || atMaxRange)) {\n                        lineValid = false;\n                        return CURSOR_SEGMENT_INTEREST;\n                    }\n\n                    return !lineValid\n                        ? CURSOR_SEGMENT_INVALID\n                        : CURSOR_SEGMENT_UNKNOWN;\n                });\n\n                const interestIdx = result.indexOf(CURSOR_SEGMENT_INTEREST);\n                const blockerIdx = result.indexOf(CURSOR_SEGMENT_INVALID);\n\n                if (interestIdx < blockerIdx && blockerIdx >= 1) {\n                    result[blockerIdx - 1] = CURSOR_SEGMENT_INTEREST;\n                }\n\n                return result;\n            },\n        });\n    }\n}\n","import ArmorAbility from './abilities/ArmorAbility';\nimport SpeedAbility from './abilities/SpeedAbility';\nimport ThrowingAbility from './abilities/ThrowingAbility';\nimport DodgeAbility from './abilities/DodgeAbility';\n\nexport const ABILITY_SPEED = 'ABILITY_SPEED';\nexport const ABILITY_THROWING = 'ABILITY_THROWING';\nexport const ABILITY_ARMOR = 'ABILITY_ARMOR';\nexport const ABILITY_DODGE = 'ABILITY_DODGE';\n\nconst lookup = {\n    [ABILITY_ARMOR]: new ArmorAbility(),\n    [ABILITY_SPEED]: new SpeedAbility(),\n    [ABILITY_THROWING]: new ThrowingAbility(),\n    [ABILITY_DODGE]: new DodgeAbility(),\n};\n\nexport const getAbility = (key) => lookup[key];\nexport const getAbilityName = (key) => lookup[key].name;\nexport const getAbilityValue = (key, entity) => lookup[key].compute(entity);\n","import { ABILITY_ARMOR } from '../Abilities';\nimport Ability from './Ability';\n\nexport const getArmorBlockPercent = (ability = 0) => {\n    const base = 10;\n    const unscaled = 1 - base / (ability + base);\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class ArmorAbility extends Ability {\n    constructor() {\n        super(ABILITY_ARMOR, 'armor');\n    }\n\n    compute(entity) {\n        return this.getModifierSum(entity);\n    }\n}\n","export default class Ability {\n    key = -1;\n    name = 'ability';\n    baseStat = null;\n\n    constructor(key, name, baseStat) {\n        this.key = key;\n        this.name = name;\n        this.baseStat = baseStat;\n    }\n\n    getModifiers(entity) {\n        const modifiers = [];\n\n        entity.fireEvent(`query-ability-modifier-${this.name}`, {\n            name: this.name,\n            modifiers,\n        });\n\n        return modifiers;\n    }\n\n    getModifierSum(entity) {\n        const modifiers = this.getModifiers(entity);\n\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    compute(entity) {\n        return 1;\n    }\n}\n","import { ABILITY_SPEED } from '../Abilities';\nimport Ability from './Ability';\n\nexport default class SpeedAbility extends Ability {\n    constructor() {\n        super(ABILITY_SPEED, 'speed');\n    }\n\n    compute(entity) {\n        return this.getModifierSum(entity);\n    }\n}\n","import { ABILITY_THROWING } from '../Abilities';\nimport { getStat, STAT_ATHLETICISM } from '../Stats';\nimport Ability from './Ability';\n\nexport default class ThrowingAbility extends Ability {\n    constructor() {\n        super(ABILITY_THROWING, 'throwing', STAT_ATHLETICISM);\n    }\n\n    compute(entity) {\n        const base = getStat(STAT_ATHLETICISM, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return Math.max(0, base + modifier) + 6;\n    }\n}\n","import { randomInt } from '../utils/rand';\n\nexport const STAT_STRENGTH = 0;\nexport const STAT_FINESSE = 1;\nexport const STAT_ATHLETICISM = 2;\nexport const STAT_TRICKERY = 3;\n\nconst lookup = {\n    [STAT_STRENGTH]: {\n        name: 'strength',\n    },\n    [STAT_FINESSE]: {\n        name: 'finesse',\n    },\n    [STAT_ATHLETICISM]: {\n        name: 'athleticism',\n    },\n    [STAT_TRICKERY]: {\n        name: 'trickery',\n    },\n};\n\nexport const getStatName = (stat) => lookup[stat].name;\nexport const getStat = (stat, entity) => {\n    const name = lookup[stat].name;\n\n    return entity.stats[name]();\n};\n","import { ABILITY_DODGE } from '../Abilities';\nimport { getStat, STAT_FINESSE } from '../Stats';\nimport Ability from './Ability';\n\nexport const getDodgePercent = (ability = 0) => {\n    const base = 5;\n    const unscaled = 1 - base / (ability + base);\n\n    return Math.floor(unscaled * 100);\n};\n\nexport default class DodgeAbility extends Ability {\n    constructor() {\n        super(ABILITY_DODGE, 'dodge', STAT_FINESSE);\n    }\n\n    compute(entity) {\n        const stat = getStat(STAT_FINESSE, entity);\n        const modifier = this.getModifierSum(entity);\n\n        return stat + modifier;\n    }\n}\n","export default class Attack {\n    constructor(data) {\n        this.attacker = data.attacker;\n        this.defender = data.defender;\n        this.weaponName = data.weaponName;\n        this.damage = data.damage;\n        this.damageType = data.damageType;\n        this.ignoreDodge = data.ignoreDodge;\n    }\n}\n","export const DMG_TYPE_BLUDGEONING = 'DMG_TYPE_BLUDGEONING';\nexport const DMG_TYPE_PIERCING = 'DMG_TYPE_PIERCING';\nexport const DMG_TYPE_SLASHING = 'DMG_TYPE_SLASHING';\n\nconst lookup = {\n    [DMG_TYPE_BLUDGEONING]: {\n        name: 'Bludgeoning',\n        verb: 'bludgeons',\n    },\n    [DMG_TYPE_PIERCING]: {\n        name: 'Piercing',\n        verb: 'pierces',\n    },\n    [DMG_TYPE_SLASHING]: {\n        name: 'Slashing',\n        verb: 'slashes',\n    },\n};\n\nexport const getDmgTypeName = (type) => lookup[type].name;\nexport const getDmgTypeVerb = (type) => lookup[type].verb;\n","export const CURSOR_SEGMENT_UNKNOWN = 0;\nexport const CURSOR_SEGMENT_INVALID = 1;\nexport const CURSOR_SEGMENT_NONE = 2;\nexport const CURSOR_SEGMENT_INTEREST = 3;\n\nconst colorMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '#444',\n    [CURSOR_SEGMENT_INVALID]: '#ce5454',\n    [CURSOR_SEGMENT_INTEREST]: '#66a3dc',\n};\n\nconst glyphMap = {\n    [CURSOR_SEGMENT_UNKNOWN]: '·',\n    [CURSOR_SEGMENT_INVALID]: '·',\n    [CURSOR_SEGMENT_INTEREST]: '•',\n};\n\nexport const getCursorSegmentTypeColor = (type) => colorMap[type];\nexport const getCursorSegmentTypeGlyph = (type) => glyphMap[type];\n","export const bresenhamLine = (x0, y0, x1, y1) => {\n    const dx = Math.abs(x1 - x0);\n    const dy = Math.abs(y1 - y0);\n    const sx = x0 < x1 ? 1 : -1;\n    const sy = y0 < y1 ? 1 : -1;\n    const result = [];\n\n    let err = dx - dy;\n\n    while (true) {\n        result.push({\n            x: x0,\n            y: y0,\n        });\n\n        if (x0 === x1 && y0 === y1) {\n            break;\n        }\n\n        const e2 = 2 * err;\n\n        if (e2 > -dy) {\n            err -= dy;\n            x0 += sx;\n        }\n        if (e2 < dx) {\n            err += dx;\n            y0 += sy;\n        }\n    }\n\n    return result;\n};\n\nexport const bresenhamLineExclusive = (x0, y0, x1, y1) => {\n    const line = bresenhamLine(x0, y0, x1, y1);\n\n    line.shift();\n    line.pop();\n\n    return line;\n};\n","import { Component } from 'geotic';\nimport { SPWN_CORPSE } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\n\nexport class Body extends Component {\n    static properties = {\n        corpseSpawnable: SPWN_CORPSE,\n    };\n\n    onDeath(evt) {\n        if (!this.entity.has('Position')) {\n            return;\n        }\n\n        const pos = this.entity.position.getPos();\n        const corpse = spawn(this.corpseSpawnable, pos.x, pos.y);\n\n        if (this.entity.has('Moniker')) {\n            corpse.moniker.name = `${this.entity.moniker.name} corpse`;\n        }\n    }\n\n    onProjectileHit(evt) {\n        evt.data.stopProjectile = true;\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsVisible extends Component {\n    static properties = {\n        amount: 0,\n        range: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SPWN_GLASS_SHARD } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { CONSOLE_EVENT_SHATTER } from '../../enums/ConsoleEvents';\nimport { IsDestroying } from './IsDestroying';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class FragileGlass extends Component {\n    shatter(x, y) {\n        spawn(SPWN_GLASS_SHARD, x, y, {\n            stackable: {\n                quantity: 3,\n            },\n        });\n\n        if (this.entity.has(LiquidContainer)) {\n            if (this.entity.liquidContainer.pour(x, y)) {\n                game.console.event(CONSOLE_EVENT_SHATTER, {\n                    target: this.entity,\n                    liquid: this.entity.liquidContainer.content,\n                });\n            }\n        } else {\n            game.console.event(CONSOLE_EVENT_SHATTER, {\n                target: this.entity,\n            });\n        }\n\n        this.entity.add(IsDestroying);\n    }\n\n    onCollideGround(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n\n    onCollide(evt) {\n        this.shatter(evt.data.x, evt.data.y);\n    }\n}\n","import { getDmgTypeVerb } from '../data/DamageTypes';\nimport { IsPlayer, Moniker, IsVisible } from '../ecs/components';\nimport { liquids } from './LiquidTypes';\n\nexport const CONSOLE_EVENT_DAMAGE = 0;\nexport const CONSOLE_EVENT_DEAD = 1;\nexport const CONSOLE_EVENT_SHATTER = 2;\nexport const CONSOLE_EVENT_MISS = 3;\nexport const CONSOLE_EVENT_BLOCK = 4;\n\nconst getMonikerSubject = (entity) => {\n    if (entity.has(Moniker)) {\n        return `The ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n\n    return `The thing`;\n};\n\nconst getMonikerIndirectObject = (entity) => {\n    if (entity.has(IsPlayer)) {\n        return 'you';\n    }\n\n    if (entity.has(Moniker)) {\n        return `the ${entity.moniker.simpleDisplay.toLowerCase()}`;\n    }\n};\n\nconst mapping = {\n    [CONSOLE_EVENT_MISS]: {\n        message(data) {\n            const attacker = getMonikerIndirectObject(data.attacker);\n            const defender = getMonikerSubject(data.defender);\n\n            return `${defender} dodged an attack from ${attacker} (${data.dodgePrcnt}%)`;\n        },\n        shouldAppear(data) {\n            return data.defender.has(IsPlayer) || data.attacker.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DAMAGE]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n            const dmg = data.damage;\n            const blocked = data.blocked;\n\n            const blockText =\n                blocked > 0 ? `. (${blocked} damage was blocked)` : '';\n\n            return `${source} ${dmgVerb} ${target} for ${dmg} hp${blockText}`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_DEAD]: {\n        message(data) {\n            const source = getMonikerSubject(data.source);\n            const target = getMonikerIndirectObject(data.target);\n            const dmgVerb = getDmgTypeVerb(data.damageType);\n\n            return `${source} ${dmgVerb} ${target} to death`;\n        },\n        shouldAppear(data) {\n            return data.target.has(IsPlayer) || data.target.has(IsVisible);\n        },\n    },\n    [CONSOLE_EVENT_SHATTER]: {\n        message(data) {\n            if (isNaN(data.liquid)) {\n                return `${getMonikerSubject(data.target)} shatters!`;\n            } else {\n                return `${getMonikerSubject(\n                    data.target\n                )} shatters and spills its ${\n                    liquids[data.liquid].colorDesc\n                } content!`;\n            }\n        },\n        shouldAppear(data) {\n            return data.target.has(IsVisible);\n        },\n    },\n};\n\nexport const getMessage = (evt, data) => {\n    return mapping[evt].message(data);\n};\n\nexport const shouldAppear = (evt, data) => {\n    return mapping[evt].shouldAppear(data);\n};\n","import { Component } from 'geotic';\nimport { INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onDestroyed() {\n        this.goals.forEach((entity) => {\n            entity.destroy();\n        });\n    }\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().entity.destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result === FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result === INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        const goalsToDestroy = [];\n\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.entity.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                goalsToDestroy.push(g.goal);\n                return false;\n            }\n\n            return true;\n        });\n\n        goalsToDestroy.forEach((g) => g.entity.destroy());\n    }\n\n    pushGoal(goal) {\n        if (!(goal instanceof Component)) {\n            throw new Error('Pushing non-component goal!', goal);\n        }\n\n        goal.parent = this.entity;\n\n        return this.goals.push(goal.entity);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { Component } from 'geotic';\nimport { Door } from './Door';\nimport { LiquidContainer } from './LiquidContainer';\nimport { Stackable } from './Stackable';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n\n    get simpleDisplay() {\n        return this.name;\n    }\n\n    get display() {\n        const hasLiquid = this.entity.has(LiquidContainer);\n\n        if (hasLiquid) {\n            const disp = this.entity.liquidContainer.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasStackable = this.entity.has(Stackable);\n\n        if (hasStackable) {\n            const disp = this.entity.stackable.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        const hasDoor = this.entity.has(Door);\n\n        if (hasDoor) {\n            const disp = this.entity.door.display;\n\n            return `${this.name} ${disp}`;\n        }\n\n        return this.name;\n    }\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker)\n            ? this.entity.moniker.display\n            : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    getPos() {\n        return window.game.map.getPosition(this.entity.id);\n    }\n\n    setPos(x, y) {\n        return window.game.map.setPosition(x, y, this.entity.id);\n    }\n\n    equals(x, y) {\n        const pos = this.getPos();\n\n        return pos.x === x && pos.y === y;\n    }\n}\n","import { Component } from 'geotic';\nimport { LiquidContainer } from './LiquidContainer';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg1: '#ddd',\n        fg2: '#666',\n        bg: null,\n        ch: '?',\n    };\n\n    get primary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.primaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg1;\n    }\n\n    get secondary() {\n        if (this.entity.has(LiquidContainer)) {\n            const col = this.entity.liquidContainer.secondaryColorOverride;\n\n            if (col) {\n                return col;\n            }\n        }\n\n        return this.fg2;\n    }\n\n    get background() {\n        return this.bg;\n    }\n\n    get char() {\n        return this.ch;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { ABILITY_SPEED, getAbilityValue } from '../../data/Abilities';\nimport { Blocker } from './Blocker';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        const position = this.entity.position.getPos();\n        const targetX = position.x + evt.data.x;\n        const targetY = position.y + evt.data.y;\n\n        const targetTileEntities = game.map.getEntitiesAt(targetX, targetY);\n\n        if (targetTileEntities.some((entity) => entity.has(Blocker))) {\n            return;\n        }\n\n        const nonHostile = targetTileEntities.find((entity) => {\n            return (\n                entity.factionMember &&\n                !game.factions.areEntitiesHostile(entity, this.entity)\n            );\n        });\n\n        // swap locations\n        if (nonHostile) {\n            nonHostile.position.setPos(position.x, position.y);\n        }\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.entity);\n        const cost = (1 / speed) * 1000;\n\n        this.entity.fireEvent('energy-consumed', cost);\n        this.entity.position.setPos(targetX, targetY);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n        adjacent: [],\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\ndirections[DIR_NW].adjacent = [DIR_N, DIR_W];\ndirections[DIR_N].adjacent = [DIR_NW, DIR_NE];\ndirections[DIR_NE].adjacent = [DIR_N, DIR_E];\ndirections[DIR_W].adjacent = [DIR_NW, DIR_SW];\ndirections[DIR_E].adjacent = [DIR_NE, DIR_SE];\ndirections[DIR_SW].adjacent = [DIR_W, DIR_S];\ndirections[DIR_S].adjacent = [DIR_SW, DIR_SE];\ndirections[DIR_SE].adjacent = [DIR_S, DIR_E];\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n\nexport const adjacent = (direction) => directions[direction].adjacent;\n\nexport const getAdjacentDeltas = (direction) => adjacent(direction).map(delta);\n\nexport const directionFromDelta = (x, y) => {\n    return Object.values(directions).find((dir) => {\n        return dir.delta.x === x && dir.delta.y === y;\n    });\n};\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MeleeCommand extends Component {\n    static properties = {\n        target: '<Entity>',\n    };\n}\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() > 0.5) {\n            return;\n        }\n\n        const direction = Math.floor(Math.random() * 9);\n        const delta = Directions.delta(direction);\n\n        evt.data.goal = MoveGoalType.create({\n            data: delta,\n        });\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Explorable extends Component {}\n","import { Component } from 'geotic';\n\nexport class Explored extends Component {}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport {\n    ABILITY_ARMOR,\n    ABILITY_DODGE,\n    getAbilityValue,\n} from '../../data/Abilities';\nimport { getArmorBlockPercent } from '../../data/abilities/ArmorAbility';\nimport { getDodgePercent } from '../../data/abilities/DodgeAbility';\nimport {\n    CONSOLE_EVENT_DAMAGE,\n    CONSOLE_EVENT_DEAD,\n    CONSOLE_EVENT_MISS,\n} from '../../enums/ConsoleEvents';\nimport { randomInt } from '../../utils/rand';\nimport { IsDead } from './IsDead';\n\nexport class Health extends Component {\n    static properties = {\n        value: 32,\n        max: 32,\n    };\n\n    applyDamage(damage) {\n        this.value -= damage;\n\n        if (this.value <= 0) {\n            this.value = 0;\n            this.entity.add(IsDead);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    onAttacked(evt) {\n        const attack = evt.data.attack;\n        const attacker = attack.attacker;\n        const defender = attack.defender;\n        const dodge = getAbilityValue(ABILITY_DODGE, defender);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        if (!attack.ignoreDodge && randomInt(1, 100) <= dodgePrcnt) {\n            game.console.event(CONSOLE_EVENT_MISS, {\n                defender,\n                attacker,\n                dodgePrcnt,\n            });\n\n            evt.data.isDodged = true;\n            evt.data.isKilled = false;\n            evt.handle();\n\n            return;\n        }\n\n        evt.data.isDodged = false;\n\n        const armor = getAbilityValue(ABILITY_ARMOR, defender);\n        const armorPrcnt = getArmorBlockPercent(armor) / 100;\n        const blocked = Math.floor(attack.damage * armorPrcnt);\n        const damage = attack.damage - blocked;\n\n        const isKilled = this.applyDamage(damage);\n        evt.data.isKilled = isKilled;\n\n        if (isKilled) {\n            game.console.event(CONSOLE_EVENT_DEAD, {\n                target: defender,\n                source: attacker,\n                damage,\n                damageType: attack.damageType,\n            });\n\n            evt.handle();\n\n            return;\n        }\n\n        game.console.event(CONSOLE_EVENT_DAMAGE, {\n            target: defender,\n            source: attacker,\n            damage,\n            damageType: attack.damageType,\n            blocked,\n        });\n\n        const pos = this.entity.position.getPos();\n\n        game.particles.createParticle(pos.x, pos.y, {\n            lifetime: 140,\n            fg1s: ['#8d4c4f', '#730d14'],\n            glyphs: ['*'],\n        });\n\n        evt.handle();\n    }\n\n    onHeal(evt) {\n        this.value += evt.data.value;\n\n        if (this.value > this.max) {\n            this.value = this.max;\n        }\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class IsDead extends Component {}\n","import { Component } from 'geotic';\nimport { getFactionByName } from '../../enums/Factions';\n\nexport class FactionMember extends Component {\n    static properties = {\n        name: 'Neutral',\n    };\n\n    get faction() {\n        return getFactionByName(this.name);\n    }\n}\n","import Faction from '../data/Faction';\n\nexport const FACTION_PLAYER = 0;\nexport const FACTION_VILLAGER = 1;\nexport const FACTION_GOBLIN = 2;\nexport const FACTION_NATURE = 3;\n\nexport const factions = {\n    player: new Faction({\n        id: FACTION_PLAYER,\n        name: 'player',\n        display: 'Player',\n    }),\n    villager: new Faction({\n        id: FACTION_VILLAGER,\n        name: 'villager',\n        display: 'Villager',\n    }),\n    goblin: new Faction({\n        id: FACTION_GOBLIN,\n        name: 'goblin',\n        display: 'Goblin',\n    }),\n    nature: new Faction({\n        id: FACTION_NATURE,\n        name: 'nature',\n        display: 'Nature',\n    }),\n};\n\nexport const getFactionByName = (name) => factions[name];\n","export default class Faction {\n    id = 0;\n    name = 'faction';\n    display = 'Faction';\n\n    constructor(properties) {\n        this.id = properties.id;\n        this.name = properties.name;\n        this.display = properties.display;\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { bresenhamLine } from '../../utils/BresenhamLine';\nimport { Shadowcaster } from './Shadowcaster';\n\nexport class Eyes extends Component {\n    static properties = {\n        range: 5,\n    };\n\n    canSee(entity) {\n        const start = this.entity.position.getPos();\n        const end = entity.position.getPos();\n\n        const line = bresenhamLine(start.x, start.y, end.x, end.y);\n\n        if (line.length > this.range) {\n            return false;\n        }\n\n        return !line.some((segment) => {\n            return game.map\n                .getEntitiesAt(segment.x, segment.y)\n                .some((entity) => entity.has(Shadowcaster));\n        });\n    }\n\n    onTryDetectHostiles(evt) {\n        const position = game.map.getPosition(this.entity.id);\n\n        if (!position) {\n            return;\n        }\n\n        // get within square area\n        const targets = game.map\n            .getEntitiesInRange(position.x, position.y, this.range)\n            .filter((e) => {\n                if (!e.actor) {\n                    return false;\n                }\n                if (e.isDead) {\n                    return false;\n                }\n                if (!game.factions.areEntitiesHostile(this.entity, e)) {\n                    return false;\n                }\n\n                return this.canSee(e);\n            });\n\n        if (targets.length > 0) {\n            targets.forEach((e) => {\n                evt.data.targets.add(e);\n            });\n            evt.handle();\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Particle extends Component {\n    static properties = {\n        lifetime: 200,\n        fg1s: ['#8d4c4f', '#730d14'],\n        fg2s: [],\n        bgs: [],\n        glyphs: ['·'],\n        speed: 0.05,\n        age: 0,\n        x: 0,\n        y: 0,\n        startX: 0,\n        startY: 0,\n        direction: {\n            x: 0,\n            y: 0,\n        },\n    };\n\n    get isExpired() {\n        return this.age >= this.lifetime;\n    }\n\n    get percent() {\n        return this.age / this.lifetime;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n\n    get glyph() {\n        const frame = this.frame(this.glyphs);\n\n        return this.glyphs[frame];\n    }\n\n    get fg1() {\n        const frame = this.frame(this.fg1s);\n\n        return this.fg1s[frame];\n    }\n\n    get fg2() {\n        const frame = this.frame(this.fg2s);\n\n        return this.fg2s[frame];\n    }\n\n    get bg() {\n        const frame = this.frame(this.bgs);\n\n        return this.bgs[frame];\n    }\n}\n","import { Component } from 'geotic';\nimport { Particle } from './Particle';\n\nexport class ParticleEmitter extends Component {\n    static properties = {\n        particleData: {},\n        duration: 800,\n        rate: 3,\n        age: 0,\n        x: 0,\n        y: 0,\n        count: 0,\n    };\n\n    get isExpired() {\n        return this.age >= this.duration;\n    }\n\n    get percent() {\n        return this.age / this.duration;\n    }\n\n    createParticle() {\n        const particle = this.ecs.createEntity();\n\n        particle.add(Particle, {\n            ...this.particleData,\n            x: this.x,\n            y: this.y,\n        });\n\n        this.count += 1;\n\n        return particle;\n    }\n\n    frame(arr = []) {\n        const len = arr.length;\n        const chunks = 1 / len;\n\n        return Math.trunc(this.percent / chunks);\n    }\n}\n","import { Component } from 'geotic';\nimport { spawnLoot } from '../../data/tables/LootSpawn';\n\nexport class LootDropper extends Component {\n    static properties = {\n        tables: [],\n    };\n\n    onDeath(evt) {\n        const pos = this.entity.position.getPos();\n\n        spawnLoot(this.tables, pos.x, pos.y);\n    }\n}\n","import WeightedTable from '../../utils/WeightedTable';\nimport { spawn } from '../Spawner';\nimport LootTableGoblin from './loot/LootTableGoblin';\nimport LootTableForest from './loot/LootTableForest';\n\nconst tables = {\n    TBL_LOOT_GOBLIN: LootTableGoblin,\n    TBL_LOOT_FOREST: LootTableForest,\n};\n\nexport const getTable = (tableKey) => tables[tableKey];\n\nexport const pickLoot = (tableKeys = []) => {\n    const tables = tableKeys.map(getTable);\n    const table = WeightedTable.combine(tables);\n\n    return table.pick();\n};\n\nexport const spawnLoot = (tableKeys = [], x, y) => {\n    const spawnable = pickLoot(tableKeys);\n\n    return spawn(spawnable, x, y);\n};\n","import { randomInt } from './rand';\n\nexport default class WeightedTable {\n    rows = [];\n\n    get sum() {\n        return this.rows.reduce((sum, cur) => sum + cur.weight, 0);\n    }\n\n    pick() {\n        const r = randomInt(0, this.sum);\n\n        let currentW = 0;\n        const row = this.rows.find((row) => {\n            currentW += row.weight;\n\n            return currentW >= r;\n        });\n\n        if (row) {\n            return row.value;\n        }\n    }\n\n    chance(value) {\n        const row = this.get(value);\n\n        if (!row) {\n            return 0;\n        }\n\n        return row.weight / this.sum;\n    }\n\n    get(value) {\n        return this.rows.find((row) => row.value === value);\n    }\n\n    add(weight, value) {\n        const existing = this.get(value);\n\n        if (!existing) {\n            this.rows.push({\n                weight,\n                value,\n            });\n        } else {\n            // take maximum weight\n            const maxWeight = Math.max(existing.weight, weight);\n\n            existing.weight = maxWeight;\n        }\n\n        this.rows.sort((a, b) => a.weight - b.weight);\n    }\n\n    static combine(tables = []) {\n        const table = new WeightedTable();\n\n        tables.forEach((other) => {\n            other.rows.forEach((row) => table.add(row.weight, row.value));\n        });\n\n        return table;\n    }\n}\n","import WeightedTable from '../../../utils/WeightedTable';\nimport {\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_SHORTSWORD,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n} from '../../Spawnables';\n\nconst goblins = new WeightedTable();\n\ngoblins.add(3, SPWN_STONE);\ngoblins.add(2, SPWN_VIAL_BLOOD);\ngoblins.add(5, SPWN_AMULET);\ngoblins.add(4, SPWN_CLOTH_ARMOR);\ngoblins.add(15, SPWN_SHORTSWORD);\n\nexport default goblins;\n","import WeightedTable from '../../../utils/WeightedTable';\nimport { SPWN_STONE, SPWN_VIAL_HONEY } from '../../Spawnables';\n\nconst forest = new WeightedTable();\n\nforest.add(3, SPWN_STONE);\nforest.add(2, SPWN_VIAL_HONEY);\n\nexport default forest;\n","import { Component } from 'geotic';\n\nexport class IsEquipped extends Component {\n    static properties = {\n        slotKey: '',\n        owner: '<Entity>',\n    };\n\n    get slot() {\n        return this.owner.equipmentSlot[this.slotKey];\n    }\n\n    onDropped(evt) {\n        this.slot.unequip();\n    }\n\n    onThrown(evt) {\n        this.slot.unequip();\n    }\n}\n","import { Component } from 'geotic';\nimport { game } from '../../core/Game';\nimport { SCREEN_LIST_SELECT } from '../../core/screens/ScreenType';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { IsEquipped } from './IsEquipped';\n\nexport class Equipment extends Component {\n    static properties = {\n        slotTypes: [EQ_SLOT_BODY],\n    };\n\n    onTryEquip(evt) {\n        const slots = Object.values(evt.data.interactor.equipmentSlot).filter(\n            (slot) => {\n                return this.slotTypes.includes(slot.slotType);\n            }\n        );\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Equip ${this.entity.moniker.display}`,\n            list: slots,\n            onRenderRow: (slot, x, y, isSelected) => {\n                let text = slot.name;\n\n                if (!slot.isEmpty) {\n                    text += ` [${slot.content.moniker.display}]`;\n                }\n\n                if (isSelected) {\n                    game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n                } else {\n                    game.renderer.drawText(x, y, `- ${text}`);\n                }\n            },\n            onSelect: (slot) => {\n                slot.unequip();\n                slot.equip(this.entity);\n                evt.data.interactor.fireEvent('energy-consumed', 200);\n                evt.handle();\n                game.screens.popScreen();\n            },\n        });\n    }\n\n    onTryUnequip(evt) {\n        const slotKey = this.entity.isEquipped.slotKey;\n        const slot = evt.data.interactor.equipmentSlot[slotKey];\n\n        if (slot) {\n            slot.content = null;\n        }\n\n        evt.data.interactor.fireEvent('energy-consumed', 200);\n\n        this.entity.isEquipped.destroy();\n        evt.handle();\n    }\n\n    onGetInteractions(evt) {\n        if (this.entity.isInventoried) {\n            if (!this.entity.isInventoried.isOwnedBy(evt.data.interactor)) {\n                return;\n            }\n        }\n\n        if (this.entity.has(IsEquipped)) {\n            evt.data.interactions.push({\n                name: `Unequip [${this.entity.isEquipped.slot.name}]`,\n                evt: 'try-unequip',\n            });\n        } else {\n            evt.data.interactions.push({\n                name: 'Equip',\n                evt: 'try-equip',\n            });\n        }\n    }\n}\n","export const EQ_SLOT_NECK = 'EQ_SLOT_NECK';\nexport const EQ_SLOT_BODY = 'EQ_SLOT_BODY';\nexport const EQ_SLOT_FEET = 'EQ_SLOT_FEET';\nexport const EQ_SLOT_ARM = 'EQ_SLOT_ARM';\nexport const EQ_SLOT_HAND = 'EQ_SLOT_HAND';\n","import { Component } from 'geotic';\nimport { EQ_SLOT_BODY } from '../../data/EquipmentSlotType';\nimport { getWeaponType, WPN_TYPE_UNARMED } from '../../data/WeaponTypes';\nimport { IsEquipped } from './IsEquipped';\n\nexport class EquipmentSlot extends Component {\n    static allowMultiple = true;\n    static keyProperty = 'key';\n    static properties = {\n        name: 'Body',\n        key: 'body',\n        slotType: EQ_SLOT_BODY,\n        content: '<Entity>',\n        isPrimary: false,\n        isOffhand: false,\n    };\n\n    get isEmpty() {\n        return !this.content;\n    }\n\n    onDestroyed() {\n        if (!this.isEmpty) {\n            this.content.destroy();\n        }\n    }\n\n    unequip() {\n        if (this.isEmpty) {\n            return false;\n        }\n\n        const content = this.content;\n\n        this.content = null;\n\n        content.isEquipped.destroy();\n        content.fireEvent('unequipped', {\n            interactor: this.entity,\n        });\n    }\n\n    equip(equipment) {\n        equipment.add(IsEquipped, {\n            slotKey: this.key,\n            owner: this.entity,\n        });\n\n        this.content = equipment;\n\n        equipment.fireEvent('equipped', {\n            interactor: this.entity,\n        });\n    }\n\n    onTryMelee(evt) {\n        if (!this.isPrimary) {\n            return;\n        }\n\n        const map = window.game.map;\n        const targetPos = evt.data.target.position.getPos();\n        const selfPos = this.entity.position.getPos();\n        const isAdjacent = map.isAdjacent(\n            selfPos.x,\n            selfPos.y,\n            targetPos.x,\n            targetPos.y\n        );\n\n        if (!isAdjacent) {\n            return;\n        }\n\n        if (this.isEmpty) {\n            const weaponType = getWeaponType(WPN_TYPE_UNARMED);\n\n            weaponType.attack(this.entity, evt.data.target);\n\n            this.entity.fireEvent('energy-consumed', 600);\n\n            evt.handle();\n            return;\n        }\n\n        this.content.fireEvent('try-use-melee', {\n            interactor: this.entity,\n            target: evt.data.target,\n        });\n\n        evt.handle();\n    }\n\n    onQueryAbilityModifierArmor(evt) {\n        if (this.isEmpty) {\n            return;\n        }\n\n        this.content.fireEvent(\n            `query-equipped-ability-modifier-${evt.data.name}`,\n            {\n                name: evt.data.name,\n                modifiers: evt.data.modifiers,\n            }\n        );\n    }\n}\n","import {\n    DMG_TYPE_BLUDGEONING,\n    DMG_TYPE_PIERCING,\n    DMG_TYPE_SLASHING,\n} from './DamageTypes';\nimport {\n    WPN_FAMILY_AXE,\n    WPN_FAMILY_BLADE,\n    WPN_FAMILY_HAMMER,\n    WPN_FAMILY_POLEARM,\n} from './WeaponFamilies';\nimport WpnTypeBattleAxe from './weapons/WpnTypeBattleAxe';\nimport WpnTypeGreatsword from './weapons/WpnTypeGreatsword';\nimport WpnTypeShortsword from './weapons/WpnTypeShortsword';\nimport WpnTypeUnarmed from './weapons/WpnTypeUnarmed';\n\n// hammer family\nexport const WPN_TYPE_WAR_HAMMER = 'WPN_TYPE_WAR_HAMMER';\nexport const WPN_TYPE_SLEDGE_HAMMER = 'WPN_TYPE_SLEDGE_HAMMER';\nexport const WPN_TYPE_CLUB = 'WPN_TYPE_CLUB';\nexport const WPN_TYPE_MACE = 'WPN_TYPE_MACE';\n// axe family\nexport const WPN_TYPE_HEAVY_AXE = 'WPN_TYPE_HEAVY_AXE';\nexport const WPN_TYPE_BATTLE_AXE = 'WPN_TYPE_BATTLE_AXE';\n// blade family\nexport const WPN_TYPE_GREATSWORD = 'WPN_TYPE_GREATSWORD';\nexport const WPN_TYPE_SHORTSWORD = 'WPN_TYPE_SHORTSWORD';\nexport const WPN_TYPE_DAGGER = 'WPN_TYPE_DAGGER';\n// polearm family\nexport const WPN_TYPE_STAFF = 'WPN_TYPE_STAFF';\nexport const WPN_TYPE_HALBERD = 'WPN_TYPE_HALBERD';\nexport const WPN_TYPE_JAVELIN = 'WPN_TYPE_JAVELIN';\n// unarmed family\nexport const WPN_TYPE_UNARMED = 'WPN_TYPE_UNARMED';\n\nconst lookup = {\n    [WPN_TYPE_UNARMED]: new WpnTypeUnarmed(),\n    [WPN_TYPE_WAR_HAMMER]: {\n        name: 'War hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_WAR_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_SLEDGE_HAMMER]: {\n        name: 'Sledge hammer',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_SLEDGE_HAMMER,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_CLUB]: {\n        name: 'Club',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_CLUB,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_MACE]: {\n        name: 'Mace',\n        family: WPN_FAMILY_HAMMER,\n        key: WPN_TYPE_MACE,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HEAVY_AXE]: {\n        name: 'Heavy axe',\n        family: WPN_FAMILY_AXE,\n        key: WPN_TYPE_HEAVY_AXE,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_BATTLE_AXE]: new WpnTypeBattleAxe(),\n    [WPN_TYPE_GREATSWORD]: new WpnTypeGreatsword(),\n    [WPN_TYPE_SHORTSWORD]: new WpnTypeShortsword(),\n    [WPN_TYPE_DAGGER]: {\n        name: 'Dagger',\n        family: WPN_FAMILY_BLADE,\n        key: WPN_TYPE_DAGGER,\n        damageType: DMG_TYPE_SLASHING,\n    },\n    [WPN_TYPE_STAFF]: {\n        name: 'Staff',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_STAFF,\n        damageType: DMG_TYPE_BLUDGEONING,\n    },\n    [WPN_TYPE_HALBERD]: {\n        name: 'Halberd',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_HALBERD,\n        damageType: DMG_TYPE_PIERCING,\n    },\n    [WPN_TYPE_JAVELIN]: {\n        name: 'Javelin',\n        family: WPN_FAMILY_POLEARM,\n        key: WPN_TYPE_JAVELIN,\n        damageType: DMG_TYPE_PIERCING,\n    },\n};\n\nexport const getWeaponType = (type) => lookup[type];\nexport const getWeaponTypeName = (type) => lookup[type].name;\nexport const getWeaponTypeFamily = (type) => lookup[type].family;\nexport const getWeaponTypeDmgType = (type) => lookup[type].damageType;\n","export const WPN_FAMILY_HAMMER = 'WPN_FAMILY_HAMMER';\nexport const WPN_FAMILY_AXE = 'WPN_FAMILY_AXE';\nexport const WPN_FAMILY_BLADE = 'WPN_FAMILY_BLADE';\nexport const WPN_FAMILY_ARCHERY = 'WPN_FAMILY_ARCHERY';\nexport const WPN_FAMILY_POLEARM = 'WPN_FAMILY_POLEARM';\nexport const WPN_FAMILY_UNARMED = 'WPN_FAMILY_UNARMED';\n\nconst lookup = {\n    [WPN_FAMILY_HAMMER]: {\n        name: 'Hammer',\n    },\n    [WPN_FAMILY_AXE]: {\n        name: 'Axe',\n    },\n    [WPN_FAMILY_BLADE]: {\n        name: 'Blade',\n    },\n    [WPN_FAMILY_ARCHERY]: {\n        name: 'Archery',\n    },\n    [WPN_FAMILY_POLEARM]: {\n        name: 'Polearm',\n    },\n    [WPN_FAMILY_UNARMED]: {\n        name: 'Unarmed',\n    },\n};\n\nexport const getWeaponFamilyName = (family) => lookup[family].name;\n","import { randomBool } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_AXE } from '../WeaponFamilies';\nimport { WPN_TYPE_BATTLE_AXE } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeBattleAxe extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_BATTLE_AXE,\n            name: 'Battle axe',\n            family: WPN_FAMILY_AXE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _createAttack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n    }\n\n    attack(attacker, defender, weapon) {\n        const attack = this._createAttack(attacker, defender, weapon);\n        const result = defender.fireEvent('attacked', { attack });\n        const attacks = [attack];\n\n        if (!result.data.isDodged && !result.data.isKilled && randomBool()) {\n            const secondAttack = this._createAttack(attacker, defender, weapon);\n\n            attacks.push(secondAttack);\n\n            defender.fireEvent('attacked', { attack });\n        }\n\n        return attacks;\n    }\n}\n","import { getDmgTypeName } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { getWeaponFamilyName } from '../WeaponFamilies';\n\nexport default class WeaponType {\n    constructor(data) {\n        this.name = data.name;\n        this.family = data.family;\n        this.key = data.key;\n        this.damageType = data.damageType;\n    }\n\n    weaponDamageText(user, weapon) {\n        let text = `1d${weapon.die}`;\n        const str = getStat(STAT_STRENGTH, user);\n        const mod = weapon.modifier + str;\n\n        if (mod) {\n            if (mod > 0) {\n                text += ` + ${mod}`;\n            } else {\n                text += ` - ${Math.abs(mod)}`;\n            }\n        }\n\n        return text;\n    }\n\n    getShortDescription(user, weapon) {\n        const fam = getWeaponFamilyName(this.family);\n\n        return `${fam}, ${this.weaponDamageText(user, weapon)}`;\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        return [];\n    }\n\n    attack(attacker, defender, weapon) {\n        const attacks = this.getAttacks(attacker, defender, weapon);\n\n        return attacks.map((attack) => {\n            attack.defender.fireEvent('attacked', { attack });\n        });\n    }\n}\n","import { game } from '../../core/Game';\nimport { getAdjacentDeltas, directionFromDelta } from '../../enums/Directions';\nimport Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_GREATSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeGreatsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_GREATSWORD,\n            name: 'Greatsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    _getNeighborAttacks(attacker, defender, weapon, damage) {\n        const attackerPos = attacker.position.getPos();\n        const defenderPos = defender.position.getPos();\n        const deltaX = defenderPos.x - attackerPos.x;\n        const deltaY = defenderPos.y - attackerPos.y;\n        const direction = directionFromDelta(deltaX, deltaY);\n        const adjacentDeltas = getAdjacentDeltas(direction.key);\n\n        return adjacentDeltas\n            .map((delta) =>\n                game.map.getEntitiesAt(\n                    attackerPos.x + delta.x,\n                    attackerPos.y + delta.y\n                )\n            )\n            .flat()\n            .filter((e) => game.factions.areEntitiesHostile(e, attacker))\n            .map((hostile) => {\n                return new Attack({\n                    attacker,\n                    ignoreDodge: true,\n                    defender: hostile,\n                    weaponName: weapon.name,\n                    damage: Math.floor(damage / 2),\n                    damageType: this.damageType,\n                });\n            });\n    }\n\n    _tryAttackDefender(attacker, defender, weapon, damage) {\n        const attack = new Attack({\n            attacker,\n            defender,\n            weaponName: weapon.name,\n            damage,\n            damageType: this.damageType,\n        });\n\n        return defender.fireEvent('attacked', { attack });\n    }\n\n    attack(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n        const result = this._tryAttackDefender(\n            attacker,\n            defender,\n            weapon,\n            damage\n        );\n\n        const attacks = [result];\n\n        if (!result.data.isDodged) {\n            const neighborAttacks = this._getNeighborAttacks(\n                attacker,\n                defender,\n                weapon,\n                damage\n            );\n\n            neighborAttacks.forEach((attack) => {\n                attacks.push(attack);\n                attack.defender.fireEvent('attacked', { attack });\n            });\n        }\n\n        return attacks;\n    }\n}\n","import Attack from '../Attack';\nimport { DMG_TYPE_SLASHING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_BLADE } from '../WeaponFamilies';\nimport { WPN_TYPE_SHORTSWORD } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeShortsword extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_SHORTSWORD,\n            name: 'Shortsword',\n            family: WPN_FAMILY_BLADE,\n            damageType: DMG_TYPE_SLASHING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = weapon.roll();\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: weapon.name,\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { pickRandom, randomInt } from '../../utils/rand';\nimport Attack from '../Attack';\nimport { DMG_TYPE_BLUDGEONING } from '../DamageTypes';\nimport { getStat, STAT_STRENGTH } from '../Stats';\nimport { WPN_FAMILY_UNARMED } from '../WeaponFamilies';\nimport { WPN_TYPE_UNARMED } from '../WeaponTypes';\nimport WeaponType from './WeaponType';\n\nexport default class WpnTypeUnarmed extends WeaponType {\n    constructor() {\n        super({\n            key: WPN_TYPE_UNARMED,\n            name: 'Unarmed',\n            family: WPN_FAMILY_UNARMED,\n            damageType: DMG_TYPE_BLUDGEONING,\n        });\n    }\n\n    getAttacks(attacker, defender, weapon) {\n        const str = getStat(STAT_STRENGTH, attacker);\n        const die = randomInt(1, 4);\n        const damage = die + str;\n\n        return [\n            new Attack({\n                attacker,\n                defender,\n                weaponName: pickRandom(['punch', 'kick']),\n                damage,\n                damageType: this.damageType,\n            }),\n        ];\n    }\n}\n","import { Component } from 'geotic';\nimport { capitalize } from 'rot-js/lib/util';\nimport {\n    getStatName,\n    STAT_ATHLETICISM,\n    STAT_FINESSE,\n    STAT_STRENGTH,\n    STAT_TRICKERY,\n} from '../../data/Stats';\n\nexport class Stats extends Component {\n    static properties = {\n        baseStrength: 0,\n        baseFinesse: 0,\n        baseAthleticism: 0,\n        baseTrickery: 0,\n    };\n\n    _sumMods(modifiers) {\n        return modifiers.reduce((sum, cur) => sum + cur.mod, 0);\n    }\n\n    getStatModifiers(stat) {\n        const name = getStatName(stat);\n        const modifiers = [];\n\n        this.entity.fireEvent(`query-stat-modifier-${name}`, {\n            modifiers,\n        });\n\n        return modifiers;\n    }\n\n    getStatModifierSum(stat) {\n        const mods = this.getStatModifiers(stat);\n\n        return this._sumMods(mods);\n    }\n\n    data(stat) {\n        const name = getStatName(stat);\n        const modifiers = this.getStatModifiers(stat);\n        const base = this[`base${capitalize(name)}`];\n        const modSum = this._sumMods(modifiers);\n        const sum = base + modSum;\n\n        return {\n            stat,\n            name,\n            modifiers,\n            base,\n            sum,\n            modSum,\n        };\n    }\n\n    all() {\n        return {\n            strength: this.data(STAT_STRENGTH),\n            finesse: this.data(STAT_FINESSE),\n            athleticism: this.data(STAT_ATHLETICISM),\n            trickery: this.data(STAT_TRICKERY),\n        };\n    }\n\n    strength() {\n        const mod = this.getStatModifierSum(STAT_STRENGTH);\n\n        return this.baseStrength + mod;\n    }\n\n    finesse() {\n        const mod = this.getStatModifierSum(STAT_FINESSE);\n\n        return this.baseFinesse + mod;\n    }\n\n    athleticism() {\n        const mod = this.getStatModifierSum(STAT_ATHLETICISM);\n\n        return this.baseAthleticism + mod;\n    }\n\n    trickery() {\n        const mod = this.getStatModifierSum(STAT_TRICKERY);\n\n        return this.baseTrickery + mod;\n    }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import { Component } from 'geotic';\nimport { getRaceData, RACE_HUMAN } from '../../data/Races';\n\nexport class Race extends Component {\n    static properties = {\n        key: RACE_HUMAN,\n    };\n\n    data() {\n        return getRaceData(this.key);\n    }\n\n    get name() {\n        return this.data().name;\n    }\n\n    get speed() {\n        return this.data().speed;\n    }\n\n    get strengthMod() {\n        return this.data().modStrength;\n    }\n\n    get finesseMod() {\n        return this.data().modFinesse;\n    }\n\n    get athleticismMod() {\n        return this.data().modAthleticism;\n    }\n\n    get trickeryMod() {\n        return this.data().modTrickery;\n    }\n\n    onQueryStatModifierStrength(evt) {\n        const mod = this.strengthMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierFinesse(evt) {\n        const mod = this.finesseMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierAthleticism(evt) {\n        const mod = this.athleticismMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryStatModifierTrickery(evt) {\n        const mod = this.trickeryMod;\n\n        if (mod !== 0) {\n            evt.data.modifiers.push({\n                source: this.name,\n                mod,\n            });\n        }\n    }\n\n    onQueryAbilityModifierSpeed(evt) {\n        evt.data.modifiers.push({\n            source: this.name,\n            mod: this.speed,\n        });\n    }\n}\n","import RaceData from './RaceData';\n\nexport const RACE_HUMAN = 'RACE_HUMAN';\nexport const RACE_GOBLIN = 'RACE_GOBLIN';\n\nconst lookup = {\n    [RACE_HUMAN]: new RaceData({\n        name: 'Human',\n        key: RACE_HUMAN,\n        speed: 1.2,\n        modStrength: 1,\n        modFinesse: 1,\n        modAthleticism: 1,\n        modTrickery: 1,\n    }),\n    [RACE_GOBLIN]: new RaceData({\n        name: 'Goblin',\n        key: RACE_GOBLIN,\n        speed: 1,\n        modStrength: -1,\n        modFinesse: 2,\n        modAthleticism: 1,\n        modTrickery: 2,\n    }),\n};\n\nexport const getRaceData = (name) => lookup[name];\n","export default class RaceData {\n    name = '';\n    speed = 1;\n    key = 1;\n    modStrength = 0;\n    modFinesse = 0;\n    modAthleticism = 0;\n    modTrickery = 0;\n\n    constructor(data) {\n        this.name = data.name || '';\n        this.speed = data.speed || 1;\n        this.key = data.key;\n\n        this.modStrength = data.modStrength || 0;\n        this.modFinesse = data.modFinesse || 0;\n        this.modAthleticism = data.modAthleticism || 0;\n        this.modTrickery = data.modTrickery || 0;\n    }\n}\n","import { Component } from 'geotic';\nimport {\n    getWeaponType,\n    getWeaponTypeDmgType,\n    getWeaponTypeFamily,\n    getWeaponTypeName,\n} from '../../data/WeaponTypes';\nimport { randomInt } from '../../utils/rand';\n\nexport class Weapon extends Component {\n    static properties = {\n        weaponType: 'WPN_TYPE_DAGGER',\n        die: 6,\n        modifier: 0,\n        cost: 600,\n    };\n\n    get name() {\n        return getWeaponTypeName(this.weaponType);\n    }\n\n    get family() {\n        return getWeaponTypeFamily(this.weaponType);\n    }\n\n    get damageType() {\n        return getWeaponTypeDmgType(this.weaponType);\n    }\n\n    getShortDescription(user) {\n        return getWeaponType(this.weaponType).getShortDescription(user, this);\n    }\n\n    roll() {\n        const r = randomInt(1, this.die);\n\n        return r + this.modifier;\n    }\n\n    onTryUseMelee(evt) {\n        const weaponType = getWeaponType(this.weaponType);\n\n        weaponType.attack(evt.data.interactor, evt.data.target, this);\n\n        evt.data.interactor.fireEvent('energy-consumed', this.cost);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { STATUS_BLEEDING } from '../../data/Statuses';\n\nexport class Status extends Component {\n    static allowMultiple = true;\n    static properties = {\n        key: STATUS_BLEEDING,\n        duration: 4000,\n        lifetime: 0,\n        potency: .5,\n    };\n\n    remainingLifetime() {\n        return this.duration - this.lifetime;\n    }\n\n    isCompleted() {\n        return this.lifetime >= this.duration;\n    }\n}\n","import StatusBleeding from './statuses/StatusBleeding';\n\nexport const STATUS_BLEEDING = 'STATUS_BLEEDING';\n\nconst lookup = {\n    [STATUS_BLEEDING]: new StatusBleeding(),\n};\n\nexport const getStatus = (key) => lookup[key];\n","import { STATUS_TYPE_CONDITION } from '../../enums/StatusTypes';\nimport { STATUS_BLEEDING } from '../Statuses';\nimport Status from './Status';\n\nexport default class StatusBleeding extends Status {\n    constructor() {\n        super(STATUS_BLEEDING, 'Bleeding', STATUS_TYPE_CONDITION);\n    }\n\n    getDmgPerTurn(potency) {\n        return 3 * potency + .5;\n    }\n\n    update(ticks, entity, status) {\n        const tick = Math.min(ticks, status.remainingLifetime());\n        const dmgPerTurn = this.getDmgPerTurn(status.potency);\n        const damage = dmgPerTurn * (tick / 1000);\n\n        entity.health.applyDamage(damage);\n\n        status.lifetime += tick;\n    }\n}\n","export const STATUS_TYPE_CONDITION = 'STATUS_TYPE_CONDITION';\n","export default class Status {\n    constructor(key, name, type) {\n        this.key = key;\n        this.name = name;\n        this.type = type;\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import {\n    IsInventoried,\n    Explored,\n    Glyph,\n    Position,\n    IsVisible,\n    IsDestroying,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n    #explored = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [Glyph, Position, IsVisible],\n            none: [IsInventoried, IsDestroying],\n        });\n        this.#explored = game.ecs.createQuery({\n            all: [Glyph, Position, Explored],\n            none: [IsInventoried, IsVisible, IsDestroying],\n        });\n    }\n\n    render(dt) {\n        this.game.renderer.clear();\n\n        const explored = Array.from(this.#explored.get());\n\n        for (let i = 0; i < explored.length; i++) {\n            const renderable = explored[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                '#2c3538',\n                '#2c3538'\n            );\n        }\n\n        const renderables = Array.from(this.#query.get());\n\n        for (let i = 0; i < renderables.length; i++) {\n            const renderable = renderables[i];\n            const pos = renderable.position.getPos();\n\n            if (!this.game.camera.isInView(pos.x, pos.y)) {\n                continue;\n            }\n\n            const screen = this.game.camera.worldToScreen(pos.x, pos.y);\n\n            this.game.renderer.draw(\n                screen.x,\n                screen.y,\n                renderable.glyph.char,\n                renderable.glyph.primary,\n                renderable.glyph.secondary,\n                renderable.glyph.background\n            );\n        }\n    }\n\n    update(dt) {\n        this.render();\n    }\n}\n","import { IsDestroying, MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MoveCommand, Position],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('try-move', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n}\n","import { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = this.game.ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.clock.turn;\n        const subTurn = `${this.game.clock.subTurn.toFixed(0)}`.padEnd(3, '0');\n\n        const str = `${turn}.${subTurn}`;\n        const len = Math.ceil(this.game.renderer.computeTextWidth(str));\n\n        this.game.renderer.drawText(this.game.camera.width - 1 - len, 1, str);\n\n        const hp = this.game.player.entity.health;\n\n        this.game.renderer.drawText(1, 1, `${Math.round(hp.value)}/${hp.max}`, '#ce5454');\n    }\n}\n","import Manager from '../Manager';\n\nexport default class MouseManager extends Manager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\nimport Manager from '../Manager';\n\nexport default class CommandManager extends Manager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n    #isEnabled = true;\n\n    constructor(game) {\n        super(game);\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    enable() {\n        this.#isEnabled = true;\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            this.game.screens.onInputCommand(cmd);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain(domain) {\n        const index = this.#domainStack.lastIndexOf(domain);\n\n        if (index > -1) {\n            this.#domainStack.splice(index, 1);\n        }\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_ADVENTURE = 2;\nexport const INPUT_DOMAIN_LOOK = 3;\nexport const INPUT_DOMAIN_LIST = 4;\n","import {\n    INPUT_DOMAIN_MAIN_MENU,\n    INPUT_DOMAIN_DEFAULT,\n    INPUT_DOMAIN_ADVENTURE,\n} from './InputDomainType';\nimport InputCommand from './InputCommand';\nimport {\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_NEW_GAME,\n} from './InputCommandType';\nimport {\n    KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE,\n    KEY_L,\n    KEY_I,\n    KEY_G,\n    KEY_J,\n    KEY_N,\n    KEY_P,\n    KEY_Y,\n} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) =>\n    new InputCommand({\n        domain,\n        type,\n        name,\n        isKeyboard,\n        key,\n        shift,\n        ctrl,\n        alt,\n        meta,\n    });\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                             NAME                      KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm',                true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,              'confirm2',               true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,               'cancel',                 true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_SAVE,                 'save',                   true, KEY_S,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_LOAD,                 'load',                   true, KEY_L,        false, true,  false, false),\n    cmd(INPUT_DOMAIN_MAIN_MENU, INPUT_CMD_NEW_GAME,             'new game',               true, KEY_N,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_WAIT,                 'wait',                   true, KEY_S,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NW,              'move nw',                true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n',                 true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_N,               'move n2',                true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_NE,              'move ne',                true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w',                 true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_W,               'move w2',                true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e',                 true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_E,               'move e2',                true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SW,              'move sw',                true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s',                 true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_S,               'move s2',                true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_MOVE_SE,              'move se',                true, KEY_C,        false, false, false, false),\n\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NW,            'select nw',              true, KEY_Q,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n',               true, KEY_W,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_N,             'select n2',              true, KEY_UP,       true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_NE,            'select ne',              true, KEY_E,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w',               true, KEY_A,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_W,             'select w2',              true, KEY_LEFT,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e',               true, KEY_D,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_E,             'select e2',              true, KEY_RIGHT,    true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SW,            'select sw',              true, KEY_Z,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s',               true, KEY_X,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_S,             'select s2',              true, KEY_DOWN,     true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_SELECT_SE,            'select se',              true, KEY_C,        true,  false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_INTERACT,             'select',                 true, KEY_S,        true,  false, false, false),\n\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_LOOK,                 'look',                   true, KEY_L,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_PICK_UP,              'pick up',                true, KEY_G,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INTERACT,             'interact',               true, KEY_J,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_INVENTORY,            'inventory',              true, KEY_I,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_EQUIPMENT,            'equipment',              true, KEY_P,        false, false, false, false),\n    cmd(INPUT_DOMAIN_ADVENTURE, INPUT_CMD_CHARACTER,            'character',              true, KEY_Y,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return (\n            this.isKeyboard == isKeyboard &&\n            this.key == inputEvent.key &&\n            this.shift == inputEvent.shift &&\n            this.ctrl == inputEvent.ctrl &&\n            this.alt == inputEvent.alt &&\n            this.meta == inputEvent.meta\n        );\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\n\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\nexport const INPUT_CMD_SAVE = 11;\nexport const INPUT_CMD_LOAD = 12;\nexport const INPUT_CMD_LOOK = 13;\n\nexport const INPUT_CMD_PICK_UP = 16;\nexport const INPUT_CMD_INTERACT = 17;\nexport const INPUT_CMD_INVENTORY = 19;\n\nexport const INPUT_CMD_SELECT_NW = 20;\nexport const INPUT_CMD_SELECT_N = 21;\nexport const INPUT_CMD_SELECT_NE = 22;\nexport const INPUT_CMD_SELECT_W = 23;\nexport const INPUT_CMD_SELECT_E = 24;\nexport const INPUT_CMD_SELECT_SW = 25;\nexport const INPUT_CMD_SELECT_S = 26;\nexport const INPUT_CMD_SELECT_SE = 27;\nexport const INPUT_CMD_NEW_GAME = 28;\n\nexport const INPUT_CMD_EQUIPMENT = 29;\nexport const INPUT_CMD_CHARACTER = 30;\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","import {\n    SCREEN_MAIN_MENU,\n    SCREEN_ADVENTURE,\n    SCREEN_DEATH,\n    SCREEN_INVENTORY,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_CURSOR,\n    SCREEN_LOAD_SECTOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_LIST_SELECT,\n    SCREEN_CHARACTER,\n} from './ScreenType';\nimport AdventureScreen from './screens/AdventureScreen';\nimport MainMenuScreen from './screens/MainMenuScreen';\nimport DeathScreen from './screens/DeathScreen';\nimport Manager from '../Manager';\nimport InventoryScreen from './screens/InventoryScreen';\nimport InteractModalScreen from './screens/InteractModalScreen';\nimport CursorScreen from './screens/CursorScreen';\nimport LoadSectorScreen from './screens/LoadSectorScreen';\nimport EquipmentScreen from './screens/EquipmentScreen';\nimport ListSelectionScreen from './screens/ListSelectionScreen';\nimport CharacterScreen from './screens/CharacterScreen';\n\nexport default class ScreenManager extends Manager {\n    #screens = {};\n    #screenStack = [];\n\n    constructor(game) {\n        super(game);\n        this.#screens = {\n            [SCREEN_MAIN_MENU]: new MainMenuScreen(game),\n            [SCREEN_ADVENTURE]: new AdventureScreen(game),\n            [SCREEN_DEATH]: new DeathScreen(game),\n            [SCREEN_INVENTORY]: new InventoryScreen(game),\n            [SCREEN_INTERACT_MODAL]: new InteractModalScreen(game),\n            [SCREEN_CURSOR]: new CursorScreen(game),\n            [SCREEN_LOAD_SECTOR]: new LoadSectorScreen(game),\n            [SCREEN_EQUIPMENT]: new EquipmentScreen(game),\n            [SCREEN_LIST_SELECT]: new ListSelectionScreen(game),\n            [SCREEN_CHARACTER]: new CharacterScreen(game),\n        };\n        this.setScreen(SCREEN_MAIN_MENU);\n    }\n\n    get screenType() {\n        return this.#screenStack[this.#screenStack.length - 1].type;\n    }\n\n    get screenCtx() {\n        return this.#screenStack[this.#screenStack.length - 1].ctx;\n    }\n\n    get screen() {\n        return this.#screens[this.screenType];\n    }\n\n    setScreen(screenType, ctx = {}) {\n        while (this.#screenStack.length > 0) {\n            this.screen.onLeave(ctx);\n            this.#screenStack.pop();\n        }\n\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    replaceScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    pushScreen(screenType, ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.push({\n            type: screenType,\n            ctx,\n        });\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    popScreen(ctx = {}) {\n        this.screen.onLeave(ctx);\n        this.#screenStack.pop();\n        this.screen.onEnter(this.screenCtx);\n    }\n\n    onInputCommand(cmd) {\n        this.screen.onInputCommand(cmd);\n    }\n\n    update(dt) {\n        this.screen.onUpdate(dt);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_LOOK,\n    INPUT_CMD_INTERACT,\n    INPUT_CMD_PICK_UP,\n    INPUT_CMD_INVENTORY,\n    INPUT_CMD_SELECT_NW,\n    INPUT_CMD_SELECT_N,\n    INPUT_CMD_SELECT_NE,\n    INPUT_CMD_SELECT_W,\n    INPUT_CMD_SELECT_E,\n    INPUT_CMD_SELECT_SW,\n    INPUT_CMD_SELECT_S,\n    INPUT_CMD_SELECT_SE,\n    INPUT_CMD_EQUIPMENT,\n    INPUT_CMD_CHARACTER,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_ADVENTURE } from '../../input/InputDomainType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n    delta as directionDelta,\n} from '../../../enums/Directions';\nimport {\n    SCREEN_CURSOR,\n    SCREEN_EQUIPMENT,\n    SCREEN_INTERACT_MODAL,\n    SCREEN_INVENTORY,\n    SCREEN_CHARACTER,\n    SCREEN_LIST_SELECT,\n    SCREEN_MAIN_MENU,\n} from '../ScreenType';\nimport { Door, Loot } from '../../../ecs/components';\n\nexport default class AdventureScreen extends Screen {\n    onEnter() {\n        this.game.renderer.clear();\n        this.game.commands.pushDomain(INPUT_DOMAIN_ADVENTURE);\n        this.game.FOVSystem.computeFOV();\n\n        const position = this.game.player.position;\n\n        this.game.camera.setFocus(position.x, position.y);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_ADVENTURE);\n    }\n\n    onDirectionInput(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n        const entities = this.game.map.getEntitiesAt(\n            targetPosition.x,\n            targetPosition.y\n        );\n\n        const hostileEntities = entities.filter((e) =>\n            this.game.factions.areEntitiesHostile(e, this.game.player.entity)\n        );\n\n        if (hostileEntities.length > 0) {\n            this.game.player.melee(hostileEntities[0]);\n        } else {\n            const doorEntity = entities.find((e) => e.has(Door));\n\n            if (doorEntity && !doorEntity.door.isOpen) {\n                doorEntity.fireEvent('try-open-door', {\n                    interactor: this.game.player.entity,\n                });\n            } else {\n                this.game.player.move(dir);\n            }\n        }\n    }\n\n    onPickUpCommand() {\n        const position = this.game.player.position;\n        const entities = this.game.map.getEntitiesAt(position.x, position.y);\n\n        const lootable = entities.find((entity) => entity.has(Loot));\n\n        if (lootable) {\n            lootable.fireEvent('try-pick-up', {\n                interactor: this.game.player.entity,\n            });\n        } else {\n            console.log('there is nothing here to pick up.');\n        }\n    }\n\n    onInteract(x, y) {\n        const entities = this.game.map\n            .getEntitiesAt(x, y)\n            .filter((e) => !e.isPlayer);\n\n        const items = entities.filter((entity) => {\n            const evt = entity.fireEvent('get-interactions', {\n                interactor: this.game.player.entity,\n                interactions: [],\n            });\n\n            return evt.data.interactions.length > 0;\n        });\n\n        if (items.length <= 0) {\n            return;\n        }\n\n        if (items.length == 1) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactor: this.game.player.entity,\n                interactable: items[0],\n            });\n            return;\n        }\n\n        game.screens.pushScreen(SCREEN_LIST_SELECT, {\n            header: `Choose`,\n            list: items,\n            onGetRowName: (item) => item.moniker.display,\n            onSelect: (item) => {\n                this.game.screens.replaceScreen(SCREEN_INTERACT_MODAL, {\n                    interactor: this.game.player.entity,\n                    interactable: item,\n                });\n            },\n        });\n    }\n\n    onInteractDirection(dir) {\n        const delta = directionDelta(dir);\n        const playerPosition = this.game.player.position;\n        const targetPosition = {\n            x: playerPosition.x + delta.x,\n            y: playerPosition.y + delta.y,\n        };\n\n        this.onInteract(targetPosition.x, targetPosition.y);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n        if (cmd.type === INPUT_CMD_LOOK) {\n            game.screens.pushScreen(SCREEN_CURSOR, {\n                drawTags: true,\n                onResult: () => game.screens.popScreen(),\n                onCancel: () => game.screens.popScreen(),\n            });\n        }\n        if (cmd.type === INPUT_CMD_PICK_UP) {\n            this.onPickUpCommand();\n        }\n        if (cmd.type === INPUT_CMD_INTERACT) {\n            const pos = this.game.player.position;\n\n            this.onInteract(pos.x, pos.y);\n        }\n        if (cmd.type === INPUT_CMD_INVENTORY) {\n            this.game.screens.pushScreen(SCREEN_INVENTORY, {\n                accessible: this.game.player.entity,\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_EQUIPMENT) {\n            this.game.screens.pushScreen(SCREEN_EQUIPMENT, {\n                accessor: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CHARACTER) {\n            this.game.screens.pushScreen(SCREEN_CHARACTER, {\n                character: this.game.player.entity,\n            });\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n        if (cmd.type === INPUT_CMD_WAIT) {\n            this.game.player.wait();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NW) {\n            this.onInteractDirection(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_N) {\n            this.onInteractDirection(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_NE) {\n            this.onInteractDirection(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_W) {\n            this.onInteractDirection(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_E) {\n            this.onInteractDirection(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SW) {\n            this.onInteractDirection(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_S) {\n            this.onInteractDirection(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_SELECT_SE) {\n            this.onInteractDirection(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n    }\n}\n","export default class Screen {\n    #game;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    onEnter() {}\n\n    onLeave() {}\n\n    onInputCommand(cmd) {}\n\n    onUpdate(dt) {}\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_SAVE,\n    INPUT_CMD_LOAD,\n    INPUT_CMD_NEW_GAME,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_ADVENTURE } from '../ScreenType';\n\nexport default class MainMenuScreen extends Screen {\n    onEnter() {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n\n        if (!this.game.state.isStarted) {\n            this.game.music.play('BARDS_TALE');\n        }\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onConfirm() {\n        if (this.game.state.isStarted) {\n            this.game.screens.setScreen(SCREEN_ADVENTURE);\n        } else {\n            this.game.state.newGame();\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n\n        if (cmd.type === INPUT_CMD_SAVE) {\n            this.game.state.saveGame();\n        }\n\n        if (cmd.type === INPUT_CMD_LOAD) {\n            this.game.state.loadGame();\n        }\n\n        if (cmd.type === INPUT_CMD_NEW_GAME) {\n            this.game.state.newGame();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawText(1, 1, `sleepy crawler`, 'cyan');\n\n        this.game.renderer.drawText(\n            1,\n            4,\n            `move       [q, w, e, a, d, z, x, c]`\n        );\n        this.game.renderer.drawText(1, 5, `look       [l]`);\n        this.game.renderer.drawText(1, 6, `interact   [shift+direction]`);\n        this.game.renderer.drawText(1, 7, `interact   [j]`);\n        this.game.renderer.drawText(1, 8, `pick up    [g]`);\n        this.game.renderer.drawText(1, 9, `save       [ctrl+s]`);\n        this.game.renderer.drawText(1, 10, `load       [ctrl+l]`);\n        this.game.renderer.drawText(1, 11, `confirm    [enter]`);\n        this.game.renderer.drawText(1, 12, `cancel     [esc]`);\n\n        this.game.renderer.drawTextCenter(14, `set out into the forest...`);\n        this.game.renderer.drawTextCenter(16, `press [enter]`);\n    }\n}\n","import Screen from './Screen';\nimport { INPUT_CMD_CONFIRM } from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_MAIN_MENU } from '../ScreenType';\n\nexport default class DeathScreen extends Screen {\n    onEnter() {\n        this.game.state.gameOver();\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.game.screens.setScreen(SCREEN_MAIN_MENU);\n        }\n    }\n\n    onUpdate(dt) {\n        const text = 'you have succumbed to the forest';\n\n        this.game.renderer.drawTextCenter(10, text, '#ce5454');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InventoryScreen extends Screen {\n    #accessible;\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessible = ctx.accessible;\n        this.#accessor = ctx.accessor;\n        this.list.setItems(this.#accessible.inventory.content);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interactable = this.list.selected;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessible.moniker.display} Inventory ~`,\n            'yellow'\n        );\n\n        if (this.list.items.length === 0) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + 5;\n\n            if (isSelected) {\n                this.game.renderer.drawText(1, ypos, '→', 'yellow');\n            } else {\n                this.game.renderer.drawText(1, ypos, '-');\n            }\n\n            this.game.renderer.draw(\n                2,\n                ypos,\n                item.glyph.char,\n                item.glyph.primary,\n                item.glyph.secondary,\n                item.glyph.background\n            );\n\n            const textLen = this.game.renderer.computeTextWidth(\n                item.moniker.display\n            );\n\n            this.game.renderer.drawText(4, ypos, item.moniker.display);\n\n            if (item.isEquipped) {\n                const slot = item.isEquipped.slot.name;\n\n                this.game.renderer.drawText(\n                    4 + textLen + 0.5,\n                    ypos,\n                    `[${slot}]`,\n                    '#2c3538'\n                );\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","export default class SelectableList {\n    _items = [];\n    _idx = 0;\n\n    get selected() {\n        return this._items[this._idx];\n    }\n\n    get items() {\n        return this._items;\n    }\n\n    get data() {\n        return this._items.map((item, idx) => ({\n            item,\n            idx,\n            isSelected: idx === this._idx,\n        }));\n    }\n\n    get isEmpty() {\n        return this._items.length <= 0;\n    }\n\n    get length() {\n        return this._items.length;\n    }\n\n    constructor(items = [], idx = 0) {\n        this._idx = idx;\n        this.setItems(items);\n    }\n\n    setItems(items = []) {\n        this._items = items;\n        this._idx = Math.min(Math.max(this._idx, 0), this._items.length - 1);\n    }\n\n    up() {\n        this._idx--;\n\n        if (this._idx < 0) {\n            this._idx = this._items.length - 1;\n        }\n    }\n\n    down() {\n        this._idx++;\n\n        if (this._idx >= this._items.length) {\n            this._idx = 0;\n        }\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class InteractModalScreen extends Screen {\n    #width = 16;\n    #height = 12;\n    #interactable;\n    #interactor;\n    list = new SelectableList();\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.#width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.#height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#interactable = ctx.interactable;\n        this.#interactor = ctx.interactor;\n\n        this.refreshList();\n    }\n\n    refreshList() {\n        const evt = this.#interactable.fireEvent('get-interactions', {\n            interactor: this.#interactor,\n            interactions: [],\n        });\n\n        this.list.setItems([\n            ...evt.data.interactions,\n            {\n                name: 'Back',\n                isBack: true,\n            },\n        ]);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        const interaction = this.list.selected;\n\n        if (interaction.isBack) {\n            this.game.screens.popScreen();\n            return;\n        }\n\n        this.#interactable.fireEvent(interaction.evt, {\n            interactor: this.#interactor,\n        });\n\n        if (this.#interactable.isDestroyed) {\n            this.game.screens.popScreen();\n\n            return;\n        }\n\n        this.refreshList();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.#width + 1,\n            this.#height + 1\n        );\n\n        this.game.renderer.draw(\n            this.left + 2,\n            this.top + 2,\n            this.#interactable.glyph.char,\n            this.#interactable.glyph.primary,\n            this.#interactable.glyph.secondary,\n            this.#interactable.glyph.background\n        );\n\n        this.game.renderer.drawTextCenter(\n            this.top + 2,\n            `${this.#interactable.moniker.display}`\n        );\n\n        for (let i = this.left; i < this.left + this.#width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.#height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.#height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.#width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.#width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.#height, '└');\n        this.game.renderer.draw(\n            this.left + this.#width,\n            this.top + this.#height,\n            '┘'\n        );\n\n        let listPadding = 4;\n        const xpos = this.left + 2;\n\n        if (this.#interactable.weapon) {\n            const weaponDmg = this.#interactable.weapon.getShortDescription(\n                this.#interactor\n            );\n\n            this.game.renderer.drawText(\n                xpos,\n                this.top + listPadding,\n                weaponDmg\n            );\n\n            listPadding += 2;\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + this.top + listPadding;\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    xpos,\n                    ypos,\n                    `→ ${item.name}`,\n                    'yellow'\n                );\n            } else {\n                this.game.renderer.drawText(xpos, ypos, `- ${item.name}`);\n            }\n        });\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_CONFIRM,\n} from '../../input/InputCommandType';\nimport {\n    DIR_N,\n    DIR_W,\n    DIR_Z,\n    DIR_E,\n    DIR_S,\n    DIR_NW,\n    DIR_SW,\n    DIR_SE,\n    DIR_NE,\n} from '../../../enums/Directions';\nimport { bresenhamLine } from '../../../utils/BresenhamLine';\nimport {\n    CURSOR_SEGMENT_INTEREST,\n    CURSOR_SEGMENT_NONE,\n    getCursorSegmentTypeColor,\n    getCursorSegmentTypeGlyph,\n} from '../../../enums/CursorSegments';\nimport { FactionMember } from '../../../ecs/components';\n\nconst NOOP = () => {};\n\nexport default class CursorScreen extends Screen {\n    #start = {};\n    #onResult = NOOP;\n    #onCancel = NOOP;\n    #getSegmentTypes = NOOP;\n    #drawLine = false;\n    #drawTags = false;\n\n    onEnter(ctx) {\n        this.game.renderer.clear();\n        this.game.FOVSystem.computeFOV();\n        this.game.cursor.enable();\n        this.#start = ctx.start || this.game.player.position;\n        this.#onResult = ctx.onResult || NOOP;\n        this.#onCancel = ctx.onCancel || NOOP;\n        this.#getSegmentTypes = ctx.getSegmentTypes || NOOP;\n        this.#drawLine = Boolean(ctx.drawLine);\n        this.#drawTags = Boolean(ctx.drawTags);\n    }\n\n    onLeave() {\n        this.game.cursor.disable();\n    }\n\n    onDirectionInput(dir) {\n        this.game.cursor.move(dir);\n    }\n\n    onConfirm() {\n        this.#onResult({\n            start: this.#start,\n            position: {\n                x: this.game.cursor.x,\n                y: this.game.cursor.y,\n            },\n        });\n    }\n\n    onCancel() {\n        this.#onCancel();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.onConfirm();\n        }\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.onCancel();\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NW) {\n            this.onDirectionInput(DIR_NW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.onDirectionInput(DIR_N);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_NE) {\n            this.onDirectionInput(DIR_NE);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_W) {\n            this.onDirectionInput(DIR_W);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_E) {\n            this.onDirectionInput(DIR_E);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SW) {\n            this.onDirectionInput(DIR_SW);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.onDirectionInput(DIR_S);\n        }\n        if (cmd.type === INPUT_CMD_MOVE_SE) {\n            this.onDirectionInput(DIR_SE);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.updateAdventureSystems(dt);\n\n        const line = bresenhamLine(\n            this.#start.x,\n            this.#start.y,\n            this.game.cursor.x,\n            this.game.cursor.y\n        );\n\n        let cursorColor = getCursorSegmentTypeColor(CURSOR_SEGMENT_INTEREST);\n\n        if (this.#drawLine) {\n            const types = this.#getSegmentTypes(line);\n\n            line.forEach((segment, idx) => {\n                const type = types[idx];\n\n                if (type === CURSOR_SEGMENT_NONE || isNaN(type)) {\n                    return;\n                }\n\n                const color = getCursorSegmentTypeColor(type);\n                const glyph = getCursorSegmentTypeGlyph(type);\n\n                const screen = this.game.camera.worldToScreen(\n                    segment.x,\n                    segment.y\n                );\n                this.game.renderer.draw(screen.x, screen.y, glyph, color);\n\n                if (idx === line.length - 1) {\n                    cursorColor = color;\n                }\n            });\n        }\n\n        if (this.#drawTags) {\n            this.game.cursor.drawTags();\n        }\n\n        const target = this.game.cursor\n            .getEntities()\n            .filter((e) => e.has(FactionMember))\n            .pop();\n\n        const player = this.game.player.entity;\n\n        if (target) {\n            const faction = target.factionMember.faction;\n            const relation = this.game.factions.getEntityRelation(\n                player,\n                target\n            );\n\n            let disp = this.game.factions.getDisplay(relation);\n\n            this.game.renderer.drawTextCenter(\n                1,\n                `${faction.display} Faction [${disp}]`\n            );\n        }\n\n        this.game.cursor.drawCursor(cursorColor);\n    }\n}\n","import { SCREEN_ADVENTURE } from '../ScreenType';\nimport Screen from './Screen';\n\nexport default class LoadSectorScreen extends Screen {\n    #prevousSector;\n    #nextSector;\n\n    onEnter(ctx) {\n        this.game.commands.disable();\n\n        this.#prevousSector = ctx.prevousSector;\n        this.#nextSector = ctx.nextSector;\n\n        this.renderLoadingText();\n\n        if (ctx.prevousSector) {\n            const data = this.game.state.saveGame();\n\n            data.world.sectorId = ctx.nextSector.id;\n            data.map.playerPosition = ctx.entry;\n\n            this.game.state.loadGameData(data);\n\n            return;\n        }\n\n        this.game.world.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.map.onSectorLoaded(ctx.nextSector, ctx.entry);\n        this.game.music.onSectorLoaded(ctx.nextSector, ctx.entry);\n\n        this.game.screens.setScreen(SCREEN_ADVENTURE);\n    }\n\n    onLeave() {\n        this.game.commands.enable();\n    }\n\n    renderLoadingText() {\n        this.game.renderer.clear();\n        if (this.#prevousSector) {\n            const prevText = `You are leaving sector ${this.#prevousSector.id}`;\n            this.game.renderer.drawTextCenter(11, prevText, '#ce5454');\n        } else {\n            const nextText = `You are entering sector ${this.#nextSector.id}`;\n            this.game.renderer.drawTextCenter(11, nextText, '#ce5454');\n        }\n    }\n\n    onUpdate(dt) {\n        this.renderLoadingText();\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport { SCREEN_INTERACT_MODAL } from '../ScreenType';\nimport SelectableList from '../../../utils/SelectableList';\n\nexport default class EquipmentScreen extends Screen {\n    #accessor;\n    list = new SelectableList();\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.#accessor = ctx.accessor;\n        this.list.setItems(Object.values(this.#accessor.equipmentSlot));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectSlot() {\n        const interactable = this.list.selected.content;\n\n        if (interactable) {\n            this.game.screens.pushScreen(SCREEN_INTERACT_MODAL, {\n                interactable,\n                interactor: this.#accessor,\n            });\n        }\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectSlot();\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.#accessor.moniker.display} Equipment ~`,\n            'purple'\n        );\n\n        if (this.list.isEmpty) {\n            this.game.renderer.drawTextCenter(6, 'There is nothing here.');\n        }\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const slot = item;\n            const ypos = idx + 5;\n            const selectedColor = 'yellow';\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    1,\n                    ypos,\n                    `→ ${slot.name}`,\n                    selectedColor\n                );\n                this.game.renderer.drawText(14, ypos, '→', selectedColor);\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${slot.name}`);\n                this.game.renderer.drawText(14, ypos, '-', '#2c3538');\n            }\n\n            if (slot.isEmpty) {\n                this.game.renderer.drawText(15, ypos, '[empty]', '#2c3538');\n            } else {\n                const content = slot.content;\n                this.game.renderer.draw(\n                    15,\n                    ypos,\n                    content.glyph.char,\n                    content.glyph.primary,\n                    content.glyph.secondary,\n                    content.glyph.background\n                );\n                this.game.renderer.drawText(\n                    16,\n                    ypos,\n                    ` ${content.moniker.display}`\n                );\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport Simple from 'rot-js/lib/scheduler/simple';\n\nconst NOOP = () => {};\n\nexport default class ListSelectionScreen extends Screen {\n    width = 16;\n    height = 12;\n    list = new SelectableList();\n    header = '';\n\n    get left() {\n        return Math.floor((this.game.camera.width - this.width) / 2);\n    }\n\n    get top() {\n        return Math.floor((this.game.camera.height - this.height) / 2);\n    }\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.list.setItems(ctx.list || []);\n        this.header = ctx.header || 'Select';\n        this.onSelect = ctx.onSelect || NOOP;\n        this.onCancel = ctx.onCancel || NOOP;\n        this.onGetRowName = ctx.onGetRowName || NOOP;\n        this.onRenderRow = ctx.onRenderRow || this.defaultRowRender.bind(this);\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    selectItem() {\n        this.onSelect(this.list.selected);\n    }\n\n    cancel() {\n        this.onCancel();\n        this.game.screens.popScreen();\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.cancel();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        if (cmd.type === INPUT_CMD_CONFIRM) {\n            this.selectItem();\n        }\n    }\n\n    defaultRowRender(row, x, y, isSelected) {\n        const text = this.onGetRowName(row, x, y, isSelected);\n\n        if (isSelected) {\n            this.game.renderer.drawText(x, y, `→ ${text}`, 'yellow');\n        } else {\n            this.game.renderer.drawText(x, y, `- ${text}`);\n        }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clearArea(\n            this.left,\n            this.top,\n            this.width + 1,\n            this.height + 1\n        );\n\n        this.game.renderer.drawTextCenter(this.top + 2, this.header);\n\n        for (let i = this.left; i < this.left + this.width; i++) {\n            this.game.renderer.draw(i, this.top, '─');\n            this.game.renderer.draw(i, this.top + this.height, '─');\n        }\n\n        for (let i = this.top; i < this.top + this.height; i++) {\n            this.game.renderer.draw(this.left, i, '│');\n            this.game.renderer.draw(this.left + this.width, i, '│');\n        }\n\n        this.game.renderer.draw(this.left, this.top, '┌');\n        this.game.renderer.draw(this.left + this.width, this.top, '┐');\n        this.game.renderer.draw(this.left, this.top + this.height, '└');\n        this.game.renderer.draw(\n            this.left + this.width,\n            this.top + this.height,\n            '┘'\n        );\n\n        const xpos = this.left + 2;\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const ypos = idx + this.top + 4;\n\n            this.onRenderRow(item, xpos, ypos, isSelected, idx);\n        });\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Screen from './Screen';\nimport {\n    INPUT_CMD_CANCEL,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_S,\n} from '../../input/InputCommandType';\nimport { INPUT_DOMAIN_MAIN_MENU } from '../../input/InputDomainType';\nimport SelectableList from '../../../utils/SelectableList';\nimport {\n    ABILITY_ARMOR,\n    ABILITY_DODGE,\n    ABILITY_SPEED,\n    getAbilityValue,\n} from '../../../data/Abilities';\nimport { getArmorBlockPercent } from '../../../data/abilities/ArmorAbility';\nimport { getDodgePercent } from '../../../data/abilities/DodgeAbility';\n\nexport default class CharacterScreen extends Screen {\n    character;\n\n    onEnter(ctx) {\n        this.game.commands.pushDomain(INPUT_DOMAIN_MAIN_MENU);\n        this.character = ctx.character;\n\n        const stats = this.character.stats.all();\n\n        this.list = new SelectableList(Object.values(stats));\n    }\n\n    onLeave() {\n        this.game.commands.popDomain(INPUT_DOMAIN_MAIN_MENU);\n    }\n\n    onInputCommand(cmd) {\n        if (cmd.type === INPUT_CMD_CANCEL) {\n            this.game.screens.popScreen();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_N) {\n            this.list.up();\n        }\n\n        if (cmd.type === INPUT_CMD_MOVE_S) {\n            this.list.down();\n        }\n\n        // if (cmd.type === INPUT_CMD_CONFIRM) {\n        //     this.selectItem();\n        // }\n    }\n\n    onUpdate(dt) {\n        this.game.renderer.clear();\n        this.game.renderer.drawTextCenter(\n            3,\n            `~ ${this.character.moniker.display} Character ~`,\n            'orange'\n        );\n\n        const health = this.character.health.value;\n        const healthMax = this.character.health.max;\n\n        this.game.renderer.drawText(2, 5, 'health');\n        this.game.renderer.drawText(10, 5, `${health}/${healthMax}`);\n\n        const speed = getAbilityValue(ABILITY_SPEED, this.character);\n\n        this.game.renderer.drawText(2, 6, 'speed');\n        this.game.renderer.drawText(10, 6, `+${speed}`);\n\n        const armor = getAbilityValue(ABILITY_ARMOR, this.character);\n        const armorPrcnt = getArmorBlockPercent(armor);\n\n        this.game.renderer.drawText(2, 7, 'armor');\n        this.game.renderer.drawText(\n            10,\n            7,\n            `+${armor} (${armorPrcnt}% less melee damage taken)`\n        );\n\n        const dodge = getAbilityValue(ABILITY_DODGE, this.character);\n        const dodgePrcnt = getDodgePercent(dodge);\n\n        this.game.renderer.drawText(2, 8, 'dodge');\n        this.game.renderer.drawText(\n            10,\n            8,\n            `+${dodge} (${dodgePrcnt}% chance to avoid a melee attack)`\n        );\n\n        let pad = 0;\n\n        this.list.data.forEach(({ item, idx, isSelected }) => {\n            const stat = item;\n            const ypos = idx + 13 + pad;\n            const modDir = stat.modSum > 0 ? '+' : '-';\n\n            if (isSelected) {\n                this.game.renderer.drawText(\n                    1,\n                    ypos,\n                    `→ ${stat.name}`,\n                    'yellow'\n                );\n                this.game.renderer.drawText(\n                    10,\n                    ypos,\n                    `${modDir}${stat.sum}`,\n                    'yellow'\n                );\n\n                stat.modifiers.forEach((mod, i) => {\n                    if (mod.mod > 0) {\n                        this.game.renderer.drawText(\n                            3,\n                            ypos + i + 1,\n                            `+${mod.mod} (${mod.source})`,\n                            'green'\n                        );\n                    } else {\n                        this.game.renderer.drawText(\n                            3,\n                            ypos + i + 1,\n                            `-${Math.abs(mod.mod)} (${mod.source})`,\n                            'red'\n                        );\n                    }\n                });\n\n                pad += stat.modifiers.length;\n            } else {\n                this.game.renderer.drawText(1, ypos, `- ${stat.name}`);\n                this.game.renderer.drawText(10, ypos, `${modDir}${stat.sum}`);\n            }\n        });\n\n        this.game.renderer.drawText(1, 1, '← back [esc]');\n    }\n}\n","import Manager from './Manager';\nimport { MeleeCommand, MoveCommand } from '../ecs/components';\n\nexport default class PlayerManager extends Manager {\n    #entityId = null;\n\n    get entity() {\n        return this.game.ecs.getEntity(this.#entityId);\n    }\n\n    get id() {\n        return this.#entityId;\n    }\n\n    get isTurn() {\n        return this.entity.actor.hasEnergy;\n    }\n\n    get position() {\n        return this.entity.position.getPos();\n    }\n\n    getSetupData() {\n        // TODO\n        // player.fireEvent('query-owned-entities', { ids });\n        // player.fireEvent('dereference-unowned-entities');\n        // serialize all \"owned\"\n        const entity = this.game.ecs.createPrefab('Player');\n        const entityId = entity.id;\n        const serialized = entity.serialize();\n\n        entity.destroy();\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    setup(data) {\n        this.#entityId = data.entityId;\n        this.game.ecs.deserialize(data.entity);\n    }\n\n    getSaveGameData() {\n        const entityId = this.entity.id;\n\n        // gather all entities for player\n        const evt = this.entity.fireEvent('query-ownership', {\n            result: new Set([this.entity]),\n        });\n        const serialized = this.game.ecs.serialize(Array.from(evt.data.result));\n\n        console.log(serialized);\n\n        return {\n            entityId,\n            entity: serialized, // TODO inventory\n        };\n    }\n\n    teardown() {\n        if (this.entity) {\n            this.entity.destroy();\n        }\n        this.#entityId = null; // TODO does this need to destroy()?\n    }\n\n    move(direction) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MoveCommand)) {\n            this.entity.moveCommand.destroy();\n        }\n\n        this.entity.add(MoveCommand, {\n            direction,\n        });\n    }\n\n    melee(target) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        if (this.entity.has(MeleeCommand)) {\n            this.entity.meleeCommand.destroy();\n        }\n\n        this.entity.add(MeleeCommand, {\n            target,\n        });\n    }\n\n    wait(turns = 1) {\n        if (!this.isTurn) {\n            return;\n        }\n\n        this.entity.fireEvent('energy-consumed', turns * 1000);\n    }\n}\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\nimport Manager from '../core/Manager';\n\nexport default class ECS extends Manager {\n    #engine;\n\n    get engine() {\n        return this.#engine;\n    }\n\n    constructor(game) {\n        super(game);\n        this.#engine = new Engine();\n\n        Object.values(components).forEach((component) => {\n            this.#engine.registerComponent(component);\n        });\n\n        Object.values(prefabs).forEach((prefab) => {\n            this.#engine.registerPrefab(prefab);\n        });\n    }\n\n    teardown() {\n        this.destroyEntities();\n    }\n\n    destroyEntities() {\n        for (let entity of this.#engine.entities.all) {\n            entity.destroy();\n        }\n    }\n\n    cloneEntity(entity) {\n        const data = entity.serialize();\n\n        data.id = this.engine.generateId();\n\n        this.engine.deserialize(data);\n\n        return this.engine.getEntity(data.id);\n    }\n}\n","import Manager from './Manager';\n\nexport default class GameStateManager extends Manager {\n    #isStarted = false;\n    #filename = 'test';\n\n    get filename() {\n        return this.#filename;\n    }\n\n    get isStarted() {\n        return this.#isStarted;\n    }\n\n    gameOver() {\n        this.#isStarted = false;\n    }\n\n    initiateTeardown() {\n        console.log('STATE - teardown');\n        this.#isStarted = false;\n\n        this.game.player.teardown();\n        this.game.map.teardown();\n        this.game.engine.teardown();\n        this.game.world.teardown();\n    }\n\n    initiateSetup(data) {\n        console.log('STATE - setup');\n        this.#isStarted = true;\n\n        this.game.clock.setup(data.clock);\n        this.game.player.setup(data.player);\n        this.game.world.setup(data.world);\n        this.game.map.setup(data.map);\n    }\n\n    newGame() {\n        this.#filename = prompt('Enter save name', 'test');\n        this.deleteFile(this.filename);\n        this.initiateTeardown();\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSetupData(),\n            player: this.game.player.getSetupData(),\n            world: this.game.world.getSetupData(),\n            map: this.game.map.getSetupData(),\n        };\n\n        this.initiateSetup(data);\n    }\n\n    saveGame() {\n        if (!this.isStarted) {\n            console.warn(\"cannot save game since it's not started\");\n            return;\n        }\n\n        const data = {\n            filename: this.filename,\n            clock: this.game.clock.getSaveGameData(),\n            map: this.game.map.getSaveGameData(),\n            player: this.game.player.getSaveGameData(),\n            world: this.game.world.getSaveGameData(),\n        };\n\n        console.log('save data', data);\n\n        localStorage.setItem(this.filename, JSON.stringify(data));\n\n        return data;\n    }\n\n    deleteFile(filename) {\n        const files = Object.keys(localStorage);\n\n        files.forEach((file) => {\n            if (file.startsWith(`${filename}-`)) {\n                localStorage.removeItem(file);\n            }\n        });\n    }\n\n    saveSectorPositionData(sectorId, positionData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-positions`,\n            JSON.stringify(positionData)\n        );\n    }\n\n    saveSectorEntityData(sectorId, entityData) {\n        localStorage.setItem(\n            `${this.filename}-${sectorId}-entities`,\n            JSON.stringify(entityData)\n        );\n    }\n\n    loadSectorEntityData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-entities`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSectorPositionData(sectorId) {\n        const json = localStorage.getItem(\n            `${this.filename}-${sectorId}-positions`\n        );\n\n        return json && JSON.parse(json);\n    }\n\n    loadSavefileData(filename) {\n        const json = localStorage.getItem(filename);\n\n        return json && JSON.parse(json);\n    }\n\n    loadGame() {\n        const filename = prompt('Enter save filename to load', 'test');\n\n        const data = this.loadSavefileData(filename);\n\n        if (!data) {\n            console.warn(`save file ${filename} not found`);\n        }\n\n        this.#filename = filename;\n\n        console.log('Loading game', data);\n\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n\n    loadGameData(data) {\n        this.initiateTeardown();\n        this.initiateSetup(data);\n    }\n}\n","import Manager from './Manager';\n\nexport default class ClockManager extends Manager {\n    #tick = 0;\n    #tickDelta = 0;\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    getSetupData() {\n        return {\n            tick: 0,\n            tickDelta: 0,\n        };\n    }\n\n    getSaveGameData() {\n        return {\n            tick: this.tick,\n            tickDelta: this.tickDelta,\n        };\n    }\n\n    setup(data) {\n        this.#tick = data.tick;\n        this.#tickDelta = data.tickDelta;\n    }\n\n    incrementTick(delta) {\n        this.#tickDelta = delta;\n        this.#tick += delta;\n    }\n\n    update(dt) {\n        this.#tickDelta = 0;\n    }\n}\n","import { Moniker, IsVisible } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\n\nexport default class CursorSystem extends System {\n    #isEnabled = false;\n    #x = 1;\n    #y = 1;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get isEnabled() {\n        return this.#isEnabled;\n    }\n\n    enable() {\n        const player = this.game.player.position;\n\n        this.#x = player.x;\n        this.#y = player.y;\n\n        this.#isEnabled = true;\n    }\n\n    disable() {\n        this.#isEnabled = false;\n    }\n\n    toggle() {\n        if (this.isEnabled) {\n            this.disable();\n        } else {\n            this.enable();\n        }\n    }\n\n    move(direction) {\n        const delta = Directions.delta(direction);\n        this.#x += delta.x;\n        this.#y += delta.y;\n    }\n\n    getEntities() {\n        return this.game.map\n            .getEntitiesAt(this.x, this.y)\n            .filter((e) => e.has(IsVisible));\n    }\n\n    drawCursor(color = 'yellow') {\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        this.game.renderer.draw(screen.x, screen.y, 'X', color);\n    }\n\n    drawTags() {\n        const entities = this.getEntities().filter((e) => e.has(Moniker));\n        const screen = this.game.camera.worldToScreen(this.x, this.y);\n\n        if (screen.x < this.game.camera.width / 2) {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '◄' : ' ';\n                this.game.renderer.drawText(\n                    screen.x + 1,\n                    screen.y + i,\n                    `${c}█`,\n                    '#ddd'\n                );\n                this.game.renderer.drawText(\n                    screen.x + 2,\n                    screen.y + i,\n                    entity.moniker.display + ' ',\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        } else {\n            entities.forEach((entity, i) => {\n                const c = i === 0 ? '►' : ' ';\n                this.game.renderer.drawText(\n                    screen.x - 1,\n                    screen.y + i,\n                    `█${c}`,\n                    '#ddd'\n                );\n                const len = this.game.renderer.computeTextWidth(\n                    entity.moniker.display\n                );\n                this.game.renderer.drawText(\n                    screen.x - len - 1.5,\n                    screen.y + i,\n                    ' ' + entity.moniker.display,\n                    '#111133',\n                    'white',\n                    '#ddd'\n                );\n            });\n        }\n    }\n}\n","import Manager from './Manager';\nimport FastMap from '../utils/FastMap';\nimport { IsInventoried, Position } from '../ecs/components';\n\nexport default class MapManager extends Manager {\n    #playerOutOfBounds = null;\n    #lookup;\n    #width = 32;\n    #height = 32;\n\n    get width() {\n        return this.#width;\n    }\n\n    get height() {\n        return this.#height;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Position],\n        });\n\n        this.#lookup = new FastMap(this.width, this.height);\n\n        this.query.onEntityAdded((e) => {\n            this.#lookup.set(0, 0, e.id);\n        });\n\n        this.query.onEntityRemoved((e) => {\n            this.#lookup.remove(e.id);\n        });\n    }\n\n    getSetupData() {\n        return {};\n    }\n\n    teardown() {\n        this.#playerOutOfBounds = false;\n        this.#lookup.clear();\n    }\n\n    setup(data) {\n        if (data.playerPosition) {\n            this.game.player.entity.position.setPos(\n                data.playerPosition.x,\n                data.playerPosition.y\n            );\n        } else {\n            const position = this.getRandomEmptyPosition();\n            this.game.player.entity.position.setPos(position.x, position.y);\n        }\n\n        this.game.FOVSystem.computeFOV();\n    }\n\n    getSaveGameData() {\n        const data = this.#lookup.serialize();\n\n        this.game.state.saveSectorPositionData(this.game.world.sectorId, data);\n\n        return {\n            playerPosition: this.game.player.position,\n        };\n    }\n\n    onSectorLoaded(sector) {\n        this.#playerOutOfBounds = false;\n\n        const data = this.game.state.loadSectorPositionData(sector.id);\n\n        if (data) {\n            this.#lookup.deserialize(data);\n        }\n    }\n\n    getPosition(entityId) {\n        return this.#lookup.getPosition(entityId);\n    }\n\n    setPosition(x, y, entityId) {\n        if (this.#lookup.isOutOfBounds(x, y)) {\n            if (this.game.player.id === entityId) {\n                this.#playerOutOfBounds = { x, y };\n            }\n\n            return;\n        }\n\n        this.#lookup.set(x, y, entityId);\n\n        if (entityId === this.game.player.id) {\n            this.game.camera.setFocus(x, y);\n        }\n    }\n\n    getEntitiesAt(x, y) {\n        return this.#lookup\n            .get(x, y)\n            .map((id) => this.game.ecs.getEntity(id))\n            .filter((e) => !e.has(IsInventoried));\n    }\n\n    isAdjacent(x1, y1, x2, y2) {\n        return Math.abs(x1 - x2) <= 1 && Math.abs(y1 - y2) <= 1;\n    }\n\n    getEntitiesInRect(x, y, width, height) {\n        const entities = [];\n\n        for (let i = x; i < x + width + 1; i++) {\n            for (let j = y; j < y + height + 1; j++) {\n                entities.push(...this.getEntitiesAt(i, j));\n            }\n        }\n\n        return entities;\n    }\n\n    getEntitiesInRange(x, y, range) {\n        const diameter = range * 2;\n\n        return this.getEntitiesInRect(x - range, y - range, diameter, diameter);\n    }\n\n    getNeighborEntities(x, y) {\n        return [\n            this.getEntitiesAt(x - 1, y - 1), // TOP LEFT\n            this.getEntitiesAt(x, y - 1), // TOP\n            this.getEntitiesAt(x + 1, y - 1), // TOP RIGHT\n            this.getEntitiesAt(x - 1, y), // LEFT\n            this.getEntitiesAt(x + 1, y), // RIGHT\n            this.getEntitiesAt(x - 1, y + 1), // BOTTOM LEFT\n            this.getEntitiesAt(x, y + 1), // BOTTOM\n            this.getEntitiesAt(x + 1, y + 1), // BOTTOM RIGHT\n        ];\n    }\n\n    getRandomEmptyPosition() {\n        let x, y;\n        do {\n            x = Math.trunc(Math.random() * this.width);\n            y = Math.trunc(Math.random() * this.height);\n        } while (this.getEntitiesAt(x, y).length > 0);\n\n        return { x, y };\n    }\n\n    isOutOfbounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    onPlayerOutOfBounds(x, y) {\n        if (y < 0) {\n            this.game.world.enterSector(this.game.world.sector.northSector, {\n                x,\n                y: this.height - 1,\n            });\n        }\n        if (y >= this.height) {\n            this.game.world.enterSector(this.game.world.sector.southSector, {\n                x,\n                y: 0,\n            });\n        }\n        if (x >= this.width) {\n            this.game.world.enterSector(this.game.world.sector.eastSector, {\n                x: 0,\n                y,\n            });\n        }\n        if (x < 0) {\n            this.game.world.enterSector(this.game.world.sector.westSector, {\n                x: this.width - 1,\n                y,\n            });\n        }\n    }\n\n    update(dt) {\n        if (this.#playerOutOfBounds) {\n            this.onPlayerOutOfBounds(\n                this.#playerOutOfBounds.x,\n                this.#playerOutOfBounds.y\n            );\n        }\n    }\n}\n","export default class FastMap {\n    _width = 0;\n    _height = 0;\n    _data = [];\n    _idHash = new Map();\n\n    get width() {\n        return this._width;\n    }\n\n    get height() {\n        return this._height;\n    }\n\n    get size() {\n        return this._width * this._height;\n    }\n\n    constructor(width, height) {\n        this._width = width;\n        this._height = height;\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i] = new Set();\n        }\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    clear() {\n        this._idHash.clear();\n\n        for (let i = 0; i < this.size; i++) {\n            this._data[i].clear();\n        }\n    }\n\n    serialize() {\n        const entries = this._data.map((d) => Array.from(d));\n\n        return {\n            width: this.width,\n            height: this.height,\n            entries,\n        };\n    }\n\n    deserialize(data) {\n        this._width = data.width;\n        this._height = data.height;\n        this._idHash = new Map();\n\n        for (let i = 0; i < data.entries.length; i++) {\n            const coord = this.coord(i);\n            this._data[i] = new Set(data.entries[i]);\n\n            data.entries[i].forEach((id) => {\n                this._idHash.set(id, coord);\n            });\n        }\n    }\n\n    set(x, y, id) {\n        if (this.isOutOfBounds(x, y)) {\n            console.warn(\n                `Trying to set an entity ${id} position out-of-bounds ${x}, ${y}`\n            );\n            return;\n        }\n\n        const idx = this.idx(x, y);\n\n        this.remove(id);\n\n        this._idHash.set(id, { x, y });\n        this._data[idx].add(id);\n    }\n\n    get(x, y) {\n        if (this.isOutOfBounds(x, y)) {\n            return [];\n        }\n\n        return Array.from(this._data[this.idx(x, y)]);\n    }\n\n    has(id) {\n        return this._idHash.has(id);\n    }\n\n    getPosition(id) {\n        const pos = this._idHash.get(id);\n\n        if (!pos) {\n            console.warn('Cannot get position', id);\n        }\n\n        return pos;\n    }\n\n    remove(id) {\n        if (!this.has(id)) {\n            return;\n        }\n\n        const pos = this.getPosition(id);\n        const idx = this.idx(pos.x, pos.y);\n\n        this._idHash.delete(id);\n        this._data[idx].delete(id);\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n}\n","import { FOV } from 'rot-js';\nimport {\n    Explorable,\n    Explored,\n    IsDestroying,\n    Shadowcaster,\n    IsVisible,\n} from '../ecs/components';\nimport System from './System';\n\nexport default class FOVSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.fov = new FOV.PreciseShadowcasting((x, y) =>\n            this.isSquareVisible(x, y)\n        );\n\n        this.query = this.game.ecs.createQuery({\n            all: [IsVisible],\n        });\n    }\n\n    isSquareVisible(x, y) {\n        return !this.game.map\n            .getEntitiesAt(x, y)\n            .some((e) => e.has(Shadowcaster));\n    }\n\n    setVisible(x, y, amount, range) {\n        this.game.map.getEntitiesAt(x, y).forEach((e) => {\n            e.add(IsVisible, {\n                range,\n                amount,\n            });\n            if (e.has(Explorable) && !e.has(Explored)) {\n                e.add(Explored);\n            }\n        });\n    }\n\n    computeFOV() {\n        this.query.get().forEach((e) => e.isVisible.destroy());\n\n        const pos = this.game.player.position;\n\n        this.fov.compute(pos.x, pos.y, 12, (x, y, r, visibility) => {\n            this.setVisible(x, y, visibility, r);\n        });\n    }\n\n    update(dt) {\n        if (this.game.clock.tickDelta) {\n            this.computeFOV();\n        }\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import { MeleeCommand } from '../ecs/components';\nimport System from './System';\n\nexport default class MeleeSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [MeleeCommand],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const target = entity.meleeCommand.target;\n\n            if (target) {\n                entity.fireEvent('try-melee', {\n                    target,\n                });\n            }\n\n            entity.meleeCommand.destroy();\n        });\n    }\n}\n","import { SCREEN_DEATH } from '../core/screens/ScreenType';\nimport { IsDead, IsDestroying, IsPlayer } from '../ecs/components';\nimport System from './System';\n\nexport default class DeathSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = game.ecs.createQuery({\n            all: [IsDead],\n            none: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            entity.fireEvent('death');\n\n            if (entity.has(IsPlayer)) {\n                this.game.screens.setScreen(SCREEN_DEATH);\n            } else {\n                entity.add(IsDestroying);\n            }\n        });\n    }\n}\n","import { game } from '../core/Game';\nimport { Particle, ParticleEmitter } from '../ecs/components';\nimport System from './System';\n\nexport default class ParticleSystem extends System {\n    #particleQuery = null;\n    #emitterQuery = null;\n\n    constructor(game) {\n        super(game);\n        this.#emitterQuery = game.ecs.createQuery({\n            all: [ParticleEmitter],\n        });\n        this.#particleQuery = game.ecs.createQuery({\n            all: [Particle],\n        });\n    }\n\n    createParticle(x, y, properties = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(Particle, {\n            ...properties,\n            x,\n            y,\n        });\n    }\n\n    createEmitter(x, y, particleData = {}) {\n        const e = this.game.ecs.createEntity();\n\n        e.add(ParticleEmitter, {\n            x,\n            y,\n            particleData: {\n                direction: {\n                    x: 0,\n                    y: 1,\n                },\n                glyphs: ['░', '▒', '▓', '█'],\n                fg1s: ['cyan', 'blue'],\n                speed: 0.04,\n                lifetime: 600,\n                ...particleData,\n            },\n        });\n    }\n\n    update(dt) {\n        this.#emitterQuery.get().forEach((entity) => {\n            const emitter = entity.particleEmitter;\n\n            emitter.age += dt;\n\n            if (emitter.isExpired) {\n                entity.destroy();\n            } else {\n                const total = (emitter.rate / 1000) * emitter.duration;\n                const targetCount = Math.trunc(emitter.percent * total);\n\n                for (let i = emitter.count; i < targetCount; i++) {\n                    emitter.createParticle();\n                }\n            }\n        });\n\n        this.#particleQuery.get().forEach((entity) => {\n            const particle = entity.particle;\n\n            particle.age += dt;\n\n            if (particle.isExpired) {\n                entity.destroy();\n                return;\n            }\n\n            particle.x += particle.direction.x * particle.speed;\n            particle.y += particle.direction.y * particle.speed;\n\n            if (!this.game.camera.isInView(particle.x, particle.y)) {\n                return;\n            }\n\n            const screen = this.game.camera.worldToScreen(\n                particle.x,\n                particle.y\n            );\n\n            this.game.renderer.draw(\n                Math.round(screen.x),\n                Math.round(screen.y),\n                particle.glyph,\n                particle.fg1,\n                particle.fg2,\n                particle.bg\n            );\n        });\n    }\n}\n","import { FactionMember } from '../ecs/components';\nimport {\n    factions,\n    FACTION_GOBLIN,\n    FACTION_PLAYER,\n    FACTION_VILLAGER,\n    getFactionByName,\n} from '../enums/Factions';\nimport Manager from './Manager';\n\nexport default class FactionManager extends Manager {\n    relations = {};\n\n    get factions() {\n        return Object.values(factions);\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.setRelation(FACTION_PLAYER, FACTION_GOBLIN, -300);\n        this.setRelation(FACTION_PLAYER, FACTION_VILLAGER, 120);\n        this.setRelation(FACTION_GOBLIN, FACTION_VILLAGER, -400);\n    }\n\n    getFactionById(id) {\n        return this.factions.find((f) => f.id === id);\n    }\n\n    getFactionByName(name) {\n        return getFactionByName(name);\n    }\n\n    isHostile(factionA, factionB) {\n        return factionA !== factionB;\n    }\n\n    _relationKey(idA, idB) {\n        return [idA, idB].sort().join('-');\n    }\n\n    setRelation(idA, idB, value) {\n        const key = this._relationKey(idA, idB);\n\n        this.relations[key] = value;\n    }\n\n    getRelation(idA, idB) {\n        const key = this._relationKey(idA, idB);\n\n        if (!this.relations.hasOwnProperty(key)) {\n            this.relations[key] = 0;\n        }\n\n        return this.relations[key];\n    }\n\n    getEntityRelation(entityA, entityB) {\n        const memberA = entityA.get(FactionMember);\n        const memberB = entityB.get(FactionMember);\n\n        if (memberA && memberB) {\n            const factionA = memberA.faction;\n            const factionB = memberB.faction;\n\n            return this.getRelation(factionA.id, factionB.id);\n        }\n\n        return 0;\n    }\n\n    areEntitiesHostile(entityA, entityB) {\n        const relation = this.getEntityRelation(entityA, entityB);\n\n        return relation < -200;\n    }\n\n    getDisplay(value) {\n        if (value <= -300) {\n            return 'Aggressive';\n        }\n\n        if (value <= -200) {\n            return 'Unfriendly';\n        }\n\n        if (value >= 300) {\n            return 'Loyal';\n        }\n\n        if (value >= 200) {\n            return 'Friendly';\n        }\n\n        if (value >= 100) {\n            return 'Amicable';\n        }\n\n        return 'Neutral';\n    }\n}\n","import Manager from './Manager';\n\nexport default class CameraManager extends Manager {\n    width = 32;\n    height = 24;\n    zoom = 2;\n    padding = 4;\n    clampX = 32;\n    clampY = 24;\n\n    _focusX = 0;\n    _focusY = 0;\n\n    constructor(game) {\n        super(game);\n        window.addEventListener('resize', this.onWindowResize.bind(this));\n        this.onWindowResize();\n    }\n\n    get renderedTileWidth() {\n        return this.zoom * this.game.renderer.tileWidth;\n    }\n\n    get renderedTileHeight() {\n        return this.zoom * this.game.renderer.tileHeight;\n    }\n\n    computeSize() {\n        this.width = Math.max(\n            this.clampX,\n            Math.floor(window.innerWidth / this.renderedTileWidth) - 2\n        );\n        this.height = Math.max(\n            this.clampY,\n            Math.floor(window.innerHeight / this.renderedTileHeight) - 2\n        );\n        this.topLeftWorldX = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusX - this.width / 2),\n                Math.max(\n                    (this.width - this.game.map.width) / -2,\n                    this.padding + this.game.map.width - this.width\n                )\n            )\n        );\n        this.topLeftWorldY = Math.floor(\n            Math.min(\n                Math.max(-this.padding, this._focusY - this.height / 2),\n                Math.max(\n                    (this.height - this.game.map.height) / -2,\n                    this.padding + this.game.map.height - this.height\n                )\n            )\n        );\n    }\n\n    onWindowResize() {\n        this.computeSize();\n        this.game.renderer.resizeDisplay(this.width, this.height, this.zoom);\n    }\n\n    setZoom(zoom) {\n        this.zoom = zoom;\n        this.computeSize();\n        this.onWindowResize();\n    }\n\n    setFocus(x, y) {\n        this._focusX = x;\n        this._focusY = y;\n        this.computeSize();\n    }\n\n    setPadding(value) {\n        this.padding = value;\n        this.computeSize();\n    }\n\n    worldToScreen(x, y) {\n        return {\n            x: x - this.topLeftWorldX,\n            y: y - this.topLeftWorldY,\n        };\n    }\n\n    screenToWorld(x, y) {\n        return {\n            x: x + this.topLeftWorldX,\n            y: y + this.topLeftWorldY,\n        };\n    }\n\n    isInView(worldX, worldY) {\n        const screen = this.worldToScreen(worldX, worldY);\n\n        return (\n            screen.x < this.width &&\n            screen.y < this.height &&\n            screen.x >= 0 &&\n            screen.y >= 0\n        );\n    }\n}\n","import System from './System';\n\nconst fpsElement = document.getElementsByClassName('fps')[0];\n\nexport default class FPSMonitoringSystem extends System {\n    frames = [];\n    frameCount = 60;\n\n    constructor(game) {\n        super(game);\n        this.frames = [];\n\n        for (let i = 0; i < this.frameCount; i++) {\n            this.frames[i] = 0;\n        }\n    }\n\n    update(dt) {\n        this.frames.push(1000 / dt);\n        this.frames.shift();\n\n        const sum = this.frames.reduce((s, v) => s + v, 0);\n        const fps = Math.trunc(sum / this.frameCount);\n\n        fpsElement.innerText = fps;\n    }\n}\n","import WorldData from '../data/WorldData';\nimport { IsPlayer } from '../ecs/components';\nimport Manager from './Manager';\nimport { SCREEN_LOAD_SECTOR } from './screens/ScreenType';\n\nexport class WorldManager extends Manager {\n    #data;\n    #sectorId;\n    #entry;\n\n    get sectorId() {\n        return this.#sectorId;\n    }\n\n    get sector() {\n        return this.#data.getSector(this.#sectorId);\n    }\n\n    get entry() {\n        return this.#entry;\n    }\n\n    constructor(game) {\n        super(game);\n\n        this.#data = new WorldData();\n    }\n\n    getSetupData() {\n        return {\n            sectorId: this.#data.getStartingSector().id,\n            exploredSectorIds: [],\n        };\n    }\n\n    getSaveGameData() {\n        // TODO only save sector data??\n        const data = Array.from(this.game.ecs.entities.all).filter(\n            (e) => !e.has(IsPlayer)\n        );\n        const serialized = this.game.ecs.serialize(data);\n\n        console.log('serialized map data', serialized);\n\n        this.game.state.saveSectorEntityData(this.sector.id, serialized);\n\n        return {\n            sectorId: this.sector.id,\n            exploredSectorIds: [],\n        };\n    }\n\n    setup(data) {\n        const sector = this.#data.getSector(data.sectorId);\n\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            nextSector: sector,\n            entry: data.position,\n        });\n    }\n\n    teardown() {\n        // TODO: destroy all sector entities?\n        this.#sectorId = null;\n    }\n\n    onSectorLoaded(sector, entry) {\n        this.#sectorId = sector.id;\n\n        const data = this.game.state.loadSectorEntityData(sector.id);\n\n        if (data) {\n            this.game.ecs.deserialize(data);\n        } else {\n            sector.generate(this.game);\n        }\n    }\n\n    enterSector(sector, entry) {\n        this.game.screens.setScreen(SCREEN_LOAD_SECTOR, {\n            prevousSector: this.sector,\n            nextSector: sector,\n            entry,\n        });\n    }\n}\n","import { Sector } from './Sector';\nimport data from './world.json';\n\nexport default class WorldData {\n    #sectors = [];\n\n    get width() {\n        return data.width;\n    }\n\n    get height() {\n        return data.height;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return {\n            x: Math.trunc(idx % this.width),\n            y: Math.trunc(idx / this.width),\n        };\n    }\n\n    constructor() {\n        this.#sectors = [];\n\n        for (let x = 0; x < data.width; x++) {\n            for (let y = 0; y < data.height; y++) {\n                const sector = Sector.parseData(this, data.sectors[y][x], x, y);\n\n                this.#sectors[sector.id] = sector;\n            }\n        }\n    }\n\n    isOutOfBounds(x, y) {\n        return x < 0 || y < 0 || x >= this.width || y >= this.height;\n    }\n\n    getStartingSector() {\n        return this.getSector(4);\n    }\n\n    getSectorByCoord(x, y) {\n        return this.getSector(this.idx(x, y));\n    }\n\n    getSector(idx) {\n        const { x, y } = this.coord(idx);\n\n        if (this.isOutOfBounds(x, y)) {\n            return new Sector(this, x, y);\n        }\n\n        return this.#sectors[idx];\n    }\n}\n","import { game } from '../core/Game';\nimport { getGenerator } from '../level/generators/generators';\n\nexport class Sector {\n    #x = 0;\n    #y = 0;\n    connectionsNorth = [];\n    connectionsWest = [];\n    generator = {};\n    music = null;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get id() {\n        return this.world.idx(this.x, this.y);\n    }\n\n    get northSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y - 1);\n    }\n\n    get southSector() {\n        return this.world.getSectorByCoord(this.#x, this.#y + 1);\n    }\n\n    get eastSector() {\n        return this.world.getSectorByCoord(this.#x + 1, this.#y);\n    }\n\n    get westSector() {\n        return this.world.getSectorByCoord(this.#x - 1, this.#y);\n    }\n\n    constructor(world, x, y) {\n        this.world = world;\n        this.#x = x;\n        this.#y = y;\n    }\n\n    getExits() {\n        const exits = [];\n\n        // north\n        exits.push(\n            ...this.connectionsNorth.map((c) => ({\n                x: 12,\n                y: 0,\n            }))\n        );\n\n        // west\n        exits.push(\n            ...this.connectionsWest.map((c) => ({\n                x: 0,\n                y: 12,\n            }))\n        );\n\n        // east\n        exits.push(\n            ...this.eastSector.connectionsWest.map((c) => ({\n                x: game.map.width - 1,\n                y: 12,\n            }))\n        );\n\n        // south\n        exits.push(\n            ...this.southSector.connectionsNorth.map((c) => ({\n                x: 12,\n                y: game.map.height - 1,\n            }))\n        );\n\n        return exits;\n    }\n\n    generate(game) {\n        const exits = this.getExits();\n        const generator = getGenerator(this.generator.type);\n\n        const settings = {\n            width: game.map.width,\n            height: game.map.height,\n            exits,\n        };\n\n        const tiles = generator.generate(settings);\n\n        generator.populate(settings, tiles);\n\n        this.tiles = tiles;\n    }\n\n    static parseData(world, data, x, y) {\n        const sector = new Sector(world, x, y);\n\n        sector.connectionsNorth = data.connectionsNorth;\n        sector.connectionsWest = data.connectionsWest;\n        sector.generator = data.generator;\n        sector.music = data.music;\n\n        return sector;\n    }\n}\n","import { ForestCabinsGenerator } from './ForestCabinsGenerator';\nimport { ForestGenerator } from './ForestGenerator';\nimport { ForestStrongholdGenerator } from './ForestStrongholdGenerator';\nimport { ForestTownGenerator } from './ForestTownGenerator';\n\nconst mapping = {\n    ['FOREST']: ForestGenerator,\n    ['FOREST_STRONGHOLD']: ForestStrongholdGenerator,\n    ['FOREST_CABINS']: ForestCabinsGenerator,\n    ['FOREST_TOWN']: ForestTownGenerator,\n};\n\nexport const getGenerator = (name) => {\n    return mapping[name];\n};\n","import { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CABIN, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestCabinsGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n        });\n\n        tiles.rooms.forEach((room) => (room.theme = TILE_THEME_FOREST));\n\n        const mediumRooms = tiles.rooms.filter(\n            (r) => r.width >= 3 && r.height >= 3\n        );\n        const room = pickRandom(mediumRooms);\n\n        if (room) {\n            room.theme = TILE_THEME_CABIN;\n            room.includeWalls = true;\n        }\n\n        const distancedRooms = mediumRooms.filter((r) => r !== room);\n        const room2 = pickRandom(distancedRooms);\n\n        if (room2) {\n            room2.theme = TILE_THEME_CABIN;\n            room2.includeWalls = true;\n        }\n\n        const leftovers = tiles.getUnassignedTiles();\n\n        leftovers.forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { computeAStar } from '../utils/AStar';\nimport { diagonalDistance } from '../utils/diagonalDistance';\nimport { manhattanDistance } from '../utils/ManhattanDistance';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from './TileData';\n\nconst getClosestTile = (tiles, target) => {\n    let closest = null;\n    let closestDistance = null;\n\n    tiles.data.forEach((tile) => {\n        if (!tile.isType(TILE_TYPE_FLOOR)) {\n            return;\n        }\n\n        const distance = manhattanDistance(tile, target);\n\n        if (distance < closestDistance || closest === null) {\n            closest = tile;\n            closestDistance = distance;\n            return;\n        }\n    });\n\n    return closest;\n};\n\nexport const digExit = (tiles, exit) => {\n    const source = getClosestTile(tiles, exit);\n\n    if (source.x === exit.x && source.y === exit.y) {\n        tiles.setTileType(exit.x, exit.y, TILE_TYPE_FLOOR);\n        return;\n    }\n\n    tiles.setTileType(source.x, source.y, TILE_TYPE_WALL);\n    tiles.setTileType(exit.x, exit.y, TILE_TYPE_WALL);\n\n    const result = computeAStar({\n        goal: {\n            x: source.x,\n            y: source.y,\n        },\n        start: {\n            x: exit.x,\n            y: exit.y,\n        },\n        cost: (a, b) => {\n            if (tiles.isOnEdge(b.x, b.y)) {\n                return Infinity;\n            }\n\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        },\n    });\n\n    result.path.forEach((segment) => {\n        tiles.setTileType(segment.x, segment.y, TILE_TYPE_FLOOR);\n    });\n\n    if (result.success) {\n        const door = result.path[result.path.length - 2];\n        const room = tiles.getRoomForTile(door.x, door.y);\n\n        if (room) {\n            room.addExit(door.x, door.y);\n        }\n    }\n};\n\nexport const digExits = (tiles, exits) => {\n    exits.forEach((exit) => digExit(tiles, exit));\n};\n","import { TILE_THEME_CASTLE } from './themes/TileTheme';\n\nexport const TILE_TYPE_FLOOR = 0;\nexport const TILE_TYPE_WALL = 1;\nexport const TILE_TYPE_OUT_OF_BOUNDS = 1;\n\nexport class TileData {\n    x = -1;\n    y = -1;\n    type = TILE_TYPE_OUT_OF_BOUNDS;\n    theme = TILE_THEME_CASTLE;\n\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    isType(type) {\n        return this.type === type;\n    }\n}\n\nexport const createTileData = (x, y) => new TileData(x, y);\n","import CastleTheme from './CastleTheme';\nimport ForestTheme from './ForestTheme';\nimport CabinTheme from './CabinTheme';\n\nexport const TILE_THEME_FOREST = 0;\nexport const TILE_THEME_CASTLE = 1;\nexport const TILE_THEME_CABIN = 2;\n\nconst mapping = {\n    [TILE_THEME_FOREST]: ForestTheme,\n    [TILE_THEME_CASTLE]: CastleTheme,\n    [TILE_THEME_CABIN]: CabinTheme,\n};\n\nexport const getThemePopulator = (theme) => {\n    return mapping[theme];\n};\n","import {\n    SPWN_STONE,\n    SPWN_STONE_WALL,\n    SPWN_WOOD_DOOR,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CastleTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_STONE_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        for (let i = 0; i < randomInt(0, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { game } from '../../core/Game';\nimport { pickRandom } from '../../utils/rand';\n\nexport default class TileThemePopulator {\n    static populateTile(tile) {}\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static populate(tiles) {\n        tiles.data.forEach((tile) => {\n            this.populateTile(tile);\n        });\n    }\n\n    static getEntities(tile) {\n        return game.map.getEntitiesAt(tile.x, tile.y);\n    }\n\n    static clearTile(tile) {\n        getEntities(tile).forEach((e) => {\n            e.destroy();\n        });\n    }\n\n    static getRandomEmptyTile(tileArr, attempts = 100) {\n        for (let i = 0; i < attempts; i++) {\n            const tile = pickRandom(tileArr);\n\n            if (this.getEntities(tile) <= 0) {\n                return tile;\n            }\n        }\n\n        console.warn(\n            `ran out of attempts (${attempts}) to place item`,\n            tileArr\n        );\n    }\n\n    static trySpawn(room, cb) {\n        const tile = this.getRandomEmptyTile(room.interiorTiles);\n\n        if (tile) {\n            cb(tile);\n        }\n    }\n}\n","import {\n    SPWN_GOBLIN_GRUNT,\n    SPWN_PINE_TREE,\n    SPWN_STONE,\n    SPWN_VIAL_BLOOD,\n    SPWN_VIAL_HONEY,\n    SPWN_VIAL_WATER,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class ForestTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (tile.isType(TILE_TYPE_WALL)) {\n            spawn(SPWN_PINE_TREE, tile.x, tile.y);\n        }\n    }\n\n    static populateRoom(room) {\n        room.tiles.forEach((tile) => {\n            this.populateTile(tile);\n\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            if (tile.isType(TILE_TYPE_FLOOR)) {\n                spawn(SPWN_STONE, tile.x, tile.y);\n            }\n        });\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_GOBLIN_GRUNT, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_BLOOD, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_WATER, tile.x, tile.y);\n            });\n        }\n\n        for (let i = 0; i < randomInt(0, 1); i++) {\n            if (Math.random() > 0.05) {\n                return;\n            }\n\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_VIAL_HONEY, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import {\n    SPWN_HUMAN_WANDERER,\n    SPWN_WOOD_DOOR,\n    SPWN_WOOD_WALL,\n    SPWN_WOOD_CHEST,\n    SPWN_STONE,\n    SPWN_VIAL_HONEY,\n    SPWN_AMULET,\n    SPWN_CLOTH_ARMOR,\n    SPWN_LEATHER_BOOTS,\n    SPWN_SHORTSWORD,\n    SPWN_GREATSWORD,\n    SPWN_GOBLIN_GRUNT,\n    SPWN_BATTLE_AXE,\n    SPWN_HATCHET,\n} from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { randomInt } from '../../utils/rand';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport TileThemePopulator from './TileThemePopulator';\n\nexport default class CabinTheme extends TileThemePopulator {\n    static populateTile(tile) {\n        if (this.getEntities(tile).length === 0) {\n            if (tile.isType(TILE_TYPE_WALL)) {\n                spawn(SPWN_WOOD_WALL, tile.x, tile.y);\n            }\n        }\n    }\n\n    static populateRoom(room) {\n        room.exits.forEach((exit) => {\n            if (this.getEntities(exit).length === 0) {\n                spawn(SPWN_WOOD_DOOR, exit.x, exit.y);\n            }\n        });\n\n        room.tiles.forEach((tile) => this.populateTile(tile));\n\n        this.trySpawn(room, (tile) => {\n            const chest = spawn(SPWN_WOOD_CHEST, tile.x, tile.y);\n\n            chest.inventory.addLoot(spawn(SPWN_VIAL_HONEY));\n            chest.inventory.addLoot(spawn(SPWN_STONE));\n            chest.inventory.addLoot(spawn(SPWN_AMULET));\n            chest.inventory.addLoot(spawn(SPWN_CLOTH_ARMOR));\n            chest.inventory.addLoot(spawn(SPWN_LEATHER_BOOTS));\n            chest.inventory.addLoot(spawn(SPWN_SHORTSWORD));\n            chest.inventory.addLoot(spawn(SPWN_GREATSWORD));\n            chest.inventory.addLoot(spawn(SPWN_BATTLE_AXE));\n            chest.inventory.addLoot(spawn(SPWN_HATCHET));\n        });\n\n        for (let i = 0; i < randomInt(1, 3); i++) {\n            this.trySpawn(room, (tile) => {\n                spawn(SPWN_HUMAN_WANDERER, tile.x, tile.y);\n            });\n        }\n    }\n}\n","import { Map as MapGenerator } from 'rot-js';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class UniformScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        const generator = new MapGenerator.Uniform(width, height, {\n            timeLimit: 8000,\n            roomWidth: settings.roomWidth || [2, 8],\n            roomHeight: settings.roomHeight || [2, 8],\n            roomDugPercentage: settings.digPercentage || 0.8,\n        });\n\n        generator.create((x, y, v) => {\n            if (v === 0) {\n                tiles.setTileType(x, y, TILE_TYPE_FLOOR);\n            }\n\n            if (v === 1) {\n                tiles.setTileType(x, y, TILE_TYPE_WALL);\n            }\n        });\n\n        generator.getRooms().forEach((r) => {\n            const room = tiles.createRoom(\n                r.getLeft(),\n                r.getTop(),\n                r.getRight() - r.getLeft() + 1,\n                r.getBottom() - r.getTop() + 1\n            );\n            r.getDoors((x, y) => {\n                room.addExit(x, y);\n            });\n        });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import Grid from '../utils/Grid';\nimport RoomData from './RoomData';\nimport { createTileData, TILE_TYPE_FLOOR } from './TileData';\n\nexport default class TileContainer {\n    #defaultType = TILE_TYPE_FLOOR;\n    #grid = [];\n    #rooms = {};\n\n    get width() {\n        return this.#grid.width;\n    }\n\n    get height() {\n        return this.#grid.height;\n    }\n\n    get size() {\n        return this.width * this.height;\n    }\n\n    get data() {\n        return this.#grid.data;\n    }\n\n    get rooms() {\n        return Object.values(this.#rooms);\n    }\n\n    constructor(width, height, defaultType = TILE_TYPE_FLOOR) {\n        this.#grid = new Grid(width, height, createTileData);\n        this.#defaultType = defaultType;\n        this.clear();\n    }\n\n    getTile(x, y) {\n        return this.#grid.get(x, y);\n    }\n\n    setTileType(x, y, type) {\n        this.#grid.get(x, y).type = type;\n    }\n\n    setTileTheme(x, y, theme) {\n        this.#grid.get(x, y).theme = theme;\n    }\n\n    getTileType(x, y) {\n        return this.getTile(x, y).type;\n    }\n\n    addRoom(room) {\n        this.#rooms[room.id] = room;\n    }\n\n    createRoom(x, y, width, height) {\n        const room = new RoomData(x, y, width, height, this);\n\n        this.addRoom(room);\n\n        return room;\n    }\n\n    clear() {\n        this.fill(0, 0, this.width, this.height, this.#defaultType);\n    }\n\n    fill(x, y, width, height, type) {\n        for (let i = x; i < x + width; i++) {\n            for (let j = y; j < y + height; j++) {\n                this.setTileType(i, j, type);\n            }\n        }\n    }\n\n    tileTypeMatches(x, y, type) {\n        return this.getTile(x, y).isType(type);\n    }\n\n    combineOther(offsetX, offsetY, tiles) {\n        tiles.rooms.forEach((room) => {\n            room.cloneTo(room.x + offsetX, room.y + offsetY, this);\n        });\n        tiles.data.forEach((tile) => {\n            this.setTileType(tile.x + offsetX, tile.y + offsetY, tile.type);\n            this.setTileTheme(tile.x + offsetX, tile.y + offsetY, tile.theme);\n        });\n    }\n\n    isOnEdge(x, y) {\n        return (\n            x === 0 || y === 0 || x === this.width - 1 || y === this.height - 1\n        );\n    }\n\n    setTheme(theme) {\n        this.data.forEach((tile) => this.setTileTheme(tile.x, tile.y, theme));\n        this.rooms.forEach((room) => (room.theme = theme));\n    }\n\n    getRoomForTile(x, y) {\n        const tile = this.getTile(x, y);\n\n        return this.rooms.find((room) => {\n            return room.tiles.includes(tile);\n        });\n    }\n\n    getUnassignedTiles() {\n        return this.data.filter((tile) => {\n            return !this.getRoomForTile(tile.x, tile.y);\n        });\n    }\n\n    getNeighbors(x, y) {\n        return this.#grid.getNeighbors(x, y);\n    }\n}\n","import { nanoid } from 'nanoid';\nimport { TILE_THEME_FOREST } from './themes/TileTheme';\nimport { TILE_TYPE_FLOOR } from './TileData';\n\nexport default class RoomData {\n    id = 0;\n    x = 0;\n    y = 0;\n    width = 0;\n    height = 0;\n    theme = TILE_THEME_FOREST;\n    includeWalls = false;\n    #container = null;\n    #exitCoords = [];\n\n    get relativeExits() {\n        return this.#exitCoords;\n    }\n\n    get exits() {\n        return this.relativeExits.map((exit) => ({\n            x: exit.x + this.x,\n            y: exit.y + this.y,\n        }));\n    }\n\n    get left() {\n        return this.includeWalls ? this.x - 1 : this.x;\n    }\n\n    get right() {\n        return this.includeWalls\n            ? this.x + this.width + 1\n            : this.x + this.width;\n    }\n\n    get top() {\n        return this.includeWalls ? this.y - 1 : this.y;\n    }\n\n    get bottom() {\n        return this.includeWalls\n            ? this.y + this.height + 1\n            : this.y + this.height;\n    }\n\n    get borderTiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const borders = [];\n\n        // TODO this loop can be a lot simpler...\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                if (\n                    i === start ||\n                    i === endWidth - 1 ||\n                    j === start ||\n                    j === endHeight - 1\n                ) {\n                    borders.push(\n                        this.#container.getTile(i + this.x, j + this.y)\n                    );\n                }\n            }\n        }\n\n        return borders;\n    }\n\n    get interiorTiles() {\n        const interior = [];\n\n        for (let i = 0; i < this.width; i++) {\n            for (let j = 0; j < this.height; j++) {\n                interior.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return interior;\n    }\n\n    get tiles() {\n        const start = this.includeWalls ? -1 : 0;\n        const endWidth = this.includeWalls ? this.width + 1 : this.width;\n        const endHeight = this.includeWalls ? this.height + 1 : this.height;\n        const tiles = [];\n\n        for (let i = start; i < endWidth; i++) {\n            for (let j = start; j < endHeight; j++) {\n                tiles.push(this.#container.getTile(i + this.x, j + this.y));\n            }\n        }\n\n        return tiles;\n    }\n\n    constructor(x, y, width, height, container) {\n        this.id = nanoid();\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.#container = container;\n    }\n\n    addRelativeExit(x, y) {\n        this.#container.setTileType(this.x + x, this.y + y, TILE_TYPE_FLOOR);\n        this.#exitCoords.push({ x, y });\n    }\n\n    addExit(x, y) {\n        this.addRelativeExit(x - this.x, y - this.y);\n    }\n\n    cloneTo(x, y, container) {\n        const room = new RoomData(x, y, this.width, this.height, container);\n\n        room.theme = this.theme;\n        room.includeWalls = this.includeWalls;\n\n        this.relativeExits.forEach((exit) => {\n            room.addRelativeExit(exit.x, exit.y);\n        });\n\n        container.addRoom(room);\n\n        return room;\n    }\n\n    containsPoint(x, y) {\n        return (\n            x <= this.right &&\n            x >= this.left &&\n            y <= this.bottom &&\n            y >= this.top\n        );\n    }\n\n    intersects(left, top, right, bottom) {\n        const c1 = left < this.right;\n        const c2 = right > this.left;\n        const c3 = top < this.bottom;\n        const c4 = bottom > this.top;\n\n        return c1 && c2 && c3 && c4;\n    }\n}\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        // `id.length + 1 === size` is a more compact option.\n        if (id.length === +size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nexport { urlAlphabet }\n","export default class TileScheme {\n    static generate() {}\n\n    static populate() {}\n}\n","import { getThemePopulator } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\n\nexport default class SectorGenerator {\n    static generate(settings) {\n        return new TileContainer(settings.width, settings.height);\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_FOREST } from '../themes/TileTheme';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = UniformScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_FOREST);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport { DenseCastleScheme } from '../schemes/DenseCastleScheme';\nimport { UniformScheme } from '../schemes/UniformScheme';\nimport { TILE_THEME_CASTLE, TILE_THEME_FOREST } from '../themes/TileTheme';\nimport TileContainer from '../TileContainer';\nimport SectorGenerator from './SectorGenerator';\n\nexport class ForestStrongholdGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = new TileContainer(settings.width, settings.height);\n        const padding = 5;\n        const exitOffset = Math.ceil(padding / 2) - 1;\n\n        const top = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: exitOffset, y: padding - 1 },\n                { x: settings.width - padding - 1, y: exitOffset - 1 },\n                { x: padding + 11, y: padding - 1 },\n            ],\n        });\n\n        const left = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: exitOffset, y: 0 },\n                {\n                    x: padding - 1,\n                    y: settings.height - padding - exitOffset - 1,\n                },\n            ],\n        });\n\n        const bottom = UniformScheme.generate({\n            width: settings.width - padding,\n            height: padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: settings.width - padding - exitOffset - 1, y: 0 },\n            ],\n        });\n\n        const right = UniformScheme.generate({\n            width: padding,\n            height: settings.height - padding,\n            exits: [\n                { x: 0, y: exitOffset - 1 },\n                { x: exitOffset - 1, y: settings.height - padding - 1 },\n            ],\n        });\n\n        const castle = DenseCastleScheme.generate({\n            width: settings.width - padding * 2 + 2,\n            height: settings.height - padding * 2 + 2,\n            exits: [{ x: 12, y: 0 }],\n        });\n\n        top.setTheme(TILE_THEME_FOREST);\n        left.setTheme(TILE_THEME_FOREST);\n        bottom.setTheme(TILE_THEME_FOREST);\n        right.setTheme(TILE_THEME_FOREST);\n        castle.setTheme(TILE_THEME_CASTLE);\n\n        tiles.combineOther(0, 0, top);\n        tiles.combineOther(0, padding, left);\n        tiles.combineOther(padding, settings.height - padding, bottom);\n        tiles.combineOther(settings.width - padding, 0, right);\n        tiles.combineOther(padding - 1, padding - 1, castle);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n}\n","import { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport { pickRandom, randomInt } from '../../utils/rand';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport TileScheme from '../TileScheme';\n\nconst VERTICAL = 0;\nconst HORIZONTAL = 1;\n\nlet curId = 1;\nconst createNodeId = () => curId++;\n\nconst splitNodeVertical = (node, cut) => {\n    const leftId = createNodeId();\n    const rightId = createNodeId();\n    const left = {\n        id: leftId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: rightId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: cut,\n        height: node.height,\n    };\n    const right = {\n        id: rightId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: leftId,\n        offsetX: node.offsetX + cut,\n        offsetY: node.offsetY,\n        width: node.width - cut,\n        height: node.height,\n    };\n    return [left, right];\n};\n\nconst splitNodeHorizontal = (node, cut) => {\n    const topId = createNodeId();\n    const bottomId = createNodeId();\n    const top = {\n        id: topId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: bottomId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY,\n        width: node.width,\n        height: cut,\n    };\n    const bottom = {\n        id: bottomId,\n        isLeaf: true,\n        parentId: node.id,\n        siblingId: topId,\n        offsetX: node.offsetX,\n        offsetY: node.offsetY + cut,\n        width: node.width,\n        height: node.height - cut,\n    };\n\n    return [top, bottom];\n};\n\nexport class DenseCastleScheme extends TileScheme {\n    static generate(settings) {\n        const width = settings.width;\n        const height = settings.height;\n        const exits = settings.exits || [];\n\n        const minRoomWidth = settings.minRoomWidth || 4;\n        const minRoomHeight = settings.minRoomHeight || 4;\n\n        const maxRoomWidth = settings.maxRoomWidth || 12;\n        const maxRoomHeight = settings.maxRoomHeight || 12;\n\n        const splitIgnoreChance = settings.splitIgnoreChance || 0.8;\n\n        const loopiness = settings.loopiness || 35;\n\n        const tiles = new TileContainer(width, height);\n\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                if (i === 0 || i === width - 1 || j === 0 || j === height - 1) {\n                    tiles.setTileType(i, j, TILE_TYPE_WALL);\n                } else {\n                    tiles.setTileType(i, j, TILE_TYPE_FLOOR);\n                }\n            }\n        }\n\n        const nodes = [\n            {\n                isLeaf: true,\n                parentId: null,\n                siblingId: null,\n                id: createNodeId(),\n                offsetX: 0,\n                offsetY: 0,\n                height: height - 1,\n                width: width - 1,\n            },\n        ];\n\n        const graph = [];\n\n        while (nodes.length > 0) {\n            const node = nodes.pop();\n            graph.push(node);\n\n            if (node.width < maxRoomWidth && node.height < maxRoomHeight) {\n                const ignoreSplit = Math.random() < splitIgnoreChance;\n\n                if (ignoreSplit) {\n                    continue;\n                }\n            }\n\n            const directions = [];\n\n            if (node.width - minRoomWidth - 1 > minRoomWidth) {\n                directions.push(VERTICAL);\n            }\n\n            if (node.height - minRoomHeight - 1 > minRoomHeight) {\n                directions.push(HORIZONTAL);\n            }\n\n            if (directions.length <= 0) {\n                continue;\n            }\n\n            const direction = pickRandom(directions);\n\n            if (direction === VERTICAL) {\n                const cut = randomInt(\n                    minRoomWidth + 1,\n                    node.width - minRoomWidth - 1\n                );\n\n                nodes.push(...splitNodeVertical(node, cut));\n            } else {\n                const cut = randomInt(\n                    minRoomHeight + 1,\n                    node.height - minRoomHeight - 1\n                );\n\n                nodes.push(...splitNodeHorizontal(node, cut));\n            }\n\n            node.isLeaf = false;\n        }\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            if (node.isLeaf) {\n                const room = tiles.createRoom(\n                    node.offsetX + 1,\n                    node.offsetY + 1,\n                    node.width - 1,\n                    node.height - 1\n                );\n\n                room.includeWalls = true;\n\n                for (let i = 0; i < node.width; i++) {\n                    tiles.setTileType(\n                        node.offsetX + i,\n                        node.offsetY,\n                        TILE_TYPE_WALL\n                    );\n                }\n\n                for (let j = 0; j < node.height; j++) {\n                    tiles.setTileType(\n                        node.offsetX,\n                        node.offsetY + j,\n                        TILE_TYPE_WALL\n                    );\n                }\n                return;\n            }\n        });\n\n        graph.forEach((node) => {\n            if (node.parentId === null) {\n                return;\n            }\n\n            const sibling = graph.find((n) => n.id === node.siblingId);\n\n            let doorCandidates = [];\n            let hasSib = false;\n\n            if (sibling.offsetX < node.offsetX) {\n                hasSib = true;\n                for (let i = 1; i < node.height; i++) {\n                    const x = node.offsetX;\n                    const y = node.offsetY + i;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x - 1, y, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x + 1, y, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            } else if (sibling.offsetY < node.offsetY) {\n                hasSib = true;\n                for (let i = 1; i < node.width; i++) {\n                    const x = node.offsetX + i;\n                    const y = node.offsetY;\n                    const tile = tiles.getTile(x, y);\n\n                    if (\n                        tiles.tileTypeMatches(x, y - 1, TILE_TYPE_FLOOR) &&\n                        tiles.tileTypeMatches(x, y + 1, TILE_TYPE_FLOOR)\n                    ) {\n                        doorCandidates.push(tile);\n                    }\n                }\n            }\n\n            const door = pickRandom(doorCandidates);\n\n            if (hasSib && !door) {\n                console.warn(\n                    'cannot make door!?',\n                    node,\n                    node.width,\n                    node.height\n                );\n            }\n\n            if (door) {\n                const room = tiles.getRoomForTile(door.x, door.y);\n\n                if (room) {\n                    room.addExit(door.x, door.y);\n                }\n\n                tiles.setTileType(door.x, door.y, TILE_TYPE_FLOOR);\n            }\n        });\n\n        const cost = (a, b) => {\n            if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_FLOOR)) {\n                return diagonalDistance(a, b);\n            }\n\n            return Infinity;\n        };\n\n        const tryAddLoop = (a, b) => {\n            if (a.isType(TILE_TYPE_FLOOR) && b.isType(TILE_TYPE_FLOOR)) {\n                const start = {\n                    x: b.x,\n                    y: b.y,\n                };\n                const goal = {\n                    x: a.x,\n                    y: a.y,\n                };\n                const path = computeAStar({\n                    start,\n                    goal,\n                    cost,\n                });\n\n                if (path.success && path.cost >= loopiness) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        tiles.data\n            .filter((tile) => tile.isType(TILE_TYPE_WALL))\n            .forEach((tile) => {\n                const north = tiles.getTile(tile.x, tile.y - 1);\n                const south = tiles.getTile(tile.x, tile.y + 1);\n\n                if (tryAddLoop(north, south)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n\n                const east = tiles.getTile(tile.x - 1, tile.y);\n                const west = tiles.getTile(tile.x + 1, tile.y);\n\n                if (tryAddLoop(east, west)) {\n                    tiles.setTileType(tile.x, tile.y, TILE_TYPE_FLOOR);\n\n                    const room = tiles.getRoomForTile(tile.x, tile.y);\n\n                    if (room) {\n                        room.addExit(tile.x, tile.y);\n                    }\n\n                    return;\n                }\n            });\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { game } from '../../core/Game';\nimport { SPWN_DIRT_PATH } from '../../data/Spawnables';\nimport { spawn } from '../../data/Spawner';\nimport { computeAStar } from '../../utils/AStar';\nimport { diagonalDistance } from '../../utils/diagonalDistance';\nimport { pickRandom } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport { ScatteredScheme } from '../schemes/ScatteredScheme';\nimport {\n    getThemePopulator,\n    TILE_THEME_CABIN,\n    TILE_THEME_FOREST,\n} from '../themes/TileTheme';\nimport { TILE_TYPE_WALL } from '../TileData';\nimport { addBorder } from './GeneratorUtils';\nimport SectorGenerator from './SectorGenerator';\n\nconst isTopLeftCorner = (t, room) => t.x === room.left && t.y === room.top;\nconst isBottomLeftCorner = (t, room) =>\n    t.x === room.left && t.y === room.bottom - 1;\nconst isBottomRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.bottom - 1;\nconst isTopRightCorner = (t, room) =>\n    t.x === room.right - 1 && t.y === room.top;\n\nexport class ForestTownGenerator extends SectorGenerator {\n    static generate(settings) {\n        const tiles = ScatteredScheme.generate({\n            width: settings.width,\n            height: settings.height,\n            exits: settings.exits,\n        });\n\n        tiles.setTheme(TILE_THEME_CABIN);\n\n        const addDoor = (room) => {\n            const edges = room.borderTiles.filter(\n                (t) =>\n                    !(\n                        isTopLeftCorner(t, room) ||\n                        isBottomLeftCorner(t, room) ||\n                        isBottomRightCorner(t, room) ||\n                        isTopRightCorner(t, room)\n                    )\n            );\n\n            const door = pickRandom(edges);\n\n            if (door) {\n                room.addExit(door.x, door.y);\n            }\n        };\n\n        tiles.rooms.forEach(addDoor);\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            tile.theme = TILE_THEME_FOREST;\n        });\n\n        addBorder(tiles);\n\n        digExits(tiles, settings.exits);\n\n        return tiles;\n    }\n\n    static populate(settings, tiles) {\n        tiles.rooms.forEach((room) => {\n            const theme = getThemePopulator(room.theme);\n\n            theme.populateRoom(room);\n        });\n\n        const doors = tiles.rooms.map((room) => room.exits).flat();\n        const walkways = new Set();\n\n        const populatePath = (result) => {\n            if (!result.success) {\n                return;\n            }\n\n            result.path.forEach((segment) => {\n                const entities = game.map.getEntitiesAt(segment.x, segment.y);\n\n                if (entities.length > 0) {\n                    return;\n                }\n\n                spawn(SPWN_DIRT_PATH, segment.x, segment.y);\n\n                walkways.add(`${segment.x},${segment.y}`);\n            });\n        };\n\n        const generatePath = (start, end) => {\n            const path = computeAStar({\n                start: {\n                    x: start.x,\n                    y: start.y,\n                },\n                goal: {\n                    x: end.x,\n                    y: end.y,\n                },\n                cost: (a, b) => {\n                    if (tiles.tileTypeMatches(b.x, b.y, TILE_TYPE_WALL)) {\n                        return Infinity;\n                    }\n\n                    const neighbors = tiles.getNeighbors(b.x, b.y);\n                    const walls = neighbors.filter((n) =>\n                        n.isType(TILE_TYPE_WALL)\n                    );\n\n                    if (walls.length > 0) {\n                        return walls.length * 2;\n                    }\n\n                    if (walkways.has(`${b.x},${b.y}`)) {\n                        return 0.1;\n                    }\n\n                    return diagonalDistance(a, b) * 2;\n                },\n            });\n\n            populatePath(path);\n        };\n\n        doors.forEach((doorA) => {\n            settings.exits.forEach((exit) => {\n                generatePath(doorA, exit);\n            });\n            doors.forEach((doorB) => {\n                if (doorA === doorB) {\n                    return;\n                }\n\n                generatePath(doorA, doorB);\n            });\n        });\n\n        tiles.getUnassignedTiles().forEach((tile) => {\n            const theme = getThemePopulator(tile.theme);\n\n            theme.populateTile(tile);\n        });\n    }\n}\n","import { randomInt } from '../../utils/rand';\nimport { digExits } from '../LevelConnections';\nimport TileContainer from '../TileContainer';\nimport { TILE_TYPE_FLOOR, TILE_TYPE_WALL } from '../TileData';\nimport TileScheme from '../TileScheme';\n\nexport class ScatteredScheme extends TileScheme {\n    static generate(settings) {\n        const attempt = settings.attempt || 1;\n        const maxAttempts = settings.maxAttempts || 100;\n        const width = settings.width;\n        const height = settings.height;\n        const padding = settings.padding || 3;\n        const roomPadding = settings.roomPadding || 3;\n        const minCount = settings.minCount || 5;\n        const maxCount = settings.maxCount || 8;\n        const minWidth = settings.minWidth || 6;\n        const maxWidth = settings.maxWidth || 10;\n        const minHeight = settings.minHeight || 6;\n        const maxHeight = settings.maxHeight || 10;\n        const exits = settings.exits || [];\n        const tiles = new TileContainer(width, height);\n\n        if (attempt > maxAttempts) {\n            console.warn(\n                `Failed to generate ScatteredScheme in ${maxAttempts} attempts`\n            );\n\n            return tiles;\n        }\n\n        const createBox = () => {\n            const width = randomInt(minWidth, maxWidth);\n            const height = randomInt(minHeight, maxHeight);\n\n            return {\n                x: randomInt(padding, settings.width - padding - width),\n                y: randomInt(padding, settings.height - padding - height),\n                width,\n                height,\n                get top() {\n                    return this.y - roomPadding;\n                },\n                get bottom() {\n                    return this.y + this.height + roomPadding;\n                },\n                get left() {\n                    return this.x - roomPadding;\n                },\n                get right() {\n                    return this.x + this.width + roomPadding;\n                },\n            };\n        };\n\n        const overlaps = (box) => {\n            return tiles.rooms.some((room) => {\n                return room.intersects(\n                    box.left,\n                    box.top,\n                    box.right,\n                    box.bottom\n                );\n            });\n        };\n\n        for (let i = 0; i < 100; i++) {\n            const box = createBox();\n\n            if (overlaps(box)) {\n                continue;\n            }\n\n            for (let i = 0; i < box.width; i++) {\n                for (let j = 0; j < box.height; j++) {\n                    const point = {\n                        x: box.x + i,\n                        y: box.y + j,\n                    };\n\n                    if (\n                        i === 0 ||\n                        i === box.width - 1 ||\n                        j === 0 ||\n                        j === box.height - 1\n                    ) {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_WALL);\n                    } else {\n                        tiles.setTileType(point.x, point.y, TILE_TYPE_FLOOR);\n                    }\n                }\n            }\n\n            tiles.createRoom(box.x, box.y, box.width, box.height);\n\n            if (tiles.rooms.length >= maxCount) {\n                break;\n            }\n        }\n\n        if (tiles.rooms.length < minCount) {\n            return this.generate({\n                ...settings,\n                attempt: attempt + 1,\n            });\n        }\n\n        digExits(tiles, exits);\n\n        return tiles;\n    }\n}\n","import { TILE_TYPE_WALL } from '../TileData';\n\nexport const addBorder = (tiles) => {\n    for (let i = 0; i < tiles.width; i++) {\n        tiles.setTileType(i, 0, TILE_TYPE_WALL);\n        tiles.setTileType(i, tiles.height - 1, TILE_TYPE_WALL);\n    }\n\n    for (let j = 1; j < tiles.height - 1; j++) {\n        tiles.setTileType(0, j, TILE_TYPE_WALL);\n        tiles.setTileType(tiles.width - 1, j, TILE_TYPE_WALL);\n    }\n};\n","import { getMessage, shouldAppear } from '../enums/ConsoleEvents';\nimport Manager from './Manager';\n\nexport default class ConsoleManager extends Manager {\n    #messages = [];\n    #events = [];\n    #viewCount = 4;\n\n    event(type, data) {\n        this.#events.push({ type, data });\n    }\n\n    log(text) {\n        this.#messages.push({ text });\n    }\n\n    render(dt) {\n        this.#events.forEach(({ type, data }) => {\n            if (shouldAppear(type, data)) {\n                this.#messages.push({\n                    text: getMessage(type, data),\n                });\n            }\n        });\n        this.#events = [];\n\n        const msgs = this.#messages.slice(\n            Math.max(this.#messages.length - this.#viewCount, 0)\n        );\n        const height = Math.min(msgs.length, this.#viewCount);\n\n        msgs.forEach((message, i) => {\n            this.game.renderer.drawText(\n                0,\n                this.game.camera.height - (height - i),\n                message.text\n            );\n        });\n    }\n}\n","import { IsDestroying } from '../ecs/components';\nimport System from './System';\n\nexport default class DestroySystem extends System {\n    #query;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = game.ecs.createQuery({\n            all: [IsDestroying],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            if (entity.isDestroying.pass > 0) {\n                entity.destroy();\n            } else {\n                entity.isDestroying.pass++;\n            }\n        });\n    }\n}\n","import { Howl } from 'howler';\nimport Manager from './Manager';\nimport music from './../data/music.json';\n\nclass Track {\n    isPlaying = false;\n    isIntro = false;\n    howl = null;\n\n    constructor(path, data) {\n        this.name = data.name;\n        this.loop = new Howl({\n            loop: true,\n            src: [`${path}${data.loop}`],\n        });\n\n        if (data.intro) {\n            this.intro = new Howl({\n                loop: false,\n                src: [`${path}${data.intro}`],\n            });\n\n            this.intro.on('end', () => {\n                if (this.isPlaying) {\n                    this.howl = this.loop;\n                    this.loop.seek(0);\n                    this.loop.volume(1);\n                    this.loop.play();\n                } else {\n                    this.intro.stop();\n                    this.loop.stop();\n                }\n            });\n        }\n    }\n\n    play() {\n        if (this.isPlaying) {\n            return;\n        }\n\n        if (this.intro) {\n            this.howl = this.intro;\n            this.intro.seek(0);\n            this.intro.play();\n            this.intro.fade(0, 1, 5000);\n            this.loop.stop();\n            // this.intro.volume(1);\n        } else {\n            this.howl = this.loop;\n            this.loop.seek(0);\n            this.loop.play();\n            this.loop.fade(0, 1, 5000);\n            // this.loop.volume(1);\n        }\n\n        this.isPlaying = true;\n    }\n\n    stop() {\n        if (this.howl) {\n            this.howl.fade(1, 0, 500);\n        }\n        this.isPlaying = false;\n    }\n}\n\nexport default class MusicManager extends Manager {\n    tracks = {};\n    currentTrack = null;\n\n    constructor(game) {\n        super(game);\n        const path = `${window.location.protocol}//${window.location.host}${window.location.pathname}${music.path}`;\n\n        music.tracks.forEach((data) => {\n            const track = new Track(path, data);\n\n            this.tracks[data.key] = track;\n        });\n    }\n\n    play(key) {\n        if (key === this.currentTrack) {\n            return;\n        }\n\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n\n        this.tracks[key].play();\n        this.currentTrack = key;\n    }\n\n    stop() {\n        if (this.currentTrack) {\n            this.tracks[this.currentTrack].stop();\n        }\n    }\n\n    onSectorLoaded(sector) {\n        this.play(sector.music);\n    }\n}\n","import { getStatus } from '../data/Statuses';\nimport { Status } from '../ecs/components';\nimport System from './System';\n\nexport default class StatusSystem extends System {\n    constructor(game) {\n        super(game);\n\n        this.query = this.game.ecs.createQuery({\n            all: [Status],\n        });\n    }\n\n    update(dt) {\n        if (!this.game.clock.tickDelta) {\n            return;\n        }\n\n        const delta = this.game.clock.tickDelta;\n\n        this.query.get().forEach((entity) => {\n            entity.status.forEach((status) => {\n                const statusType = getStatus(status.key);\n\n                statusType.update(delta, entity, status);\n\n                if (status.isCompleted()) {\n                    status.destroy();\n                }\n            });\n        });\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}