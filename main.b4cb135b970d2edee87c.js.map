{"version":3,"sources":["webpack://knossonia/./src/index.js","webpack://knossonia/./src/ecs/index.js","webpack://knossonia/../node_modules/camelcase/index.js","webpack://knossonia/../src/Properties/Property.js","webpack://knossonia/../src/Properties/SimpleProperty.js","webpack://knossonia/../src/Properties/EntityProperty.js","webpack://knossonia/../src/Properties/EntityArrayProperty.js","webpack://knossonia/../src/Properties/PropertyFactory.js","webpack://knossonia/../src/Component.js","webpack://knossonia/../src/registries/ComponentRegistry.js","webpack://knossonia/../node_modules/deepmerge/dist/cjs.js","webpack://knossonia/../src/PrefabComponent.js","webpack://knossonia/../src/Prefab.js","webpack://knossonia/../src/registries/PrefabRegistry.js","webpack://knossonia/../node_modules/nanoid/non-secure/index.js","webpack://knossonia/../src/EntityEvent.js","webpack://knossonia/../src/Entity.js","webpack://knossonia/../src/registries/EntityRegistry.js","webpack://knossonia/../src/Query.js","webpack://knossonia/../src/registries/QueryRegistry.js","webpack://knossonia/../src/Engine.js","webpack://knossonia/./src/ecs/components/Actor.js","webpack://knossonia/./src/ecs/components/Brain.js","webpack://knossonia/./src/ai/GoalActionResult.js","webpack://knossonia/./src/ecs/components/Goal.js","webpack://knossonia/./src/ai/GoalEvaluator.js","webpack://knossonia/./src/ai/GoalTypes/BoredGoalType.js","webpack://knossonia/./src/ai/GoalTypes/GoalType.js","webpack://knossonia/./src/ai/GoalTypes/EatFoodGoalType.js","webpack://knossonia/./src/ai/GoalTypes/SatisfyHungerGoalType.js","webpack://knossonia/./src/ai/GoalTypes/MoveGoalType.js","webpack://knossonia/./src/ecs/components/Eater.js","webpack://knossonia/./src/ecs/components/Moniker.js","webpack://knossonia/./src/ecs/components/Logger.js","webpack://knossonia/./src/ecs/components/Position.js","webpack://knossonia/./src/ecs/components/Map.js","webpack://knossonia/./src/ecs/components/MapLayer.js","webpack://knossonia/./src/ecs/components/Glyph.js","webpack://knossonia/./src/ecs/components/Legs.js","webpack://knossonia/./src/ecs/components/MoveCommand.js","webpack://knossonia/./src/enums/Directions.js","webpack://knossonia/./src/ecs/components/IsPlayer.js","webpack://knossonia/./src/ecs/components/Wandering.js","webpack://knossonia/./src/core/Game.js","webpack://knossonia/./src/core/rendering/Renderer.js","webpack://knossonia/./node_modules/rot-js/lib/index.js","webpack://knossonia/./node_modules/rot-js/lib/rng.js","webpack://knossonia/./node_modules/rot-js/lib/display/display.js","webpack://knossonia/./node_modules/rot-js/lib/display/hex.js","webpack://knossonia/./node_modules/rot-js/lib/display/canvas.js","webpack://knossonia/./node_modules/rot-js/lib/display/backend.js","webpack://knossonia/./node_modules/rot-js/lib/util.js","webpack://knossonia/./node_modules/rot-js/lib/display/rect.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile.js","webpack://knossonia/./node_modules/rot-js/lib/display/tile-gl.js","webpack://knossonia/./node_modules/rot-js/lib/color.js","webpack://knossonia/./node_modules/rot-js/lib/display/term.js","webpack://knossonia/./node_modules/rot-js/lib/text.js","webpack://knossonia/./node_modules/rot-js/lib/constants.js","webpack://knossonia/./node_modules/rot-js/lib/stringgenerator.js","webpack://knossonia/./node_modules/rot-js/lib/eventqueue.js","webpack://knossonia/./node_modules/rot-js/lib/MinHeap.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/index.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/simple.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/scheduler.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/speed.js","webpack://knossonia/./node_modules/rot-js/lib/scheduler/action.js","webpack://knossonia/./node_modules/rot-js/lib/fov/index.js","webpack://knossonia/./node_modules/rot-js/lib/fov/discrete-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/fov.js","webpack://knossonia/./node_modules/rot-js/lib/fov/precise-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/fov/recursive-shadowcasting.js","webpack://knossonia/./node_modules/rot-js/lib/map/index.js","webpack://knossonia/./node_modules/rot-js/lib/map/arena.js","webpack://knossonia/./node_modules/rot-js/lib/map/map.js","webpack://knossonia/./node_modules/rot-js/lib/map/uniform.js","webpack://knossonia/./node_modules/rot-js/lib/map/dungeon.js","webpack://knossonia/./node_modules/rot-js/lib/map/features.js","webpack://knossonia/./node_modules/rot-js/lib/map/cellular.js","webpack://knossonia/./node_modules/rot-js/lib/map/digger.js","webpack://knossonia/./node_modules/rot-js/lib/map/ellermaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/dividedmaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/iceymaze.js","webpack://knossonia/./node_modules/rot-js/lib/map/rogue.js","webpack://knossonia/./node_modules/rot-js/lib/noise/index.js","webpack://knossonia/./node_modules/rot-js/lib/noise/simplex.js","webpack://knossonia/./node_modules/rot-js/lib/noise/noise.js","webpack://knossonia/./node_modules/rot-js/lib/path/index.js","webpack://knossonia/./node_modules/rot-js/lib/path/dijkstra.js","webpack://knossonia/./node_modules/rot-js/lib/path/path.js","webpack://knossonia/./node_modules/rot-js/lib/path/astar.js","webpack://knossonia/./node_modules/rot-js/lib/engine.js","webpack://knossonia/./node_modules/rot-js/lib/lighting.js","webpack://knossonia/./src/core/input/InputController.js","webpack://knossonia/./src/core/input/events/InputKeyboardEvent.js","webpack://knossonia/./src/core/input/events/InputEvent.js","webpack://knossonia/./src/core/input/events/InputMouseEvent.js","webpack://knossonia/./src/systems/HungerSystem.js","webpack://knossonia/./src/systems/System.js","webpack://knossonia/./src/systems/ActionSystem.js","webpack://knossonia/./src/systems/RenderSystem.js","webpack://knossonia/./src/systems/MovementSystem.js","webpack://knossonia/./src/core/input/InputCommandType.js","webpack://knossonia/./src/systems/UISystem.js","webpack://knossonia/./src/core/input/MouseManager.js","webpack://knossonia/./src/core/input/CommandManager.js","webpack://knossonia/./src/core/input/InputDomainType.js","webpack://knossonia/./src/core/input/commands.js","webpack://knossonia/./src/core/input/InputCommand.js","webpack://knossonia/./src/core/input/KeyCodes.js","webpack://knossonia/webpack/bootstrap","webpack://knossonia/webpack/runtime/create fake namespace object","webpack://knossonia/webpack/runtime/define property getters","webpack://knossonia/webpack/runtime/hasOwnProperty shorthand","webpack://knossonia/webpack/runtime/make namespace object","webpack://knossonia/webpack/startup"],"names":["g","Game","player","ecs","moniker","name","position","x","y","brain","pushGoal","BoredGoalType","move","entity","direction","has","MoveCommand","remove","add","document","addEventListener","e","keyCode","KeyCodes","fireEvent","DIR_NW","DIR_N","DIR_NE","DIR_W","DIR_Z","DIR_E","DIR_SW","DIR_S","DIR_SE","commandManager","pushDomain","INPUT_DOMAIN_GAME","start","Engine","window","Object","values","components","forEach","component","registerComponent","prefabs","prefab","registerPrefab","camelCase","input","options","Array","TypeError","pascalCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","preserveCamelCase","p1","m","module","constructor","this","enumerable","get","set","v","id","value","getEntity","console","Proxy","Reflect","isNaN","old","deleteProperty","len","Math","proxy","map","ref","filter","EntityProperty","EntityArrayProperty","SimpleProperty","properties","Boolean","ob","prop","destroy","createComponent","handlerName","camelcase","evt","initialValue","initialProperties","_defaultPropertyValue","property","PropertyFactory","Component","Map","type","_getType","definition","typeOrClassOrComponent","isMergeableObject","isNonNullObject","stringValue","isReactElement","isSpecial","REACT_ELEMENT_TYPE","Symbol","cloneUnlessOtherwiseSpecified","deepmerge","val","defaultArrayMerge","target","source","element","getKeys","getEnumerableOwnPropertySymbols","propertyIsOnObject","object","mergeObject","destination","key","propertyIsUnsafe","customMerge","getMergeFunction","sourceIsArray","array","Error","prev","next","overwrite","componentDef","initialProps","props","merge","parent","arrComps","accessor","initialCompProps","registered","data","Prefab","inherit","componentData","def","PrefabComponent","PrefabRegistry","nameOrClassOrPrefab","urlAlphabet","writable","getAccessor","hasType","hasOwnProperty","nestedComponent","create","typeOrClass","attach","configurable","allowMultiple","isComponent","instance","all","index","v2","EntityEvent","Entity","refs","Set","json","entityData","createOrGetById","d","any","none","hasAny","c","hasAll","hasNone","isMatch","query","Query","nanoid","ComponentRegistry","EntityRegistry","QueryRegistry","entities","nameOrClass","queries","serialize","deserializeEntity","deserialize","Actor","reduceEnergy","addEnergy","energy","Brain","peekGoal","isFinished","popGoal","currentGoal","result","takeAction","FAILURE","removeGoal","INVALID","handle","goal","goals","isSelf","isSiblingGoal","originalIntent","push","pop","length","SUCCESS","Goal","GoalEvaluator","complete","goalTypeMap","GoalTypes","goalType","getGoalType","warn","GoalType","EatFoodGoalType","food","handled","SatisfyHungerGoalType","eater","isHungry","MoveGoalType","Eater","random","hunger","Moniker","Logger","log","Position","width","idx","MapLayer","mapEntity","height","content","Glyph","fg","bg","char","Legs","actor","hasEnergy","directions","shortName","fullName","delta","IsPlayer","Wandering","floor","Directions","renderer","Renderer","mouseManager","MouseManager","CommandManager","inputController","InputController","hungerSystem","HungerSystem","actionSystem","ActionSystem","movementSystem","MovementSystem","renderSystem","RenderSystem","UISystem","requestAnimationFrame","loop","bind","t","update","RotDisplay","fontSize","forceSquareRatio","body","appendChild","getContainer","draw","drawText","clear","eventToPosition","Util","util","Color","color","Text","text","FRAC","_seed","_s0","_s1","_s2","_c","seed","lowerBound","upperBound","max","min","getUniform","u","r","mean","stddev","gauss","sqrt","clone","slice","indexOf","getItem","splice","total","part","state","RNG","setState","getState","setSeed","Date","now","BACKENDS","Hex","Rect","Tile","TileGL","Term","DEFAULT_OPTIONS","DEFAULT_WIDTH","DEFAULT_HEIGHT","transpose","layout","spacing","border","fontFamily","fontStyle","tileWidth","tileHeight","tileMap","tileSet","tileColorize","Display","_data","_dirty","_options","assign","setOptions","DEBUG","_tick","_backend","schedule","what","colors","ctor","availWidth","availHeight","computeSize","computeFontSize","touches","clientX","clientY","ch","maxWidth","cx","cy","lines","tokens","token","shift","isSpace","isPrevSpace","isFullWidth","isPrevFullWidth","cc","charCodeAt","charAt","cch","_draw","clearBefore","_spacingX","_spacingY","_hexSize","px","reverse","_ctx","fillStyle","_fill","chars","concat","fillText","ceil","hexSizeWidth","hexSizeHeight","hexSize","oldFont","font","measureText","ratio","nodeSize","canvas","size","mod","a","b","ctx","beginPath","moveTo","lineTo","fill","xprop","yprop","opts","charWidth","Canvas","createElement","getContext","cb","style","_updateSize","textAlign","textBaseline","fillRect","rect","getBoundingClientRect","left","top","_normalizedEventToPosition","Backend","n","clamp","capitalize","toUpperCase","substring","format","template","args","replacer","match","group1","group2","obj","parts","split","method","toLowerCase","replaced","apply","first","replace","_canvasCache","cache","_drawWithCache","_drawNoCache","hash","drawImage","boxWidth","boxHeight","widthFraction","_colorCanvas","clearRect","fgs","bgs","tile","context","globalCompositeOperation","_uniforms","_gl","_initWebGL","alert","message","preserveDrawingBuffer","_updateTexture","gl","scissorY","scissor","clearColor","parseColor","COLOR_BUFFER_BIT","uniform2fv","uniform1f","uniform4fv","drawArrays","TRIANGLE_STRIP","program","vss","fss","vs","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fs","FRAGMENT_SHADER","p","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VS","FS","useProgram","pos","Float32Array","buf","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","createQuad","UNIFORMS","getUniformLocation","_program","enable","BLEND","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","SCISSOR_TEST","canvasSize","viewport","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","pixelStorei","UNPACK_FLIP_Y_WEBGL","texImage2D","RGBA","UNSIGNED_BYTE","trim","colorCache","parsed","Number","$","fromString","str","cached","CACHE","parseInt","color1","j","add_","multiply","round","multiply_","interpolate","color2","factor","lerp","interpolateHSL","hsl1","rgb2hsl","hsl2","hsl2rgb","lerpHSL","randomize","diff","s","h","l","hue2rgb","q","toRGB","clamped","join","toHex","toString","padStart","termcolor","rgb","DST_COLORS","_offset","_cursor","_lastColor","setTimeout","avail","process","stdout","write","dx","dy","positionToAnsi","newColor","colorToAnsi","columns","rows","RE_COLORS","TYPE_TEXT","TYPE_NEWLINE","TYPE_FG","TYPE_BG","measure","tokenize","lineWidth","offset","Infinity","lineLength","lastTokenWithSpace","breakInsideToken","arr","nextIndex","breakIndex","lastIndexOf","lastTextToken","breakLines","tokenIndex","removeBreakChar","newBreakToken","newTextToken","DIRS","4","8","6","KEYS","VK_CANCEL","VK_HELP","VK_BACK_SPACE","VK_TAB","VK_CLEAR","VK_RETURN","VK_ENTER","VK_SHIFT","VK_CONTROL","VK_ALT","VK_PAUSE","VK_CAPS_LOCK","VK_ESCAPE","VK_SPACE","VK_PAGE_UP","VK_PAGE_DOWN","VK_END","VK_HOME","VK_LEFT","VK_UP","VK_RIGHT","VK_DOWN","VK_PRINTSCREEN","VK_INSERT","VK_DELETE","VK_0","VK_1","VK_2","VK_3","VK_4","VK_5","VK_6","VK_7","VK_8","VK_9","VK_COLON","VK_SEMICOLON","VK_LESS_THAN","VK_EQUALS","VK_GREATER_THAN","VK_QUESTION_MARK","VK_AT","VK_A","VK_B","VK_C","VK_D","VK_E","VK_F","VK_G","VK_H","VK_I","VK_J","VK_K","VK_L","VK_M","VK_N","VK_O","VK_P","VK_Q","VK_R","VK_S","VK_T","VK_U","VK_V","VK_W","VK_X","VK_Y","VK_Z","VK_CONTEXT_MENU","VK_NUMPAD0","VK_NUMPAD1","VK_NUMPAD2","VK_NUMPAD3","VK_NUMPAD4","VK_NUMPAD5","VK_NUMPAD6","VK_NUMPAD7","VK_NUMPAD8","VK_NUMPAD9","VK_MULTIPLY","VK_ADD","VK_SEPARATOR","VK_SUBTRACT","VK_DECIMAL","VK_DIVIDE","VK_F1","VK_F2","VK_F3","VK_F4","VK_F5","VK_F6","VK_F7","VK_F8","VK_F9","VK_F10","VK_F11","VK_F12","VK_F13","VK_F14","VK_F15","VK_F16","VK_F17","VK_F18","VK_F19","VK_F20","VK_F21","VK_F22","VK_F23","VK_F24","VK_NUM_LOCK","VK_SCROLL_LOCK","VK_CIRCUMFLEX","VK_EXCLAMATION","VK_DOUBLE_QUOTE","VK_HASH","VK_DOLLAR","VK_PERCENT","VK_AMPERSAND","VK_UNDERSCORE","VK_OPEN_PAREN","VK_CLOSE_PAREN","VK_ASTERISK","VK_PLUS","VK_PIPE","VK_HYPHEN_MINUS","VK_OPEN_CURLY_BRACKET","VK_CLOSE_CURLY_BRACKET","VK_TILDE","VK_COMMA","VK_PERIOD","VK_SLASH","VK_BACK_QUOTE","VK_OPEN_BRACKET","VK_BACK_SLASH","VK_CLOSE_BRACKET","VK_QUOTE","VK_META","VK_ALTGR","VK_WIN","VK_KANA","VK_HANGUL","VK_EISU","VK_JUNJA","VK_FINAL","VK_HANJA","VK_KANJI","VK_CONVERT","VK_NONCONVERT","VK_ACCEPT","VK_MODECHANGE","VK_SELECT","VK_PRINT","VK_EXECUTE","VK_SLEEP","StringGenerator","words","order","prior","_boundary","String","fromCharCode","_suffix","_prefix","_priorValues","_sample","_join","_split","event","subcontext","_observeEvent","priorCount","keys","dataCount","eventCount","_backoff","available","EventQueue","_time","_events","MinHeap","time","find","heap","timestamp","loc","updateUp","updateDown","last","numbers","validnumbers","existNode","minimal","lessThan","parentNode","swap","leftChild","leftChildNode","rightChild","rightChildNode","minNode","Simple","Speed","Action","item","repeat","_queue","_current","_repeat","Scheduler","getTime","getEventTime","undefined","getSpeed","_defaultDuration","_duration","DiscreteShadowcasting","PreciseShadowcasting","RecursiveShadowcasting","R","callback","_lightPasses","A","B","blocks","DATA","neighbors","_getCircle","angle","_visibleCoords","v1","count","FOV","lightPassesCallback","topology","dirs","countFactor","startOffset","A1","A2","visibility","SHADOWS","neighborCount","_checkVisibility","index1","edge1","index2","edge2","visibleLength","visible","P","P1","P2","OCTANTS","_renderOctant","dir","previousOctant","nextPreviousOctant","nextOctant","octant","_castVisibility","startX","startY","row","visSlopeStart","visSlopeEnd","radius","xx","xy","yx","yy","blocked","newStart","mapX","mapY","slopeStart","slopeEnd","Arena","Uniform","Cellular","Digger","EllerMaze","DividedMaze","IceyMaze","Rogue","w","_width","_height","roomWidth","roomHeight","roomDugPercentage","timeLimit","_map","_dug","_roomAttempts","_corridorAttempts","_connected","_unconnected","_digCallback","_canBeDugCallback","_isWallCallback","t1","_fillMap","_rooms","_generateRooms","_generateCorridors","room","_generateRoom","Room","isValid","cnt","_corridors","clearDoors","connected","room1","_closestRoom","room2","_connectRooms","rooms","dist","center","getCenter","end","dirIndex1","dirIndex2","center1","center2","diffX","diffY","abs","getLeft","getRight","getTop","getBottom","_placeInWall","_digLine","rotation","mid","mid1","mid2","addDoor","dirIndex","lastBadIndex","points","corridor","Corridor","Dungeon","Feature","x1","y1","x2","y2","doorX","doorY","_x1","_y1","_x2","_y2","_doors","isWallCallback","right","bottom","canBeDugCallback","digCallback","endX","endY","_startX","_startY","_endX","_endY","_endsWithAWall","sx","sy","nx","ny","ok","firstCornerBad","secondCornerBad","priorityWallCallback","corridorLength","born","survive","_dirs","probability","newMap","widthStep","widthStart","cur","ncount","_getNeighbors","_serviceCallback","connectionCallback","allFreeSpace","notConnected","widthStarts","_freeSpace","_pointKey","_findConnected","_getFromTo","from","to","local","tunnelFn","_tunnelToConnected6","_tunnelToConnected","k","call","pp","connectedKeys","notConnectedKeys","_getClosest","point","space","minPoint","minDist","stack","keepNotConnected","tests","pkey","stepWidth","FEATURES","dugPercentage","_features","_featureAttempts","_walls","_priorityWallCallback","area","_firstRoom","priorityWalls","wall","_findWall","_getDiggingDirection","featureAttempts","_tryFeature","_removeSurroundingWalls","_addDoors","prio1","prio2","sort","featureName","feature","createRandomAt","createPriorityWalls","deltas","addDoors","addToList","L","removeFromList","arguments","_stack","_process","_partitionRoom","availX","availY","walls","solid","hole","regularity","_regularity","done","_randomize","_isFree","connectedCells","cellWidth","cellHeight","_calculateRoomSize","_initRooms","_connectUnconnectedRooms","_createRandomRoomConnections","_createRooms","_createCorridors","cell","ncgx","ncgy","otherRoom","dirToCheck","cgx","cgy","found","validRoom","cw","dirIdx","newI","newJ","roomw","roomh","cwp","chp","sxOffset","syOffset","ii","jj","aRoom","aDirection","rx","ry","door","startPosition","endPosition","tempDist","xDir","yDir","xOffset","yOffset","xpos","ypos","moves","xAbs","yAbs","percent","firstHalf","secondHalf","connection","otherWall","_drawCorridor","_getWallPosition","Simplex","F2","G2","gradients","_gradients","permutations","_perms","_indexes","xin","yin","gi","i1","j1","perms","indexes","n0","n1","n2","x0","y0","t0","grad","t2","Noise","Dijkstra","AStar","toX","toY","passableCallback","_computed","_todo","_add","fromX","fromY","_compute","neighbor","Path","_toX","_toY","_passableCallback","_done","_fromX","_fromY","_distance","f","itemF","scheduler","_scheduler","_lock","unlock","lock","act","then","Lighting","reflectivityCallback","_reflectivityCallback","passes","emissionThreshold","range","_lights","_reflectivityCache","_fovCache","reset","fov","_fov","lightingCallback","doneCells","emittingCells","litCells","light","_emitLight","_computeEmitters","litKey","_emitLightFromCell","reflectivity","emission","intensity","fovKey","_updateFOV","formFactor","key1","compute","vis","game","onKeydown","container","getDOMContainer","onMouseClick","onMouseMove","onMouseEnter","onMouseLeave","InputKeyboardEvent","shiftKey","ctrl","ctrlKey","alt","altKey","meta","metaKey","onInputEvent","tileX","tileY","InputMouseEvent","button","offsetX","offsetY","updatePosition","updateMouseEnter","updateMouseLeave","InputEvent","dt","tickDelta","System","sorted","isPlayer","turn","renderable","glyph","moveCommand","INPUT_CMD_MOVE_NW","INPUT_CMD_MOVE_N","INPUT_CMD_MOVE_NE","INPUT_CMD_MOVE_W","INPUT_CMD_MOVE_E","INPUT_CMD_MOVE_SW","INPUT_CMD_MOVE_S","INPUT_CMD_MOVE_SE","INPUT_CMD_WAIT","INPUT_CMD_CONFIRM","INPUT_CMD_CANCEL","subTurn","padEnd","hasMouse","INPUT_DOMAIN_DEFAULT","commands","cmd","registerCommand","getCommandForInputEvent","domain","getDomainCommands","matches","command","INPUT_DOMAIN_MAIN_MENU","isKeyboard","InputCommand","KEY_ENTER","KEY_SPACE","KEY_ESCAPE","KEY_S","KEY_Q","KEY_W","KEY_UP","KEY_E","KEY_A","KEY_LEFT","KEY_D","KEY_RIGHT","KEY_Z","KEY_X","KEY_DOWN","KEY_C","inputEvent","KEY_CANCEL","KEY_HELP","KEY_BACK_SPACE","KEY_TAB","KEY_CLEAR","KEY_ENTER_SPECIAL","KEY_SHIFT","KEY_CONTROL","KEY_ALT","KEY_PAUSE","KEY_CAPS_LOCK","KEY_KANA","KEY_EISU","KEY_JUNJA","KEY_FINAL","KEY_HANJA","KEY_CONVERT","KEY_NONCONVERT","KEY_ACCEPT","KEY_MODECHANGE","KEY_PAGE_UP","KEY_PAGE_DOWN","KEY_END","KEY_HOME","KEY_SELECT","KEY_PRINT","KEY_EXECUTE","KEY_PRINTSCREEN","KEY_INSERT","KEY_DELETE","KEY_NUM_0","KEY_NUM_1","KEY_NUM_2","KEY_NUM_3","KEY_NUM_4","KEY_NUM_5","KEY_NUM_6","KEY_NUM_7","KEY_NUM_8","KEY_NUM_9","KEY_COLON","KEY_SEMICOLON","KEY_LESS_THAN","KEY_EQUALS","KEY_GREATER_THAN","KEY_QUESTION_MARK","KEY_AT","KEY_B","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_R","KEY_T","KEY_U","KEY_V","KEY_Y","KEY_META","KEY_CONTEXT_MENU","KEY_SLEEP","KEY_NUMPAD_0","KEY_NUMPAD_1","KEY_NUMPAD_2","KEY_NUMPAD_3","KEY_NUMPAD_4","KEY_NUMPAD_5","KEY_NUMPAD_6","KEY_NUMPAD_7","KEY_NUMPAD_8","KEY_NUMPAD_9","KEY_MULTIPLY","KEY_ADD","KEY_SEPARATOR","KEY_SUBTRACT","KEY_DECIMAL","KEY_DIVIDE","KEY_F1","KEY_F2","KEY_F3","KEY_F4","KEY_F5","KEY_F6","KEY_F7","KEY_F8","KEY_F9","KEY_F10","KEY_F11","KEY_F12","KEY_F13","KEY_F14","KEY_F15","KEY_F16","KEY_F17","KEY_F18","KEY_F19","KEY_F20","KEY_F21","KEY_F22","KEY_F23","KEY_F24","KEY_NUM_LOCK","KEY_SCROLL_LOCK","KEY_WIN_OEM_FJ_JISHO","KEY_WIN_OEM_FJ_MASSHOU","KEY_WIN_OEM_FJ_TOUROKU","KEY_WIN_OEM_FJ_LOYA","KEY_WIN_OEM_FJ_ROYA","KEY_CIRCUMFLEX","KEY_EXCLAMATION","KEY_DOUBLE_QUOTE","KEY_HASH","KEY_DOLLAR","KEY_PERCENT","KEY_AMPERSAND","KEY_UNDERSCORE","KEY_OPEN_PAREN","KEY_CLOSE_PAREN","KEY_ASTERISK","KEY_PLUS","KEY_PIPE","KEY_HYPHEN_MINUS","KEY_OPEN_CURLY_BRACKET","KEY_CLOSE_CURLY_BRACKET","KEY_TILDE","KEY_VOLUME_MUTE","KEY_VOLUME_DOWN","KEY_VOLUME_UP","KEY_SEMICOLON_2","KEY_EQUALS_2","KEY_COMMA","KEY_MINUS","KEY_PERIOD","KEY_SLASH","KEY_BACK_QUOTE","KEY_OPEN_BRACKET","KEY_BACK_SLASH","KEY_CLOSE_BRACKET","KEY_QUOTE","KEY_META_2","KEY_ALTGR","KEY_WIN_ICO_HELP","KEY_WIN_ICO_00","KEY_WIN_ICO_CLEAR","KEY_WIN_OEM_RESET","KEY_WIN_OEM_JUMP","KEY_WIN_OEM_PA1","KEY_WIN_OEM_PA2","KEY_WIN_OEM_PA3","KEY_WIN_OEM_WSCTRL","KEY_WIN_OEM_CUSEL","KEY_WIN_OEM_ATTN","KEY_WIN_OEM_FINISH","KEY_WIN_OEM_COPY","KEY_WIN_OEM_AUTO","KEY_WIN_OEM_ENLW","KEY_WIN_OEM_BACKTAB","KEY_ATTN","KEY_CRSEL","KEY_EXSEL","KEY_EREOF","KEY_PLAY","KEY_ZOOM","KEY_PA1","KEY_WIN_OEM_CLEAR","__webpack_module_cache__","__webpack_require__","moduleId","exports","__webpack_modules__","mode","__esModule","ns","o","defineProperty","prototype","toStringTag"],"mappings":"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","file":"main.b4cb135b970d2edee87c.js","sourcesContent":["import ecs from './ecs';\nimport { BoredGoalType } from './ai/GoalTypes';\nimport { DIR_N, DIR_W, DIR_Z, DIR_E, DIR_S, DIR_NW, DIR_SW, DIR_SE, DIR_NE } from './enums/Directions';\nimport { MoveCommand } from './ecs/components';\nimport Game from './core/Game';\nimport * as KeyCodes from './core/input/KeyCodes';\nimport { INPUT_DOMAIN_GAME } from './core/input/InputDomainType';\n\nconst g = new Game();\n\nconst player = ecs.createPrefab('Player', {\n    moniker: {\n        name: 'Player',\n    },\n    position: {\n        x: 4,\n        y: 10,\n    },\n});\n\nconst bob = ecs.createPrefab('HumanWanderer', {\n    position: {\n        x: 23,\n        y: 20,\n    },\n});\n\nbob.brain.pushGoal(BoredGoalType.create());\n\nconst move = (entity, direction) => {\n    if (entity.has(MoveCommand)) {\n        entity.remove(MoveCommand);\n    }\n\n    entity.add(MoveCommand, {\n        direction,\n    });\n};\n\ndocument.addEventListener('keydown', (e) => {\n    if (e.keyCode === KeyCodes.KEY_SPACE) {\n        player.fireEvent('energy-consumed', 1000);\n    }\n    if (e.keyCode === KeyCodes.KEY_Q) {\n        move(player, DIR_NW);\n    }\n    if (e.keyCode === KeyCodes.KEY_W) {\n        move(player, DIR_N);\n    }\n    if (e.keyCode === KeyCodes.KEY_E) {\n        move(player, DIR_NE);\n    }\n    if (e.keyCode === KeyCodes.KEY_A) {\n        move(player, DIR_W);\n    }\n    if (e.keyCode === KeyCodes.KEY_S) {\n        move(player, DIR_Z);\n    }\n    if (e.keyCode === KeyCodes.KEY_D) {\n        move(player, DIR_E);\n    }\n    if (e.keyCode === KeyCodes.KEY_Z) {\n        move(player, DIR_SW);\n    }\n    if (e.keyCode === KeyCodes.KEY_X) {\n        move(player, DIR_S);\n    }\n    if (e.keyCode === KeyCodes.KEY_C) {\n        move(player, DIR_SE);\n    }\n});\n\ng.commandManager.pushDomain(INPUT_DOMAIN_GAME);\n\ng.start();\n","import { Engine } from 'geotic';\n\nimport * as components from './components';\nimport * as prefabs from './prefabs';\n\nconst ecs = new Engine();\n\nwindow.ecs = ecs;\n\nObject.values(components).forEach((component) => {\n    ecs.registerComponent(component);\n});\n\nObject.values(prefabs).forEach((prefab) => {\n    ecs.registerPrefab(prefab);\n});\n\nexport default ecs;\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[\\p{Lu}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[\\p{Ll}]/u.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLocaleLowerCase() === character && character.toLocaleUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toLocaleUpperCase() === character && character.toLocaleLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\t...{pascalCase: false},\n\t\t...options\n\t};\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toLocaleUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toLocaleUpperCase() : input.toLocaleLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLocaleLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLocaleLowerCase()\n\t\t.replace(/[_.\\- ]+([\\p{Alpha}\\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase())\n\t\t.replace(/\\d+([\\p{Alpha}\\p{N}_]|$)/gu, m => m.toLocaleUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","export default class Property {\n    component;\n\n    constructor(component) {\n        this.component = component;\n    }\n\n    get ecs() {\n        return this.component.ecs;\n    }\n\n    get descriptor() {\n        return {\n            enumerable: true,\n            get: () => this.get(),\n            set: (v) => this.set(v),\n        };\n    }\n\n    get() {\n        return undefined;\n    }\n\n    set(value) {}\n\n    serialize() {\n        return undefined;\n    }\n\n    onDestroyed() {}\n\n    cleanupReference(entity) {}\n}\n","import Property from './Property';\n\nexport default class SimpleProperty extends Property {\n    value = null;\n\n    set(value) {\n        this.value = value;\n    }\n\n    get() {\n        return this.value;\n    }\n\n    serialize() {\n        return this.value;\n    }\n}\n","import Property from './Property';\n\nexport default class EntityProperty extends Property {\n    id;\n\n    set(value) {\n        if (this.id && (!value || value.id !== this.id || value !== this.id)) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n\n        if (value && value.id) {\n            this.ecs.entities.addRef(value.id, this);\n            this.id = value.id;\n            return;\n        }\n\n        if (typeof value === 'string') {\n            this.ecs.entities.addRef(value, this);\n            this.id = value;\n            return;\n        }\n\n        this.id = undefined;\n    }\n\n    get() {\n        return this.id && this.component.ecs.getEntity(this.id);\n    }\n\n    serialize() {\n        return this.id;\n    }\n\n    onDestroyed() {\n        if (this.id) {\n            this.ecs.entities.removeRef(this.id, this);\n        }\n    }\n\n    cleanupReference(entity) {\n        if (this.id === entity.id) {\n            this.id = undefined;\n        } else {\n            console.warn(\n                `Property in unclean state. A reference to an entity \"${entity.id}\" was never cleaned up.`\n            );\n        }\n    }\n}\n","import Property from './Property';\n\nexport default class EntityArrayProperty extends Property {\n    proxy = [];\n\n    constructor(component) {\n        super(component);\n        this.proxy = new Proxy([], {\n            get: (target, prop, receiver) => {\n                return Reflect.get(target, prop, receiver);\n            },\n            set: (target, prop, value, receiver) => {\n                if (isNaN(prop)) {\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                const old = Reflect.get(target, prop, receiver);\n\n                if (typeof value === 'string') {\n                    value = this.ecs.entities.get(value);\n                }\n\n                if (old && old != value) {\n                    this.ecs.entities.removeRef(value, this);\n                }\n\n                if (value && value.id) {\n                    this.ecs.entities.addRef(value.id, this);\n\n                    return Reflect.set(target, prop, value, receiver);\n                }\n\n                return Reflect.set(target, prop, value, receiver);\n            },\n            deleteProperty: (target, prop) => {\n                if (isNaN(prop)) {\n                    return Reflect.deleteProperty(target, prop);\n                }\n\n                const value = Reflect.get(target, prop);\n                this.ecs.entities.removeRef(value, this);\n\n                return Reflect.deleteProperty(target, prop);\n            },\n        });\n    }\n\n    set(values = []) {\n        const len = Math.max(values.length, this.proxy.length);\n\n        for (let i = 0; i < len; i++) {\n            if (i in values) {\n                this.proxy[i] = values[i];\n            } else {\n                delete this.proxy[i];\n            }\n        }\n\n        this.proxy.length = values.length;\n    }\n\n    get() {\n        return this.proxy;\n    }\n\n    serialize() {\n        return this.proxy.map((ref) => ref.id);\n    }\n\n    onDestroyed() {\n        this.set([]);\n    }\n\n    cleanupReference(entity) {\n        this.set(this.proxy.filter((ref) => ref.id !== entity.id));\n    }\n}\n","import Property from './Property';\nimport SimpleProperty from './SimpleProperty';\nimport EntityProperty from './EntityProperty';\nimport EntityArrayProperty from './EntityArrayProperty';\n\nexport default class PropertyStrategy {\n    static create(component, value) {\n        switch (value) {\n            case '<Entity>':\n                return new EntityProperty(component);\n            case '<EntityArray>':\n                return new EntityArrayProperty(component);\n            default:\n                return new SimpleProperty(component);\n        }\n    }\n}\n","import camelcase from 'camelcase';\r\nimport PropertyFactory from './Properties/PropertyFactory';\r\n\r\nexport default class Component {\r\n    #entity = null;\r\n    #ecs = null;\r\n    #props = {};\r\n    #isDestroyed = false;\r\n\r\n    static allowMultiple = false;\r\n    static keyProperty = null;\r\n    static properties = {};\r\n\r\n    static get type() {\r\n        return this.name;\r\n    }\r\n\r\n    get entity() {\r\n        return this.#entity;\r\n    }\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get type() {\r\n        return this.constructor.name;\r\n    }\r\n\r\n    get isAttached() {\r\n        return Boolean(this.entity);\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    get allowMultiple() {\r\n        return this.constructor.allowMultiple;\r\n    }\r\n\r\n    get keyProperty() {\r\n        return this.constructor.keyProperty;\r\n    }\r\n\r\n    get properties() {\r\n        const ob = {};\r\n\r\n        for (const [key, value] of Object.entries(this.#props)) {\r\n            ob[key] = value.get();\r\n        }\r\n\r\n        return ob;\r\n    }\r\n\r\n    get key() {\r\n        return this[this.keyProperty];\r\n    }\r\n\r\n    constructor(ecs, properties = {}) {\r\n        this.#ecs = ecs;\r\n        this._defineProxies(properties);\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.#props).reduce(\r\n            (o, [key, value]) => ({\r\n                ...o,\r\n                [key]: value.serialize(),\r\n            }),\r\n            {}\r\n        );\r\n    }\r\n\r\n    _onAttached(entity) {\r\n        this.#entity = entity;\r\n        this.ecs.queries.onComponentAdded(entity, this);\r\n        this.onAttached();\r\n    }\r\n\r\n    _onDetached() {\r\n        if (this.isAttached) {\r\n            this.onDetached();\r\n            const entity = this.#entity;\r\n\r\n            this.#entity = null;\r\n            this.ecs.queries.onComponentRemoved(entity, this);\r\n        }\r\n    }\r\n\r\n    _onDestroyed() {\r\n        this.#isDestroyed = true;\r\n        this.onDestroyed();\r\n\r\n        for (const prop of Object.values(this.#props)) {\r\n            prop.onDestroyed();\r\n        }\r\n    }\r\n\r\n    onAttached() {}\r\n\r\n    onDetached() {}\r\n\r\n    onDestroyed() {}\r\n\r\n    remove(destroy = true) {\r\n        if (this.isAttached) {\r\n            this.entity.remove(this);\r\n        }\r\n        if (destroy) {\r\n            this._onDestroyed();\r\n        }\r\n    }\r\n\r\n    destroy() {\r\n        this.remove(true);\r\n    }\r\n\r\n    clone() {\r\n        return this.ecs.createComponent(\r\n            this.type,\r\n            this.serialize()\r\n        );\r\n    }\r\n\r\n    _onEvent(evt) {\r\n        this.onEvent(evt);\r\n\r\n        const handlerName = camelcase(`on ${evt.name}`);\r\n\r\n        if (typeof this[handlerName] === 'function') {\r\n            this[handlerName](evt);\r\n        }\r\n    }\r\n\r\n    onEvent(evt) {}\r\n\r\n    _defaultPropertyValue(propertyName) {\r\n        const value = this.constructor.properties[propertyName];\r\n\r\n        if (value === '<EntityArray>') {\r\n            return [];\r\n        }\r\n\r\n        if (value === '<Entity>') {\r\n            return undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    _defineProxies(initialProperties) {\r\n        for (const key in this.constructor.properties) {\r\n            const initialValue = initialProperties.hasOwnProperty(key)\r\n                ? initialProperties[key]\r\n                : this._defaultPropertyValue(key);\r\n            const property = PropertyFactory.create(\r\n                this,\r\n                this.constructor.properties[key]\r\n            );\r\n\r\n            this.#props[key] = property;\r\n            Object.defineProperty(this, key, property.descriptor);\r\n            property.set(initialValue);\r\n        }\r\n    }\r\n}\r\n","import Component from '../Component';\nimport camelcase from 'camelcase';\n\nexport default class ComponentRegistry {\n    #nameCache = new Map();\n    #definitions = new Map();\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    register(component) {\n        this.#definitions.set(component.name, component);\n        this.#nameCache.set(component.name, camelcase(component.name));\n    }\n\n    getAccessor(type) {\n        if (this.#nameCache.has(type)) {\n            return this.#nameCache.get(type);\n        }\n\n        this.#nameCache.set(type, camelcase(type));\n    }\n\n    get(typeOrClassOrComponent) {\n        const type = this._getType(typeOrClassOrComponent);\n\n        if (!type) {\n            console.warn(\n                `Cannot get component definition for type or class ${typeOrClassOrComponent} since it is neither a Component class or type (string)`\n            );\n            return null;\n        }\n\n        return this.#definitions.get(type);\n    }\n\n    create(typeOrClass, properties = {}) {\n        const definition = this.get(typeOrClass);\n\n        if (definition) {\n            return new definition(this.#ecs, properties);\n        }\n\n        console.warn(\n            `Could not create component definition for ${typeOrClass} since it is not registered`\n        );\n    }\n\n    _getType(typeOrClassOrComponent) {\n        if (typeof typeOrClassOrComponent === 'string') {\n            return typeOrClassOrComponent;\n        }\n\n        if (typeOrClassOrComponent instanceof Component) {\n            return typeOrClassOrComponent.type;\n        }\n\n        if (typeOrClassOrComponent.prototype instanceof Component) {\n            return typeOrClassOrComponent.name;\n        }\n\n        return null;\n    }\n}\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","import merge from 'deepmerge';\n\nexport default class PrefabComponent {\n    get type() {\n        return this.componentDef.type;\n    }\n\n    constructor(componentDef, properties = {}, overwrite = true) {\n        this.componentDef = componentDef;\n        this.properties = properties;\n        this.overwrite = overwrite;\n    }\n\n    applyToEntity(entity, initialProps = {}) {\n        if (!this.componentDef.allowMultiple && entity.has(this.componentDef)) {\n            if (this.overwrite) {\n                entity.remove(this.componentDef);\n            } else {\n                console.log(\n                    `Ignoring prefab component \"${this.type}\" since the entity \"${entity.id}\" already has one.`\n                );\n                return;\n            }\n        }\n\n        const props = merge(this.properties, initialProps);\n\n        entity.add(this.componentDef, props);\n    }\n}\n","export default class Prefab {\r\n    name = '';\r\n    inherit = [];\r\n    components = [];\r\n\r\n    constructor(ecs, name) {\r\n        this.ecs = ecs;\r\n        this.name = name;\r\n    }\r\n\r\n    addComponent(prefabComponent) {\r\n        this.components.push(prefabComponent);\r\n    }\r\n\r\n    applyToEntity(entity, initialProps = {}) {\r\n        this.inherit.forEach((parent) => {\r\n            parent.applyToEntity(entity, initialProps);\r\n        });\r\n\r\n        const arrComps = {};\r\n\r\n        this.components.forEach((component, i) => {\r\n            const definition = component.componentDef;\r\n            const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n            let initialCompProps = {};\r\n\r\n            if (definition.allowMultiple) {\r\n                if (definition.keyProperty) {\r\n                    const key = component.properties[definition.keyProperty];\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][key]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][key];\r\n                    }\r\n                } else {\r\n                    if (!arrComps[accessor]) {\r\n                        arrComps[accessor] = 0;\r\n                    }\r\n\r\n                    if (\r\n                        initialProps[accessor] &&\r\n                        initialProps[accessor][\r\n                            arrComps[accessor]\r\n                        ]\r\n                    ) {\r\n                        initialCompProps =\r\n                            initialProps[accessor][\r\n                                arrComps[accessor]\r\n                            ];\r\n                    }\r\n\r\n                    arrComps[accessor]++;\r\n                }\r\n            } else {\r\n                initialCompProps = initialProps[accessor];\r\n            }\r\n\r\n            component.applyToEntity(entity, initialCompProps);\r\n        });\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import Component from '../Component';\nimport PrefabComponent from '../PrefabComponent';\nimport Prefab from '../Prefab';\n\nexport default class PrefabRegistry {\n    #prefabs = {};\n    #ecs = null;\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    deserialize(data) {\n        const registered = this.get(data.name);\n\n        if (registered) {\n            return registered;\n        }\n\n        const prefab = new Prefab(this.#ecs, data.name);\n\n        let inherit;\n\n        if (Array.isArray(data.inherit)) {\n            inherit = data.inherit;\n        } else if (typeof data.inherit === 'string') {\n            inherit = [data.inherit];\n        } else {\n            inherit = [];\n        }\n\n        prefab.inherit = inherit.map((parent) => {\n            const ref = this.get(parent);\n\n            if (!ref) {\n                console.warn(\n                    `Prefab \"${data.name}\" cannot inherit from Prefab \"${parent}\" because is not registered yet! Prefabs must be registered in the right order.`\n                );\n                return parent;\n            }\n\n            return ref;\n        });\n\n        const comps = data.components || [];\n\n        for (const componentData of comps) {\n            if (\n                typeof componentData === 'string' ||\n                componentData.prototype instanceof Component\n            ) {\n                const def = this.#ecs.components.get(componentData);\n                if (def) {\n                    prefab.addComponent(new PrefabComponent(def));\n                }\n            } else if (typeof componentData === 'object') {\n                const type = componentData.type;\n                const def = this.#ecs.components.get(type);\n                if (def) {\n                    prefab.addComponent(\n                        new PrefabComponent(\n                            def,\n                            componentData.properties,\n                            componentData.overwrite\n                        )\n                    );\n                }\n            } else {\n                console.warn(\n                    `Unrecognized component reference \"${componentData}\" in prefab \"${data.name}\". Ensure the component is registered before the prefab.`\n                );\n            }\n        }\n\n        this.register(prefab);\n\n        return prefab;\n    }\n\n    register(prefab) {\n        this.#prefabs[prefab.name] = prefab;\n    }\n\n    get(nameOrClassOrPrefab) {\n        const name = PrefabRegistry._getName(nameOrClassOrPrefab);\n\n        return this.#prefabs[name];\n    }\n\n    create(nameOrClass, initialProps = {}) {\n        const prefab = this.get(nameOrClass);\n\n        if (!prefab) {\n            console.warn(\n                `Could not instantiate prefab for ${nameOrClass} since it is not registered`\n            );\n\n            return;\n        }\n\n        const entity = this.#ecs.createEntity();\n        prefab.applyToEntity(entity, initialProps);\n\n        return entity;\n    }\n\n    static _getName(nameOrClassOrPrefab) {\n        if (typeof nameOrClassOrPrefab === 'string') {\n            return nameOrClassOrPrefab;\n        }\n\n        if (nameOrClassOrPrefab instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        if (nameOrClassOrPrefab.prototype instanceof Prefab) {\n            return nameOrClassOrPrefab.name;\n        }\n\n        return null;\n    }\n}\n","// This alphabet uses `A-Za-z0-9_-` symbols. The genetic algorithm helped\n// optimize the gzip compression for this alphabet.\nlet urlAlphabet =\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\n\nlet customAlphabet = (alphabet, size) => {\n  return () => {\n    let id = ''\n    // A compact alternative for `for (var i = 0; i < step; i++)`.\n    let i = size\n    while (i--) {\n      // `| 0` is more compact and faster than `Math.floor()`.\n      id += alphabet[Math.random() * alphabet.length | 0]\n    }\n    return id\n  }\n}\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  let i = size\n  while (i--) {\n    // `| 0` is more compact and faster than `Math.floor()`.\n    id += urlAlphabet[Math.random() * 64 | 0]\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet }\n","export default class EntityEvent {\n    data = {};\n    #prevented = false;\n    #handled = false;\n\n    get prevented() {\n        return this.#prevented;\n    }\n\n    get handled() {\n        return this.#handled;\n    }\n\n    constructor(name, data = {}) {\n        this.name = name;\n        this.data = data;\n    }\n\n    is(name) {\n        return this.name === name;\n    }\n\n    handle() {\n        this.#handled = true;\n        this.#prevented = true;\n    }\n\n    prevent() {\n        this.#prevented = true;\n    }\n}\n","import Component from './Component';\r\nimport EntityEvent from './EntityEvent';\r\n\r\nexport default class Entity {\r\n    #id = null;\r\n    #components = {};\r\n    #ecs = null;\r\n    #isDestroyed = false;\r\n\r\n    get ecs() {\r\n        return this.#ecs;\r\n    }\r\n\r\n    get components() {\r\n        return this.#components;\r\n    }\r\n\r\n    get isDestroyed() {\r\n        return this.#isDestroyed;\r\n    }\r\n\r\n    constructor(ecs, id = null) {\r\n        this.#ecs = ecs;\r\n        this.#id = id || ecs.generateId();\r\n        Object.defineProperty(this, 'id', {\r\n            value: this.#id,\r\n            enumerable: true,\r\n            writable: false,\r\n        });\r\n    }\r\n\r\n    has(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const hasType = this.hasOwnProperty(accessor);\r\n\r\n        if (hasType && key) {\r\n            return this[accessor].hasOwnProperty(key);\r\n        }\r\n\r\n        return hasType;\r\n    }\r\n\r\n    get(typeOrClass, key = null) {\r\n        const type = this.ecs.components._getType(typeOrClass);\r\n        const accessor = this.ecs.components.getAccessor(type);\r\n        const components = this[accessor];\r\n\r\n        if (components && key) {\r\n            return components[key];\r\n        }\r\n\r\n        return components;\r\n    }\r\n\r\n    destroy() {\r\n        this.#isDestroyed = true;\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component.destroy();\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent.destroy();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.ecs.entities.onEntityDestroyed(this);\r\n    }\r\n\r\n    add(typeOrClass, properties = {}) {\r\n        const component = this.ecs.components.create(typeOrClass, properties);\r\n\r\n        if (!component) {\r\n            console.warn(\r\n                `\"${typeOrClass}\" component cannot be added, since it is not registered.`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        return this.attach(component);\r\n    }\r\n\r\n    attach(component) {\r\n        const accessor = this.ecs.components.getAccessor(component.type);\r\n\r\n        if (!component.allowMultiple) {\r\n            if (this.has(component.type)) {\r\n                console.warn(\r\n                    `\"${component.type}\" component has allowMultiple set to ${component.allowMultiple}. Trying to add a \"${component.type}\" component to an entity which already has one.`\r\n                );\r\n                return false;\r\n            }\r\n\r\n            this.components[accessor] = component;\r\n\r\n            Object.defineProperty(this, accessor, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.keyProperty) {\r\n            if (!this.components[accessor]) {\r\n                this.components[accessor] = [];\r\n                Object.defineProperty(this, accessor, {\r\n                    configurable: true,\r\n                    enumerable: true,\r\n                    get() {\r\n                        return this.components[accessor];\r\n                    },\r\n                });\r\n            }\r\n\r\n            this.components[accessor].push(component);\r\n\r\n            component._onAttached(this);\r\n            this.ecs.queries.onComponentAdded(this);\r\n\r\n            return true;\r\n        }\r\n\r\n        if (!component.key) {\r\n            console.warn(\r\n                `\"${component.type}\" component has a falsy key of \"${component.key}\". The keyProperty is set to \"${component.keyProperty}\".`\r\n            );\r\n            return false;\r\n        }\r\n\r\n        if (!this.components[accessor]) {\r\n            this.components[accessor] = {};\r\n            Object.defineProperty(this, accessor, {\r\n                configurable: true,\r\n                enumerable: true,\r\n                get() {\r\n                    return this.components[accessor];\r\n                },\r\n            });\r\n        }\r\n\r\n        this.components[accessor][component.key] = component;\r\n\r\n        component._onAttached(this);\r\n        this.ecs.queries.onComponentAdded(this, component);\r\n\r\n        return true;\r\n    }\r\n\r\n    owns(component) {\r\n        return component.entity === this;\r\n    }\r\n\r\n    remove(typeOrClassOrComponent, key = null) {\r\n        const isComponent = typeOrClassOrComponent instanceof Component;\r\n        key = isComponent ? typeOrClassOrComponent.key : key;\r\n\r\n        const definition = this.ecs.components.get(typeOrClassOrComponent);\r\n\r\n        const accessor = this.ecs.components.getAccessor(definition.type);\r\n\r\n        if (definition.allowMultiple) {\r\n            if (!definition.keyProperty) {\r\n                if (isComponent) {\r\n                    const all = this.components[accessor];\r\n\r\n                    if (!all) {\r\n                        console.warn(\r\n                            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n                        );\r\n                        return;\r\n                    }\r\n\r\n                    const index = all.indexOf(typeOrClassOrComponent);\r\n\r\n                    if (index > -1) {\r\n                        all.splice(index, 1);\r\n                        typeOrClassOrComponent._onDetached();\r\n\r\n                        if (all.length === 0) {\r\n                            delete this[accessor];\r\n                            delete this.components[accessor];\r\n                        }\r\n\r\n                        this.ecs.queries.onComponentRemoved(this);\r\n\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    for (const instance of this.components[accessor]) {\r\n                        instance._onDetached();\r\n                    }\r\n\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                    this.ecs.queries.onComponentRemoved(this);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (!key) {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component which allows multiple without specifying an key.`\r\n                );\r\n                return;\r\n            }\r\n\r\n            const all = this.components[accessor];\r\n            const component = all[key];\r\n\r\n            if (component) {\r\n                delete all[key];\r\n                component._onDetached();\r\n                if (Object.keys(all).length <= 0) {\r\n                    delete this[accessor];\r\n                    delete this.components[accessor];\r\n                }\r\n                this.ecs.queries.onComponentRemoved(this);\r\n\r\n                return component;\r\n            } else {\r\n                console.warn(\r\n                    `Trying to remove a \"${definition.type}\" component from an entity at \"${key}\", but it wasn't found.`\r\n                );\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (accessor in this) {\r\n            const component = this.components[accessor];\r\n\r\n            delete this[accessor];\r\n            delete this.components[accessor];\r\n            component._onDetached();\r\n            this.ecs.queries.onComponentRemoved(this);\r\n\r\n            return component;\r\n        }\r\n\r\n        console.warn(\r\n            `Trying to remove a \"${definition.type}\" component from an entity, but it wasn't found.`\r\n        );\r\n    }\r\n\r\n    serialize() {\r\n        return Object.entries(this.components).reduce(\r\n            (o, [key, value]) => {\r\n                if (value instanceof Component) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.serialize(),\r\n                    };\r\n                }\r\n\r\n                if (Array.isArray(value)) {\r\n                    return {\r\n                        ...o,\r\n                        [key]: value.map((v) => v.serialize()),\r\n                    };\r\n                }\r\n\r\n                return {\r\n                    ...o,\r\n                    [key]: Object.entries(value).reduce(\r\n                        (o2, [k2, v2]) => ({\r\n                            ...o2,\r\n                            [k2]: v2.serialize(),\r\n                        }),\r\n                        {}\r\n                    ),\r\n                };\r\n            },\r\n            {\r\n                id: this.id,\r\n            }\r\n        );\r\n    }\r\n\r\n    fireEvent(name, data) {\r\n        const evt = new EntityEvent(name, data);\r\n\r\n        for (const component of Object.values(this.components)) {\r\n            if (component instanceof Component) {\r\n                component._onEvent(evt);\r\n\r\n                if (evt.prevented) {\r\n                    return evt;\r\n                }\r\n            } else {\r\n                for (const nestedComponent of Object.values(component)) {\r\n                    nestedComponent._onEvent(evt);\r\n\r\n                    if (evt.prevented) {\r\n                        return evt;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return evt;\r\n    }\r\n}\r\n","import Entity from '../Entity';\nimport camelcase from 'camelcase';\n\nexport default class EntityRegistry {\n    #entities = new Map();\n    #ecs = null;\n    #refs = new Map();\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    get all() {\n        return this.#entities.values();\n    }\n\n    register(entity) {\n        this.#entities.set(entity.id, entity);\n\n        return entity;\n    }\n\n    get(id) {\n        return this.#entities.get(id);\n    }\n\n    createOrGetById(id) {\n        const entity = this.get(id);\n\n        if (entity) {\n            return entity;\n        }\n\n        return this.create(id);\n    }\n\n    create(id = undefined) {\n        const entity = new Entity(this.#ecs, id);\n\n        this.register(entity);\n\n        this.#ecs.queries.onEntityCreated(entity);\n\n        return entity;\n    }\n\n    destroy(entity) {\n        entity.destroy();\n    }\n\n    onEntityDestroyed(entity) {\n        this.cleanupRefs(entity);\n        this.#entities.delete(entity.id);\n        this.#ecs.queries.onEntityDestroyed(entity);\n    }\n\n    cleanupRefs(entity) {\n        const refs = this.#refs.get(entity.id);\n\n        if (!refs) {\n            return;\n        }\n\n        for (const ref of refs) {\n            ref.cleanupReference(entity);\n        }\n\n        delete this.#refs[entity.id];\n    }\n\n    addRef(entityId, property) {\n        if (!this.#refs.has(entityId)) {\n            this.#refs.set(entityId, new Set([property]));\n            return;\n        }\n\n        this.#refs.get(entityId).add(property);\n    }\n\n    removeRef(entityId, property) {\n        if (this.#refs.has(entityId)) {\n            this.#refs.get(entityId).delete(property);\n        }\n    }\n\n    serialize() {\n        const json = [];\n\n        this.#entities.forEach((entity) => {\n            json.push(entity.serialize());\n        });\n\n        return json;\n    }\n\n    deserialize(data) {\n        for (const entityData of data.entities) {\n            this.createOrGetById(entityData.id);\n        }\n\n        for (const entityData of data.entities) {\n            this.deserializeEntity(entityData);\n        }\n    }\n\n    deserializeEntity(data) {\n        const { id, ...componentData } = data;\n        const entity = this.createOrGetById(id);\n\n        Object.entries(componentData).forEach(([key, value]) => {\n            const type = camelcase(key, { pascalCase: true });\n            const definition = this.#ecs.components.get(type);\n\n            if (definition.allowMultiple) {\n                Object.values(value).forEach((d) => {\n                    entity.add(definition, d);\n                });\n            } else {\n                entity.add(definition, value);\n            }\n        });\n    }\n}\n","import merge from 'deepmerge';\n\nexport default class Query {\n    #ecs;\n    #filter;\n    #cache = new Set();\n\n    constructor(ecs, filter = {}) {\n        this.#ecs = ecs;\n        this.#filter = merge({ any: [], all: [], none: [] }, filter);\n        this.bustCache();\n    }\n\n    isMatch(entity) {\n        const hasAny = this.#filter.any.length\n            ? this.#filter.any.some((c) => entity.has(c))\n            : true;\n        const hasAll = this.#filter.all.every((c) => entity.has(c));\n        const hasNone = !this.#filter.none.some((c) => entity.has(c));\n\n        return hasAny && hasAll && hasNone;\n    }\n\n    candidate(entity) {\n        if (this.isMatch(entity)) {\n            this.#cache.add(entity);\n            return true;\n        }\n\n        this.#cache.delete(entity);\n        return false;\n    }\n\n    _onEntityCreated(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentAdded(entity) {\n        this.candidate(entity);\n    }\n\n    _onComponentRemoved(entity) {\n        this.candidate(entity);\n    }\n\n    _onEntityDestroyed(entity) {\n        this.#cache.delete(entity);\n    }\n\n    bustCache() {\n        this.#cache.clear();\n\n        for (const entity of this.#ecs.entities.all) {\n            this.candidate(entity);\n        }\n\n        return this.#cache;\n    }\n\n    get() {\n        return this.#cache;\n    }\n}\n","import Query from '../Query';\n\nexport default class QueryRegistry {\n    #ecs;\n    #queries = [];\n\n    constructor(ecs) {\n        this.#ecs = ecs;\n    }\n\n    create(filters) {\n        const query = new Query(this.#ecs, filters);\n\n        this.#queries.push(query);\n\n        return query;\n    }\n\n    onComponentAdded(entity) {\n        this.#queries.forEach((query) => query._onComponentAdded(entity));\n    }\n\n    onComponentRemoved(entity) {\n        this.#queries.forEach((query) => query._onComponentRemoved(entity));\n    }\n\n    onEntityCreated(entity) {\n        this.#queries.forEach((query) => query._onEntityCreated(entity));\n    }\n\n    onEntityDestroyed(entity) {\n        this.#queries.forEach((query) => query._onEntityDestroyed(entity));\n    }\n}\n","import ComponentRegistry from './registries/ComponentRegistry';\nimport PrefabRegistry from './registries/PrefabRegistry';\nimport { nanoid } from 'nanoid/non-secure';\nimport EntityRegistry from './registries/EntityRegistry';\nimport QueryRegistry from './registries/QueryRegistry';\n\nexport default class Engine {\n    constructor() {\n        this.idGenerator = () => nanoid();\n        this.components = new ComponentRegistry(this);\n        this.prefabs = new PrefabRegistry(this);\n        this.entities = new EntityRegistry(this);\n        this.queries = new QueryRegistry(this);\n    }\n\n    generateId() {\n        return this.idGenerator();\n    }\n\n    createEntity() {\n        return this.entities.create();\n    }\n\n    createPrefab(nameOrClass, initialProps = {}) {\n        return this.prefabs.create(nameOrClass, initialProps);\n    }\n\n    destroyEntity(entity) {\n        return this.entities.destroy(entity);\n    }\n\n    registerPrefab(data) {\n        this.prefabs.deserialize(data);\n    }\n\n    registerComponent(component) {\n        this.components.register(component);\n    }\n\n    getEntity(id) {\n        return this.entities.get(id);\n    }\n\n    createComponent(type, properties) {\n        return this.components.create(type, properties);\n    }\n\n    createQuery(filters) {\n        return this.queries.create(filters);\n    }\n\n    serialize() {\n        return {\n            entities: this.entities.serialize(),\n        };\n    }\n\n    deserialize(data) {\n        if (data.id) {\n            return this.entities.deserializeEntity(data);\n        }\n\n        return this.entities.deserialize(data);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Actor extends Component {\n    static properties = {\n        energy: 0,\n    };\n\n    get hasEnergy() {\n        return this.energy >= 0;\n    }\n\n    onEnergyConsumed(evt) {\n        this.reduceEnergy(evt.data);\n    }\n\n    onTick(evt) {\n        this.addEnergy(1);\n    }\n\n    addEnergy(value) {\n        this.energy += value;\n\n        if (this.energy >= 0) {\n            this.energy = 0;\n        }\n    }\n\n    reduceEnergy(value) {\n        this.addEnergy(value * -1);\n    }\n}\n","import { Component } from 'geotic';\nimport { SUCCESS, INVALID, FAILURE } from '../../ai/GoalActionResult';\n\nexport class Brain extends Component {\n    static properties = {\n        goals: '<EntityArray>',\n    };\n\n    onTakeAction(evt) {\n        while (this.peekGoal() && this.peekGoal().isFinished()) {\n            this.popGoal().destroy();\n        }\n\n        const currentGoal = this.peekGoal();\n        const result = currentGoal.takeAction();\n\n        if (result == FAILURE) {\n            this.removeGoal(currentGoal);\n        } else if (result == INVALID) {\n            this.removeGoal(currentGoal);\n            this.entity.fireEvent('take-action');\n        }\n\n        evt.handle();\n    }\n\n    removeGoal(goal) {\n        this.goals = this.goals.filter((g) => {\n            const isSelf = Boolean(g.id === goal.id);\n            const isSiblingGoal = Boolean(\n                g.goal.originalIntent &&\n                    g.goal.originalIntent.id === goal.originalIntent.id\n            );\n\n            if (isSelf || isSiblingGoal) {\n                g.destroy();\n\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    pushGoal(goal) {\n        goal.goal.parent = this.entity;\n        return this.goals.push(goal);\n    }\n\n    popGoal() {\n        return this.goals.pop().goal;\n    }\n\n    peekGoal() {\n        return this.goals[this.goals.length - 1].goal;\n    }\n}\n","export const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\nexport const INVALID = 'INVALID';\n","import { Component } from 'geotic';\nimport * as GoalEvaluator from '../../ai/GoalEvaluator';\n\nexport class Goal extends Component {\n    static properties = {\n        name: 'Bored',\n        originalIntent: '<Entity>',\n        parent: '<Entity>',\n        target: '<Entity>',\n        complete: false,\n        data: {},\n    };\n\n    isFinished() {\n        return GoalEvaluator.isFinished(this.parent, this);\n    }\n\n    takeAction() {\n        return GoalEvaluator.takeAction(this.parent, this);\n    }\n}\n","import * as GoalTypes from './GoalTypes';\n\nconst goalTypeMap = {};\n\nObject.values(GoalTypes).forEach((goalType) => {\n    goalTypeMap[goalType.name] = goalType;\n});\n\nconst getGoalType = (name) => {\n    const type = goalTypeMap[name];\n\n    if (!type) {\n        console.warn(`GoalType (${name}) not found!`);\n    }\n\n    return type;\n};\n\nexport const isFinished = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.isFinished(entity, goal);\n};\n\nexport const takeAction = (entity, goal) => {\n    const type = getGoalType(goal.name);\n\n    return type.takeAction(entity, goal);\n};\n","import { GoalType } from './GoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class BoredGoalType extends GoalType {\n    static name = 'Bored';\n\n    static isFinished = (entity, goal) => {\n        return false;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('boredom');\n\n        if (evt.data.goal) {\n            entity.brain.pushGoal(evt.data.goal);\n            entity.fireEvent('take-action');\n\n            return SUCCESS;\n        }\n\n        entity.fireEvent('consume-energy', 1000);\n\n        return SUCCESS;\n    };\n}\n","import ecs from '../../ecs';\nimport { FAILURE } from '../GoalActionResult';\n\nexport class GoalType {\n    static name = 'Unknown';\n\n    static isFinished(entity, goal) {\n        return false;\n    }\n\n    static takeAction(entity, goal) {\n        return FAILURE;\n    }\n\n    static createAsSubGoal(originalIntent, properties = {}) {\n        return this.create({\n            ...properties,\n            originalIntent: originalIntent.entity.id,\n        });\n    }\n\n    static create(properties = {}) {\n        return ecs.createPrefab('Goal', {\n            goal: {\n                name: this.name,\n                ...properties,\n            },\n        });\n    }\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class EatFoodGoalType extends GoalType {\n    static name = 'EatFood';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-eat-food', {\n            food: 10000,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { EatFoodGoalType } from './EatFoodGoalType';\nimport { SUCCESS } from '../GoalActionResult';\n\nexport class SatisfyHungerGoalType extends GoalType {\n    static name = 'SatisfyHunger';\n\n    static isFinished = (entity, goal) => {\n        return !entity.eater.isHungry;\n    };\n\n    static takeAction = (entity, goal) => {\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n        entity.brain.pushGoal(EatFoodGoalType.createAsSubGoal(goal));\n\n        entity.fireEvent('take-action');\n\n        return SUCCESS;\n    };\n}\n","import { GoalType } from './GoalType';\nimport { SUCCESS, FAILURE } from '../GoalActionResult';\n\nexport class MoveGoalType extends GoalType {\n    static name = 'Move';\n\n    static isFinished = (entity, goal) => {\n        return goal.complete;\n    };\n\n    static takeAction = (entity, goal) => {\n        const evt = entity.fireEvent('try-move', {\n            x: goal.data.x,\n            y: goal.data.y,\n        });\n\n        if (evt.handled) {\n            goal.complete = true;\n\n            return SUCCESS;\n        }\n\n        return FAILURE;\n    };\n}\n","import { Component } from 'geotic';\nimport { SatisfyHungerGoalType } from '../../ai/GoalTypes';\n\nexport class Eater extends Component {\n    static properties = {\n        hunger: 6000,\n    };\n\n    get isHungry() {\n        return this.hunger <= 3000;\n    }\n\n    onBoredom(evt) {\n        if (this.isHungry) {\n            evt.data.goal = SatisfyHungerGoalType.create();\n            evt.handle();\n        }\n    }\n\n    onTryEatFood(evt) {\n        if (Math.random() < 0.75) {\n            this.entity.fireEvent('log', 'eats some food');\n            this.hunger += evt.data.food;\n            this.entity.fireEvent('energy-consumed', 150);\n\n            evt.handle();\n        } else {\n            this.entity.fireEvent('log', 'fails to eat the food');\n        }\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Moniker extends Component {\n    static properties = {\n        name: 'Unknown',\n    };\n}\n","import { Component } from 'geotic';\nimport { Moniker } from './Moniker';\n\nexport class Logger extends Component {\n    get moniker() {\n        return this.entity.has(Moniker) ? this.entity.moniker.name : 'Unknown';\n    }\n\n    onLog(evt) {\n        console.log(`[${this.moniker}]`, evt.data);\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\n\nexport class Position extends Component {\n    static properties = {\n        x: 0,\n        y: 0,\n    };\n}\n","import { Component } from 'geotic';\nimport { MapLayer } from './MapLayer';\n\nexport class Map extends Component {\n    static properties = {\n        name: '',\n        width: 32,\n        height: 32,\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    idx(x, y) {\n        return y * this.width + x;\n    }\n\n    coord(idx) {\n        return idx % this.width, idx / this.width;\n    }\n\n    getLayer(name) {\n        return this.entity.get(MapLayer, name);\n    }\n}\n","import { Component } from 'geotic';\n\nexport class MapLayer extends Component {\n    static properties = {\n        mapEntity: '<Entity>',\n        name: '',\n        content: '<EntityArray>',\n    };\n\n    get map() {\n        return this.mapEntity.map;\n    }\n\n    getByIndex(idx) {\n        return content[idx];\n    }\n\n    get(x, y) {}\n}\n","import { Component } from 'geotic';\n\nexport class Glyph extends Component {\n    static properties = {\n        fg: '#fff',\n        bg: '',\n        char: '',\n    };\n}\n","import { Component } from 'geotic';\nimport { Position } from './Position';\nimport { Actor } from './Actor';\n\nexport class Legs extends Component {\n    onTryMove(evt) {\n        if (!this.entity.has(Position)) {\n            return;\n        }\n\n        if (this.entity.has(Actor) && !this.entity.actor.hasEnergy) {\n            return;\n        }\n\n        this.entity.position.x += evt.data.x;\n        this.entity.position.y += evt.data.y;\n        this.entity.fireEvent('energy-consumed', 750);\n\n        evt.handle();\n    }\n}\n","import { Component } from 'geotic';\nimport { DIR_Z } from '../../enums/Directions';\n\nexport class MoveCommand extends Component {\n    static properties = {\n        direction: DIR_Z,\n    };\n}\n","const directions = [\n    {\n        key: 0,\n        shortName: 'NW',\n        fullName: 'Northwest',\n        delta: {\n            x: -1,\n            y: -1,\n        },\n    },\n    {\n        key: 1,\n        shortName: 'N',\n        fullName: 'North',\n        delta: {\n            x: 0,\n            y: -1,\n        },\n    },\n    {\n        key: 2,\n        shortName: 'NE',\n        fullName: 'Northeast',\n        delta: {\n            x: 1,\n            y: -1,\n        },\n    },\n    {\n        key: 3,\n        shortName: 'W',\n        fullName: 'West',\n        delta: {\n            x: -1,\n            y: 0,\n        },\n    },\n    {\n        key: 4,\n        shortName: 'Z',\n        fullName: 'Here',\n        delta: {\n            x: 0,\n            y: 0,\n        },\n    },\n    {\n        key: 5,\n        shortName: 'E',\n        fullName: 'East',\n        delta: {\n            x: 1,\n            y: 0,\n        },\n    },\n    {\n        key: 6,\n        shortName: 'SW',\n        fullName: 'Southwest',\n        delta: {\n            x: -1,\n            y: 1,\n        },\n    },\n    {\n        key: 7,\n        shortName: 'S',\n        fullName: 'South',\n        delta: {\n            x: 0,\n            y: 1,\n        },\n    },\n    {\n        key: 8,\n        shortName: 'SE',\n        fullName: 'Southeast',\n        delta: {\n            x: 1,\n            y: 1,\n        },\n    },\n];\n\nexport const DIR_NW = 0;\nexport const DIR_N = 1;\nexport const DIR_NE = 2;\nexport const DIR_W = 3;\nexport const DIR_Z = 4;\nexport const DIR_E = 5;\nexport const DIR_SW = 6;\nexport const DIR_S = 7;\nexport const DIR_SE = 8;\n\nexport const shortName = (direction) => directions[direction].shortName;\n\nexport const fullName = (direction) => directions[direction].fullName;\n\nexport const delta = (direction) => directions[direction].delta;\n","import { Component } from 'geotic';\n\nexport class IsPlayer extends Component {}\n","import { Component } from 'geotic';\nimport { MoveGoalType } from '../../ai/GoalTypes';\nimport * as Directions from '../../enums/Directions';\n\nexport class Wandering extends Component {\n    onBoredom(evt) {\n        if (Math.random() < 0.75) {\n            const direction = Math.floor(Math.random() * 9);\n            const delta = Directions.delta(direction);\n\n            evt.data.goal = MoveGoalType.create({\n                data: delta,\n            });\n            evt.handle();\n        }\n    }\n}\n","import Renderer from './rendering/Renderer';\nimport InputController from './input/InputController';\nimport HungerSystem from '../systems/HungerSystem';\nimport ActionSystem from '../systems/ActionSystem';\nimport RenderSystem from '../systems/RenderSystem';\nimport MovementSystem from '../systems/MovementSystem';\nimport UISystem from '../systems/UISystem';\nimport MouseManager from './input/MouseManager';\nimport CommandManager from './input/CommandManager';\nimport { INPUT_DOMAIN_GAME } from './input/InputDomainType';\n\nexport default class Game {\n    constructor() {\n        this.renderer = new Renderer();\n        this.mouseManager = new MouseManager();\n        this.commandManager = new CommandManager();\n        this.inputController = new InputController(this);\n        this.hungerSystem = new HungerSystem(this);\n        this.actionSystem = new ActionSystem(this);\n        this.movementSystem = new MovementSystem(this);\n        this.renderSystem = new RenderSystem(this);\n        this.UISystem = new UISystem(this);\n    }\n\n    start() {\n        requestAnimationFrame(this.loop.bind(this));\n    }\n\n    loop(t) {\n        const dt = 0;\n\n        this.hungerSystem.update(dt);\n        this.actionSystem.update(dt);\n        this.movementSystem.update(dt);\n        this.renderSystem.update(dt);\n        this.UISystem.update(dt);\n\n        requestAnimationFrame(this.loop.bind(this));\n    }\n}\n","import { Display as RotDisplay } from 'rot-js';\n\nexport default class Renderer {\n    #rot = null;\n    #container = null;\n\n    width = 64;\n    height = 32;\n\n    constructor() {\n        RotDisplay.Rect.cache = true;\n        this.#rot = new RotDisplay({\n            width: this.width,\n            height: this.height,\n            fontSize: 18,\n            forceSquareRatio: false,\n            bg: '#1c171f',\n        });\n        this.attach();\n    }\n\n    attach() {\n        this.#container = document.body.appendChild(this.#rot.getContainer());\n    }\n\n    draw(x, y, char, fg, bg) {\n        this.#rot.draw(x, y, char, fg, bg);\n    }\n\n    drawText(x, y, string) {\n        this.#rot.drawText(x, y, string);\n    }\n\n    clear() {\n        this.#rot.clear();\n    }\n\n    getDOMContainer() {\n        return this.#container;\n    }\n\n    eventToPosition(e) {\n        return this.#rot.eventToPosition(e);\n    }\n}\n","export { default as RNG } from \"./rng.js\";\nexport { default as Display } from \"./display/display.js\";\nexport { default as StringGenerator } from \"./stringgenerator.js\";\nexport { default as EventQueue } from \"./eventqueue.js\";\nexport { default as Scheduler } from \"./scheduler/index.js\";\nexport { default as FOV } from \"./fov/index.js\";\nexport { default as Map } from \"./map/index.js\";\nexport { default as Noise } from \"./noise/index.js\";\nexport { default as Path } from \"./path/index.js\";\nexport { default as Engine } from \"./engine.js\";\nexport { default as Lighting } from \"./lighting.js\";\nexport { DEFAULT_WIDTH, DEFAULT_HEIGHT, DIRS, KEYS } from \"./constants.js\";\nimport * as util from \"./util.js\";\nexport const Util = util;\nimport * as color from \"./color.js\";\nexport const Color = color;\nimport * as text from \"./text.js\";\nexport const Text = text;\n","/**\n * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.\n * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.\n */\nconst FRAC = 2.3283064365386963e-10; /* 2^-32 */\nclass RNG {\n    constructor() {\n        this._seed = 0;\n        this._s0 = 0;\n        this._s1 = 0;\n        this._s2 = 0;\n        this._c = 0;\n    }\n    getSeed() { return this._seed; }\n    /**\n     * Seed the number generator\n     */\n    setSeed(seed) {\n        seed = (seed < 1 ? 1 / seed : seed);\n        this._seed = seed;\n        this._s0 = (seed >>> 0) * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s1 = seed * FRAC;\n        seed = (seed * 69069 + 1) >>> 0;\n        this._s2 = seed * FRAC;\n        this._c = 1;\n        return this;\n    }\n    /**\n     * @returns Pseudorandom value [0,1), uniformly distributed\n     */\n    getUniform() {\n        let t = 2091639 * this._s0 + this._c * FRAC;\n        this._s0 = this._s1;\n        this._s1 = this._s2;\n        this._c = t | 0;\n        this._s2 = t - this._c;\n        return this._s2;\n    }\n    /**\n     * @param lowerBound The lower end of the range to return a value from, inclusive\n     * @param upperBound The upper end of the range to return a value from, inclusive\n     * @returns Pseudorandom value [lowerBound, upperBound], using ROT.RNG.getUniform() to distribute the value\n     */\n    getUniformInt(lowerBound, upperBound) {\n        let max = Math.max(lowerBound, upperBound);\n        let min = Math.min(lowerBound, upperBound);\n        return Math.floor(this.getUniform() * (max - min + 1)) + min;\n    }\n    /**\n     * @param mean Mean value\n     * @param stddev Standard deviation. ~95% of the absolute values will be lower than 2*stddev.\n     * @returns A normally distributed pseudorandom value\n     */\n    getNormal(mean = 0, stddev = 1) {\n        let u, v, r;\n        do {\n            u = 2 * this.getUniform() - 1;\n            v = 2 * this.getUniform() - 1;\n            r = u * u + v * v;\n        } while (r > 1 || r == 0);\n        let gauss = u * Math.sqrt(-2 * Math.log(r) / r);\n        return mean + gauss * stddev;\n    }\n    /**\n     * @returns Pseudorandom value [1,100] inclusive, uniformly distributed\n     */\n    getPercentage() {\n        return 1 + Math.floor(this.getUniform() * 100);\n    }\n    /**\n     * @returns Randomly picked item, null when length=0\n     */\n    getItem(array) {\n        if (!array.length) {\n            return null;\n        }\n        return array[Math.floor(this.getUniform() * array.length)];\n    }\n    /**\n     * @returns New array with randomized items\n     */\n    shuffle(array) {\n        let result = [];\n        let clone = array.slice();\n        while (clone.length) {\n            let index = clone.indexOf(this.getItem(clone));\n            result.push(clone.splice(index, 1)[0]);\n        }\n        return result;\n    }\n    /**\n     * @param data key=whatever, value=weight (relative probability)\n     * @returns whatever\n     */\n    getWeightedValue(data) {\n        let total = 0;\n        for (let id in data) {\n            total += data[id];\n        }\n        let random = this.getUniform() * total;\n        let id, part = 0;\n        for (id in data) {\n            part += data[id];\n            if (random < part) {\n                return id;\n            }\n        }\n        // If by some floating-point annoyance we have\n        // random >= total, just return the last id.\n        return id;\n    }\n    /**\n     * Get RNG state. Useful for storing the state and re-setting it via setState.\n     * @returns Internal state\n     */\n    getState() { return [this._s0, this._s1, this._s2, this._c]; }\n    /**\n     * Set a previously retrieved state.\n     */\n    setState(state) {\n        this._s0 = state[0];\n        this._s1 = state[1];\n        this._s2 = state[2];\n        this._c = state[3];\n        return this;\n    }\n    /**\n     * Returns a cloned RNG\n     */\n    clone() {\n        let clone = new RNG();\n        return clone.setState(this.getState());\n    }\n}\nexport default new RNG().setSeed(Date.now());\n","import Hex from \"./hex.js\";\nimport Rect from \"./rect.js\";\nimport Tile from \"./tile.js\";\nimport TileGL from \"./tile-gl.js\";\nimport Term from \"./term.js\";\nimport * as Text from \"../text.js\";\nimport { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\nconst BACKENDS = {\n    \"hex\": Hex,\n    \"rect\": Rect,\n    \"tile\": Tile,\n    \"tile-gl\": TileGL,\n    \"term\": Term\n};\nconst DEFAULT_OPTIONS = {\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n    transpose: false,\n    layout: \"rect\",\n    fontSize: 15,\n    spacing: 1,\n    border: 0,\n    forceSquareRatio: false,\n    fontFamily: \"monospace\",\n    fontStyle: \"\",\n    fg: \"#ccc\",\n    bg: \"#000\",\n    tileWidth: 32,\n    tileHeight: 32,\n    tileMap: {},\n    tileSet: null,\n    tileColorize: false\n};\n/**\n * @class Visual map display\n */\nlet Display = /** @class */ (() => {\n    class Display {\n        constructor(options = {}) {\n            this._data = {};\n            this._dirty = false; // false = nothing, true = all, object = dirty cells\n            this._options = {};\n            options = Object.assign({}, DEFAULT_OPTIONS, options);\n            this.setOptions(options);\n            this.DEBUG = this.DEBUG.bind(this);\n            this._tick = this._tick.bind(this);\n            this._backend.schedule(this._tick);\n        }\n        /**\n         * Debug helper, ideal as a map generator callback. Always bound to this.\n         * @param {int} x\n         * @param {int} y\n         * @param {int} what\n         */\n        DEBUG(x, y, what) {\n            let colors = [this._options.bg, this._options.fg];\n            this.draw(x, y, null, null, colors[what % colors.length]);\n        }\n        /**\n         * Clear the whole display (cover it with background color)\n         */\n        clear() {\n            this._data = {};\n            this._dirty = true;\n        }\n        /**\n         * @see ROT.Display\n         */\n        setOptions(options) {\n            Object.assign(this._options, options);\n            if (options.width || options.height || options.fontSize || options.fontFamily || options.spacing || options.layout) {\n                if (options.layout) {\n                    let ctor = BACKENDS[options.layout];\n                    this._backend = new ctor();\n                }\n                this._backend.setOptions(this._options);\n                this._dirty = true;\n            }\n            return this;\n        }\n        /**\n         * Returns currently set options\n         */\n        getOptions() { return this._options; }\n        /**\n         * Returns the DOM node of this display\n         */\n        getContainer() { return this._backend.getContainer(); }\n        /**\n         * Compute the maximum width/height to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int[2]} cellWidth,cellHeight\n         */\n        computeSize(availWidth, availHeight) {\n            return this._backend.computeSize(availWidth, availHeight);\n        }\n        /**\n         * Compute the maximum font size to fit into a set of given constraints\n         * @param {int} availWidth Maximum allowed pixel width\n         * @param {int} availHeight Maximum allowed pixel height\n         * @returns {int} fontSize\n         */\n        computeFontSize(availWidth, availHeight) {\n            return this._backend.computeFontSize(availWidth, availHeight);\n        }\n        computeTileSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._options.width);\n            let height = Math.floor(availHeight / this._options.height);\n            return [width, height];\n        }\n        /**\n         * Convert a DOM event (mouse or touch) to map coordinates. Uses first touch for multi-touch.\n         * @param {Event} e event\n         * @returns {int[2]} -1 for values outside of the canvas\n         */\n        eventToPosition(e) {\n            let x, y;\n            if (\"touches\" in e) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n            else {\n                x = e.clientX;\n                y = e.clientY;\n            }\n            return this._backend.eventToPosition(x, y);\n        }\n        /**\n         * @param {int} x\n         * @param {int} y\n         * @param {string || string[]} ch One or more chars (will be overlapping themselves)\n         * @param {string} [fg] foreground color\n         * @param {string} [bg] background color\n         */\n        draw(x, y, ch, fg, bg) {\n            if (!fg) {\n                fg = this._options.fg;\n            }\n            if (!bg) {\n                bg = this._options.bg;\n            }\n            let key = `${x},${y}`;\n            this._data[key] = [x, y, ch, fg, bg];\n            if (this._dirty === true) {\n                return;\n            } // will already redraw everything \n            if (!this._dirty) {\n                this._dirty = {};\n            } // first!\n            this._dirty[key] = true;\n        }\n        /**\n         * Draws a text at given position. Optionally wraps at a maximum length. Currently does not work with hex layout.\n         * @param {int} x\n         * @param {int} y\n         * @param {string} text May contain color/background format specifiers, %c{name}/%b{name}, both optional. %c{}/%b{} resets to default.\n         * @param {int} [maxWidth] wrap at what width?\n         * @returns {int} lines drawn\n         */\n        drawText(x, y, text, maxWidth) {\n            let fg = null;\n            let bg = null;\n            let cx = x;\n            let cy = y;\n            let lines = 1;\n            if (!maxWidth) {\n                maxWidth = this._options.width - x;\n            }\n            let tokens = Text.tokenize(text, maxWidth);\n            while (tokens.length) { // interpret tokenized opcode stream\n                let token = tokens.shift();\n                switch (token.type) {\n                    case Text.TYPE_TEXT:\n                        let isSpace = false, isPrevSpace = false, isFullWidth = false, isPrevFullWidth = false;\n                        for (let i = 0; i < token.value.length; i++) {\n                            let cc = token.value.charCodeAt(i);\n                            let c = token.value.charAt(i);\n                            if (this._options.layout === \"term\") {\n                                let cch = cc >> 8;\n                                let isCJK = cch === 0x11 || (cch >= 0x2e && cch <= 0x9f) || (cch >= 0xac && cch <= 0xd7) || (cc >= 0xA960 && cc <= 0xA97F);\n                                if (isCJK) {\n                                    this.draw(cx + 0, cy, c, fg, bg);\n                                    this.draw(cx + 1, cy, \"\\t\", fg, bg);\n                                    cx += 2;\n                                    continue;\n                                }\n                            }\n                            // Assign to `true` when the current char is full-width.\n                            isFullWidth = (cc > 0xff00 && cc < 0xff61) || (cc > 0xffdc && cc < 0xffe8) || cc > 0xffee;\n                            // Current char is space, whatever full-width or half-width both are OK.\n                            isSpace = (c.charCodeAt(0) == 0x20 || c.charCodeAt(0) == 0x3000);\n                            // The previous char is full-width and\n                            // current char is nether half-width nor a space.\n                            if (isPrevFullWidth && !isFullWidth && !isSpace) {\n                                cx++;\n                            } // add an extra position\n                            // The current char is full-width and\n                            // the previous char is not a space.\n                            if (isFullWidth && !isPrevSpace) {\n                                cx++;\n                            } // add an extra position\n                            this.draw(cx++, cy, c, fg, bg);\n                            isPrevSpace = isSpace;\n                            isPrevFullWidth = isFullWidth;\n                        }\n                        break;\n                    case Text.TYPE_FG:\n                        fg = token.value || null;\n                        break;\n                    case Text.TYPE_BG:\n                        bg = token.value || null;\n                        break;\n                    case Text.TYPE_NEWLINE:\n                        cx = x;\n                        cy++;\n                        lines++;\n                        break;\n                }\n            }\n            return lines;\n        }\n        /**\n         * Timer tick: update dirty parts\n         */\n        _tick() {\n            this._backend.schedule(this._tick);\n            if (!this._dirty) {\n                return;\n            }\n            if (this._dirty === true) { // draw all\n                this._backend.clear();\n                for (let id in this._data) {\n                    this._draw(id, false);\n                } // redraw cached data \n            }\n            else { // draw only dirty \n                for (let key in this._dirty) {\n                    this._draw(key, true);\n                }\n            }\n            this._dirty = false;\n        }\n        /**\n         * @param {string} key What to draw\n         * @param {bool} clearBefore Is it necessary to clean before?\n         */\n        _draw(key, clearBefore) {\n            let data = this._data[key];\n            if (data[4] != this._options.bg) {\n                clearBefore = true;\n            }\n            this._backend.draw(data, clearBefore);\n        }\n    }\n    Display.Rect = Rect;\n    Display.Hex = Hex;\n    Display.Tile = Tile;\n    Display.TileGL = TileGL;\n    Display.Term = Term;\n    return Display;\n})();\nexport default Display;\n","import Canvas from \"./canvas.js\";\nimport { mod } from \"../util.js\";\n/**\n * @class Hexagonal backend\n * @private\n */\nexport default class Hex extends Canvas {\n    constructor() {\n        super();\n        this._spacingX = 0;\n        this._spacingY = 0;\n        this._hexSize = 0;\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let px = [\n            (x + 1) * this._spacingX,\n            y * this._spacingY + this._hexSize\n        ];\n        if (this._options.transpose) {\n            px.reverse();\n        }\n        if (clearBefore) {\n            this._ctx.fillStyle = bg;\n            this._fill(px[0], px[1]);\n        }\n        if (!ch) {\n            return;\n        }\n        this._ctx.fillStyle = fg;\n        let chars = [].concat(ch);\n        for (let i = 0; i < chars.length; i++) {\n            this._ctx.fillText(chars[i], px[0], Math.ceil(px[1]));\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let width = Math.floor(availWidth / this._spacingX) - 1;\n        let height = Math.floor((availHeight - 2 * this._hexSize) / this._spacingY + 1);\n        return [width, height];\n    }\n    computeFontSize(availWidth, availHeight) {\n        if (this._options.transpose) {\n            availWidth += availHeight;\n            availHeight = availWidth - availHeight;\n            availWidth -= availHeight;\n        }\n        let hexSizeWidth = 2 * availWidth / ((this._options.width + 1) * Math.sqrt(3)) - 1;\n        let hexSizeHeight = availHeight / (2 + 1.5 * (this._options.height - 1));\n        let hexSize = Math.min(hexSizeWidth, hexSizeHeight);\n        // compute char ratio\n        let oldFont = this._ctx.font;\n        this._ctx.font = \"100px \" + this._options.fontFamily;\n        let width = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._ctx.font = oldFont;\n        let ratio = width / 100;\n        hexSize = Math.floor(hexSize) + 1; // closest larger hexSize\n        // FIXME char size computation does not respect transposed hexes\n        let fontSize = 2 * hexSize / (this._options.spacing * (1 + ratio / Math.sqrt(3)));\n        // closest smaller fontSize\n        return Math.ceil(fontSize) - 1;\n    }\n    _normalizedEventToPosition(x, y) {\n        let nodeSize;\n        if (this._options.transpose) {\n            x += y;\n            y = x - y;\n            x -= y;\n            nodeSize = this._ctx.canvas.width;\n        }\n        else {\n            nodeSize = this._ctx.canvas.height;\n        }\n        let size = nodeSize / this._options.height;\n        y = Math.floor(y / size);\n        if (mod(y, 2)) { /* odd row */\n            x -= this._spacingX;\n            x = 1 + 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        else {\n            x = 2 * Math.floor(x / (2 * this._spacingX));\n        }\n        return [x, y];\n    }\n    /**\n     * Arguments are pixel values. If \"transposed\" mode is enabled, then these two are already swapped.\n     */\n    _fill(cx, cy) {\n        let a = this._hexSize;\n        let b = this._options.border;\n        const ctx = this._ctx;\n        ctx.beginPath();\n        if (this._options.transpose) {\n            ctx.moveTo(cx - a + b, cy);\n            ctx.lineTo(cx - a / 2 + b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a / 2 - b, cy + this._spacingX - b);\n            ctx.lineTo(cx + a - b, cy);\n            ctx.lineTo(cx + a / 2 - b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a / 2 + b, cy - this._spacingX + b);\n            ctx.lineTo(cx - a + b, cy);\n        }\n        else {\n            ctx.moveTo(cx, cy - a + b);\n            ctx.lineTo(cx + this._spacingX - b, cy - a / 2 + b);\n            ctx.lineTo(cx + this._spacingX - b, cy + a / 2 - b);\n            ctx.lineTo(cx, cy + a - b);\n            ctx.lineTo(cx - this._spacingX + b, cy + a / 2 - b);\n            ctx.lineTo(cx - this._spacingX + b, cy - a / 2 + b);\n            ctx.lineTo(cx, cy - a + b);\n        }\n        ctx.fill();\n    }\n    _updateSize() {\n        const opts = this._options;\n        const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n        this._hexSize = Math.floor(opts.spacing * (opts.fontSize + charWidth / Math.sqrt(3)) / 2);\n        this._spacingX = this._hexSize * Math.sqrt(3) / 2;\n        this._spacingY = this._hexSize * 1.5;\n        let xprop;\n        let yprop;\n        if (opts.transpose) {\n            xprop = \"height\";\n            yprop = \"width\";\n        }\n        else {\n            xprop = \"width\";\n            yprop = \"height\";\n        }\n        this._ctx.canvas[xprop] = Math.ceil((opts.width + 1) * this._spacingX);\n        this._ctx.canvas[yprop] = Math.ceil((opts.height - 1) * this._spacingY + 2 * this._hexSize);\n    }\n}\n","import Backend from \"./backend.js\";\nexport default class Canvas extends Backend {\n    constructor() {\n        super();\n        this._ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._ctx.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        const style = (opts.fontStyle ? `${opts.fontStyle} ` : ``);\n        const font = `${style} ${opts.fontSize}px ${opts.fontFamily}`;\n        this._ctx.font = font;\n        this._updateSize();\n        this._ctx.font = font;\n        this._ctx.textAlign = \"center\";\n        this._ctx.textBaseline = \"middle\";\n    }\n    clear() {\n        this._ctx.fillStyle = this._options.bg;\n        this._ctx.fillRect(0, 0, this._ctx.canvas.width, this._ctx.canvas.height);\n    }\n    eventToPosition(x, y) {\n        let canvas = this._ctx.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n}\n","/**\n * @class Abstract display backend module\n * @private\n */\nexport default class Backend {\n    getContainer() { return null; }\n    setOptions(options) { this._options = options; }\n}\n","/**\n * Always positive modulus\n * @param x Operand\n * @param n Modulus\n * @returns x modulo n\n */\nexport function mod(x, n) {\n    return (x % n + n) % n;\n}\nexport function clamp(val, min = 0, max = 1) {\n    if (val < min)\n        return min;\n    if (val > max)\n        return max;\n    return val;\n}\nexport function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n/**\n * Format a string in a flexible way. Scans for %s strings and replaces them with arguments. List of patterns is modifiable via String.format.map.\n * @param {string} template\n * @param {any} [argv]\n */\nexport function format(template, ...args) {\n    let map = format.map;\n    let replacer = function (match, group1, group2, index) {\n        if (template.charAt(index - 1) == \"%\") {\n            return match.substring(1);\n        }\n        if (!args.length) {\n            return match;\n        }\n        let obj = args[0];\n        let group = group1 || group2;\n        let parts = group.split(\",\");\n        let name = parts.shift() || \"\";\n        let method = map[name.toLowerCase()];\n        if (!method) {\n            return match;\n        }\n        obj = args.shift();\n        let replaced = obj[method].apply(obj, parts);\n        let first = name.charAt(0);\n        if (first != first.toLowerCase()) {\n            replaced = capitalize(replaced);\n        }\n        return replaced;\n    };\n    return template.replace(/%(?:([a-z]+)|(?:{([^}]+)}))/gi, replacer);\n}\nformat.map = {\n    \"s\": \"toString\"\n};\n","import Canvas from \"./canvas.js\";\n/**\n * @class Rectangular backend\n * @private\n */\nlet Rect = /** @class */ (() => {\n    class Rect extends Canvas {\n        constructor() {\n            super();\n            this._spacingX = 0;\n            this._spacingY = 0;\n            this._canvasCache = {};\n        }\n        setOptions(options) {\n            super.setOptions(options);\n            this._canvasCache = {};\n        }\n        draw(data, clearBefore) {\n            if (Rect.cache) {\n                this._drawWithCache(data);\n            }\n            else {\n                this._drawNoCache(data, clearBefore);\n            }\n        }\n        _drawWithCache(data) {\n            let [x, y, ch, fg, bg] = data;\n            let hash = \"\" + ch + fg + bg;\n            let canvas;\n            if (hash in this._canvasCache) {\n                canvas = this._canvasCache[hash];\n            }\n            else {\n                let b = this._options.border;\n                canvas = document.createElement(\"canvas\");\n                let ctx = canvas.getContext(\"2d\");\n                canvas.width = this._spacingX;\n                canvas.height = this._spacingY;\n                ctx.fillStyle = bg;\n                ctx.fillRect(b, b, canvas.width - b, canvas.height - b);\n                if (ch) {\n                    ctx.fillStyle = fg;\n                    ctx.font = this._ctx.font;\n                    ctx.textAlign = \"center\";\n                    ctx.textBaseline = \"middle\";\n                    let chars = [].concat(ch);\n                    for (let i = 0; i < chars.length; i++) {\n                        ctx.fillText(chars[i], this._spacingX / 2, Math.ceil(this._spacingY / 2));\n                    }\n                }\n                this._canvasCache[hash] = canvas;\n            }\n            this._ctx.drawImage(canvas, x * this._spacingX, y * this._spacingY);\n        }\n        _drawNoCache(data, clearBefore) {\n            let [x, y, ch, fg, bg] = data;\n            if (clearBefore) {\n                let b = this._options.border;\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * this._spacingX + b, y * this._spacingY + b, this._spacingX - b, this._spacingY - b);\n            }\n            if (!ch) {\n                return;\n            }\n            this._ctx.fillStyle = fg;\n            let chars = [].concat(ch);\n            for (let i = 0; i < chars.length; i++) {\n                this._ctx.fillText(chars[i], (x + 0.5) * this._spacingX, Math.ceil((y + 0.5) * this._spacingY));\n            }\n        }\n        computeSize(availWidth, availHeight) {\n            let width = Math.floor(availWidth / this._spacingX);\n            let height = Math.floor(availHeight / this._spacingY);\n            return [width, height];\n        }\n        computeFontSize(availWidth, availHeight) {\n            let boxWidth = Math.floor(availWidth / this._options.width);\n            let boxHeight = Math.floor(availHeight / this._options.height);\n            /* compute char ratio */\n            let oldFont = this._ctx.font;\n            this._ctx.font = \"100px \" + this._options.fontFamily;\n            let width = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._ctx.font = oldFont;\n            let ratio = width / 100;\n            let widthFraction = ratio * boxHeight / boxWidth;\n            if (widthFraction > 1) { /* too wide with current aspect ratio */\n                boxHeight = Math.floor(boxHeight / widthFraction);\n            }\n            return Math.floor(boxHeight / this._options.spacing);\n        }\n        _normalizedEventToPosition(x, y) {\n            return [Math.floor(x / this._spacingX), Math.floor(y / this._spacingY)];\n        }\n        _updateSize() {\n            const opts = this._options;\n            const charWidth = Math.ceil(this._ctx.measureText(\"W\").width);\n            this._spacingX = Math.ceil(opts.spacing * charWidth);\n            this._spacingY = Math.ceil(opts.spacing * opts.fontSize);\n            if (opts.forceSquareRatio) {\n                this._spacingX = this._spacingY = Math.max(this._spacingX, this._spacingY);\n            }\n            this._ctx.canvas.width = opts.width * this._spacingX;\n            this._ctx.canvas.height = opts.height * this._spacingY;\n        }\n    }\n    Rect.cache = false;\n    return Rect;\n})();\nexport default Rect;\n","import Canvas from \"./canvas.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class Tile extends Canvas {\n    constructor() {\n        super();\n        this._colorCanvas = document.createElement(\"canvas\");\n    }\n    draw(data, clearBefore) {\n        let [x, y, ch, fg, bg] = data;\n        let tileWidth = this._options.tileWidth;\n        let tileHeight = this._options.tileHeight;\n        if (clearBefore) {\n            if (this._options.tileColorize) {\n                this._ctx.clearRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else {\n                this._ctx.fillStyle = bg;\n                this._ctx.fillRect(x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let fgs = [].concat(fg);\n        let bgs = [].concat(bg);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            if (this._options.tileColorize) { // apply colorization\n                let canvas = this._colorCanvas;\n                let context = canvas.getContext(\"2d\");\n                context.globalCompositeOperation = \"source-over\";\n                context.clearRect(0, 0, tileWidth, tileHeight);\n                let fg = fgs[i];\n                let bg = bgs[i];\n                context.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, 0, 0, tileWidth, tileHeight);\n                if (fg != \"transparent\") {\n                    context.fillStyle = fg;\n                    context.globalCompositeOperation = \"source-atop\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                if (bg != \"transparent\") {\n                    context.fillStyle = bg;\n                    context.globalCompositeOperation = \"destination-over\";\n                    context.fillRect(0, 0, tileWidth, tileHeight);\n                }\n                this._ctx.drawImage(canvas, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n            else { // no colorizing, easy\n                this._ctx.drawImage(this._options.tileSet, tile[0], tile[1], tileWidth, tileHeight, x * tileWidth, y * tileHeight, tileWidth, tileHeight);\n            }\n        }\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const opts = this._options;\n        this._ctx.canvas.width = opts.width * opts.tileWidth;\n        this._ctx.canvas.height = opts.height * opts.tileHeight;\n        this._colorCanvas.width = opts.tileWidth;\n        this._colorCanvas.height = opts.tileHeight;\n    }\n}\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\n/**\n * @class Tile backend\n * @private\n */\nexport default class TileGL extends Backend {\n    constructor() {\n        super();\n        this._uniforms = {};\n        try {\n            this._gl = this._initWebGL();\n        }\n        catch (e) {\n            alert(e.message);\n        }\n    }\n    static isSupported() {\n        return !!document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n    }\n    schedule(cb) { requestAnimationFrame(cb); }\n    getContainer() { return this._gl.canvas; }\n    setOptions(opts) {\n        super.setOptions(opts);\n        this._updateSize();\n        let tileSet = this._options.tileSet;\n        if (tileSet && \"complete\" in tileSet && !tileSet.complete) {\n            tileSet.addEventListener(\"load\", () => this._updateTexture(tileSet));\n        }\n        else {\n            this._updateTexture(tileSet);\n        }\n    }\n    draw(data, clearBefore) {\n        const gl = this._gl;\n        const opts = this._options;\n        let [x, y, ch, fg, bg] = data;\n        let scissorY = gl.canvas.height - (y + 1) * opts.tileHeight;\n        gl.scissor(x * opts.tileWidth, scissorY, opts.tileWidth, opts.tileHeight);\n        if (clearBefore) {\n            if (opts.tileColorize) {\n                gl.clearColor(0, 0, 0, 0);\n            }\n            else {\n                gl.clearColor(...parseColor(bg));\n            }\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n        if (!ch) {\n            return;\n        }\n        let chars = [].concat(ch);\n        let bgs = [].concat(bg);\n        let fgs = [].concat(fg);\n        gl.uniform2fv(this._uniforms[\"targetPosRel\"], [x, y]);\n        for (let i = 0; i < chars.length; i++) {\n            let tile = this._options.tileMap[chars[i]];\n            if (!tile) {\n                throw new Error(`Char \"${chars[i]}\" not found in tileMap`);\n            }\n            gl.uniform1f(this._uniforms[\"colorize\"], opts.tileColorize ? 1 : 0);\n            gl.uniform2fv(this._uniforms[\"tilesetPosAbs\"], tile);\n            if (opts.tileColorize) {\n                gl.uniform4fv(this._uniforms[\"tint\"], parseColor(fgs[i]));\n                gl.uniform4fv(this._uniforms[\"bg\"], parseColor(bgs[i]));\n            }\n            gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n        }\n        /*\n        \n        \n                for (let i=0;i<chars.length;i++) {\n        \n                    if (this._options.tileColorize) { // apply colorization\n                        let canvas = this._colorCanvas;\n                        let context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n                        context.globalCompositeOperation = \"source-over\";\n                        context.clearRect(0, 0, tileWidth, tileHeight);\n        \n                        let fg = fgs[i];\n                        let bg = bgs[i];\n        \n                        context.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            0, 0, tileWidth, tileHeight\n                        );\n        \n                        if (fg != \"transparent\") {\n                            context.fillStyle = fg;\n                            context.globalCompositeOperation = \"source-atop\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        if (bg != \"transparent\") {\n                            context.fillStyle = bg;\n                            context.globalCompositeOperation = \"destination-over\";\n                            context.fillRect(0, 0, tileWidth, tileHeight);\n                        }\n        \n                        this._ctx.drawImage(canvas, x*tileWidth, y*tileHeight, tileWidth, tileHeight);\n                    } else { // no colorizing, easy\n                        this._ctx.drawImage(\n                            this._options.tileSet!,\n                            tile[0], tile[1], tileWidth, tileHeight,\n                            x*tileWidth, y*tileHeight, tileWidth, tileHeight\n                        );\n                    }\n                }\n        \n        */\n    }\n    clear() {\n        const gl = this._gl;\n        gl.clearColor(...parseColor(this._options.bg));\n        gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    }\n    computeSize(availWidth, availHeight) {\n        let width = Math.floor(availWidth / this._options.tileWidth);\n        let height = Math.floor(availHeight / this._options.tileHeight);\n        return [width, height];\n    }\n    computeFontSize() {\n        throw new Error(\"Tile backend does not understand font size\");\n    }\n    eventToPosition(x, y) {\n        let canvas = this._gl.canvas;\n        let rect = canvas.getBoundingClientRect();\n        x -= rect.left;\n        y -= rect.top;\n        x *= canvas.width / rect.width;\n        y *= canvas.height / rect.height;\n        if (x < 0 || y < 0 || x >= canvas.width || y >= canvas.height) {\n            return [-1, -1];\n        }\n        return this._normalizedEventToPosition(x, y);\n    }\n    _initWebGL() {\n        let gl = document.createElement(\"canvas\").getContext(\"webgl2\", { preserveDrawingBuffer: true });\n        window.gl = gl;\n        let program = createProgram(gl, VS, FS);\n        gl.useProgram(program);\n        createQuad(gl);\n        UNIFORMS.forEach(name => this._uniforms[name] = gl.getUniformLocation(program, name));\n        this._program = program;\n        gl.enable(gl.BLEND);\n        gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.SCISSOR_TEST);\n        return gl;\n    }\n    _normalizedEventToPosition(x, y) {\n        return [Math.floor(x / this._options.tileWidth), Math.floor(y / this._options.tileHeight)];\n    }\n    _updateSize() {\n        const gl = this._gl;\n        const opts = this._options;\n        const canvasSize = [opts.width * opts.tileWidth, opts.height * opts.tileHeight];\n        gl.canvas.width = canvasSize[0];\n        gl.canvas.height = canvasSize[1];\n        gl.viewport(0, 0, canvasSize[0], canvasSize[1]);\n        gl.uniform2fv(this._uniforms[\"tileSize\"], [opts.tileWidth, opts.tileHeight]);\n        gl.uniform2fv(this._uniforms[\"targetSize\"], canvasSize);\n    }\n    _updateTexture(tileSet) {\n        createTexture(this._gl, tileSet);\n    }\n}\nconst UNIFORMS = [\"targetPosRel\", \"tilesetPosAbs\", \"tileSize\", \"targetSize\", \"colorize\", \"bg\", \"tint\"];\nconst VS = `\n#version 300 es\n\nin vec2 tilePosRel;\nout vec2 tilesetPosPx;\n\nuniform vec2 tilesetPosAbs;\nuniform vec2 tileSize;\nuniform vec2 targetSize;\nuniform vec2 targetPosRel;\n\nvoid main() {\n\tvec2 targetPosPx = (targetPosRel + tilePosRel) * tileSize;\n\tvec2 targetPosNdc = ((targetPosPx / targetSize)-0.5)*2.0;\n\ttargetPosNdc.y *= -1.0;\n\n\tgl_Position = vec4(targetPosNdc, 0.0, 1.0);\n\ttilesetPosPx = tilesetPosAbs + tilePosRel * tileSize;\n}`.trim();\nconst FS = `\n#version 300 es\nprecision highp float;\n\nin vec2 tilesetPosPx;\nout vec4 fragColor;\nuniform sampler2D image;\nuniform bool colorize;\nuniform vec4 bg;\nuniform vec4 tint;\n\nvoid main() {\n\tfragColor = vec4(0, 0, 0, 1);\n\n\tvec4 texel = texelFetch(image, ivec2(tilesetPosPx), 0);\n\n\tif (colorize) {\n\t\ttexel.rgb = tint.a * tint.rgb + (1.0-tint.a) * texel.rgb;\n\t\tfragColor.rgb = texel.a*texel.rgb + (1.0-texel.a)*bg.rgb;\n\t\tfragColor.a = texel.a + (1.0-texel.a)*bg.a;\n\t} else {\n\t\tfragColor = texel;\n\t}\n}`.trim();\nfunction createProgram(gl, vss, fss) {\n    const vs = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vs, vss);\n    gl.compileShader(vs);\n    if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(vs) || \"\");\n    }\n    const fs = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fs, fss);\n    gl.compileShader(fs);\n    if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        throw new Error(gl.getShaderInfoLog(fs) || \"\");\n    }\n    const p = gl.createProgram();\n    gl.attachShader(p, vs);\n    gl.attachShader(p, fs);\n    gl.linkProgram(p);\n    if (!gl.getProgramParameter(p, gl.LINK_STATUS)) {\n        throw new Error(gl.getProgramInfoLog(p) || \"\");\n    }\n    return p;\n}\nfunction createQuad(gl) {\n    const pos = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n    const buf = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buf);\n    gl.bufferData(gl.ARRAY_BUFFER, pos, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(0);\n    gl.vertexAttribPointer(0, 2, gl.FLOAT, false, 0, 0);\n}\nfunction createTexture(gl, data) {\n    let t = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, t);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 0);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return t;\n}\nlet colorCache = {};\nfunction parseColor(color) {\n    if (!(color in colorCache)) {\n        let parsed;\n        if (color == \"transparent\") {\n            parsed = [0, 0, 0, 0];\n        }\n        else if (color.indexOf(\"rgba\") > -1) {\n            parsed = (color.match(/[\\d.]+/g) || []).map(Number);\n            for (let i = 0; i < 3; i++) {\n                parsed[i] = parsed[i] / 255;\n            }\n        }\n        else {\n            parsed = Color.fromString(color).map($ => $ / 255);\n            parsed.push(1);\n        }\n        colorCache[color] = parsed;\n    }\n    return colorCache[color];\n}\n","import { clamp } from \"./util.js\";\nimport RNG from \"./rng.js\";\nexport function fromString(str) {\n    let cached, r;\n    if (str in CACHE) {\n        cached = CACHE[str];\n    }\n    else {\n        if (str.charAt(0) == \"#\") { // hex rgb\n            let matched = str.match(/[0-9a-f]/gi) || [];\n            let values = matched.map((x) => parseInt(x, 16));\n            if (values.length == 3) {\n                cached = values.map((x) => x * 17);\n            }\n            else {\n                for (let i = 0; i < 3; i++) {\n                    values[i + 1] += 16 * values[i];\n                    values.splice(i, 1);\n                }\n                cached = values;\n            }\n        }\n        else if ((r = str.match(/rgb\\(([0-9, ]+)\\)/i))) { // decimal rgb\n            cached = r[1].split(/\\s*,\\s*/).map((x) => parseInt(x));\n        }\n        else { // html name\n            cached = [0, 0, 0];\n        }\n        CACHE[str] = cached;\n    }\n    return cached.slice();\n}\n/**\n * Add two or more colors\n */\nexport function add(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] += colors[j][i];\n        }\n    }\n    return result;\n}\n/**\n * Add two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function add_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] += colors[j][i];\n        }\n    }\n    return color1;\n}\n/**\n * Multiply (mix) two or more colors\n */\nexport function multiply(color1, ...colors) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            result[i] *= colors[j][i] / 255;\n        }\n        result[i] = Math.round(result[i]);\n    }\n    return result;\n}\n/**\n * Multiply (mix) two or more colors, MODIFIES FIRST ARGUMENT\n */\nexport function multiply_(color1, ...colors) {\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < colors.length; j++) {\n            color1[i] *= colors[j][i] / 255;\n        }\n        color1[i] = Math.round(color1[i]);\n    }\n    return color1;\n}\n/**\n * Interpolate (blend) two colors with a given factor\n */\nexport function interpolate(color1, color2, factor = 0.5) {\n    let result = color1.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n    }\n    return result;\n}\nexport const lerp = interpolate;\n/**\n * Interpolate (blend) two colors with a given factor in HSL mode\n */\nexport function interpolateHSL(color1, color2, factor = 0.5) {\n    let hsl1 = rgb2hsl(color1);\n    let hsl2 = rgb2hsl(color2);\n    for (let i = 0; i < 3; i++) {\n        hsl1[i] += factor * (hsl2[i] - hsl1[i]);\n    }\n    return hsl2rgb(hsl1);\n}\nexport const lerpHSL = interpolateHSL;\n/**\n * Create a new random color based on this one\n * @param color\n * @param diff Set of standard deviations\n */\nexport function randomize(color, diff) {\n    if (!(diff instanceof Array)) {\n        diff = Math.round(RNG.getNormal(0, diff));\n    }\n    let result = color.slice();\n    for (let i = 0; i < 3; i++) {\n        result[i] += (diff instanceof Array ? Math.round(RNG.getNormal(0, diff[i])) : diff);\n    }\n    return result;\n}\n/**\n * Converts an RGB color value to HSL. Expects 0..255 inputs, produces 0..1 outputs.\n */\nexport function rgb2hsl(color) {\n    let r = color[0] / 255;\n    let g = color[1] / 255;\n    let b = color[2] / 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h = 0, s, l = (max + min) / 2;\n    if (max == min) {\n        s = 0; // achromatic\n    }\n    else {\n        let d = max - min;\n        s = (l > 0.5 ? d / (2 - max - min) : d / (max + min));\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n        }\n        h /= 6;\n    }\n    return [h, s, l];\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\n/**\n * Converts an HSL color value to RGB. Expects 0..1 inputs, produces 0..255 outputs.\n */\nexport function hsl2rgb(color) {\n    let l = color[2];\n    if (color[1] == 0) {\n        l = Math.round(l * 255);\n        return [l, l, l];\n    }\n    else {\n        let s = color[1];\n        let q = (l < 0.5 ? l * (1 + s) : l + s - l * s);\n        let p = 2 * l - q;\n        let r = hue2rgb(p, q, color[0] + 1 / 3);\n        let g = hue2rgb(p, q, color[0]);\n        let b = hue2rgb(p, q, color[0] - 1 / 3);\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n}\nexport function toRGB(color) {\n    let clamped = color.map(x => clamp(x, 0, 255));\n    return `rgb(${clamped.join(\",\")})`;\n}\nexport function toHex(color) {\n    let clamped = color.map(x => clamp(x, 0, 255).toString(16).padStart(2, \"0\"));\n    return `#${clamped.join(\"\")}`;\n}\nconst CACHE = {\n    \"black\": [0, 0, 0],\n    \"navy\": [0, 0, 128],\n    \"darkblue\": [0, 0, 139],\n    \"mediumblue\": [0, 0, 205],\n    \"blue\": [0, 0, 255],\n    \"darkgreen\": [0, 100, 0],\n    \"green\": [0, 128, 0],\n    \"teal\": [0, 128, 128],\n    \"darkcyan\": [0, 139, 139],\n    \"deepskyblue\": [0, 191, 255],\n    \"darkturquoise\": [0, 206, 209],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"lime\": [0, 255, 0],\n    \"springgreen\": [0, 255, 127],\n    \"aqua\": [0, 255, 255],\n    \"cyan\": [0, 255, 255],\n    \"midnightblue\": [25, 25, 112],\n    \"dodgerblue\": [30, 144, 255],\n    \"forestgreen\": [34, 139, 34],\n    \"seagreen\": [46, 139, 87],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"limegreen\": [50, 205, 50],\n    \"mediumseagreen\": [60, 179, 113],\n    \"turquoise\": [64, 224, 208],\n    \"royalblue\": [65, 105, 225],\n    \"steelblue\": [70, 130, 180],\n    \"darkslateblue\": [72, 61, 139],\n    \"mediumturquoise\": [72, 209, 204],\n    \"indigo\": [75, 0, 130],\n    \"darkolivegreen\": [85, 107, 47],\n    \"cadetblue\": [95, 158, 160],\n    \"cornflowerblue\": [100, 149, 237],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"slateblue\": [106, 90, 205],\n    \"olivedrab\": [107, 142, 35],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"mediumslateblue\": [123, 104, 238],\n    \"lawngreen\": [124, 252, 0],\n    \"chartreuse\": [127, 255, 0],\n    \"aquamarine\": [127, 255, 212],\n    \"maroon\": [128, 0, 0],\n    \"purple\": [128, 0, 128],\n    \"olive\": [128, 128, 0],\n    \"gray\": [128, 128, 128],\n    \"grey\": [128, 128, 128],\n    \"skyblue\": [135, 206, 235],\n    \"lightskyblue\": [135, 206, 250],\n    \"blueviolet\": [138, 43, 226],\n    \"darkred\": [139, 0, 0],\n    \"darkmagenta\": [139, 0, 139],\n    \"saddlebrown\": [139, 69, 19],\n    \"darkseagreen\": [143, 188, 143],\n    \"lightgreen\": [144, 238, 144],\n    \"mediumpurple\": [147, 112, 216],\n    \"darkviolet\": [148, 0, 211],\n    \"palegreen\": [152, 251, 152],\n    \"darkorchid\": [153, 50, 204],\n    \"yellowgreen\": [154, 205, 50],\n    \"sienna\": [160, 82, 45],\n    \"brown\": [165, 42, 42],\n    \"darkgray\": [169, 169, 169],\n    \"darkgrey\": [169, 169, 169],\n    \"lightblue\": [173, 216, 230],\n    \"greenyellow\": [173, 255, 47],\n    \"paleturquoise\": [175, 238, 238],\n    \"lightsteelblue\": [176, 196, 222],\n    \"powderblue\": [176, 224, 230],\n    \"firebrick\": [178, 34, 34],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"mediumorchid\": [186, 85, 211],\n    \"rosybrown\": [188, 143, 143],\n    \"darkkhaki\": [189, 183, 107],\n    \"silver\": [192, 192, 192],\n    \"mediumvioletred\": [199, 21, 133],\n    \"indianred\": [205, 92, 92],\n    \"peru\": [205, 133, 63],\n    \"chocolate\": [210, 105, 30],\n    \"tan\": [210, 180, 140],\n    \"lightgray\": [211, 211, 211],\n    \"lightgrey\": [211, 211, 211],\n    \"palevioletred\": [216, 112, 147],\n    \"thistle\": [216, 191, 216],\n    \"orchid\": [218, 112, 214],\n    \"goldenrod\": [218, 165, 32],\n    \"crimson\": [220, 20, 60],\n    \"gainsboro\": [220, 220, 220],\n    \"plum\": [221, 160, 221],\n    \"burlywood\": [222, 184, 135],\n    \"lightcyan\": [224, 255, 255],\n    \"lavender\": [230, 230, 250],\n    \"darksalmon\": [233, 150, 122],\n    \"violet\": [238, 130, 238],\n    \"palegoldenrod\": [238, 232, 170],\n    \"lightcoral\": [240, 128, 128],\n    \"khaki\": [240, 230, 140],\n    \"aliceblue\": [240, 248, 255],\n    \"honeydew\": [240, 255, 240],\n    \"azure\": [240, 255, 255],\n    \"sandybrown\": [244, 164, 96],\n    \"wheat\": [245, 222, 179],\n    \"beige\": [245, 245, 220],\n    \"whitesmoke\": [245, 245, 245],\n    \"mintcream\": [245, 255, 250],\n    \"ghostwhite\": [248, 248, 255],\n    \"salmon\": [250, 128, 114],\n    \"antiquewhite\": [250, 235, 215],\n    \"linen\": [250, 240, 230],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"oldlace\": [253, 245, 230],\n    \"red\": [255, 0, 0],\n    \"fuchsia\": [255, 0, 255],\n    \"magenta\": [255, 0, 255],\n    \"deeppink\": [255, 20, 147],\n    \"orangered\": [255, 69, 0],\n    \"tomato\": [255, 99, 71],\n    \"hotpink\": [255, 105, 180],\n    \"coral\": [255, 127, 80],\n    \"darkorange\": [255, 140, 0],\n    \"lightsalmon\": [255, 160, 122],\n    \"orange\": [255, 165, 0],\n    \"lightpink\": [255, 182, 193],\n    \"pink\": [255, 192, 203],\n    \"gold\": [255, 215, 0],\n    \"peachpuff\": [255, 218, 185],\n    \"navajowhite\": [255, 222, 173],\n    \"moccasin\": [255, 228, 181],\n    \"bisque\": [255, 228, 196],\n    \"mistyrose\": [255, 228, 225],\n    \"blanchedalmond\": [255, 235, 205],\n    \"papayawhip\": [255, 239, 213],\n    \"lavenderblush\": [255, 240, 245],\n    \"seashell\": [255, 245, 238],\n    \"cornsilk\": [255, 248, 220],\n    \"lemonchiffon\": [255, 250, 205],\n    \"floralwhite\": [255, 250, 240],\n    \"snow\": [255, 250, 250],\n    \"yellow\": [255, 255, 0],\n    \"lightyellow\": [255, 255, 224],\n    \"ivory\": [255, 255, 240],\n    \"white\": [255, 255, 255]\n};\n","import Backend from \"./backend.js\";\nimport * as Color from \"../color.js\";\nfunction clearToAnsi(bg) {\n    return `\\x1b[0;48;5;${termcolor(bg)}m\\x1b[2J`;\n}\nfunction colorToAnsi(fg, bg) {\n    return `\\x1b[0;38;5;${termcolor(fg)};48;5;${termcolor(bg)}m`;\n}\nfunction positionToAnsi(x, y) {\n    return `\\x1b[${y + 1};${x + 1}H`;\n}\nfunction termcolor(color) {\n    const SRC_COLORS = 256.0;\n    const DST_COLORS = 6.0;\n    const COLOR_RATIO = DST_COLORS / SRC_COLORS;\n    let rgb = Color.fromString(color);\n    let r = Math.floor(rgb[0] * COLOR_RATIO);\n    let g = Math.floor(rgb[1] * COLOR_RATIO);\n    let b = Math.floor(rgb[2] * COLOR_RATIO);\n    return r * 36 + g * 6 + b * 1 + 16;\n}\nexport default class Term extends Backend {\n    constructor() {\n        super();\n        this._offset = [0, 0];\n        this._cursor = [-1, -1];\n        this._lastColor = \"\";\n    }\n    schedule(cb) { setTimeout(cb, 1000 / 60); }\n    setOptions(options) {\n        super.setOptions(options);\n        let size = [options.width, options.height];\n        let avail = this.computeSize();\n        this._offset = avail.map((val, index) => Math.floor((val - size[index]) / 2));\n    }\n    clear() {\n        process.stdout.write(clearToAnsi(this._options.bg));\n    }\n    draw(data, clearBefore) {\n        // determine where to draw what with what colors\n        let [x, y, ch, fg, bg] = data;\n        // determine if we need to move the terminal cursor\n        let dx = this._offset[0] + x;\n        let dy = this._offset[1] + y;\n        let size = this.computeSize();\n        if (dx < 0 || dx >= size[0]) {\n            return;\n        }\n        if (dy < 0 || dy >= size[1]) {\n            return;\n        }\n        if (dx !== this._cursor[0] || dy !== this._cursor[1]) {\n            process.stdout.write(positionToAnsi(dx, dy));\n            this._cursor[0] = dx;\n            this._cursor[1] = dy;\n        }\n        // terminals automatically clear, but if we're clearing when we're\n        // not otherwise provided with a character, just use a space instead\n        if (clearBefore) {\n            if (!ch) {\n                ch = \" \";\n            }\n        }\n        // if we're not clearing and not provided with a character, do nothing\n        if (!ch) {\n            return;\n        }\n        // determine if we need to change colors\n        let newColor = colorToAnsi(fg, bg);\n        if (newColor !== this._lastColor) {\n            process.stdout.write(newColor);\n            this._lastColor = newColor;\n        }\n        if (ch != '\\t') {\n            // write the provided symbol to the display\n            let chars = [].concat(ch);\n            process.stdout.write(chars[0]);\n        }\n        // update our position, given that we wrote a character\n        this._cursor[0]++;\n        if (this._cursor[0] >= size[0]) {\n            this._cursor[0] = 0;\n            this._cursor[1]++;\n        }\n    }\n    computeFontSize() { throw new Error(\"Terminal backend has no notion of font size\"); }\n    eventToPosition(x, y) { return [x, y]; }\n    computeSize() { return [process.stdout.columns, process.stdout.rows]; }\n}\n","/**\n * @namespace\n * Contains text tokenization and breaking routines\n */\nconst RE_COLORS = /%([bc]){([^}]*)}/g;\n// token types\nexport const TYPE_TEXT = 0;\nexport const TYPE_NEWLINE = 1;\nexport const TYPE_FG = 2;\nexport const TYPE_BG = 3;\n/**\n * Measure size of a resulting text block\n */\nexport function measure(str, maxWidth) {\n    let result = { width: 0, height: 1 };\n    let tokens = tokenize(str, maxWidth);\n    let lineWidth = 0;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lineWidth += token.value.length;\n                break;\n            case TYPE_NEWLINE:\n                result.height++;\n                result.width = Math.max(result.width, lineWidth);\n                lineWidth = 0;\n                break;\n        }\n    }\n    result.width = Math.max(result.width, lineWidth);\n    return result;\n}\n/**\n * Convert string to a series of a formatting commands\n */\nexport function tokenize(str, maxWidth) {\n    let result = [];\n    /* first tokenization pass - split texts and color formatting commands */\n    let offset = 0;\n    str.replace(RE_COLORS, function (match, type, name, index) {\n        /* string before */\n        let part = str.substring(offset, index);\n        if (part.length) {\n            result.push({\n                type: TYPE_TEXT,\n                value: part\n            });\n        }\n        /* color command */\n        result.push({\n            type: (type == \"c\" ? TYPE_FG : TYPE_BG),\n            value: name.trim()\n        });\n        offset = index + match.length;\n        return \"\";\n    });\n    /* last remaining part */\n    let part = str.substring(offset);\n    if (part.length) {\n        result.push({\n            type: TYPE_TEXT,\n            value: part\n        });\n    }\n    return breakLines(result, maxWidth);\n}\n/* insert line breaks into first-pass tokenized data */\nfunction breakLines(tokens, maxWidth) {\n    if (!maxWidth) {\n        maxWidth = Infinity;\n    }\n    let i = 0;\n    let lineLength = 0;\n    let lastTokenWithSpace = -1;\n    while (i < tokens.length) { /* take all text tokens, remove space, apply linebreaks */\n        let token = tokens[i];\n        if (token.type == TYPE_NEWLINE) { /* reset */\n            lineLength = 0;\n            lastTokenWithSpace = -1;\n        }\n        if (token.type != TYPE_TEXT) { /* skip non-text tokens */\n            i++;\n            continue;\n        }\n        /* remove spaces at the beginning of line */\n        while (lineLength == 0 && token.value.charAt(0) == \" \") {\n            token.value = token.value.substring(1);\n        }\n        /* forced newline? insert two new tokens after this one */\n        let index = token.value.indexOf(\"\\n\");\n        if (index != -1) {\n            token.value = breakInsideToken(tokens, i, index, true);\n            /* if there are spaces at the end, we must remove them (we do not want the line too long) */\n            let arr = token.value.split(\"\");\n            while (arr.length && arr[arr.length - 1] == \" \") {\n                arr.pop();\n            }\n            token.value = arr.join(\"\");\n        }\n        /* token degenerated? */\n        if (!token.value.length) {\n            tokens.splice(i, 1);\n            continue;\n        }\n        if (lineLength + token.value.length > maxWidth) { /* line too long, find a suitable breaking spot */\n            /* is it possible to break within this token? */\n            let index = -1;\n            while (1) {\n                let nextIndex = token.value.indexOf(\" \", index + 1);\n                if (nextIndex == -1) {\n                    break;\n                }\n                if (lineLength + nextIndex > maxWidth) {\n                    break;\n                }\n                index = nextIndex;\n            }\n            if (index != -1) { /* break at space within this one */\n                token.value = breakInsideToken(tokens, i, index, true);\n            }\n            else if (lastTokenWithSpace != -1) { /* is there a previous token where a break can occur? */\n                let token = tokens[lastTokenWithSpace];\n                let breakIndex = token.value.lastIndexOf(\" \");\n                token.value = breakInsideToken(tokens, lastTokenWithSpace, breakIndex, true);\n                i = lastTokenWithSpace;\n            }\n            else { /* force break in this token */\n                token.value = breakInsideToken(tokens, i, maxWidth - lineLength, false);\n            }\n        }\n        else { /* line not long, continue */\n            lineLength += token.value.length;\n            if (token.value.indexOf(\" \") != -1) {\n                lastTokenWithSpace = i;\n            }\n        }\n        i++; /* advance to next token */\n    }\n    tokens.push({ type: TYPE_NEWLINE }); /* insert fake newline to fix the last text line */\n    /* remove trailing space from text tokens before newlines */\n    let lastTextToken = null;\n    for (let i = 0; i < tokens.length; i++) {\n        let token = tokens[i];\n        switch (token.type) {\n            case TYPE_TEXT:\n                lastTextToken = token;\n                break;\n            case TYPE_NEWLINE:\n                if (lastTextToken) { /* remove trailing space */\n                    let arr = lastTextToken.value.split(\"\");\n                    while (arr.length && arr[arr.length - 1] == \" \") {\n                        arr.pop();\n                    }\n                    lastTextToken.value = arr.join(\"\");\n                }\n                lastTextToken = null;\n                break;\n        }\n    }\n    tokens.pop(); /* remove fake token */\n    return tokens;\n}\n/**\n * Create new tokens and insert them into the stream\n * @param {object[]} tokens\n * @param {int} tokenIndex Token being processed\n * @param {int} breakIndex Index within current token's value\n * @param {bool} removeBreakChar Do we want to remove the breaking character?\n * @returns {string} remaining unbroken token value\n */\nfunction breakInsideToken(tokens, tokenIndex, breakIndex, removeBreakChar) {\n    let newBreakToken = {\n        type: TYPE_NEWLINE\n    };\n    let newTextToken = {\n        type: TYPE_TEXT,\n        value: tokens[tokenIndex].value.substring(breakIndex + (removeBreakChar ? 1 : 0))\n    };\n    tokens.splice(tokenIndex + 1, 0, newBreakToken, newTextToken);\n    return tokens[tokenIndex].value.substring(0, breakIndex);\n}\n","/** Default with for display and map generators */\nexport let DEFAULT_WIDTH = 80;\n/** Default height for display and map generators */\nexport let DEFAULT_HEIGHT = 25;\nexport const DIRS = {\n    4: [[0, -1], [1, 0], [0, 1], [-1, 0]],\n    8: [[0, -1], [1, -1], [1, 0], [1, 1], [0, 1], [-1, 1], [-1, 0], [-1, -1]],\n    6: [[-1, -1], [1, -1], [2, 0], [1, 1], [-1, 1], [-2, 0]]\n};\nexport const KEYS = {\n    /** Cancel key. */\n    VK_CANCEL: 3,\n    /** Help key. */\n    VK_HELP: 6,\n    /** Backspace key. */\n    VK_BACK_SPACE: 8,\n    /** Tab key. */\n    VK_TAB: 9,\n    /** 5 key on Numpad when NumLock is unlocked. Or on Mac, clear key which is positioned at NumLock key. */\n    VK_CLEAR: 12,\n    /** Return/enter key on the main keyboard. */\n    VK_RETURN: 13,\n    /** Reserved, but not used. */\n    VK_ENTER: 14,\n    /** Shift key. */\n    VK_SHIFT: 16,\n    /** Control key. */\n    VK_CONTROL: 17,\n    /** Alt (Option on Mac) key. */\n    VK_ALT: 18,\n    /** Pause key. */\n    VK_PAUSE: 19,\n    /** Caps lock. */\n    VK_CAPS_LOCK: 20,\n    /** Escape key. */\n    VK_ESCAPE: 27,\n    /** Space bar. */\n    VK_SPACE: 32,\n    /** Page Up key. */\n    VK_PAGE_UP: 33,\n    /** Page Down key. */\n    VK_PAGE_DOWN: 34,\n    /** End key. */\n    VK_END: 35,\n    /** Home key. */\n    VK_HOME: 36,\n    /** Left arrow. */\n    VK_LEFT: 37,\n    /** Up arrow. */\n    VK_UP: 38,\n    /** Right arrow. */\n    VK_RIGHT: 39,\n    /** Down arrow. */\n    VK_DOWN: 40,\n    /** Print Screen key. */\n    VK_PRINTSCREEN: 44,\n    /** Ins(ert) key. */\n    VK_INSERT: 45,\n    /** Del(ete) key. */\n    VK_DELETE: 46,\n    /***/\n    VK_0: 48,\n    /***/\n    VK_1: 49,\n    /***/\n    VK_2: 50,\n    /***/\n    VK_3: 51,\n    /***/\n    VK_4: 52,\n    /***/\n    VK_5: 53,\n    /***/\n    VK_6: 54,\n    /***/\n    VK_7: 55,\n    /***/\n    VK_8: 56,\n    /***/\n    VK_9: 57,\n    /** Colon (:) key. Requires Gecko 15.0 */\n    VK_COLON: 58,\n    /** Semicolon (;) key. */\n    VK_SEMICOLON: 59,\n    /** Less-than (<) key. Requires Gecko 15.0 */\n    VK_LESS_THAN: 60,\n    /** Equals (=) key. */\n    VK_EQUALS: 61,\n    /** Greater-than (>) key. Requires Gecko 15.0 */\n    VK_GREATER_THAN: 62,\n    /** Question mark (?) key. Requires Gecko 15.0 */\n    VK_QUESTION_MARK: 63,\n    /** Atmark (@) key. Requires Gecko 15.0 */\n    VK_AT: 64,\n    /***/\n    VK_A: 65,\n    /***/\n    VK_B: 66,\n    /***/\n    VK_C: 67,\n    /***/\n    VK_D: 68,\n    /***/\n    VK_E: 69,\n    /***/\n    VK_F: 70,\n    /***/\n    VK_G: 71,\n    /***/\n    VK_H: 72,\n    /***/\n    VK_I: 73,\n    /***/\n    VK_J: 74,\n    /***/\n    VK_K: 75,\n    /***/\n    VK_L: 76,\n    /***/\n    VK_M: 77,\n    /***/\n    VK_N: 78,\n    /***/\n    VK_O: 79,\n    /***/\n    VK_P: 80,\n    /***/\n    VK_Q: 81,\n    /***/\n    VK_R: 82,\n    /***/\n    VK_S: 83,\n    /***/\n    VK_T: 84,\n    /***/\n    VK_U: 85,\n    /***/\n    VK_V: 86,\n    /***/\n    VK_W: 87,\n    /***/\n    VK_X: 88,\n    /***/\n    VK_Y: 89,\n    /***/\n    VK_Z: 90,\n    /***/\n    VK_CONTEXT_MENU: 93,\n    /** 0 on the numeric keypad. */\n    VK_NUMPAD0: 96,\n    /** 1 on the numeric keypad. */\n    VK_NUMPAD1: 97,\n    /** 2 on the numeric keypad. */\n    VK_NUMPAD2: 98,\n    /** 3 on the numeric keypad. */\n    VK_NUMPAD3: 99,\n    /** 4 on the numeric keypad. */\n    VK_NUMPAD4: 100,\n    /** 5 on the numeric keypad. */\n    VK_NUMPAD5: 101,\n    /** 6 on the numeric keypad. */\n    VK_NUMPAD6: 102,\n    /** 7 on the numeric keypad. */\n    VK_NUMPAD7: 103,\n    /** 8 on the numeric keypad. */\n    VK_NUMPAD8: 104,\n    /** 9 on the numeric keypad. */\n    VK_NUMPAD9: 105,\n    /** * on the numeric keypad. */\n    VK_MULTIPLY: 106,\n    /** + on the numeric keypad. */\n    VK_ADD: 107,\n    /***/\n    VK_SEPARATOR: 108,\n    /** - on the numeric keypad. */\n    VK_SUBTRACT: 109,\n    /** Decimal point on the numeric keypad. */\n    VK_DECIMAL: 110,\n    /** / on the numeric keypad. */\n    VK_DIVIDE: 111,\n    /** F1 key. */\n    VK_F1: 112,\n    /** F2 key. */\n    VK_F2: 113,\n    /** F3 key. */\n    VK_F3: 114,\n    /** F4 key. */\n    VK_F4: 115,\n    /** F5 key. */\n    VK_F5: 116,\n    /** F6 key. */\n    VK_F6: 117,\n    /** F7 key. */\n    VK_F7: 118,\n    /** F8 key. */\n    VK_F8: 119,\n    /** F9 key. */\n    VK_F9: 120,\n    /** F10 key. */\n    VK_F10: 121,\n    /** F11 key. */\n    VK_F11: 122,\n    /** F12 key. */\n    VK_F12: 123,\n    /** F13 key. */\n    VK_F13: 124,\n    /** F14 key. */\n    VK_F14: 125,\n    /** F15 key. */\n    VK_F15: 126,\n    /** F16 key. */\n    VK_F16: 127,\n    /** F17 key. */\n    VK_F17: 128,\n    /** F18 key. */\n    VK_F18: 129,\n    /** F19 key. */\n    VK_F19: 130,\n    /** F20 key. */\n    VK_F20: 131,\n    /** F21 key. */\n    VK_F21: 132,\n    /** F22 key. */\n    VK_F22: 133,\n    /** F23 key. */\n    VK_F23: 134,\n    /** F24 key. */\n    VK_F24: 135,\n    /** Num Lock key. */\n    VK_NUM_LOCK: 144,\n    /** Scroll Lock key. */\n    VK_SCROLL_LOCK: 145,\n    /** Circumflex (^) key. Requires Gecko 15.0 */\n    VK_CIRCUMFLEX: 160,\n    /** Exclamation (!) key. Requires Gecko 15.0 */\n    VK_EXCLAMATION: 161,\n    /** Double quote () key. Requires Gecko 15.0 */\n    VK_DOUBLE_QUOTE: 162,\n    /** Hash (#) key. Requires Gecko 15.0 */\n    VK_HASH: 163,\n    /** Dollar sign ($) key. Requires Gecko 15.0 */\n    VK_DOLLAR: 164,\n    /** Percent (%) key. Requires Gecko 15.0 */\n    VK_PERCENT: 165,\n    /** Ampersand (&) key. Requires Gecko 15.0 */\n    VK_AMPERSAND: 166,\n    /** Underscore (_) key. Requires Gecko 15.0 */\n    VK_UNDERSCORE: 167,\n    /** Open parenthesis (() key. Requires Gecko 15.0 */\n    VK_OPEN_PAREN: 168,\n    /** Close parenthesis ()) key. Requires Gecko 15.0 */\n    VK_CLOSE_PAREN: 169,\n    /* Asterisk (*) key. Requires Gecko 15.0 */\n    VK_ASTERISK: 170,\n    /** Plus (+) key. Requires Gecko 15.0 */\n    VK_PLUS: 171,\n    /** Pipe (|) key. Requires Gecko 15.0 */\n    VK_PIPE: 172,\n    /** Hyphen-US/docs/Minus (-) key. Requires Gecko 15.0 */\n    VK_HYPHEN_MINUS: 173,\n    /** Open curly bracket ({) key. Requires Gecko 15.0 */\n    VK_OPEN_CURLY_BRACKET: 174,\n    /** Close curly bracket (}) key. Requires Gecko 15.0 */\n    VK_CLOSE_CURLY_BRACKET: 175,\n    /** Tilde (~) key. Requires Gecko 15.0 */\n    VK_TILDE: 176,\n    /** Comma (,) key. */\n    VK_COMMA: 188,\n    /** Period (.) key. */\n    VK_PERIOD: 190,\n    /** Slash (/) key. */\n    VK_SLASH: 191,\n    /** Back tick (`) key. */\n    VK_BACK_QUOTE: 192,\n    /** Open square bracket ([) key. */\n    VK_OPEN_BRACKET: 219,\n    /** Back slash (\\) key. */\n    VK_BACK_SLASH: 220,\n    /** Close square bracket (]) key. */\n    VK_CLOSE_BRACKET: 221,\n    /** Quote (''') key. */\n    VK_QUOTE: 222,\n    /** Meta key on Linux, Command key on Mac. */\n    VK_META: 224,\n    /** AltGr key on Linux. Requires Gecko 15.0 */\n    VK_ALTGR: 225,\n    /** Windows logo key on Windows. Or Super or Hyper key on Linux. Requires Gecko 15.0 */\n    VK_WIN: 91,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANA: 21,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANGUL: 21,\n    /** 英数 key on Japanese Mac keyboard. Requires Gecko 15.0 */\n    VK_EISU: 22,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_JUNJA: 23,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_FINAL: 24,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_HANJA: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_KANJI: 25,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_CONVERT: 28,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_NONCONVERT: 29,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_ACCEPT: 30,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_MODECHANGE: 31,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_SELECT: 41,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_PRINT: 42,\n    /** Linux support for this keycode was added in Gecko 4.0. */\n    VK_EXECUTE: 43,\n    /** Linux support for this keycode was added in Gecko 4.0.\t */\n    VK_SLEEP: 95\n};\n","import RNG from \"./rng.js\";\n/**\n * @class (Markov process)-based string generator.\n * Copied from a <a href=\"http://www.roguebasin.roguelikedevelopment.org/index.php?title=Names_from_a_high_order_Markov_Process_and_a_simplified_Katz_back-off_scheme\">RogueBasin article</a>.\n * Offers configurable order and prior.\n */\nexport default class StringGenerator {\n    constructor(options) {\n        this._options = {\n            words: false,\n            order: 3,\n            prior: 0.001\n        };\n        Object.assign(this._options, options);\n        this._boundary = String.fromCharCode(0);\n        this._suffix = this._boundary;\n        this._prefix = [];\n        for (let i = 0; i < this._options.order; i++) {\n            this._prefix.push(this._boundary);\n        }\n        this._priorValues = {};\n        this._priorValues[this._boundary] = this._options.prior;\n        this._data = {};\n    }\n    /**\n     * Remove all learning data\n     */\n    clear() {\n        this._data = {};\n        this._priorValues = {};\n    }\n    /**\n     * @returns {string} Generated string\n     */\n    generate() {\n        let result = [this._sample(this._prefix)];\n        while (result[result.length - 1] != this._boundary) {\n            result.push(this._sample(result));\n        }\n        return this._join(result.slice(0, -1));\n    }\n    /**\n     * Observe (learn) a string from a training set\n     */\n    observe(string) {\n        let tokens = this._split(string);\n        for (let i = 0; i < tokens.length; i++) {\n            this._priorValues[tokens[i]] = this._options.prior;\n        }\n        tokens = this._prefix.concat(tokens).concat(this._suffix); /* add boundary symbols */\n        for (let i = this._options.order; i < tokens.length; i++) {\n            let context = tokens.slice(i - this._options.order, i);\n            let event = tokens[i];\n            for (let j = 0; j < context.length; j++) {\n                let subcontext = context.slice(j);\n                this._observeEvent(subcontext, event);\n            }\n        }\n    }\n    getStats() {\n        let parts = [];\n        let priorCount = Object.keys(this._priorValues).length;\n        priorCount--; // boundary\n        parts.push(\"distinct samples: \" + priorCount);\n        let dataCount = Object.keys(this._data).length;\n        let eventCount = 0;\n        for (let p in this._data) {\n            eventCount += Object.keys(this._data[p]).length;\n        }\n        parts.push(\"dictionary size (contexts): \" + dataCount);\n        parts.push(\"dictionary size (events): \" + eventCount);\n        return parts.join(\", \");\n    }\n    /**\n     * @param {string}\n     * @returns {string[]}\n     */\n    _split(str) {\n        return str.split(this._options.words ? /\\s+/ : \"\");\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _join(arr) {\n        return arr.join(this._options.words ? \" \" : \"\");\n    }\n    /**\n     * @param {string[]} context\n     * @param {string} event\n     */\n    _observeEvent(context, event) {\n        let key = this._join(context);\n        if (!(key in this._data)) {\n            this._data[key] = {};\n        }\n        let data = this._data[key];\n        if (!(event in data)) {\n            data[event] = 0;\n        }\n        data[event]++;\n    }\n    /**\n     * @param {string[]}\n     * @returns {string}\n     */\n    _sample(context) {\n        context = this._backoff(context);\n        let key = this._join(context);\n        let data = this._data[key];\n        let available = {};\n        if (this._options.prior) {\n            for (let event in this._priorValues) {\n                available[event] = this._priorValues[event];\n            }\n            for (let event in data) {\n                available[event] += data[event];\n            }\n        }\n        else {\n            available = data;\n        }\n        return RNG.getWeightedValue(available);\n    }\n    /**\n     * @param {string[]}\n     * @returns {string[]}\n     */\n    _backoff(context) {\n        if (context.length > this._options.order) {\n            context = context.slice(-this._options.order);\n        }\n        else if (context.length < this._options.order) {\n            context = this._prefix.slice(0, this._options.order - context.length).concat(context);\n        }\n        while (!(this._join(context) in this._data) && context.length > 0) {\n            context = context.slice(1);\n        }\n        return context;\n    }\n}\n","import { MinHeap } from \"./MinHeap\";\nexport default class EventQueue {\n    /**\n     * @class Generic event queue: stores events and retrieves them based on their time\n     */\n    constructor() {\n        this._time = 0;\n        this._events = new MinHeap();\n    }\n    /**\n     * @returns {number} Elapsed time\n     */\n    getTime() { return this._time; }\n    /**\n     * Clear all scheduled events\n     */\n    clear() {\n        this._events = new MinHeap();\n        return this;\n    }\n    /**\n     * @param {?} event\n     * @param {number} time\n     */\n    add(event, time) {\n        this._events.push(event, time);\n    }\n    /**\n     * Locates the nearest event, advances time if necessary. Returns that event and removes it from the queue.\n     * @returns {? || null} The event previously added by addEvent, null if no event available\n     */\n    get() {\n        if (!this._events.len()) {\n            return null;\n        }\n        let { key: time, value: event } = this._events.pop();\n        if (time > 0) { /* advance */\n            this._time += time;\n            this._events.shift(-time);\n        }\n        return event;\n    }\n    /**\n     * Get the time associated with the given event\n     * @param {?} event\n     * @returns {number} time\n     */\n    getEventTime(event) {\n        const r = this._events.find(event);\n        if (r) {\n            const { key } = r;\n            return key;\n        }\n        return undefined;\n    }\n    /**\n     * Remove an event from the queue\n     * @param {?} event\n     * @returns {bool} success?\n     */\n    remove(event) {\n        return this._events.remove(event);\n    }\n    ;\n}\n","export class MinHeap {\n    constructor() {\n        this.heap = [];\n        this.timestamp = 0;\n    }\n    lessThan(a, b) {\n        return a.key == b.key ? a.timestamp < b.timestamp : a.key < b.key;\n    }\n    shift(v) {\n        this.heap = this.heap.map(({ key, value, timestamp }) => ({ key: key + v, value, timestamp }));\n    }\n    len() {\n        return this.heap.length;\n    }\n    push(value, key) {\n        this.timestamp += 1;\n        const loc = this.len();\n        this.heap.push({ value, timestamp: this.timestamp, key });\n        this.updateUp(loc);\n    }\n    pop() {\n        if (this.len() == 0) {\n            throw new Error(\"no element to pop\");\n        }\n        const top = this.heap[0];\n        if (this.len() > 1) {\n            this.heap[0] = this.heap.pop();\n            this.updateDown(0);\n        }\n        else {\n            this.heap.pop();\n        }\n        return top;\n    }\n    find(v) {\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                return this.heap[i];\n            }\n        }\n        return null;\n    }\n    remove(v) {\n        let index = null;\n        for (let i = 0; i < this.len(); i++) {\n            if (v == this.heap[i].value) {\n                index = i;\n            }\n        }\n        if (index === null) {\n            return false;\n        }\n        if (this.len() > 1) {\n            let last = this.heap.pop();\n            if (last.value != v) { // if the last one is being removed, do nothing\n                this.heap[index] = last;\n                this.updateDown(index);\n            }\n            return true;\n        }\n        else {\n            this.heap.pop();\n        }\n        return true;\n    }\n    parentNode(x) {\n        return Math.floor((x - 1) / 2);\n    }\n    leftChildNode(x) {\n        return 2 * x + 1;\n    }\n    rightChildNode(x) {\n        return 2 * x + 2;\n    }\n    existNode(x) {\n        return x >= 0 && x < this.heap.length;\n    }\n    swap(x, y) {\n        const t = this.heap[x];\n        this.heap[x] = this.heap[y];\n        this.heap[y] = t;\n    }\n    minNode(numbers) {\n        const validnumbers = numbers.filter(this.existNode.bind(this));\n        let minimal = validnumbers[0];\n        for (const i of validnumbers) {\n            if (this.lessThan(this.heap[i], this.heap[minimal])) {\n                minimal = i;\n            }\n        }\n        return minimal;\n    }\n    updateUp(x) {\n        if (x == 0) {\n            return;\n        }\n        const parent = this.parentNode(x);\n        if (this.existNode(parent) && this.lessThan(this.heap[x], this.heap[parent])) {\n            this.swap(x, parent);\n            this.updateUp(parent);\n        }\n    }\n    updateDown(x) {\n        const leftChild = this.leftChildNode(x);\n        const rightChild = this.rightChildNode(x);\n        if (!this.existNode(leftChild)) {\n            return;\n        }\n        const m = this.minNode([x, leftChild, rightChild]);\n        if (m != x) {\n            this.swap(x, m);\n            this.updateDown(m);\n        }\n    }\n    debugPrint() {\n        console.log(this.heap);\n    }\n}\n","import Simple from \"./simple.js\";\nimport Speed from \"./speed.js\";\nimport Action from \"./action.js\";\nexport default { Simple, Speed, Action };\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Simple fair scheduler (round-robin style)\n */\nexport default class Simple extends Scheduler {\n    add(item, repeat) {\n        this._queue.add(item, 0);\n        return super.add(item, repeat);\n    }\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 0);\n        }\n        return super.next();\n    }\n}\n","import EventQueue from \"../eventqueue.js\";\nexport default class Scheduler {\n    /**\n     * @class Abstract scheduler\n     */\n    constructor() {\n        this._queue = new EventQueue();\n        this._repeat = [];\n        this._current = null;\n    }\n    /**\n     * @see ROT.EventQueue#getTime\n     */\n    getTime() { return this._queue.getTime(); }\n    /**\n     * @param {?} item\n     * @param {bool} repeat\n     */\n    add(item, repeat) {\n        if (repeat) {\n            this._repeat.push(item);\n        }\n        return this;\n    }\n    /**\n     * Get the time the given item is scheduled for\n     * @param {?} item\n     * @returns {number} time\n     */\n    getTimeOf(item) {\n        return this._queue.getEventTime(item);\n    }\n    /**\n     * Clear all items\n     */\n    clear() {\n        this._queue.clear();\n        this._repeat = [];\n        this._current = null;\n        return this;\n    }\n    /**\n     * Remove a previously added item\n     * @param {?} item\n     * @returns {bool} successful?\n     */\n    remove(item) {\n        let result = this._queue.remove(item);\n        let index = this._repeat.indexOf(item);\n        if (index != -1) {\n            this._repeat.splice(index, 1);\n        }\n        if (this._current == item) {\n            this._current = null;\n        }\n        return result;\n    }\n    /**\n     * Schedule next item\n     * @returns {?}\n     */\n    next() {\n        this._current = this._queue.get();\n        return this._current;\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Speed-based scheduler\n */\nexport default class Speed extends Scheduler {\n    /**\n     * @param {object} item anything with \"getSpeed\" method\n     * @param {bool} repeat\n     * @param {number} [time=1/item.getSpeed()]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time !== undefined ? time : 1 / item.getSpeed());\n        return super.add(item, repeat);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, 1 / this._current.getSpeed());\n        }\n        return super.next();\n    }\n}\n","import Scheduler from \"./scheduler.js\";\n/**\n * @class Action-based scheduler\n * @augments ROT.Scheduler\n */\nexport default class Action extends Scheduler {\n    constructor() {\n        super();\n        this._defaultDuration = 1; /* for newly added */\n        this._duration = this._defaultDuration; /* for this._current */\n    }\n    /**\n     * @param {object} item\n     * @param {bool} repeat\n     * @param {number} [time=1]\n     * @see ROT.Scheduler#add\n     */\n    add(item, repeat, time) {\n        this._queue.add(item, time || this._defaultDuration);\n        return super.add(item, repeat);\n    }\n    clear() {\n        this._duration = this._defaultDuration;\n        return super.clear();\n    }\n    remove(item) {\n        if (item == this._current) {\n            this._duration = this._defaultDuration;\n        }\n        return super.remove(item);\n    }\n    /**\n     * @see ROT.Scheduler#next\n     */\n    next() {\n        if (this._current !== null && this._repeat.indexOf(this._current) != -1) {\n            this._queue.add(this._current, this._duration || this._defaultDuration);\n            this._duration = this._defaultDuration;\n        }\n        return super.next();\n    }\n    /**\n     * Set duration for the active item\n     */\n    setDuration(time) {\n        if (this._current) {\n            this._duration = time;\n        }\n        return this;\n    }\n}\n","import DiscreteShadowcasting from \"./discrete-shadowcasting.js\";\nimport PreciseShadowcasting from \"./precise-shadowcasting.js\";\nimport RecursiveShadowcasting from \"./recursive-shadowcasting.js\";\nexport default { DiscreteShadowcasting, PreciseShadowcasting, RecursiveShadowcasting };\n","import FOV from \"./fov.js\";\n/**\n * @class Discrete shadowcasting algorithm. Obsoleted by Precise shadowcasting.\n * @augments ROT.FOV\n */\nexport default class DiscreteShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* start and end angles */\n        let DATA = [];\n        let A, B, cx, cy, blocks;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let angle = 360 / neighbors.length;\n            for (let i = 0; i < neighbors.length; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                A = angle * (i - 0.5);\n                B = A + angle;\n                blocks = !this._lightPasses(cx, cy);\n                if (this._visibleCoords(Math.floor(A), Math.ceil(B), blocks, DATA)) {\n                    callback(cx, cy, r, 1);\n                }\n                if (DATA.length == 2 && DATA[0] == 0 && DATA[1] == 360) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int} A start angle\n     * @param {int} B end angle\n     * @param {bool} blocks Does current cell block visibility?\n     * @param {int[][]} DATA shadowed angle pairs\n     */\n    _visibleCoords(A, B, blocks, DATA) {\n        if (A < 0) {\n            let v1 = this._visibleCoords(0, B, blocks, DATA);\n            let v2 = this._visibleCoords(360 + A, 360, blocks, DATA);\n            return v1 || v2;\n        }\n        let index = 0;\n        while (index < DATA.length && DATA[index] < A) {\n            index++;\n        }\n        if (index == DATA.length) { /* completely new shadow */\n            if (blocks) {\n                DATA.push(A, B);\n            }\n            return true;\n        }\n        let count = 0;\n        if (index % 2) { /* this shadow starts in an existing shadow, or within its ending boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            if (count == 0) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, B);\n                }\n                else {\n                    DATA.splice(index - count, count);\n                }\n            }\n            return true;\n        }\n        else { /* this shadow starts outside an existing shadow, or within a starting boundary */\n            while (index < DATA.length && DATA[index] < B) {\n                index++;\n                count++;\n            }\n            /* visible when outside an existing shadow, or when overlapping */\n            if (A == DATA[index - count] && count == 1) {\n                return false;\n            }\n            if (blocks) {\n                if (count % 2) {\n                    DATA.splice(index - count, count, A);\n                }\n                else {\n                    DATA.splice(index - count, count, A, B);\n                }\n            }\n            return true;\n        }\n    }\n}\n","import { DIRS } from \"../constants.js\";\n;\n;\nexport default class FOV {\n    /**\n     * @class Abstract FOV algorithm\n     * @param {function} lightPassesCallback Does the light pass through x,y?\n     * @param {object} [options]\n     * @param {int} [options.topology=8] 4/6/8\n     */\n    constructor(lightPassesCallback, options = {}) {\n        this._lightPasses = lightPassesCallback;\n        this._options = Object.assign({ topology: 8 }, options);\n    }\n    /**\n     * Return all neighbors in a concentric ring\n     * @param {int} cx center-x\n     * @param {int} cy center-y\n     * @param {int} r range\n     */\n    _getCircle(cx, cy, r) {\n        let result = [];\n        let dirs, countFactor, startOffset;\n        switch (this._options.topology) {\n            case 4:\n                countFactor = 1;\n                startOffset = [0, 1];\n                dirs = [\n                    DIRS[8][7],\n                    DIRS[8][1],\n                    DIRS[8][3],\n                    DIRS[8][5]\n                ];\n                break;\n            case 6:\n                dirs = DIRS[6];\n                countFactor = 1;\n                startOffset = [-1, 1];\n                break;\n            case 8:\n                dirs = DIRS[4];\n                countFactor = 2;\n                startOffset = [-1, 1];\n                break;\n            default:\n                throw new Error(\"Incorrect topology for FOV computation\");\n                break;\n        }\n        /* starting neighbor */\n        let x = cx + startOffset[0] * r;\n        let y = cy + startOffset[1] * r;\n        /* circle */\n        for (let i = 0; i < dirs.length; i++) {\n            for (let j = 0; j < r * countFactor; j++) {\n                result.push([x, y]);\n                x += dirs[i][0];\n                y += dirs[i][1];\n            }\n        }\n        return result;\n    }\n}\n","import FOV from \"./fov.js\";\n/**\n * @class Precise shadowcasting algorithm\n * @augments ROT.FOV\n */\nexport default class PreciseShadowcasting extends FOV {\n    compute(x, y, R, callback) {\n        /* this place is always visible */\n        callback(x, y, 0, 1);\n        /* standing in a dark place. FIXME is this a good idea?  */\n        if (!this._lightPasses(x, y)) {\n            return;\n        }\n        /* list of all shadows */\n        let SHADOWS = [];\n        let cx, cy, blocks, A1, A2, visibility;\n        /* analyze surrounding cells in concentric rings, starting from the center */\n        for (let r = 1; r <= R; r++) {\n            let neighbors = this._getCircle(x, y, r);\n            let neighborCount = neighbors.length;\n            for (let i = 0; i < neighborCount; i++) {\n                cx = neighbors[i][0];\n                cy = neighbors[i][1];\n                /* shift half-an-angle backwards to maintain consistency of 0-th cells */\n                A1 = [i ? 2 * i - 1 : 2 * neighborCount - 1, 2 * neighborCount];\n                A2 = [2 * i + 1, 2 * neighborCount];\n                blocks = !this._lightPasses(cx, cy);\n                visibility = this._checkVisibility(A1, A2, blocks, SHADOWS);\n                if (visibility) {\n                    callback(cx, cy, r, visibility);\n                }\n                if (SHADOWS.length == 2 && SHADOWS[0][0] == 0 && SHADOWS[1][0] == SHADOWS[1][1]) {\n                    return;\n                } /* cutoff? */\n            } /* for all cells in this ring */\n        } /* for all rings */\n    }\n    /**\n     * @param {int[2]} A1 arc start\n     * @param {int[2]} A2 arc end\n     * @param {bool} blocks Does current arc block visibility?\n     * @param {int[][]} SHADOWS list of active shadows\n     */\n    _checkVisibility(A1, A2, blocks, SHADOWS) {\n        if (A1[0] > A2[0]) { /* split into two sub-arcs */\n            let v1 = this._checkVisibility(A1, [A1[1], A1[1]], blocks, SHADOWS);\n            let v2 = this._checkVisibility([0, 1], A2, blocks, SHADOWS);\n            return (v1 + v2) / 2;\n        }\n        /* index1: first shadow >= A1 */\n        let index1 = 0, edge1 = false;\n        while (index1 < SHADOWS.length) {\n            let old = SHADOWS[index1];\n            let diff = old[0] * A1[1] - A1[0] * old[1];\n            if (diff >= 0) { /* old >= A1 */\n                if (diff == 0 && !(index1 % 2)) {\n                    edge1 = true;\n                }\n                break;\n            }\n            index1++;\n        }\n        /* index2: last shadow <= A2 */\n        let index2 = SHADOWS.length, edge2 = false;\n        while (index2--) {\n            let old = SHADOWS[index2];\n            let diff = A2[0] * old[1] - old[0] * A2[1];\n            if (diff >= 0) { /* old <= A2 */\n                if (diff == 0 && (index2 % 2)) {\n                    edge2 = true;\n                }\n                break;\n            }\n        }\n        let visible = true;\n        if (index1 == index2 && (edge1 || edge2)) { /* subset of existing shadow, one of the edges match */\n            visible = false;\n        }\n        else if (edge1 && edge2 && index1 + 1 == index2 && (index2 % 2)) { /* completely equivalent with existing shadow */\n            visible = false;\n        }\n        else if (index1 > index2 && (index1 % 2)) { /* subset of existing shadow, not touching */\n            visible = false;\n        }\n        if (!visible) {\n            return 0;\n        } /* fast case: not visible */\n        let visibleLength;\n        /* compute the length of visible arc, adjust list of shadows (if blocking) */\n        let remove = index2 - index1 + 1;\n        if (remove % 2) {\n            if (index1 % 2) { /* first edge within existing shadow, second outside */\n                let P = SHADOWS[index1];\n                visibleLength = (A2[0] * P[1] - P[0] * A2[1]) / (P[1] * A2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A2);\n                }\n            }\n            else { /* second edge within existing shadow, first outside */\n                let P = SHADOWS[index2];\n                visibleLength = (P[0] * A1[1] - A1[0] * P[1]) / (A1[1] * P[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1);\n                }\n            }\n        }\n        else {\n            if (index1 % 2) { /* both edges within existing shadows */\n                let P1 = SHADOWS[index1];\n                let P2 = SHADOWS[index2];\n                visibleLength = (P2[0] * P1[1] - P1[0] * P2[1]) / (P1[1] * P2[1]);\n                if (blocks) {\n                    SHADOWS.splice(index1, remove);\n                }\n            }\n            else { /* both edges outside existing shadows */\n                if (blocks) {\n                    SHADOWS.splice(index1, remove, A1, A2);\n                }\n                return 1; /* whole arc visible! */\n            }\n        }\n        let arcLength = (A2[0] * A1[1] - A1[0] * A2[1]) / (A1[1] * A2[1]);\n        return visibleLength / arcLength;\n    }\n}\n","import FOV from \"./fov.js\";\n/** Octants used for translating recursive shadowcasting offsets */\nconst OCTANTS = [\n    [-1, 0, 0, 1],\n    [0, -1, 1, 0],\n    [0, -1, -1, 0],\n    [-1, 0, 0, -1],\n    [1, 0, 0, -1],\n    [0, 1, -1, 0],\n    [0, 1, 1, 0],\n    [1, 0, 0, 1]\n];\n/**\n * @class Recursive shadowcasting algorithm\n * Currently only supports 4/8 topologies, not hexagonal.\n * Based on Peter Harkins' implementation of Björn Bergström's algorithm described here: http://www.roguebasin.com/index.php?title=FOV_using_recursive_shadowcasting\n * @augments ROT.FOV\n */\nexport default class RecursiveShadowcasting extends FOV {\n    /**\n     * Compute visibility for a 360-degree circle\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    compute(x, y, R, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        for (let i = 0; i < OCTANTS.length; i++) {\n            this._renderOctant(x, y, OCTANTS[i], R, callback);\n        }\n    }\n    /**\n     * Compute visibility for a 180-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute180(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 180 degrees\n        let nextPreviousOctant = (dir - 2 + 8) % 8; //Need to retrieve the previous two octants to render a full 180 degrees\n        let nextOctant = (dir + 1 + 8) % 8; //Need to grab to next octant to render a full 180 degrees\n        this._renderOctant(x, y, OCTANTS[nextPreviousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[nextOctant], R, callback);\n    }\n    ;\n    /**\n     * Compute visibility for a 90-degree arc\n     * @param {int} x\n     * @param {int} y\n     * @param {int} R Maximum visibility radius\n     * @param {int} dir Direction to look in (expressed in a ROT.DIRS value);\n     * @param {function} callback\n     */\n    compute90(x, y, R, dir, callback) {\n        //You can always see your own tile\n        callback(x, y, 0, 1);\n        let previousOctant = (dir - 1 + 8) % 8; //Need to retrieve the previous octant to render a full 90 degrees\n        this._renderOctant(x, y, OCTANTS[dir], R, callback);\n        this._renderOctant(x, y, OCTANTS[previousOctant], R, callback);\n    }\n    /**\n     * Render one octant (45-degree arc) of the viewshed\n     * @param {int} x\n     * @param {int} y\n     * @param {int} octant Octant to be rendered\n     * @param {int} R Maximum visibility radius\n     * @param {function} callback\n     */\n    _renderOctant(x, y, octant, R, callback) {\n        //Radius incremented by 1 to provide same coverage area as other shadowcasting radiuses\n        this._castVisibility(x, y, 1, 1.0, 0.0, R + 1, octant[0], octant[1], octant[2], octant[3], callback);\n    }\n    /**\n     * Actually calculates the visibility\n     * @param {int} startX The starting X coordinate\n     * @param {int} startY The starting Y coordinate\n     * @param {int} row The row to render\n     * @param {float} visSlopeStart The slope to start at\n     * @param {float} visSlopeEnd The slope to end at\n     * @param {int} radius The radius to reach out to\n     * @param {int} xx\n     * @param {int} xy\n     * @param {int} yx\n     * @param {int} yy\n     * @param {function} callback The callback to use when we hit a block that is visible\n     */\n    _castVisibility(startX, startY, row, visSlopeStart, visSlopeEnd, radius, xx, xy, yx, yy, callback) {\n        if (visSlopeStart < visSlopeEnd) {\n            return;\n        }\n        for (let i = row; i <= radius; i++) {\n            let dx = -i - 1;\n            let dy = -i;\n            let blocked = false;\n            let newStart = 0;\n            //'Row' could be column, names here assume octant 0 and would be flipped for half the octants\n            while (dx <= 0) {\n                dx += 1;\n                //Translate from relative coordinates to map coordinates\n                let mapX = startX + dx * xx + dy * xy;\n                let mapY = startY + dx * yx + dy * yy;\n                //Range of the row\n                let slopeStart = (dx - 0.5) / (dy + 0.5);\n                let slopeEnd = (dx + 0.5) / (dy - 0.5);\n                //Ignore if not yet at left edge of Octant\n                if (slopeEnd > visSlopeStart) {\n                    continue;\n                }\n                //Done if past right edge\n                if (slopeStart < visSlopeEnd) {\n                    break;\n                }\n                //If it's in range, it's visible\n                if ((dx * dx + dy * dy) < (radius * radius)) {\n                    callback(mapX, mapY, i, 1);\n                }\n                if (!blocked) {\n                    //If tile is a blocking tile, cast around it\n                    if (!this._lightPasses(mapX, mapY) && i < radius) {\n                        blocked = true;\n                        this._castVisibility(startX, startY, i + 1, visSlopeStart, slopeStart, radius, xx, xy, yx, yy, callback);\n                        newStart = slopeEnd;\n                    }\n                }\n                else {\n                    //Keep narrowing if scanning across a block\n                    if (!this._lightPasses(mapX, mapY)) {\n                        newStart = slopeEnd;\n                        continue;\n                    }\n                    //Block has ended\n                    blocked = false;\n                    visSlopeStart = newStart;\n                }\n            }\n            if (blocked) {\n                break;\n            }\n        }\n    }\n}\n","import Arena from \"./arena.js\";\nimport Uniform from \"./uniform.js\";\nimport Cellular from \"./cellular.js\";\nimport Digger from \"./digger.js\";\nimport EllerMaze from \"./ellermaze.js\";\nimport DividedMaze from \"./dividedmaze.js\";\nimport IceyMaze from \"./iceymaze.js\";\nimport Rogue from \"./rogue.js\";\nexport default { Arena, Uniform, Cellular, Digger, EllerMaze, DividedMaze, IceyMaze, Rogue };\n","import Map from \"./map.js\";\n/**\n * @class Simple empty rectangular room\n * @augments ROT.Map\n */\nexport default class Arena extends Map {\n    create(callback) {\n        let w = this._width - 1;\n        let h = this._height - 1;\n        for (let i = 0; i <= w; i++) {\n            for (let j = 0; j <= h; j++) {\n                let empty = (i && j && i < w && j < h);\n                callback(i, j, empty ? 0 : 1);\n            }\n        }\n        return this;\n    }\n}\n","import { DEFAULT_WIDTH, DEFAULT_HEIGHT } from \"../constants.js\";\n;\nexport default class Map {\n    /**\n     * @class Base map generator\n     * @param {int} [width=ROT.DEFAULT_WIDTH]\n     * @param {int} [height=ROT.DEFAULT_HEIGHT]\n     */\n    constructor(width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT) {\n        this._width = width;\n        this._height = height;\n    }\n    ;\n    _fillMap(value) {\n        let map = [];\n        for (let i = 0; i < this._width; i++) {\n            map.push([]);\n            for (let j = 0; j < this._height; j++) {\n                map[i].push(value);\n            }\n        }\n        return map;\n    }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon generator which tries to fill the space evenly. Generates independent rooms and tries to connect them.\n * @augments ROT.Map.Dungeon\n */\nexport default class Uniform extends Dungeon {\n    constructor(width, height, options) {\n        super(width, height);\n        this._options = {\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            roomDugPercentage: 0.1,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        };\n        Object.assign(this._options, options);\n        this._map = [];\n        this._dug = 0;\n        this._roomAttempts = 20; /* new room is created N-times until is considered as impossible to generate */\n        this._corridorAttempts = 20; /* corridors are tried N-times until the level is considered as impossible to connect */\n        this._connected = []; /* list of already connected rooms */\n        this._unconnected = []; /* list of remaining unconnected rooms */\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n    }\n    /**\n     * Create a map. If the time limit has been hit, returns null.\n     * @see ROT.Map#create\n     */\n    create(callback) {\n        let t1 = Date.now();\n        while (1) {\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                return null;\n            } /* time limit! */\n            this._map = this._fillMap(1);\n            this._dug = 0;\n            this._rooms = [];\n            this._unconnected = [];\n            this._generateRooms();\n            if (this._rooms.length < 2) {\n                continue;\n            }\n            if (this._generateCorridors()) {\n                break;\n            }\n        }\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Generates a suitable amount of rooms\n     */\n    _generateRooms() {\n        let w = this._width - 2;\n        let h = this._height - 2;\n        let room;\n        do {\n            room = this._generateRoom();\n            if (this._dug / (w * h) > this._options.roomDugPercentage) {\n                break;\n            } /* achieved requested amount of free space */\n        } while (room);\n        /* either enough rooms, or not able to generate more of them :) */\n    }\n    /**\n     * Try to generate one room\n     */\n    _generateRoom() {\n        let count = 0;\n        while (count < this._roomAttempts) {\n            count++;\n            let room = Room.createRandom(this._width, this._height, this._options);\n            if (!room.isValid(this._isWallCallback, this._canBeDugCallback)) {\n                continue;\n            }\n            room.create(this._digCallback);\n            this._rooms.push(room);\n            return room;\n        }\n        /* no room was generated in a given number of attempts */\n        return null;\n    }\n    /**\n     * Generates connectors beween rooms\n     * @returns {bool} success Was this attempt successfull?\n     */\n    _generateCorridors() {\n        let cnt = 0;\n        while (cnt < this._corridorAttempts) {\n            cnt++;\n            this._corridors = [];\n            /* dig rooms into a clear map */\n            this._map = this._fillMap(1);\n            for (let i = 0; i < this._rooms.length; i++) {\n                let room = this._rooms[i];\n                room.clearDoors();\n                room.create(this._digCallback);\n            }\n            this._unconnected = RNG.shuffle(this._rooms.slice());\n            this._connected = [];\n            if (this._unconnected.length) {\n                this._connected.push(this._unconnected.pop());\n            } /* first one is always connected */\n            while (1) {\n                /* 1. pick random connected room */\n                let connected = RNG.getItem(this._connected);\n                if (!connected) {\n                    break;\n                }\n                /* 2. find closest unconnected */\n                let room1 = this._closestRoom(this._unconnected, connected);\n                if (!room1) {\n                    break;\n                }\n                /* 3. connect it to closest connected */\n                let room2 = this._closestRoom(this._connected, room1);\n                if (!room2) {\n                    break;\n                }\n                let ok = this._connectRooms(room1, room2);\n                if (!ok) {\n                    break;\n                } /* stop connecting, re-shuffle */\n                if (!this._unconnected.length) {\n                    return true;\n                } /* done; no rooms remain */\n            }\n        }\n        return false;\n    }\n    ;\n    /**\n     * For a given room, find the closest one from the list\n     */\n    _closestRoom(rooms, room) {\n        let dist = Infinity;\n        let center = room.getCenter();\n        let result = null;\n        for (let i = 0; i < rooms.length; i++) {\n            let r = rooms[i];\n            let c = r.getCenter();\n            let dx = c[0] - center[0];\n            let dy = c[1] - center[1];\n            let d = dx * dx + dy * dy;\n            if (d < dist) {\n                dist = d;\n                result = r;\n            }\n        }\n        return result;\n    }\n    _connectRooms(room1, room2) {\n        /*\n            room1.debug();\n            room2.debug();\n        */\n        let center1 = room1.getCenter();\n        let center2 = room2.getCenter();\n        let diffX = center2[0] - center1[0];\n        let diffY = center2[1] - center1[1];\n        let start;\n        let end;\n        let dirIndex1, dirIndex2, min, max, index;\n        if (Math.abs(diffX) < Math.abs(diffY)) { /* first try connecting north-south walls */\n            dirIndex1 = (diffY > 0 ? 2 : 0);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getLeft();\n            max = room2.getRight();\n            index = 0;\n        }\n        else { /* first try connecting east-west walls */\n            dirIndex1 = (diffX > 0 ? 1 : 3);\n            dirIndex2 = (dirIndex1 + 2) % 4;\n            min = room2.getTop();\n            max = room2.getBottom();\n            index = 1;\n        }\n        start = this._placeInWall(room1, dirIndex1); /* corridor will start here */\n        if (!start) {\n            return false;\n        }\n        if (start[index] >= min && start[index] <= max) { /* possible to connect with straight line (I-like) */\n            end = start.slice();\n            let value = 0;\n            switch (dirIndex2) {\n                case 0:\n                    value = room2.getTop() - 1;\n                    break;\n                case 1:\n                    value = room2.getRight() + 1;\n                    break;\n                case 2:\n                    value = room2.getBottom() + 1;\n                    break;\n                case 3:\n                    value = room2.getLeft() - 1;\n                    break;\n            }\n            end[(index + 1) % 2] = value;\n            this._digLine([start, end]);\n        }\n        else if (start[index] < min - 1 || start[index] > max + 1) { /* need to switch target wall (L-like) */\n            let diff = start[index] - center2[index];\n            let rotation = 0;\n            switch (dirIndex2) {\n                case 0:\n                case 1:\n                    rotation = (diff < 0 ? 3 : 1);\n                    break;\n                case 2:\n                case 3:\n                    rotation = (diff < 0 ? 1 : 3);\n                    break;\n            }\n            dirIndex2 = (dirIndex2 + rotation) % 4;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = [0, 0];\n            mid[index] = start[index];\n            let index2 = (index + 1) % 2;\n            mid[index2] = end[index2];\n            this._digLine([start, mid, end]);\n        }\n        else { /* use current wall pair, but adjust the line in the middle (S-like) */\n            let index2 = (index + 1) % 2;\n            end = this._placeInWall(room2, dirIndex2);\n            if (!end) {\n                return false;\n            }\n            let mid = Math.round((end[index2] + start[index2]) / 2);\n            let mid1 = [0, 0];\n            let mid2 = [0, 0];\n            mid1[index] = start[index];\n            mid1[index2] = mid;\n            mid2[index] = end[index];\n            mid2[index2] = mid;\n            this._digLine([start, mid1, mid2, end]);\n        }\n        room1.addDoor(start[0], start[1]);\n        room2.addDoor(end[0], end[1]);\n        index = this._unconnected.indexOf(room1);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room1);\n        }\n        index = this._unconnected.indexOf(room2);\n        if (index != -1) {\n            this._unconnected.splice(index, 1);\n            this._connected.push(room2);\n        }\n        return true;\n    }\n    _placeInWall(room, dirIndex) {\n        let start = [0, 0];\n        let dir = [0, 0];\n        let length = 0;\n        switch (dirIndex) {\n            case 0:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getTop() - 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 1:\n                dir = [0, 1];\n                start = [room.getRight() + 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n            case 2:\n                dir = [1, 0];\n                start = [room.getLeft(), room.getBottom() + 1];\n                length = room.getRight() - room.getLeft() + 1;\n                break;\n            case 3:\n                dir = [0, 1];\n                start = [room.getLeft() - 1, room.getTop()];\n                length = room.getBottom() - room.getTop() + 1;\n                break;\n        }\n        let avail = [];\n        let lastBadIndex = -2;\n        for (let i = 0; i < length; i++) {\n            let x = start[0] + i * dir[0];\n            let y = start[1] + i * dir[1];\n            avail.push(null);\n            let isWall = (this._map[x][y] == 1);\n            if (isWall) {\n                if (lastBadIndex != i - 1) {\n                    avail[i] = [x, y];\n                }\n            }\n            else {\n                lastBadIndex = i;\n                if (i) {\n                    avail[i - 1] = null;\n                }\n            }\n        }\n        for (let i = avail.length - 1; i >= 0; i--) {\n            if (!avail[i]) {\n                avail.splice(i, 1);\n            }\n        }\n        return (avail.length ? RNG.getItem(avail) : null);\n    }\n    /**\n     * Dig a polyline.\n     */\n    _digLine(points) {\n        for (let i = 1; i < points.length; i++) {\n            let start = points[i - 1];\n            let end = points[i];\n            let corridor = new Corridor(start[0], start[1], end[0], end[1]);\n            corridor.create(this._digCallback);\n            this._corridors.push(corridor);\n        }\n    }\n    _digCallback(x, y, value) {\n        this._map[x][y] = value;\n        if (value == 0) {\n            this._dug++;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n}\n","import Map from \"./map.js\";\n/**\n * @class Dungeon map: has rooms and corridors\n * @augments ROT.Map\n */\nexport default class Dungeon extends Map {\n    constructor(width, height) {\n        super(width, height);\n        this._rooms = [];\n        this._corridors = [];\n    }\n    /**\n     * Get all generated rooms\n     * @returns {ROT.Map.Feature.Room[]}\n     */\n    getRooms() { return this._rooms; }\n    /**\n     * Get all generated corridors\n     * @returns {ROT.Map.Feature.Corridor[]}\n     */\n    getCorridors() { return this._corridors; }\n}\n","import RNG from \"../rng.js\";\n;\n/**\n * @class Dungeon feature; has own .create() method\n */\nclass Feature {\n}\n/**\n * @class Room\n * @augments ROT.Map.Feature\n * @param {int} x1\n * @param {int} y1\n * @param {int} x2\n * @param {int} y2\n * @param {int} [doorX]\n * @param {int} [doorY]\n */\nexport class Room extends Feature {\n    constructor(x1, y1, x2, y2, doorX, doorY) {\n        super();\n        this._x1 = x1;\n        this._y1 = y1;\n        this._x2 = x2;\n        this._y2 = y2;\n        this._doors = {};\n        if (doorX !== undefined && doorY !== undefined) {\n            this.addDoor(doorX, doorY);\n        }\n    }\n    ;\n    /**\n     * Room of random size, with a given doors and direction\n     */\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        if (dx == 1) { /* to the right */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x + 1, y2, x + width, y2 + height - 1, x, y);\n        }\n        if (dx == -1) { /* to the left */\n            let y2 = y - Math.floor(RNG.getUniform() * height);\n            return new this(x - width, y2, x - 1, y2 + height - 1, x, y);\n        }\n        if (dy == 1) { /* to the bottom */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y + 1, x2 + width - 1, y + height, x, y);\n        }\n        if (dy == -1) { /* to the top */\n            let x2 = x - Math.floor(RNG.getUniform() * width);\n            return new this(x2, y - height, x2 + width - 1, y - 1, x, y);\n        }\n        throw new Error(\"dx or dy must be 1 or -1\");\n    }\n    /**\n     * Room of random size, positioned around center coords\n     */\n    static createRandomCenter(cx, cy, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let x1 = cx - Math.floor(RNG.getUniform() * width);\n        let y1 = cy - Math.floor(RNG.getUniform() * height);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    /**\n     * Room of random size within a given dimensions\n     */\n    static createRandom(availWidth, availHeight, options) {\n        let min = options.roomWidth[0];\n        let max = options.roomWidth[1];\n        let width = RNG.getUniformInt(min, max);\n        min = options.roomHeight[0];\n        max = options.roomHeight[1];\n        let height = RNG.getUniformInt(min, max);\n        let left = availWidth - width - 1;\n        let top = availHeight - height - 1;\n        let x1 = 1 + Math.floor(RNG.getUniform() * left);\n        let y1 = 1 + Math.floor(RNG.getUniform() * top);\n        let x2 = x1 + width - 1;\n        let y2 = y1 + height - 1;\n        return new this(x1, y1, x2, y2);\n    }\n    addDoor(x, y) {\n        this._doors[x + \",\" + y] = 1;\n        return this;\n    }\n    /**\n     * @param {function}\n     */\n    getDoors(cb) {\n        for (let key in this._doors) {\n            let parts = key.split(\",\");\n            cb(parseInt(parts[0]), parseInt(parts[1]));\n        }\n        return this;\n    }\n    clearDoors() {\n        this._doors = {};\n        return this;\n    }\n    addDoors(isWallCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x != left && x != right && y != top && y != bottom) {\n                    continue;\n                }\n                if (isWallCallback(x, y)) {\n                    continue;\n                }\n                this.addDoor(x, y);\n            }\n        }\n        return this;\n    }\n    debug() {\n        console.log(\"room\", this._x1, this._y1, this._x2, this._y2);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x == left || x == right || y == top || y == bottom) {\n                    if (!isWallCallback(x, y)) {\n                        return false;\n                    }\n                }\n                else {\n                    if (!canBeDugCallback(x, y)) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty, 1 = wall, 2 = door. Multiple doors are allowed.\n     */\n    create(digCallback) {\n        let left = this._x1 - 1;\n        let right = this._x2 + 1;\n        let top = this._y1 - 1;\n        let bottom = this._y2 + 1;\n        let value = 0;\n        for (let x = left; x <= right; x++) {\n            for (let y = top; y <= bottom; y++) {\n                if (x + \",\" + y in this._doors) {\n                    value = 2;\n                }\n                else if (x == left || x == right || y == top || y == bottom) {\n                    value = 1;\n                }\n                else {\n                    value = 0;\n                }\n                digCallback(x, y, value);\n            }\n        }\n    }\n    getCenter() {\n        return [Math.round((this._x1 + this._x2) / 2), Math.round((this._y1 + this._y2) / 2)];\n    }\n    getLeft() { return this._x1; }\n    getRight() { return this._x2; }\n    getTop() { return this._y1; }\n    getBottom() { return this._y2; }\n}\n/**\n * @class Corridor\n * @augments ROT.Map.Feature\n * @param {int} startX\n * @param {int} startY\n * @param {int} endX\n * @param {int} endY\n */\nexport class Corridor extends Feature {\n    constructor(startX, startY, endX, endY) {\n        super();\n        this._startX = startX;\n        this._startY = startY;\n        this._endX = endX;\n        this._endY = endY;\n        this._endsWithAWall = true;\n    }\n    static createRandomAt(x, y, dx, dy, options) {\n        let min = options.corridorLength[0];\n        let max = options.corridorLength[1];\n        let length = RNG.getUniformInt(min, max);\n        return new this(x, y, x + dx * length, y + dy * length);\n    }\n    debug() {\n        console.log(\"corridor\", this._startX, this._startY, this._endX, this._endY);\n    }\n    isValid(isWallCallback, canBeDugCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        let ok = true;\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            if (!canBeDugCallback(x, y)) {\n                ok = false;\n            }\n            if (!isWallCallback(x + nx, y + ny)) {\n                ok = false;\n            }\n            if (!isWallCallback(x - nx, y - ny)) {\n                ok = false;\n            }\n            if (!ok) {\n                length = i;\n                this._endX = x - dx;\n                this._endY = y - dy;\n                break;\n            }\n        }\n        /**\n         * If the length degenerated, this corridor might be invalid\n         */\n        /* not supported */\n        if (length == 0) {\n            return false;\n        }\n        /* length 1 allowed only if the next space is empty */\n        if (length == 1 && isWallCallback(this._endX + dx, this._endY + dy)) {\n            return false;\n        }\n        /**\n         * We do not want the corridor to crash into a corner of a room;\n         * if any of the ending corners is empty, the N+1th cell of this corridor must be empty too.\n         *\n         * Situation:\n         * #######1\n         * .......?\n         * #######2\n         *\n         * The corridor was dug from left to right.\n         * 1, 2 - problematic corners, ? = N+1th cell (not dug)\n         */\n        let firstCornerBad = !isWallCallback(this._endX + dx + nx, this._endY + dy + ny);\n        let secondCornerBad = !isWallCallback(this._endX + dx - nx, this._endY + dy - ny);\n        this._endsWithAWall = isWallCallback(this._endX + dx, this._endY + dy);\n        if ((firstCornerBad || secondCornerBad) && this._endsWithAWall) {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {function} digCallback Dig callback with a signature (x, y, value). Values: 0 = empty.\n     */\n    create(digCallback) {\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        let length = 1 + Math.max(Math.abs(dx), Math.abs(dy));\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        for (let i = 0; i < length; i++) {\n            let x = sx + i * dx;\n            let y = sy + i * dy;\n            digCallback(x, y, 0);\n        }\n        return true;\n    }\n    createPriorityWalls(priorityWallCallback) {\n        if (!this._endsWithAWall) {\n            return;\n        }\n        let sx = this._startX;\n        let sy = this._startY;\n        let dx = this._endX - sx;\n        let dy = this._endY - sy;\n        if (dx) {\n            dx = dx / Math.abs(dx);\n        }\n        if (dy) {\n            dy = dy / Math.abs(dy);\n        }\n        let nx = dy;\n        let ny = -dx;\n        priorityWallCallback(this._endX + dx, this._endY + dy);\n        priorityWallCallback(this._endX + nx, this._endY + ny);\n        priorityWallCallback(this._endX - nx, this._endY - ny);\n    }\n}\n","import Map from \"./map.js\";\nimport { DIRS } from \"../constants.js\";\nimport RNG from \"../rng.js\";\n;\n/**\n * @class Cellular automaton map generator\n * @augments ROT.Map\n * @param {int} [width=ROT.DEFAULT_WIDTH]\n * @param {int} [height=ROT.DEFAULT_HEIGHT]\n * @param {object} [options] Options\n * @param {int[]} [options.born] List of neighbor counts for a new cell to be born in empty space\n * @param {int[]} [options.survive] List of neighbor counts for an existing  cell to survive\n * @param {int} [options.topology] Topology 4 or 6 or 8\n */\nexport default class Cellular extends Map {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = {\n            born: [5, 6, 7, 8],\n            survive: [4, 5, 6, 7, 8],\n            topology: 8\n        };\n        this.setOptions(options);\n        this._dirs = DIRS[this._options.topology];\n        this._map = this._fillMap(0);\n    }\n    /**\n     * Fill the map with random values\n     * @param {float} probability Probability for a cell to become alive; 0 = all empty, 1 = all full\n     */\n    randomize(probability) {\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                this._map[i][j] = (RNG.getUniform() < probability ? 1 : 0);\n            }\n        }\n        return this;\n    }\n    /**\n     * Change options.\n     * @see ROT.Map.Cellular\n     */\n    setOptions(options) { Object.assign(this._options, options); }\n    set(x, y, value) { this._map[x][y] = value; }\n    create(callback) {\n        let newMap = this._fillMap(0);\n        let born = this._options.born;\n        let survive = this._options.survive;\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                let cur = this._map[i][j];\n                let ncount = this._getNeighbors(i, j);\n                if (cur && survive.indexOf(ncount) != -1) { /* survive */\n                    newMap[i][j] = 1;\n                }\n                else if (!cur && born.indexOf(ncount) != -1) { /* born */\n                    newMap[i][j] = 1;\n                }\n            }\n        }\n        this._map = newMap;\n        callback && this._serviceCallback(callback);\n    }\n    _serviceCallback(callback) {\n        for (let j = 0; j < this._height; j++) {\n            let widthStep = 1;\n            let widthStart = 0;\n            if (this._options.topology == 6) {\n                widthStep = 2;\n                widthStart = j % 2;\n            }\n            for (let i = widthStart; i < this._width; i += widthStep) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n    }\n    /**\n     * Get neighbor count at [i,j] in this._map\n     */\n    _getNeighbors(cx, cy) {\n        let result = 0;\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (x < 0 || x >= this._width || y < 0 || y >= this._height) {\n                continue;\n            }\n            result += (this._map[x][y] == 1 ? 1 : 0);\n        }\n        return result;\n    }\n    /**\n     * Make sure every non-wall space is accessible.\n     * @param {function} callback to call to display map when do\n     * @param {int} value to consider empty space - defaults to 0\n     * @param {function} callback to call when a new connection is made\n     */\n    connect(callback, value, connectionCallback) {\n        if (!value)\n            value = 0;\n        let allFreeSpace = [];\n        let notConnected = {};\n        // find all free space\n        let widthStep = 1;\n        let widthStarts = [0, 0];\n        if (this._options.topology == 6) {\n            widthStep = 2;\n            widthStarts = [0, 1];\n        }\n        for (let y = 0; y < this._height; y++) {\n            for (let x = widthStarts[y % 2]; x < this._width; x += widthStep) {\n                if (this._freeSpace(x, y, value)) {\n                    let p = [x, y];\n                    notConnected[this._pointKey(p)] = p;\n                    allFreeSpace.push([x, y]);\n                }\n            }\n        }\n        let start = allFreeSpace[RNG.getUniformInt(0, allFreeSpace.length - 1)];\n        let key = this._pointKey(start);\n        let connected = {};\n        connected[key] = start;\n        delete notConnected[key];\n        // find what's connected to the starting point\n        this._findConnected(connected, notConnected, [start], false, value);\n        while (Object.keys(notConnected).length > 0) {\n            // find two points from notConnected to connected\n            let p = this._getFromTo(connected, notConnected);\n            let from = p[0]; // notConnected\n            let to = p[1]; // connected\n            // find everything connected to the starting point\n            let local = {};\n            local[this._pointKey(from)] = from;\n            this._findConnected(local, notConnected, [from], true, value);\n            // connect to a connected cell\n            let tunnelFn = (this._options.topology == 6 ? this._tunnelToConnected6 : this._tunnelToConnected);\n            tunnelFn.call(this, to, from, connected, notConnected, value, connectionCallback);\n            // now all of local is connected\n            for (let k in local) {\n                let pp = local[k];\n                this._map[pp[0]][pp[1]] = value;\n                connected[k] = pp;\n                delete notConnected[k];\n            }\n        }\n        callback && this._serviceCallback(callback);\n    }\n    /**\n     * Find random points to connect. Search for the closest point in the larger space.\n     * This is to minimize the length of the passage while maintaining good performance.\n     */\n    _getFromTo(connected, notConnected) {\n        let from = [0, 0], to = [0, 0], d;\n        let connectedKeys = Object.keys(connected);\n        let notConnectedKeys = Object.keys(notConnected);\n        for (let i = 0; i < 5; i++) {\n            if (connectedKeys.length < notConnectedKeys.length) {\n                let keys = connectedKeys;\n                to = connected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                from = this._getClosest(to, notConnected);\n            }\n            else {\n                let keys = notConnectedKeys;\n                from = notConnected[keys[RNG.getUniformInt(0, keys.length - 1)]];\n                to = this._getClosest(from, connected);\n            }\n            d = (from[0] - to[0]) * (from[0] - to[0]) + (from[1] - to[1]) * (from[1] - to[1]);\n            if (d < 64) {\n                break;\n            }\n        }\n        // console.log(\">>> connected=\" + to + \" notConnected=\" + from + \" dist=\" + d);\n        return [from, to];\n    }\n    _getClosest(point, space) {\n        let minPoint = null;\n        let minDist = null;\n        for (let k in space) {\n            let p = space[k];\n            let d = (p[0] - point[0]) * (p[0] - point[0]) + (p[1] - point[1]) * (p[1] - point[1]);\n            if (minDist == null || d < minDist) {\n                minDist = d;\n                minPoint = p;\n            }\n        }\n        return minPoint;\n    }\n    _findConnected(connected, notConnected, stack, keepNotConnected, value) {\n        while (stack.length > 0) {\n            let p = stack.splice(0, 1)[0];\n            let tests;\n            if (this._options.topology == 6) {\n                tests = [\n                    [p[0] + 2, p[1]],\n                    [p[0] + 1, p[1] - 1],\n                    [p[0] - 1, p[1] - 1],\n                    [p[0] - 2, p[1]],\n                    [p[0] - 1, p[1] + 1],\n                    [p[0] + 1, p[1] + 1],\n                ];\n            }\n            else {\n                tests = [\n                    [p[0] + 1, p[1]],\n                    [p[0] - 1, p[1]],\n                    [p[0], p[1] + 1],\n                    [p[0], p[1] - 1]\n                ];\n            }\n            for (let i = 0; i < tests.length; i++) {\n                let key = this._pointKey(tests[i]);\n                if (connected[key] == null && this._freeSpace(tests[i][0], tests[i][1], value)) {\n                    connected[key] = tests[i];\n                    if (!keepNotConnected) {\n                        delete notConnected[key];\n                    }\n                    stack.push(tests[i]);\n                }\n            }\n        }\n    }\n    _tunnelToConnected(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let xx = a[0]; xx <= b[0]; xx++) {\n            this._map[xx][a[1]] = value;\n            let p = [xx, a[1]];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[0] < b[0]) {\n            connectionCallback(a, [b[0], a[1]]);\n        }\n        // x is now fixed\n        let x = b[0];\n        if (from[1] < to[1]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        for (let yy = a[1]; yy < b[1]; yy++) {\n            this._map[x][yy] = value;\n            let p = [x, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback && a[1] < b[1]) {\n            connectionCallback([b[0], a[1]], [b[0], b[1]]);\n        }\n    }\n    _tunnelToConnected6(to, from, connected, notConnected, value, connectionCallback) {\n        let a, b;\n        if (from[0] < to[0]) {\n            a = from;\n            b = to;\n        }\n        else {\n            a = to;\n            b = from;\n        }\n        // tunnel diagonally until horizontally level\n        let xx = a[0];\n        let yy = a[1];\n        while (!(xx == b[0] && yy == b[1])) {\n            let stepWidth = 2;\n            if (yy < b[1]) {\n                yy++;\n                stepWidth = 1;\n            }\n            else if (yy > b[1]) {\n                yy--;\n                stepWidth = 1;\n            }\n            if (xx < b[0]) {\n                xx += stepWidth;\n            }\n            else if (xx > b[0]) {\n                xx -= stepWidth;\n            }\n            else if (b[1] % 2) {\n                // Won't step outside map if destination on is map's right edge\n                xx -= stepWidth;\n            }\n            else {\n                // ditto for left edge\n                xx += stepWidth;\n            }\n            this._map[xx][yy] = value;\n            let p = [xx, yy];\n            let pkey = this._pointKey(p);\n            connected[pkey] = p;\n            delete notConnected[pkey];\n        }\n        if (connectionCallback) {\n            connectionCallback(from, to);\n        }\n    }\n    _freeSpace(x, y, value) {\n        return x >= 0 && x < this._width && y >= 0 && y < this._height && this._map[x][y] == value;\n    }\n    _pointKey(p) { return p[0] + \".\" + p[1]; }\n}\n","import Dungeon from \"./dungeon.js\";\nimport { Room, Corridor } from \"./features.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\nconst FEATURES = {\n    \"room\": Room,\n    \"corridor\": Corridor\n};\n/**\n * Random dungeon generator using human-like digging patterns.\n * Heavily based on Mike Anderson's ideas from the \"Tyrant\" algo, mentioned at\n * http://www.roguebasin.roguelikedevelopment.org/index.php?title=Dungeon-Building_Algorithm.\n */\nexport default class Digger extends Dungeon {\n    constructor(width, height, options = {}) {\n        super(width, height);\n        this._options = Object.assign({\n            roomWidth: [3, 9],\n            roomHeight: [3, 5],\n            corridorLength: [3, 10],\n            dugPercentage: 0.2,\n            timeLimit: 1000 /* we stop after this much time has passed (msec) */\n        }, options);\n        this._features = {\n            \"room\": 4,\n            \"corridor\": 4\n        };\n        this._map = [];\n        this._featureAttempts = 20; /* how many times do we try to create a feature on a suitable wall */\n        this._walls = {}; /* these are available for digging */\n        this._dug = 0;\n        this._digCallback = this._digCallback.bind(this);\n        this._canBeDugCallback = this._canBeDugCallback.bind(this);\n        this._isWallCallback = this._isWallCallback.bind(this);\n        this._priorityWallCallback = this._priorityWallCallback.bind(this);\n    }\n    create(callback) {\n        this._rooms = [];\n        this._corridors = [];\n        this._map = this._fillMap(1);\n        this._walls = {};\n        this._dug = 0;\n        let area = (this._width - 2) * (this._height - 2);\n        this._firstRoom();\n        let t1 = Date.now();\n        let priorityWalls;\n        do {\n            priorityWalls = 0;\n            let t2 = Date.now();\n            if (t2 - t1 > this._options.timeLimit) {\n                break;\n            }\n            /* find a good wall */\n            let wall = this._findWall();\n            if (!wall) {\n                break;\n            } /* no more walls */\n            let parts = wall.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            let dir = this._getDiggingDirection(x, y);\n            if (!dir) {\n                continue;\n            } /* this wall is not suitable */\n            //\t\tconsole.log(\"wall\", x, y);\n            /* try adding a feature */\n            let featureAttempts = 0;\n            do {\n                featureAttempts++;\n                if (this._tryFeature(x, y, dir[0], dir[1])) { /* feature added */\n                    //if (this._rooms.length + this._corridors.length == 2) { this._rooms[0].addDoor(x, y); } /* first room oficially has doors */\n                    this._removeSurroundingWalls(x, y);\n                    this._removeSurroundingWalls(x - dir[0], y - dir[1]);\n                    break;\n                }\n            } while (featureAttempts < this._featureAttempts);\n            for (let id in this._walls) {\n                if (this._walls[id] > 1) {\n                    priorityWalls++;\n                }\n            }\n        } while (this._dug / area < this._options.dugPercentage || priorityWalls); /* fixme number of priority walls */\n        this._addDoors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this._map[i][j]);\n                }\n            }\n        }\n        this._walls = {};\n        this._map = [];\n        return this;\n    }\n    _digCallback(x, y, value) {\n        if (value == 0 || value == 2) { /* empty */\n            this._map[x][y] = 0;\n            this._dug++;\n        }\n        else { /* wall */\n            this._walls[x + \",\" + y] = 1;\n        }\n    }\n    _isWallCallback(x, y) {\n        if (x < 0 || y < 0 || x >= this._width || y >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _canBeDugCallback(x, y) {\n        if (x < 1 || y < 1 || x + 1 >= this._width || y + 1 >= this._height) {\n            return false;\n        }\n        return (this._map[x][y] == 1);\n    }\n    _priorityWallCallback(x, y) { this._walls[x + \",\" + y] = 2; }\n    ;\n    _firstRoom() {\n        let cx = Math.floor(this._width / 2);\n        let cy = Math.floor(this._height / 2);\n        let room = Room.createRandomCenter(cx, cy, this._options);\n        this._rooms.push(room);\n        room.create(this._digCallback);\n    }\n    /**\n     * Get a suitable wall\n     */\n    _findWall() {\n        let prio1 = [];\n        let prio2 = [];\n        for (let id in this._walls) {\n            let prio = this._walls[id];\n            if (prio == 2) {\n                prio2.push(id);\n            }\n            else {\n                prio1.push(id);\n            }\n        }\n        let arr = (prio2.length ? prio2 : prio1);\n        if (!arr.length) {\n            return null;\n        } /* no walls :/ */\n        let id = RNG.getItem(arr.sort()); // sort to make the order deterministic\n        delete this._walls[id];\n        return id;\n    }\n    /**\n     * Tries adding a feature\n     * @returns {bool} was this a successful try?\n     */\n    _tryFeature(x, y, dx, dy) {\n        let featureName = RNG.getWeightedValue(this._features);\n        let ctor = FEATURES[featureName];\n        let feature = ctor.createRandomAt(x, y, dx, dy, this._options);\n        if (!feature.isValid(this._isWallCallback, this._canBeDugCallback)) {\n            //\t\tconsole.log(\"not valid\");\n            //\t\tfeature.debug();\n            return false;\n        }\n        feature.create(this._digCallback);\n        //\tfeature.debug();\n        if (feature instanceof Room) {\n            this._rooms.push(feature);\n        }\n        if (feature instanceof Corridor) {\n            feature.createPriorityWalls(this._priorityWallCallback);\n            this._corridors.push(feature);\n        }\n        return true;\n    }\n    _removeSurroundingWalls(cx, cy) {\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            delete this._walls[x + \",\" + y];\n            x = cx + 2 * delta[0];\n            y = cy + 2 * delta[1];\n            delete this._walls[x + \",\" + y];\n        }\n    }\n    /**\n     * Returns vector in \"digging\" direction, or false, if this does not exist (or is not unique)\n     */\n    _getDiggingDirection(cx, cy) {\n        if (cx <= 0 || cy <= 0 || cx >= this._width - 1 || cy >= this._height - 1) {\n            return null;\n        }\n        let result = null;\n        let deltas = DIRS[4];\n        for (let i = 0; i < deltas.length; i++) {\n            let delta = deltas[i];\n            let x = cx + delta[0];\n            let y = cy + delta[1];\n            if (!this._map[x][y]) { /* there already is another empty neighbor! */\n                if (result) {\n                    return null;\n                }\n                result = delta;\n            }\n        }\n        /* no empty neighbor */\n        if (!result) {\n            return null;\n        }\n        return [-result[0], -result[1]];\n    }\n    /**\n     * Find empty spaces surrounding rooms, and apply doors.\n     */\n    _addDoors() {\n        let data = this._map;\n        function isWallCallback(x, y) {\n            return (data[x][y] == 1);\n        }\n        ;\n        for (let i = 0; i < this._rooms.length; i++) {\n            let room = this._rooms[i];\n            room.clearDoors();\n            room.addDoors(isWallCallback);\n        }\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Join lists with \"i\" and \"i+1\"\n */\nfunction addToList(i, L, R) {\n    R[L[i + 1]] = R[i];\n    L[R[i]] = L[i + 1];\n    R[i] = i + 1;\n    L[i + 1] = i;\n}\n/**\n * Remove \"i\" from its list\n */\nfunction removeFromList(i, L, R) {\n    R[L[i]] = R[i];\n    L[R[i]] = L[i];\n    R[i] = i;\n    L[i] = i;\n}\n/**\n * Maze generator - Eller's algorithm\n * See http://homepages.cwi.nl/~tromp/maze.html for explanation\n */\nexport default class EllerMaze extends Map {\n    create(callback) {\n        let map = this._fillMap(1);\n        let w = Math.ceil((this._width - 2) / 2);\n        let rand = 9 / 24;\n        let L = [];\n        let R = [];\n        for (let i = 0; i < w; i++) {\n            L.push(i);\n            R.push(i);\n        }\n        L.push(w - 1); /* fake stop-block at the right side */\n        let j;\n        for (j = 1; j + 3 < this._height; j += 2) {\n            /* one row */\n            for (let i = 0; i < w; i++) {\n                /* cell coords (will be always empty) */\n                let x = 2 * i + 1;\n                let y = j;\n                map[x][y] = 0;\n                /* right connection */\n                if (i != L[i + 1] && RNG.getUniform() > rand) {\n                    addToList(i, L, R);\n                    map[x + 1][y] = 0;\n                }\n                /* bottom connection */\n                if (i != L[i] && RNG.getUniform() > rand) {\n                    /* remove connection */\n                    removeFromList(i, L, R);\n                }\n                else {\n                    /* create connection */\n                    map[x][y + 1] = 0;\n                }\n            }\n        }\n        /* last row */\n        for (let i = 0; i < w; i++) {\n            /* cell coords (will be always empty) */\n            let x = 2 * i + 1;\n            let y = j;\n            map[x][y] = 0;\n            /* right connection */\n            if (i != L[i + 1] && (i == L[i] || RNG.getUniform() > rand)) {\n                /* dig right also if the cell is separated, so it gets connected to the rest of maze */\n                addToList(i, L, R);\n                map[x + 1][y] = 0;\n            }\n            removeFromList(i, L, R);\n        }\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        return this;\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * @class Recursively divided maze, http://en.wikipedia.org/wiki/Maze_generation_algorithm#Recursive_division_method\n * @augments ROT.Map\n */\nexport default class DividedMaze extends Map {\n    constructor() {\n        super(...arguments);\n        this._stack = [];\n        this._map = [];\n    }\n    create(callback) {\n        let w = this._width;\n        let h = this._height;\n        this._map = [];\n        for (let i = 0; i < w; i++) {\n            this._map.push([]);\n            for (let j = 0; j < h; j++) {\n                let border = (i == 0 || j == 0 || i + 1 == w || j + 1 == h);\n                this._map[i].push(border ? 1 : 0);\n            }\n        }\n        this._stack = [\n            [1, 1, w - 2, h - 2]\n        ];\n        this._process();\n        for (let i = 0; i < w; i++) {\n            for (let j = 0; j < h; j++) {\n                callback(i, j, this._map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _process() {\n        while (this._stack.length) {\n            let room = this._stack.shift(); /* [left, top, right, bottom] */\n            this._partitionRoom(room);\n        }\n    }\n    _partitionRoom(room) {\n        let availX = [];\n        let availY = [];\n        for (let i = room[0] + 1; i < room[2]; i++) {\n            let top = this._map[i][room[1] - 1];\n            let bottom = this._map[i][room[3] + 1];\n            if (top && bottom && !(i % 2)) {\n                availX.push(i);\n            }\n        }\n        for (let j = room[1] + 1; j < room[3]; j++) {\n            let left = this._map[room[0] - 1][j];\n            let right = this._map[room[2] + 1][j];\n            if (left && right && !(j % 2)) {\n                availY.push(j);\n            }\n        }\n        if (!availX.length || !availY.length) {\n            return;\n        }\n        let x = RNG.getItem(availX);\n        let y = RNG.getItem(availY);\n        this._map[x][y] = 1;\n        let walls = [];\n        let w = [];\n        walls.push(w); /* left part */\n        for (let i = room[0]; i < x; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* right part */\n        for (let i = x + 1; i <= room[2]; i++) {\n            this._map[i][y] = 1;\n            if (i % 2)\n                w.push([i, y]);\n        }\n        w = [];\n        walls.push(w); /* top part */\n        for (let j = room[1]; j < y; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        w = [];\n        walls.push(w); /* bottom part */\n        for (let j = y + 1; j <= room[3]; j++) {\n            this._map[x][j] = 1;\n            if (j % 2)\n                w.push([x, j]);\n        }\n        let solid = RNG.getItem(walls);\n        for (let i = 0; i < walls.length; i++) {\n            let w = walls[i];\n            if (w == solid) {\n                continue;\n            }\n            let hole = RNG.getItem(w);\n            this._map[hole[0]][hole[1]] = 0;\n        }\n        this._stack.push([room[0], room[1], x - 1, y - 1]); /* left top */\n        this._stack.push([x + 1, room[1], room[2], y - 1]); /* right top */\n        this._stack.push([room[0], y + 1, x - 1, room[3]]); /* left bottom */\n        this._stack.push([x + 1, y + 1, room[2], room[3]]); /* right bottom */\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\n/**\n * Icey's Maze generator\n * See http://www.roguebasin.roguelikedevelopment.org/index.php?title=Simple_maze for explanation\n */\nexport default class IceyMaze extends Map {\n    constructor(width, height, regularity = 0) {\n        super(width, height);\n        this._regularity = regularity;\n        this._map = [];\n    }\n    create(callback) {\n        let width = this._width;\n        let height = this._height;\n        let map = this._fillMap(1);\n        width -= (width % 2 ? 1 : 2);\n        height -= (height % 2 ? 1 : 2);\n        let cx = 0;\n        let cy = 0;\n        let nx = 0;\n        let ny = 0;\n        let done = 0;\n        let blocked = false;\n        let dirs = [\n            [0, 0],\n            [0, 0],\n            [0, 0],\n            [0, 0]\n        ];\n        do {\n            cx = 1 + 2 * Math.floor(RNG.getUniform() * (width - 1) / 2);\n            cy = 1 + 2 * Math.floor(RNG.getUniform() * (height - 1) / 2);\n            if (!done) {\n                map[cx][cy] = 0;\n            }\n            if (!map[cx][cy]) {\n                this._randomize(dirs);\n                do {\n                    if (Math.floor(RNG.getUniform() * (this._regularity + 1)) == 0) {\n                        this._randomize(dirs);\n                    }\n                    blocked = true;\n                    for (let i = 0; i < 4; i++) {\n                        nx = cx + dirs[i][0] * 2;\n                        ny = cy + dirs[i][1] * 2;\n                        if (this._isFree(map, nx, ny, width, height)) {\n                            map[nx][ny] = 0;\n                            map[cx + dirs[i][0]][cy + dirs[i][1]] = 0;\n                            cx = nx;\n                            cy = ny;\n                            blocked = false;\n                            done++;\n                            break;\n                        }\n                    }\n                } while (!blocked);\n            }\n        } while (done + 1 < width * height / 4);\n        for (let i = 0; i < this._width; i++) {\n            for (let j = 0; j < this._height; j++) {\n                callback(i, j, map[i][j]);\n            }\n        }\n        this._map = [];\n        return this;\n    }\n    _randomize(dirs) {\n        for (let i = 0; i < 4; i++) {\n            dirs[i][0] = 0;\n            dirs[i][1] = 0;\n        }\n        switch (Math.floor(RNG.getUniform() * 4)) {\n            case 0:\n                dirs[0][0] = -1;\n                dirs[1][0] = 1;\n                dirs[2][1] = -1;\n                dirs[3][1] = 1;\n                break;\n            case 1:\n                dirs[3][0] = -1;\n                dirs[2][0] = 1;\n                dirs[1][1] = -1;\n                dirs[0][1] = 1;\n                break;\n            case 2:\n                dirs[2][0] = -1;\n                dirs[3][0] = 1;\n                dirs[0][1] = -1;\n                dirs[1][1] = 1;\n                break;\n            case 3:\n                dirs[1][0] = -1;\n                dirs[0][0] = 1;\n                dirs[3][1] = -1;\n                dirs[2][1] = 1;\n                break;\n        }\n    }\n    _isFree(map, x, y, width, height) {\n        if (x < 1 || y < 1 || x >= width || y >= height) {\n            return false;\n        }\n        return map[x][y];\n    }\n}\n","import Map from \"./map.js\";\nimport RNG from \"../rng.js\";\nimport { DIRS } from \"../constants.js\";\n/**\n * Dungeon generator which uses the \"orginal\" Rogue dungeon generation algorithm. See http://kuoi.com/~kamikaze/GameDesign/art07_rogue_dungeon.php\n * @author hyakugei\n */\nexport default class Rogue extends Map {\n    constructor(width, height, options) {\n        super(width, height);\n        this.map = [];\n        this.rooms = [];\n        this.connectedCells = [];\n        options = Object.assign({\n            cellWidth: 3,\n            cellHeight: 3 //     ie. as an array with min-max values for each direction....\n        }, options);\n        /*\n        Set the room sizes according to the over-all width of the map,\n        and the cell sizes.\n        */\n        if (!options.hasOwnProperty(\"roomWidth\")) {\n            options[\"roomWidth\"] = this._calculateRoomSize(this._width, options[\"cellWidth\"]);\n        }\n        if (!options.hasOwnProperty(\"roomHeight\")) {\n            options[\"roomHeight\"] = this._calculateRoomSize(this._height, options[\"cellHeight\"]);\n        }\n        this._options = options;\n    }\n    create(callback) {\n        this.map = this._fillMap(1);\n        this.rooms = [];\n        this.connectedCells = [];\n        this._initRooms();\n        this._connectRooms();\n        this._connectUnconnectedRooms();\n        this._createRandomRoomConnections();\n        this._createRooms();\n        this._createCorridors();\n        if (callback) {\n            for (let i = 0; i < this._width; i++) {\n                for (let j = 0; j < this._height; j++) {\n                    callback(i, j, this.map[i][j]);\n                }\n            }\n        }\n        return this;\n    }\n    _calculateRoomSize(size, cell) {\n        let max = Math.floor((size / cell) * 0.8);\n        let min = Math.floor((size / cell) * 0.25);\n        if (min < 2) {\n            min = 2;\n        }\n        if (max < 2) {\n            max = 2;\n        }\n        return [min, max];\n    }\n    _initRooms() {\n        // create rooms array. This is the \"grid\" list from the algo.\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            this.rooms.push([]);\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                this.rooms[i].push({ \"x\": 0, \"y\": 0, \"width\": 0, \"height\": 0, \"connections\": [], \"cellx\": i, \"celly\": j });\n            }\n        }\n    }\n    _connectRooms() {\n        //pick random starting grid\n        let cgx = RNG.getUniformInt(0, this._options.cellWidth - 1);\n        let cgy = RNG.getUniformInt(0, this._options.cellHeight - 1);\n        let idx;\n        let ncgx;\n        let ncgy;\n        let found = false;\n        let room;\n        let otherRoom;\n        let dirToCheck;\n        // find  unconnected neighbour cells\n        do {\n            //dirToCheck = [0, 1, 2, 3, 4, 5, 6, 7];\n            dirToCheck = [0, 2, 4, 6];\n            dirToCheck = RNG.shuffle(dirToCheck);\n            do {\n                found = false;\n                idx = dirToCheck.pop();\n                ncgx = cgx + DIRS[8][idx][0];\n                ncgy = cgy + DIRS[8][idx][1];\n                if (ncgx < 0 || ncgx >= this._options.cellWidth) {\n                    continue;\n                }\n                if (ncgy < 0 || ncgy >= this._options.cellHeight) {\n                    continue;\n                }\n                room = this.rooms[cgx][cgy];\n                if (room[\"connections\"].length > 0) {\n                    // as long as this room doesn't already coonect to me, we are ok with it.\n                    if (room[\"connections\"][0][0] == ncgx && room[\"connections\"][0][1] == ncgy) {\n                        break;\n                    }\n                }\n                otherRoom = this.rooms[ncgx][ncgy];\n                if (otherRoom[\"connections\"].length == 0) {\n                    otherRoom[\"connections\"].push([cgx, cgy]);\n                    this.connectedCells.push([ncgx, ncgy]);\n                    cgx = ncgx;\n                    cgy = ncgy;\n                    found = true;\n                }\n            } while (dirToCheck.length > 0 && found == false);\n        } while (dirToCheck.length > 0);\n    }\n    _connectUnconnectedRooms() {\n        //While there are unconnected rooms, try to connect them to a random connected neighbor\n        //(if a room has no connected neighbors yet, just keep cycling, you'll fill out to it eventually).\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        this.connectedCells = RNG.shuffle(this.connectedCells);\n        let room;\n        let otherRoom;\n        let validRoom;\n        for (let i = 0; i < this._options.cellWidth; i++) {\n            for (let j = 0; j < this._options.cellHeight; j++) {\n                room = this.rooms[i][j];\n                if (room[\"connections\"].length == 0) {\n                    let directions = [0, 2, 4, 6];\n                    directions = RNG.shuffle(directions);\n                    validRoom = false;\n                    do {\n                        let dirIdx = directions.pop();\n                        let newI = i + DIRS[8][dirIdx][0];\n                        let newJ = j + DIRS[8][dirIdx][1];\n                        if (newI < 0 || newI >= cw || newJ < 0 || newJ >= ch) {\n                            continue;\n                        }\n                        otherRoom = this.rooms[newI][newJ];\n                        validRoom = true;\n                        if (otherRoom[\"connections\"].length == 0) {\n                            break;\n                        }\n                        for (let k = 0; k < otherRoom[\"connections\"].length; k++) {\n                            if (otherRoom[\"connections\"][k][0] == i && otherRoom[\"connections\"][k][1] == j) {\n                                validRoom = false;\n                                break;\n                            }\n                        }\n                        if (validRoom) {\n                            break;\n                        }\n                    } while (directions.length);\n                    if (validRoom) {\n                        room[\"connections\"].push([otherRoom[\"cellx\"], otherRoom[\"celly\"]]);\n                    }\n                    else {\n                        console.log(\"-- Unable to connect room.\");\n                    }\n                }\n            }\n        }\n    }\n    _createRandomRoomConnections() {\n        // Empty for now.\n    }\n    _createRooms() {\n        let w = this._width;\n        let h = this._height;\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let cwp = Math.floor(this._width / cw);\n        let chp = Math.floor(this._height / ch);\n        let roomw;\n        let roomh;\n        let roomWidth = this._options[\"roomWidth\"];\n        let roomHeight = this._options[\"roomHeight\"];\n        let sx;\n        let sy;\n        let otherRoom;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                sx = cwp * i;\n                sy = chp * j;\n                if (sx == 0) {\n                    sx = 1;\n                }\n                if (sy == 0) {\n                    sy = 1;\n                }\n                roomw = RNG.getUniformInt(roomWidth[0], roomWidth[1]);\n                roomh = RNG.getUniformInt(roomHeight[0], roomHeight[1]);\n                if (j > 0) {\n                    otherRoom = this.rooms[i][j - 1];\n                    while (sy - (otherRoom[\"y\"] + otherRoom[\"height\"]) < 3) {\n                        sy++;\n                    }\n                }\n                if (i > 0) {\n                    otherRoom = this.rooms[i - 1][j];\n                    while (sx - (otherRoom[\"x\"] + otherRoom[\"width\"]) < 3) {\n                        sx++;\n                    }\n                }\n                let sxOffset = Math.round(RNG.getUniformInt(0, cwp - roomw) / 2);\n                let syOffset = Math.round(RNG.getUniformInt(0, chp - roomh) / 2);\n                while (sx + sxOffset + roomw >= w) {\n                    if (sxOffset) {\n                        sxOffset--;\n                    }\n                    else {\n                        roomw--;\n                    }\n                }\n                while (sy + syOffset + roomh >= h) {\n                    if (syOffset) {\n                        syOffset--;\n                    }\n                    else {\n                        roomh--;\n                    }\n                }\n                sx = sx + sxOffset;\n                sy = sy + syOffset;\n                this.rooms[i][j][\"x\"] = sx;\n                this.rooms[i][j][\"y\"] = sy;\n                this.rooms[i][j][\"width\"] = roomw;\n                this.rooms[i][j][\"height\"] = roomh;\n                for (let ii = sx; ii < sx + roomw; ii++) {\n                    for (let jj = sy; jj < sy + roomh; jj++) {\n                        this.map[ii][jj] = 0;\n                    }\n                }\n            }\n        }\n    }\n    _getWallPosition(aRoom, aDirection) {\n        let rx;\n        let ry;\n        let door;\n        if (aDirection == 1 || aDirection == 3) {\n            rx = RNG.getUniformInt(aRoom[\"x\"] + 1, aRoom[\"x\"] + aRoom[\"width\"] - 2);\n            if (aDirection == 1) {\n                ry = aRoom[\"y\"] - 2;\n                door = ry + 1;\n            }\n            else {\n                ry = aRoom[\"y\"] + aRoom[\"height\"] + 1;\n                door = ry - 1;\n            }\n            this.map[rx][door] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        else {\n            ry = RNG.getUniformInt(aRoom[\"y\"] + 1, aRoom[\"y\"] + aRoom[\"height\"] - 2);\n            if (aDirection == 2) {\n                rx = aRoom[\"x\"] + aRoom[\"width\"] + 1;\n                door = rx - 1;\n            }\n            else {\n                rx = aRoom[\"x\"] - 2;\n                door = rx + 1;\n            }\n            this.map[door][ry] = 0; // i'm not setting a specific 'door' tile value right now, just empty space.\n        }\n        return [rx, ry];\n    }\n    _drawCorridor(startPosition, endPosition) {\n        let xOffset = endPosition[0] - startPosition[0];\n        let yOffset = endPosition[1] - startPosition[1];\n        let xpos = startPosition[0];\n        let ypos = startPosition[1];\n        let tempDist;\n        let xDir;\n        let yDir;\n        let move; // 2 element array, element 0 is the direction, element 1 is the total value to move.\n        let moves = []; // a list of 2 element arrays\n        let xAbs = Math.abs(xOffset);\n        let yAbs = Math.abs(yOffset);\n        let percent = RNG.getUniform(); // used to split the move at different places along the long axis\n        let firstHalf = percent;\n        let secondHalf = 1 - percent;\n        xDir = xOffset > 0 ? 2 : 6;\n        yDir = yOffset > 0 ? 4 : 0;\n        if (xAbs < yAbs) {\n            // move firstHalf of the y offset\n            tempDist = Math.ceil(yAbs * firstHalf);\n            moves.push([yDir, tempDist]);\n            // move all the x offset\n            moves.push([xDir, xAbs]);\n            // move sendHalf of the  y offset\n            tempDist = Math.floor(yAbs * secondHalf);\n            moves.push([yDir, tempDist]);\n        }\n        else {\n            //  move firstHalf of the x offset\n            tempDist = Math.ceil(xAbs * firstHalf);\n            moves.push([xDir, tempDist]);\n            // move all the y offset\n            moves.push([yDir, yAbs]);\n            // move secondHalf of the x offset.\n            tempDist = Math.floor(xAbs * secondHalf);\n            moves.push([xDir, tempDist]);\n        }\n        this.map[xpos][ypos] = 0;\n        while (moves.length > 0) {\n            move = moves.pop();\n            while (move[1] > 0) {\n                xpos += DIRS[8][move[0]][0];\n                ypos += DIRS[8][move[0]][1];\n                this.map[xpos][ypos] = 0;\n                move[1] = move[1] - 1;\n            }\n        }\n    }\n    _createCorridors() {\n        // Draw Corridors between connected rooms\n        let cw = this._options.cellWidth;\n        let ch = this._options.cellHeight;\n        let room;\n        let connection;\n        let otherRoom;\n        let wall;\n        let otherWall;\n        for (let i = 0; i < cw; i++) {\n            for (let j = 0; j < ch; j++) {\n                room = this.rooms[i][j];\n                for (let k = 0; k < room[\"connections\"].length; k++) {\n                    connection = room[\"connections\"][k];\n                    otherRoom = this.rooms[connection[0]][connection[1]];\n                    // figure out what wall our corridor will start one.\n                    // figure out what wall our corridor will end on.\n                    if (otherRoom[\"cellx\"] > room[\"cellx\"]) {\n                        wall = 2;\n                        otherWall = 4;\n                    }\n                    else if (otherRoom[\"cellx\"] < room[\"cellx\"]) {\n                        wall = 4;\n                        otherWall = 2;\n                    }\n                    else if (otherRoom[\"celly\"] > room[\"celly\"]) {\n                        wall = 3;\n                        otherWall = 1;\n                    }\n                    else {\n                        wall = 1;\n                        otherWall = 3;\n                    }\n                    this._drawCorridor(this._getWallPosition(room, wall), this._getWallPosition(otherRoom, otherWall));\n                }\n            }\n        }\n    }\n}\n","import Simplex from \"./simplex.js\";\nexport default { Simplex };\n","import Noise from \"./noise.js\";\nimport RNG from \"../rng.js\";\nimport { mod } from \"../util.js\";\nconst F2 = 0.5 * (Math.sqrt(3) - 1);\nconst G2 = (3 - Math.sqrt(3)) / 6;\n/**\n * A simple 2d implementation of simplex noise by Ondrej Zara\n *\n * Based on a speed-improved simplex noise algorithm for 2D, 3D and 4D in Java.\n * Which is based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * With Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n */\nexport default class Simplex extends Noise {\n    /**\n     * @param gradients Random gradients\n     */\n    constructor(gradients = 256) {\n        super();\n        this._gradients = [\n            [0, -1],\n            [1, -1],\n            [1, 0],\n            [1, 1],\n            [0, 1],\n            [-1, 1],\n            [-1, 0],\n            [-1, -1]\n        ];\n        let permutations = [];\n        for (let i = 0; i < gradients; i++) {\n            permutations.push(i);\n        }\n        permutations = RNG.shuffle(permutations);\n        this._perms = [];\n        this._indexes = [];\n        for (let i = 0; i < 2 * gradients; i++) {\n            this._perms.push(permutations[i % gradients]);\n            this._indexes.push(this._perms[i] % this._gradients.length);\n        }\n    }\n    get(xin, yin) {\n        let perms = this._perms;\n        let indexes = this._indexes;\n        let count = perms.length / 2;\n        let n0 = 0, n1 = 0, n2 = 0, gi; // Noise contributions from the three corners\n        // Skew the input space to determine which simplex cell we're in\n        let s = (xin + yin) * F2; // Hairy factor for 2D\n        let i = Math.floor(xin + s);\n        let j = Math.floor(yin + s);\n        let t = (i + j) * G2;\n        let X0 = i - t; // Unskew the cell origin back to (x,y) space\n        let Y0 = j - t;\n        let x0 = xin - X0; // The x,y distances from the cell origin\n        let y0 = yin - Y0;\n        // For the 2D case, the simplex shape is an equilateral triangle.\n        // Determine which simplex we are in.\n        let i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n        if (x0 > y0) {\n            i1 = 1;\n            j1 = 0;\n        }\n        else { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n            i1 = 0;\n            j1 = 1;\n        } // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n        // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n        // c = (3-sqrt(3))/6\n        let x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n        let y1 = y0 - j1 + G2;\n        let x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n        let y2 = y0 - 1 + 2 * G2;\n        // Work out the hashed gradient indices of the three simplex corners\n        let ii = mod(i, count);\n        let jj = mod(j, count);\n        // Calculate the contribution from the three corners\n        let t0 = 0.5 - x0 * x0 - y0 * y0;\n        if (t0 >= 0) {\n            t0 *= t0;\n            gi = indexes[ii + perms[jj]];\n            let grad = this._gradients[gi];\n            n0 = t0 * t0 * (grad[0] * x0 + grad[1] * y0);\n        }\n        let t1 = 0.5 - x1 * x1 - y1 * y1;\n        if (t1 >= 0) {\n            t1 *= t1;\n            gi = indexes[ii + i1 + perms[jj + j1]];\n            let grad = this._gradients[gi];\n            n1 = t1 * t1 * (grad[0] * x1 + grad[1] * y1);\n        }\n        let t2 = 0.5 - x2 * x2 - y2 * y2;\n        if (t2 >= 0) {\n            t2 *= t2;\n            gi = indexes[ii + 1 + perms[jj + 1]];\n            let grad = this._gradients[gi];\n            n2 = t2 * t2 * (grad[0] * x2 + grad[1] * y2);\n        }\n        // Add contributions from each corner to get the final noise value.\n        // The result is scaled to return values in the interval [-1,1].\n        return 70 * (n0 + n1 + n2);\n    }\n}\n","/**\n * Base noise generator\n */\nexport default class Noise {\n}\n","import Dijkstra from \"./dijkstra.js\";\nimport AStar from \"./astar.js\";\nexport default { Dijkstra, AStar };\n","import Path from \"./path.js\";\n/**\n * @class Simplified Dijkstra's algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class Dijkstra extends Path {\n    constructor(toX, toY, passableCallback, options) {\n        super(toX, toY, passableCallback, options);\n        this._computed = {};\n        this._todo = [];\n        this._add(toX, toY, null);\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        let key = fromX + \",\" + fromY;\n        if (!(key in this._computed)) {\n            this._compute(fromX, fromY);\n        }\n        if (!(key in this._computed)) {\n            return;\n        }\n        let item = this._computed[key];\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    /**\n     * Compute a non-cached value\n     */\n    _compute(fromX, fromY) {\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            if (item.x == fromX && item.y == fromY) {\n                return;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._computed) {\n                    continue;\n                } /* already done */\n                this._add(x, y, item);\n            }\n        }\n    }\n    _add(x, y, prev) {\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev\n        };\n        this._computed[x + \",\" + y] = obj;\n        this._todo.push(obj);\n    }\n}\n","import { DIRS } from \"../constants.js\";\n/**\n * @class Abstract pathfinder\n * @param {int} toX Target X coord\n * @param {int} toY Target Y coord\n * @param {function} passableCallback Callback to determine map passability\n * @param {object} [options]\n * @param {int} [options.topology=8]\n */\nexport default class Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        this._toX = toX;\n        this._toY = toY;\n        this._passableCallback = passableCallback;\n        this._options = Object.assign({\n            topology: 8\n        }, options);\n        this._dirs = DIRS[this._options.topology];\n        if (this._options.topology == 8) { /* reorder dirs for more aesthetic result (vertical/horizontal first) */\n            this._dirs = [\n                this._dirs[0],\n                this._dirs[2],\n                this._dirs[4],\n                this._dirs[6],\n                this._dirs[1],\n                this._dirs[3],\n                this._dirs[5],\n                this._dirs[7]\n            ];\n        }\n    }\n    _getNeighbors(cx, cy) {\n        let result = [];\n        for (let i = 0; i < this._dirs.length; i++) {\n            let dir = this._dirs[i];\n            let x = cx + dir[0];\n            let y = cy + dir[1];\n            if (!this._passableCallback(x, y)) {\n                continue;\n            }\n            result.push([x, y]);\n        }\n        return result;\n    }\n}\n","import Path from \"./path.js\";\n/**\n * @class Simplified A* algorithm: all edges have a value of 1\n * @augments ROT.Path\n * @see ROT.Path\n */\nexport default class AStar extends Path {\n    constructor(toX, toY, passableCallback, options = {}) {\n        super(toX, toY, passableCallback, options);\n        this._todo = [];\n        this._done = {};\n    }\n    /**\n     * Compute a path from a given point\n     * @see ROT.Path#compute\n     */\n    compute(fromX, fromY, callback) {\n        this._todo = [];\n        this._done = {};\n        this._fromX = fromX;\n        this._fromY = fromY;\n        this._add(this._toX, this._toY, null);\n        while (this._todo.length) {\n            let item = this._todo.shift();\n            let id = item.x + \",\" + item.y;\n            if (id in this._done) {\n                continue;\n            }\n            this._done[id] = item;\n            if (item.x == fromX && item.y == fromY) {\n                break;\n            }\n            let neighbors = this._getNeighbors(item.x, item.y);\n            for (let i = 0; i < neighbors.length; i++) {\n                let neighbor = neighbors[i];\n                let x = neighbor[0];\n                let y = neighbor[1];\n                let id = x + \",\" + y;\n                if (id in this._done) {\n                    continue;\n                }\n                this._add(x, y, item);\n            }\n        }\n        let item = this._done[fromX + \",\" + fromY];\n        if (!item) {\n            return;\n        }\n        while (item) {\n            callback(item.x, item.y);\n            item = item.prev;\n        }\n    }\n    _add(x, y, prev) {\n        let h = this._distance(x, y);\n        let obj = {\n            x: x,\n            y: y,\n            prev: prev,\n            g: (prev ? prev.g + 1 : 0),\n            h: h\n        };\n        /* insert into priority queue */\n        let f = obj.g + obj.h;\n        for (let i = 0; i < this._todo.length; i++) {\n            let item = this._todo[i];\n            let itemF = item.g + item.h;\n            if (f < itemF || (f == itemF && h < item.h)) {\n                this._todo.splice(i, 0, obj);\n                return;\n            }\n        }\n        this._todo.push(obj);\n    }\n    _distance(x, y) {\n        switch (this._options.topology) {\n            case 4:\n                return (Math.abs(x - this._fromX) + Math.abs(y - this._fromY));\n                break;\n            case 6:\n                let dx = Math.abs(x - this._fromX);\n                let dy = Math.abs(y - this._fromY);\n                return dy + Math.max(0, (dx - dy) / 2);\n                break;\n            case 8:\n                return Math.max(Math.abs(x - this._fromX), Math.abs(y - this._fromY));\n                break;\n        }\n    }\n}\n","/**\n * @class Asynchronous main loop\n * @param {ROT.Scheduler} scheduler\n */\nexport default class Engine {\n    constructor(scheduler) {\n        this._scheduler = scheduler;\n        this._lock = 1;\n    }\n    /**\n     * Start the main loop. When this call returns, the loop is locked.\n     */\n    start() { return this.unlock(); }\n    /**\n     * Interrupt the engine by an asynchronous action\n     */\n    lock() {\n        this._lock++;\n        return this;\n    }\n    /**\n     * Resume execution (paused by a previous lock)\n     */\n    unlock() {\n        if (!this._lock) {\n            throw new Error(\"Cannot unlock unlocked engine\");\n        }\n        this._lock--;\n        while (!this._lock) {\n            let actor = this._scheduler.next();\n            if (!actor) {\n                return this.lock();\n            } /* no actors */\n            let result = actor.act();\n            if (result && result.then) { /* actor returned a \"thenable\", looks like a Promise */\n                this.lock();\n                result.then(this.unlock.bind(this));\n            }\n        }\n        return this;\n    }\n}\n","import * as Color from \"./color.js\";\n;\n;\n;\n;\n/**\n * Lighting computation, based on a traditional FOV for multiple light sources and multiple passes.\n */\nexport default class Lighting {\n    constructor(reflectivityCallback, options = {}) {\n        this._reflectivityCallback = reflectivityCallback;\n        this._options = {};\n        options = Object.assign({\n            passes: 1,\n            emissionThreshold: 100,\n            range: 10\n        }, options);\n        this._lights = {};\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        this.setOptions(options);\n    }\n    /**\n     * Adjust options at runtime\n     */\n    setOptions(options) {\n        Object.assign(this._options, options);\n        if (options && options.range) {\n            this.reset();\n        }\n        return this;\n    }\n    /**\n     * Set the used Field-Of-View algo\n     */\n    setFOV(fov) {\n        this._fov = fov;\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Set (or remove) a light source\n     */\n    setLight(x, y, color) {\n        let key = x + \",\" + y;\n        if (color) {\n            this._lights[key] = (typeof (color) == \"string\" ? Color.fromString(color) : color);\n        }\n        else {\n            delete this._lights[key];\n        }\n        return this;\n    }\n    /**\n     * Remove all light sources\n     */\n    clearLights() { this._lights = {}; }\n    /**\n     * Reset the pre-computed topology values. Call whenever the underlying map changes its light-passability.\n     */\n    reset() {\n        this._reflectivityCache = {};\n        this._fovCache = {};\n        return this;\n    }\n    /**\n     * Compute the lighting\n     */\n    compute(lightingCallback) {\n        let doneCells = {};\n        let emittingCells = {};\n        let litCells = {};\n        for (let key in this._lights) { /* prepare emitters for first pass */\n            let light = this._lights[key];\n            emittingCells[key] = [0, 0, 0];\n            Color.add_(emittingCells[key], light);\n        }\n        for (let i = 0; i < this._options.passes; i++) { /* main loop */\n            this._emitLight(emittingCells, litCells, doneCells);\n            if (i + 1 == this._options.passes) {\n                continue;\n            } /* not for the last pass */\n            emittingCells = this._computeEmitters(litCells, doneCells);\n        }\n        for (let litKey in litCells) { /* let the user know what and how is lit */\n            let parts = litKey.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            lightingCallback(x, y, litCells[litKey]);\n        }\n        return this;\n    }\n    /**\n     * Compute one iteration from all emitting cells\n     * @param emittingCells These emit light\n     * @param litCells Add projected light to these\n     * @param doneCells These already emitted, forbid them from further calculations\n     */\n    _emitLight(emittingCells, litCells, doneCells) {\n        for (let key in emittingCells) {\n            let parts = key.split(\",\");\n            let x = parseInt(parts[0]);\n            let y = parseInt(parts[1]);\n            this._emitLightFromCell(x, y, emittingCells[key], litCells);\n            doneCells[key] = 1;\n        }\n        return this;\n    }\n    /**\n     * Prepare a list of emitters for next pass\n     */\n    _computeEmitters(litCells, doneCells) {\n        let result = {};\n        for (let key in litCells) {\n            if (key in doneCells) {\n                continue;\n            } /* already emitted */\n            let color = litCells[key];\n            let reflectivity;\n            if (key in this._reflectivityCache) {\n                reflectivity = this._reflectivityCache[key];\n            }\n            else {\n                let parts = key.split(\",\");\n                let x = parseInt(parts[0]);\n                let y = parseInt(parts[1]);\n                reflectivity = this._reflectivityCallback(x, y);\n                this._reflectivityCache[key] = reflectivity;\n            }\n            if (reflectivity == 0) {\n                continue;\n            } /* will not reflect at all */\n            /* compute emission color */\n            let emission = [0, 0, 0];\n            let intensity = 0;\n            for (let i = 0; i < 3; i++) {\n                let part = Math.round(color[i] * reflectivity);\n                emission[i] = part;\n                intensity += part;\n            }\n            if (intensity > this._options.emissionThreshold) {\n                result[key] = emission;\n            }\n        }\n        return result;\n    }\n    /**\n     * Compute one iteration from one cell\n     */\n    _emitLightFromCell(x, y, color, litCells) {\n        let key = x + \",\" + y;\n        let fov;\n        if (key in this._fovCache) {\n            fov = this._fovCache[key];\n        }\n        else {\n            fov = this._updateFOV(x, y);\n        }\n        for (let fovKey in fov) {\n            let formFactor = fov[fovKey];\n            let result;\n            if (fovKey in litCells) { /* already lit */\n                result = litCells[fovKey];\n            }\n            else { /* newly lit */\n                result = [0, 0, 0];\n                litCells[fovKey] = result;\n            }\n            for (let i = 0; i < 3; i++) {\n                result[i] += Math.round(color[i] * formFactor);\n            } /* add light color */\n        }\n        return this;\n    }\n    /**\n     * Compute FOV (\"form factor\") for a potential light source at [x,y]\n     */\n    _updateFOV(x, y) {\n        let key1 = x + \",\" + y;\n        let cache = {};\n        this._fovCache[key1] = cache;\n        let range = this._options.range;\n        function cb(x, y, r, vis) {\n            let key2 = x + \",\" + y;\n            let formFactor = vis * (1 - r / range);\n            if (formFactor == 0) {\n                return;\n            }\n            cache[key2] = formFactor;\n        }\n        ;\n        this._fov.compute(x, y, range, cb.bind(this));\n        return cache;\n    }\n}\n","import InputKeyboardEvent from './events/InputKeyboardEvent';\nimport InputMouseEvent from './events/InputMouseEvent';\n\nexport default class InputController {\n    #game = null;\n\n    constructor(game) {\n        this.#game = game;\n        document.addEventListener('keydown', this.onKeydown.bind(this));\n\n        const container = this.#game.renderer.getDOMContainer();\n\n        container.addEventListener('click', this.onMouseClick.bind(this));\n        container.addEventListener('mousemove', this.onMouseMove.bind(this));\n        container.addEventListener('mouseenter', this.onMouseEnter.bind(this));\n        container.addEventListener('mouseleave', this.onMouseLeave.bind(this));\n    }\n\n    onKeydown(e) {\n        const evt = new InputKeyboardEvent({\n            key: e.keyCode,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n        });\n\n        this.#game.commandManager.onInputEvent(evt);\n    }\n\n    onMouseClick(e) {\n        const [tileX, tileY] = this.#game.renderer.eventToPosition(e);\n\n        const evt = new InputMouseEvent({\n            key: e.button,\n            x: e.offsetX,\n            y: e.offsetY,\n            shift: e.shiftKey,\n            ctrl: e.ctrlKey,\n            alt: e.altKey,\n            meta: e.metaKey,\n            tileX,\n            tileY,\n        });\n\n        this.#game.commandManager.onInputEvent(evt);\n    }\n\n    onMouseMove(e) {\n        const [tileX, tileY] = this.#game.renderer.eventToPosition(e);\n\n        this.#game.mouseManager.updatePosition(tileX, tileY);\n    }\n\n    onMouseEnter(e) {\n        this.#game.mouseManager.updateMouseEnter();\n    }\n\n    onMouseLeave(e) {\n        this.#game.mouseManager.updateMouseLeave();\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputKeyboardEvent extends InputEvent {\n}\n","export default class InputEvent {\n    key = false;\n    shift = false;\n    ctrl = false;\n    alt = false;\n    meta = false;\n\n    constructor(data) {\n        this.key = data.key\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n}\n","import InputEvent from './InputEvent';\n\nexport default class InputMouseEvent extends InputEvent {\n    x = false;\n    y = false;\n    tileX = false;\n    tileY = false;\n\n    constructor(data) {\n        super(data);\n        this.x = data.x;\n        this.y = data.y;\n        this.tileX = data.tileX;\n        this.tileY = data.tileY;\n    }\n}\n","import ecs from '../ecs';\nimport { Eater } from '../ecs/components';\nimport System from './System';\n\nexport default class HungerSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Eater],\n        });\n    }\n\n    update(dt) {\n        if (this.game.actionSystem.tickDelta > 0) {\n            this.#query.get().forEach((entity) => {\n                entity.eater.hunger -= this.game.actionSystem.tickDelta;\n            });\n        }\n    }\n}\n","export default class System {\n    #game = null;\n\n    get game() {\n        return this.#game;\n    }\n\n    constructor(game) {\n        this.#game = game;\n    }\n\n    update(dt) {}\n}\n","import ecs from '../ecs';\nimport { Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class ActionSystem extends System {\n    #tick = 0;\n    #tickDelta = 0;\n    #query = null;\n\n    constructor(game) {\n        super(game);\n\n        this.#query = ecs.createQuery({\n            all: [Actor],\n        });\n    }\n\n    get tick() {\n        return this.#tick;\n    }\n\n    get tickDelta() {\n        return this.#tickDelta;\n    }\n\n    get turn() {\n        return Math.floor(this.#tick / 1000);\n    }\n\n    get subTurn() {\n        return this.#tick - this.turn * 1000;\n    }\n\n    update(dt) {\n        const entities = this.#query.get();\n        const sorted = Array.from(entities);\n        sorted.sort((a, b) => (a.actor.energy < b.actor.energy ? 1 : -1));\n\n        const entity = sorted[0];\n        this.#tickDelta = 0;\n\n        if (!entity.actor.hasEnergy) {\n            this.#tickDelta = entity.actor.energy * -1;\n            this.#tick -= entity.actor.energy;\n\n            entities.forEach((entity) => {\n                entity.actor.addEnergy(this.#tickDelta);\n            });\n        }\n\n        if (entity.actor.hasEnergy && !entity.isPlayer) {\n            entity.fireEvent('take-action');\n        }\n    }\n}\n","import ecs from '../ecs';\nimport { Glyph, Position } from '../ecs/components';\nimport System from './System';\n\nexport default class RenderSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Glyph, Position],\n        });\n    }\n\n    update(dt) {\n        this.game.renderer.clear();\n\n        this.#query.get().forEach((renderable) => {\n            this.game.renderer.draw(\n                renderable.position.x,\n                renderable.position.y,\n                renderable.glyph.char,\n                renderable.glyph.fg,\n                renderable.glyph.bg\n            );\n        });\n    }\n}\n","import ecs from '../ecs';\nimport { MoveCommand, Position } from '../ecs/components';\nimport * as Directions from '../enums/Directions';\nimport System from './System';\nimport { INPUT_CMD_MOVE_NW } from '../core/input/InputCommandType';\n\nexport default class MovementSystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [MoveCommand, Position],\n        });\n    }\n\n    update(dt) {\n        this.#query.get().forEach((entity) => {\n            const delta = Directions.delta(entity.moveCommand.direction);\n\n            entity.fireEvent('TryMove', delta);\n\n            entity.moveCommand.destroy();\n        });\n    }\n\n    issueMoveCommand(entity, direction) {\n        if (entity.has(MoveCommand)) {\n            entity.remove(MoveCommand);\n        }\n        entity.add(MoveCommand, {\n            direction,\n        });\n    }\n}\n","export const INPUT_CMD_MOVE_NW = 0;\nexport const INPUT_CMD_MOVE_N = 1;\nexport const INPUT_CMD_MOVE_NE = 2;\nexport const INPUT_CMD_MOVE_W = 3;\nexport const INPUT_CMD_MOVE_E = 4;\nexport const INPUT_CMD_MOVE_SW = 5;\nexport const INPUT_CMD_MOVE_S = 6;\nexport const INPUT_CMD_MOVE_SE = 7;\nexport const INPUT_CMD_WAIT = 8;\nexport const INPUT_CMD_CONFIRM = 9;\nexport const INPUT_CMD_CANCEL = 10;\n","import ecs from '../ecs';\nimport { Moniker, Actor } from '../ecs/components';\nimport System from './System';\n\nexport default class UISystem extends System {\n    #query = null;\n\n    constructor(game) {\n        super(game);\n        this.#query = ecs.createQuery({\n            all: [Moniker, Actor],\n        });\n    }\n\n    update(dt) {\n        const turn = this.game.actionSystem.turn;\n        const subTurn = `${this.game.actionSystem.subTurn}`.padEnd(3, '0');\n\n        const x = this.game.mouseManager.x;\n        const y = this.game.mouseManager.y;\n        const hasMouse = this.game.mouseManager.hasMouse;\n\n        this.game.renderer.drawText(1, 1, `%c{cyan}Knossonia`);\n        this.game.renderer.drawText(1, 2, `%c{white}(${x}, ${y}) ${hasMouse}`);\n\n        const entities = Array.from(this.#query.get());\n\n        entities.forEach((entity, i) => {\n            this.game.renderer.drawText(\n                1,\n                this.game.renderer.height - (2 + i),\n                `energy (${entity.moniker.name}) %c{yellow}${entity.actor.energy}`\n            );\n        });\n\n        this.game.renderer.drawText(\n            this.game.renderer.width - 6 - `${turn}`.length,\n            1,\n            `%c{cyan}${turn}%c{white}.%c{yellow}${subTurn}`\n        );\n    }\n}\n","\nexport default class MouseManager {\n    #x = 0;\n    #y = 0;\n    #hasMouse = false;\n\n    get x() {\n        return this.#x;\n    }\n\n    get y() {\n        return this.#y;\n    }\n\n    get hasMouse() {\n        return this.#hasMouse;\n    }\n\n    updatePosition(x, y) {\n        this.#x = Math.max(0, x);\n        this.#y = Math.max(0, y);\n    }\n\n    updateMouseEnter() {\n        this.#hasMouse = true;\n    }\n\n    updateMouseLeave() {\n        this.#hasMouse = false;\n    }\n}\n","import { INPUT_DOMAIN_DEFAULT } from './InputDomainType';\nimport commands from './commands';\n\nexport default class CommandManager {\n    #commands = {};\n    #domainStack = [INPUT_DOMAIN_DEFAULT];\n\n    constructor() {\n        commands.forEach((cmd) => this.registerCommand(cmd));\n    }\n\n    onInputEvent(evt) {\n        const cmd = this.getCommandForInputEvent(evt);\n\n        if (cmd) {\n            console.log(`CMD(${cmd.type}) ${cmd.name}`);\n        }\n    }\n\n    pushDomain(domain) {\n        this.#domainStack.push(domain);\n    }\n\n    popDomain() {\n        return this.#domainStack.pop();\n    }\n\n    getDomainCommands(domain) {\n        return this.#commands[domain] || [];\n    }\n\n    getCommandForInputEvent(evt) {\n        for (let i = this.#domainStack.length - 1; i >= 0; i--) {\n            const domain = this.#domainStack[i];\n            const cmds = this.getDomainCommands(domain);\n            const cmd = cmds.find((cmd) => cmd.matches(evt));\n\n            if (cmd) {\n                return cmd;\n            }\n        }\n    }\n\n    registerCommand(command) {\n        if (!this.#commands[command.domain]) {\n            this.#commands[command.domain] = [];\n        }\n\n        this.#commands[command.domain].push(command);\n    }\n}\n","export const INPUT_DOMAIN_DEFAULT = 0;\nexport const INPUT_DOMAIN_MAIN_MENU = 1;\nexport const INPUT_DOMAIN_GAME = 2;\n","import { INPUT_DOMAIN_MAIN_MENU, INPUT_DOMAIN_DEFAULT, INPUT_DOMAIN_GAME } from './InputDomainType'\nimport InputCommand from './InputCommand';\nimport { INPUT_CMD_WAIT,\n    INPUT_CMD_MOVE_NW,\n    INPUT_CMD_MOVE_N,\n    INPUT_CMD_MOVE_NE,\n    INPUT_CMD_MOVE_W,\n    INPUT_CMD_MOVE_E,\n    INPUT_CMD_MOVE_SW,\n    INPUT_CMD_MOVE_S,\n    INPUT_CMD_MOVE_SE,\n    INPUT_CMD_CONFIRM,\n    INPUT_CMD_CANCEL\n} from './InputCommandType';\nimport { KEY_S,\n    KEY_Q,\n    KEY_W,\n    KEY_E,\n    KEY_A,\n    KEY_D,\n    KEY_Z,\n    KEY_X,\n    KEY_C,\n    KEY_ENTER,\n    KEY_ESCAPE,\n    KEY_UP,\n    KEY_LEFT,\n    KEY_RIGHT,\n    KEY_DOWN,\n    KEY_SPACE} from './KeyCodes';\n\nconst cmd = (domain, type, name, isKeyboard, key, shift, ctrl, alt, meta) => new InputCommand({\n    domain,\n    type,\n    name,\n    isKeyboard,\n    key,\n    shift,\n    ctrl,\n    alt,\n    meta\n});\n\n// prettier-ignore\nexport default [\n    // DOMAIN                   CMD                 NAME        KB    KEY           SHIFT  CTRL   ALT    META\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,  'confirm',  true, KEY_ENTER,    false, false, false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CONFIRM,  'confirm2', true, KEY_SPACE,    false, true,  false, false),\n    cmd(INPUT_DOMAIN_DEFAULT,   INPUT_CMD_CANCEL,   'cancel',   true, KEY_ESCAPE,   false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_WAIT,     'wait',     true, KEY_S,        false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_NW,  'move_nw',  true, KEY_Q,        false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_N,   'move_n',   true, KEY_W,        false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_N,   'move_n2',  true, KEY_UP,       false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_NE,  'move_ne',  true, KEY_E,        false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_W,   'move_w',   true, KEY_A,        false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_W,   'move_w2',  true, KEY_LEFT,     false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_E,   'move_e',   true, KEY_D,        false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_E,   'move_e2',  true, KEY_RIGHT,    false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_SW,  'move_sw',  true, KEY_Z,        false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_S,   'move_s',   true, KEY_X,        false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_S,   'move_s2',  true, KEY_DOWN,     false, false, false, false),\n    cmd(INPUT_DOMAIN_GAME,      INPUT_CMD_MOVE_SE,  'move_se',  true, KEY_C,        false, false, false, false),\n];\n","import InputKeyboardEvent from './events/InputEvent';\n\nexport default class InputCommand {\n    constructor(data) {\n        this.domain = data.domain;\n        this.type = data.type;\n        this.name = data.name;\n        this.isKeyboard = data.isKeyboard;\n        this.key = data.key;\n        this.shift = data.shift;\n        this.ctrl = data.ctrl;\n        this.alt = data.alt;\n        this.meta = data.meta;\n    }\n\n    matches(inputEvent) {\n        const isKeyboard = inputEvent instanceof InputKeyboardEvent;\n\n        return this.isKeyboard == isKeyboard\n            && this.key == inputEvent.key\n            && this.shift == inputEvent.shift\n            && this.ctrl == inputEvent.ctrl\n            && this.alt == inputEvent.alt\n            && this.meta == inputEvent.meta;\n    }\n}\n","export const KEY_CANCEL = 3;\nexport const KEY_HELP = 6;\nexport const KEY_BACK_SPACE = 8;\nexport const KEY_TAB = 9;\nexport const KEY_CLEAR = 12;\nexport const KEY_ENTER = 13;\nexport const KEY_ENTER_SPECIAL = 14;\nexport const KEY_SHIFT = 16;\nexport const KEY_CONTROL = 17;\nexport const KEY_ALT = 18;\nexport const KEY_PAUSE = 19;\nexport const KEY_CAPS_LOCK = 20;\nexport const KEY_KANA = 21;\nexport const KEY_EISU = 22;\nexport const KEY_JUNJA = 23;\nexport const KEY_FINAL = 24;\nexport const KEY_HANJA = 25;\nexport const KEY_ESCAPE = 27;\nexport const KEY_CONVERT = 28;\nexport const KEY_NONCONVERT = 29;\nexport const KEY_ACCEPT = 30;\nexport const KEY_MODECHANGE = 31;\nexport const KEY_SPACE = 32;\nexport const KEY_PAGE_UP = 33;\nexport const KEY_PAGE_DOWN = 34;\nexport const KEY_END = 35;\nexport const KEY_HOME = 36;\nexport const KEY_LEFT = 37;\nexport const KEY_UP = 38;\nexport const KEY_RIGHT = 39;\nexport const KEY_DOWN = 40;\nexport const KEY_SELECT = 41;\nexport const KEY_PRINT = 42;\nexport const KEY_EXECUTE = 43;\nexport const KEY_PRINTSCREEN = 44;\nexport const KEY_INSERT = 45;\nexport const KEY_DELETE = 46;\nexport const KEY_NUM_0 = 48;\nexport const KEY_NUM_1 = 49;\nexport const KEY_NUM_2 = 50;\nexport const KEY_NUM_3 = 51;\nexport const KEY_NUM_4 = 52;\nexport const KEY_NUM_5 = 53;\nexport const KEY_NUM_6 = 54;\nexport const KEY_NUM_7 = 55;\nexport const KEY_NUM_8 = 56;\nexport const KEY_NUM_9 = 57;\nexport const KEY_COLON = 58;\nexport const KEY_SEMICOLON = 59;\nexport const KEY_LESS_THAN = 60;\nexport const KEY_EQUALS = 61;\nexport const KEY_GREATER_THAN = 62;\nexport const KEY_QUESTION_MARK = 63;\nexport const KEY_AT = 64;\nexport const KEY_A = 65;\nexport const KEY_B = 66;\nexport const KEY_C = 67;\nexport const KEY_D = 68;\nexport const KEY_E = 69;\nexport const KEY_F = 70;\nexport const KEY_G = 71;\nexport const KEY_H = 72;\nexport const KEY_I = 73;\nexport const KEY_J = 74;\nexport const KEY_K = 75;\nexport const KEY_L = 76;\nexport const KEY_M = 77;\nexport const KEY_N = 78;\nexport const KEY_O = 79;\nexport const KEY_P = 80;\nexport const KEY_Q = 81;\nexport const KEY_R = 82;\nexport const KEY_S = 83;\nexport const KEY_T = 84;\nexport const KEY_U = 85;\nexport const KEY_V = 86;\nexport const KEY_W = 87;\nexport const KEY_X = 88;\nexport const KEY_Y = 89;\nexport const KEY_Z = 90;\nexport const KEY_META = 91; // windows key (windows) or command key (mac)\nexport const KEY_CONTEXT_MENU = 93;\nexport const KEY_SLEEP = 95;\nexport const KEY_NUMPAD_0 = 96;\nexport const KEY_NUMPAD_1 = 97;\nexport const KEY_NUMPAD_2 = 98;\nexport const KEY_NUMPAD_3 = 99;\nexport const KEY_NUMPAD_4 = 100;\nexport const KEY_NUMPAD_5 = 101;\nexport const KEY_NUMPAD_6 = 102;\nexport const KEY_NUMPAD_7 = 103;\nexport const KEY_NUMPAD_8 = 104;\nexport const KEY_NUMPAD_9 = 105;\nexport const KEY_MULTIPLY = 106;\nexport const KEY_ADD = 107;\nexport const KEY_SEPARATOR = 108;\nexport const KEY_SUBTRACT = 109;\nexport const KEY_DECIMAL = 110;\nexport const KEY_DIVIDE = 111;\nexport const KEY_F1 = 112;\nexport const KEY_F2 = 113;\nexport const KEY_F3 = 114;\nexport const KEY_F4 = 115;\nexport const KEY_F5 = 116;\nexport const KEY_F6 = 117;\nexport const KEY_F7 = 118;\nexport const KEY_F8 = 119;\nexport const KEY_F9 = 120;\nexport const KEY_F10 = 121;\nexport const KEY_F11 = 122;\nexport const KEY_F12 = 123;\nexport const KEY_F13 = 124;\nexport const KEY_F14 = 125;\nexport const KEY_F15 = 126;\nexport const KEY_F16 = 127;\nexport const KEY_F17 = 128;\nexport const KEY_F18 = 129;\nexport const KEY_F19 = 130;\nexport const KEY_F20 = 131;\nexport const KEY_F21 = 132;\nexport const KEY_F22 = 133;\nexport const KEY_F23 = 134;\nexport const KEY_F24 = 135;\nexport const KEY_NUM_LOCK = 144;\nexport const KEY_SCROLL_LOCK = 145;\nexport const KEY_WIN_OEM_FJ_JISHO = 146;\nexport const KEY_WIN_OEM_FJ_MASSHOU = 147;\nexport const KEY_WIN_OEM_FJ_TOUROKU = 148;\nexport const KEY_WIN_OEM_FJ_LOYA = 149;\nexport const KEY_WIN_OEM_FJ_ROYA = 150;\nexport const KEY_CIRCUMFLEX = 160;\nexport const KEY_EXCLAMATION = 161;\nexport const KEY_DOUBLE_QUOTE = 162;\nexport const KEY_HASH = 163;\nexport const KEY_DOLLAR = 164;\nexport const KEY_PERCENT = 165;\nexport const KEY_AMPERSAND = 166;\nexport const KEY_UNDERSCORE = 167;\nexport const KEY_OPEN_PAREN = 168;\nexport const KEY_CLOSE_PAREN = 169;\nexport const KEY_ASTERISK = 170;\nexport const KEY_PLUS = 171;\nexport const KEY_PIPE = 172;\nexport const KEY_HYPHEN_MINUS = 173;\nexport const KEY_OPEN_CURLY_BRACKET = 174;\nexport const KEY_CLOSE_CURLY_BRACKET = 175;\nexport const KEY_TILDE = 176;\nexport const KEY_VOLUME_MUTE = 181;\nexport const KEY_VOLUME_DOWN = 182;\nexport const KEY_VOLUME_UP = 183;\nexport const KEY_SEMICOLON_2 = 186;\nexport const KEY_EQUALS_2 = 187;\nexport const KEY_COMMA = 188;\nexport const KEY_MINUS = 189;\nexport const KEY_PERIOD = 190;\nexport const KEY_SLASH = 191;\nexport const KEY_BACK_QUOTE = 192;\nexport const KEY_OPEN_BRACKET = 219;\nexport const KEY_BACK_SLASH = 220;\nexport const KEY_CLOSE_BRACKET = 221;\nexport const KEY_QUOTE = 222;\nexport const KEY_META_2 = 224;\nexport const KEY_ALTGR = 225;\nexport const KEY_WIN_ICO_HELP = 227;\nexport const KEY_WIN_ICO_00 = 228;\nexport const KEY_WIN_ICO_CLEAR = 230;\nexport const KEY_WIN_OEM_RESET = 233;\nexport const KEY_WIN_OEM_JUMP = 234;\nexport const KEY_WIN_OEM_PA1 = 235;\nexport const KEY_WIN_OEM_PA2 = 236;\nexport const KEY_WIN_OEM_PA3 = 237;\nexport const KEY_WIN_OEM_WSCTRL = 238;\nexport const KEY_WIN_OEM_CUSEL = 239;\nexport const KEY_WIN_OEM_ATTN = 240;\nexport const KEY_WIN_OEM_FINISH = 241;\nexport const KEY_WIN_OEM_COPY = 242;\nexport const KEY_WIN_OEM_AUTO = 243;\nexport const KEY_WIN_OEM_ENLW = 244;\nexport const KEY_WIN_OEM_BACKTAB = 245;\nexport const KEY_ATTN = 246;\nexport const KEY_CRSEL = 247;\nexport const KEY_EXSEL = 248;\nexport const KEY_EREOF = 249;\nexport const KEY_PLAY = 250;\nexport const KEY_ZOOM = 251;\nexport const KEY_PA1 = 253;\nexport const KEY_WIN_OEM_CLEAR = 254;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tif(mode & 2 && typeof value == 'object' && value) {\n\t\tfor(const key in value) def[key] = () => value[key];\n\t}\n\tdef['default'] = () => value;\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(0);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}